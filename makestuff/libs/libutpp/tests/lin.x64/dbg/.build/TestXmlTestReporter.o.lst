   1              		.file	"TestXmlTestReporter.cpp"
   2              		.text
   3              	.Ltext0:
   4              		.section	.rodata
   5              	.LC0:
   6 0000 44656661 		.string	"DefaultSuite"
   6      756C7453 
   6      75697465 
   6      00
   7              		.section	.text._ZN13UnitTestSuite12GetSuiteNameEv,"axG",@progbits,_ZN13UnitTestSuite12GetSuiteName
   8              		.weak	_ZN13UnitTestSuite12GetSuiteNameEv
  10              	_ZN13UnitTestSuite12GetSuiteNameEv:
  11              	.LFB0:
  12              		.file 1 "../TestSuite.h"
   1:../TestSuite.h **** #ifndef UNITTEST_TESTSUITE_H
   2:../TestSuite.h **** #define UNITTEST_TESTSUITE_H
   3:../TestSuite.h **** 
   4:../TestSuite.h **** namespace UnitTestSuite {
   5:../TestSuite.h **** 
   6:../TestSuite.h ****     inline char const* GetSuiteName ()
   7:../TestSuite.h ****     {
  13              		.loc 1 7 0
  14              		.cfi_startproc
  15 0000 55       		pushq	%rbp
  16              		.cfi_def_cfa_offset 16
  17              		.cfi_offset 6, -16
  18 0001 4889E5   		movq	%rsp, %rbp
  19              		.cfi_def_cfa_register 6
   8:../TestSuite.h ****         return "DefaultSuite";
  20              		.loc 1 8 0
  21 0004 B8000000 		movl	$.LC0, %eax
  21      00
   9:../TestSuite.h ****     }
  22              		.loc 1 9 0
  23 0009 5D       		popq	%rbp
  24              		.cfi_def_cfa 7, 8
  25 000a C3       		ret
  26              		.cfi_endproc
  27              	.LFE0:
  29              		.section	.text._ZN8UnitTest15MemoryOutStreamC1Ev,"axG",@progbits,_ZN8UnitTest15MemoryOutStreamC1Ev
  30              		.align 2
  31              		.weak	_ZN8UnitTest15MemoryOutStreamC1Ev
  33              	_ZN8UnitTest15MemoryOutStreamC1Ev:
  34              	.LFB1007:
  35              		.file 2 "../MemoryOutStream.h"
   1:../MemoryOutStream.h **** #ifndef UNITTEST_MEMORYOUTSTREAM_H
   2:../MemoryOutStream.h **** #define UNITTEST_MEMORYOUTSTREAM_H
   3:../MemoryOutStream.h **** 
   4:../MemoryOutStream.h **** #include "Config.h"
   5:../MemoryOutStream.h **** 
   6:../MemoryOutStream.h **** #ifndef UNITTEST_USE_CUSTOM_STREAMS
   7:../MemoryOutStream.h **** 
   8:../MemoryOutStream.h **** #include <sstream>
   9:../MemoryOutStream.h **** 
  10:../MemoryOutStream.h **** namespace UnitTest
  11:../MemoryOutStream.h **** {
  12:../MemoryOutStream.h **** 
  13:../MemoryOutStream.h **** class MemoryOutStream : public std::ostringstream
  14:../MemoryOutStream.h **** {
  15:../MemoryOutStream.h **** public:
  16:../MemoryOutStream.h ****     MemoryOutStream() {}
  36              		.loc 2 16 0
  37              		.cfi_startproc
  38              		.cfi_personality 0x3,__gxx_personality_v0
  39              		.cfi_lsda 0x3,.LLSDA1007
  40 0000 55       		pushq	%rbp
  41              		.cfi_def_cfa_offset 16
  42              		.cfi_offset 6, -16
  43 0001 4889E5   		movq	%rsp, %rbp
  44              		.cfi_def_cfa_register 6
  45 0004 53       		pushq	%rbx
  46 0005 4883EC18 		subq	$24, %rsp
  47              		.cfi_offset 3, -24
  48 0009 48897DE8 		movq	%rdi, -24(%rbp)
  49              	.LBB2:
  50              		.loc 2 16 0
  51 000d 488B45E8 		movq	-24(%rbp), %rax
  52 0011 4883C060 		addq	$96, %rax
  53 0015 4889C7   		movq	%rax, %rdi
  54              	.LEHB0:
  55 0018 E8000000 		call	_ZNSt9basic_iosIcSt11char_traitsIcEEC2Ev
  55      00
  56              	.LEHE0:
  57 001d B9000000 		movl	$_ZTTN8UnitTest15MemoryOutStreamE+8, %ecx
  57      00
  58 0022 488B45E8 		movq	-24(%rbp), %rax
  59 0026 BA100000 		movl	$16, %edx
  59      00
  60 002b 4889CE   		movq	%rcx, %rsi
  61 002e 4889C7   		movq	%rax, %rdi
  62              	.LEHB1:
  63 0031 E8000000 		call	_ZNSt19basic_ostringstreamIcSt11char_traitsIcESaIcEEC2ESt13_Ios_Openmode
  63      00
  64              	.LEHE1:
  65              		.loc 2 16 0 is_stmt 0 discriminator 6
  66 0036 BA000000 		movl	$_ZTVN8UnitTest15MemoryOutStreamE+24, %edx
  66      00
  67 003b 488B45E8 		movq	-24(%rbp), %rax
  68 003f 488910   		movq	%rdx, (%rax)
  69 0042 BA600000 		movl	$96, %edx
  69      00
  70 0047 488B45E8 		movq	-24(%rbp), %rax
  71 004b 4801C2   		addq	%rax, %rdx
  72 004e B8000000 		movl	$_ZTVN8UnitTest15MemoryOutStreamE+64, %eax
  72      00
  73 0053 488902   		movq	%rax, (%rdx)
  74 0056 488B45E8 		movq	-24(%rbp), %rax
  75 005a 4883C058 		addq	$88, %rax
  76 005e 4889C7   		movq	%rax, %rdi
  77              	.LEHB2:
  78 0061 E8000000 		call	_ZNSsC1Ev
  78      00
  79              	.LEHE2:
  80              	.LBE2:
  81              		.loc 2 16 0
  82 0066 EB37     		jmp	.L8
  83              	.L6:
  84 0068 4889C3   		movq	%rax, %rbx
  85              	.LBB3:
  86 006b BA000000 		movl	$_ZTTN8UnitTest15MemoryOutStreamE+8, %edx
  86      00
  87 0070 488B45E8 		movq	-24(%rbp), %rax
  88 0074 4889D6   		movq	%rdx, %rsi
  89 0077 4889C7   		movq	%rax, %rdi
  90 007a E8000000 		call	_ZNSt19basic_ostringstreamIcSt11char_traitsIcESaIcEED2Ev
  90      00
  91 007f EB03     		jmp	.L5
  92              	.L7:
  93 0081 4889C3   		movq	%rax, %rbx
  94              	.L5:
  95              		.loc 2 16 0 discriminator 19
  96 0084 488B45E8 		movq	-24(%rbp), %rax
  97 0088 4883C060 		addq	$96, %rax
  98 008c 4889C7   		movq	%rax, %rdi
  99 008f E8000000 		call	_ZNSt9basic_iosIcSt11char_traitsIcEED2Ev
  99      00
 100 0094 4889D8   		movq	%rbx, %rax
 101 0097 4889C7   		movq	%rax, %rdi
 102              	.LEHB3:
 103 009a E8000000 		call	_Unwind_Resume
 103      00
 104              	.LEHE3:
 105              	.L8:
 106              	.LBE3:
 107              		.loc 2 16 0
 108 009f 4883C418 		addq	$24, %rsp
 109 00a3 5B       		popq	%rbx
 110 00a4 5D       		popq	%rbp
 111              		.cfi_def_cfa 7, 8
 112 00a5 C3       		ret
 113              		.cfi_endproc
 114              	.LFE1007:
 115              		.globl	__gxx_personality_v0
 116              		.section	.gcc_except_table._ZN8UnitTest15MemoryOutStreamC1Ev,"aG",@progbits,_ZN8UnitTest15MemoryOu
 117              	.LLSDA1007:
 118 0000 FF       		.byte	0xff
 119 0001 FF       		.byte	0xff
 120 0002 01       		.byte	0x1
 121 0003 12       		.uleb128 .LLSDACSE1007-.LLSDACSB1007
 122              	.LLSDACSB1007:
 123 0004 18       		.uleb128 .LEHB0-.LFB1007
 124 0005 05       		.uleb128 .LEHE0-.LEHB0
 125 0006 00       		.uleb128 0
 126 0007 00       		.uleb128 0
 127 0008 31       		.uleb128 .LEHB1-.LFB1007
 128 0009 05       		.uleb128 .LEHE1-.LEHB1
 129 000a 8101     		.uleb128 .L7-.LFB1007
 130 000c 00       		.uleb128 0
 131 000d 61       		.uleb128 .LEHB2-.LFB1007
 132 000e 05       		.uleb128 .LEHE2-.LEHB2
 133 000f 68       		.uleb128 .L6-.LFB1007
 134 0010 00       		.uleb128 0
 135 0011 9A01     		.uleb128 .LEHB3-.LFB1007
 136 0013 05       		.uleb128 .LEHE3-.LEHB3
 137 0014 00       		.uleb128 0
 138 0015 00       		.uleb128 0
 139              	.LLSDACSE1007:
 140              		.section	.text._ZN8UnitTest15MemoryOutStreamC1Ev,"axG",@progbits,_ZN8UnitTest15MemoryOutStreamC1Ev
 142              		.text
 143              		.align 2
 145              	_ZN12_GLOBAL__N_122XmlTestReporterFixtureC2Ev:
 146              	.LFB1281:
 147              		.file 3 "TestXmlTestReporter.cpp"
   1:TestXmlTestReporter.cpp **** #include "../UnitTest++.h"
   2:TestXmlTestReporter.cpp **** #include "../XmlTestReporter.h"
   3:TestXmlTestReporter.cpp **** 
   4:TestXmlTestReporter.cpp **** #include <sstream>
   5:TestXmlTestReporter.cpp **** 
   6:TestXmlTestReporter.cpp **** using namespace UnitTest;
   7:TestXmlTestReporter.cpp **** using std::ostringstream;
   8:TestXmlTestReporter.cpp **** 
   9:TestXmlTestReporter.cpp **** namespace
  10:TestXmlTestReporter.cpp **** {
  11:TestXmlTestReporter.cpp **** 
  12:TestXmlTestReporter.cpp **** #ifdef UNITTEST_USE_CUSTOM_STREAMS
  13:TestXmlTestReporter.cpp **** 
  14:TestXmlTestReporter.cpp **** // Overload to let MemoryOutStream accept std::string
  15:TestXmlTestReporter.cpp **** MemoryOutStream& operator<<(MemoryOutStream& s, const std::string& value)
  16:TestXmlTestReporter.cpp **** {
  17:TestXmlTestReporter.cpp ****     s << value.c_str();
  18:TestXmlTestReporter.cpp ****     return s;
  19:TestXmlTestReporter.cpp **** }
  20:TestXmlTestReporter.cpp **** 
  21:TestXmlTestReporter.cpp **** #endif
  22:TestXmlTestReporter.cpp **** 
  23:TestXmlTestReporter.cpp **** struct XmlTestReporterFixture
  24:TestXmlTestReporter.cpp **** {
  25:TestXmlTestReporter.cpp ****     XmlTestReporterFixture()
 148              		.loc 3 25 0 is_stmt 1
 149              		.cfi_startproc
 150              		.cfi_personality 0x3,__gxx_personality_v0
 151              		.cfi_lsda 0x3,.LLSDA1281
 152 0000 55       		pushq	%rbp
 153              		.cfi_def_cfa_offset 16
 154              		.cfi_offset 6, -16
 155 0001 4889E5   		movq	%rsp, %rbp
 156              		.cfi_def_cfa_register 6
 157 0004 53       		pushq	%rbx
 158 0005 4883EC18 		subq	$24, %rsp
 159              		.cfi_offset 3, -24
 160 0009 48897DE8 		movq	%rdi, -24(%rbp)
 161              	.LBB4:
  26:TestXmlTestReporter.cpp ****         : reporter(output)
 162              		.loc 3 26 0
 163 000d 488B45E8 		movq	-24(%rbp), %rax
 164 0011 BE100000 		movl	$16, %esi
 164      00
 165 0016 4889C7   		movq	%rax, %rdi
 166              	.LEHB4:
 167 0019 E8000000 		call	_ZNSt19basic_ostringstreamIcSt11char_traitsIcESaIcEEC1ESt13_Ios_Openmode
 167      00
 168              	.LEHE4:
 169 001e 488B45E8 		movq	-24(%rbp), %rax
 170 0022 488B55E8 		movq	-24(%rbp), %rdx
 171 0026 4881C260 		addq	$352, %rdx
 171      010000
 172 002d 4889C6   		movq	%rax, %rsi
 173 0030 4889D7   		movq	%rdx, %rdi
 174              	.LEHB5:
 175 0033 E8000000 		call	_ZN8UnitTest15XmlTestReporterC1ERSo
 175      00
 176              	.LEHE5:
 177              	.LBE4:
  27:TestXmlTestReporter.cpp ****     {
  28:TestXmlTestReporter.cpp ****     }
 178              		.loc 3 28 0
 179 0038 EB1A     		jmp	.L12
 180              	.L11:
 181 003a 4889C3   		movq	%rax, %rbx
 182              	.LBB5:
  26:TestXmlTestReporter.cpp ****         : reporter(output)
 183              		.loc 3 26 0
 184 003d 488B45E8 		movq	-24(%rbp), %rax
 185 0041 4889C7   		movq	%rax, %rdi
 186 0044 E8000000 		call	_ZNSt19basic_ostringstreamIcSt11char_traitsIcESaIcEED1Ev
 186      00
 187 0049 4889D8   		movq	%rbx, %rax
 188 004c 4889C7   		movq	%rax, %rdi
 189              	.LEHB6:
 190 004f E8000000 		call	_Unwind_Resume
 190      00
 191              	.LEHE6:
 192              	.L12:
 193              	.LBE5:
 194              		.loc 3 28 0
 195 0054 4883C418 		addq	$24, %rsp
 196 0058 5B       		popq	%rbx
 197 0059 5D       		popq	%rbp
 198              		.cfi_def_cfa 7, 8
 199 005a C3       		ret
 200              		.cfi_endproc
 201              	.LFE1281:
 202              		.section	.gcc_except_table,"a",@progbits
 203              	.LLSDA1281:
 204 0000 FF       		.byte	0xff
 205 0001 FF       		.byte	0xff
 206 0002 01       		.byte	0x1
 207 0003 0C       		.uleb128 .LLSDACSE1281-.LLSDACSB1281
 208              	.LLSDACSB1281:
 209 0004 19       		.uleb128 .LEHB4-.LFB1281
 210 0005 05       		.uleb128 .LEHE4-.LEHB4
 211 0006 00       		.uleb128 0
 212 0007 00       		.uleb128 0
 213 0008 33       		.uleb128 .LEHB5-.LFB1281
 214 0009 05       		.uleb128 .LEHE5-.LEHB5
 215 000a 3A       		.uleb128 .L11-.LFB1281
 216 000b 00       		.uleb128 0
 217 000c 4F       		.uleb128 .LEHB6-.LFB1281
 218 000d 05       		.uleb128 .LEHE6-.LEHB6
 219 000e 00       		.uleb128 0
 220 000f 00       		.uleb128 0
 221              	.LLSDACSE1281:
 222              		.text
 224 005b 90       		.align 2
 226              	_ZN12_GLOBAL__N_122XmlTestReporterFixtureD2Ev:
 227              	.LFB1285:
  23:TestXmlTestReporter.cpp **** {
 228              		.loc 3 23 0
 229              		.cfi_startproc
 230              		.cfi_personality 0x3,__gxx_personality_v0
 231              		.cfi_lsda 0x3,.LLSDA1285
 232 005c 55       		pushq	%rbp
 233              		.cfi_def_cfa_offset 16
 234              		.cfi_offset 6, -16
 235 005d 4889E5   		movq	%rsp, %rbp
 236              		.cfi_def_cfa_register 6
 237 0060 53       		pushq	%rbx
 238 0061 4883EC18 		subq	$24, %rsp
 239              		.cfi_offset 3, -24
 240 0065 48897DE8 		movq	%rdi, -24(%rbp)
 241              	.LBB6:
  23:TestXmlTestReporter.cpp **** {
 242              		.loc 3 23 0
 243 0069 488B45E8 		movq	-24(%rbp), %rax
 244 006d 48056001 		addq	$352, %rax
 244      0000
 245 0073 4889C7   		movq	%rax, %rdi
 246              	.LEHB7:
 247 0076 E8000000 		call	_ZN8UnitTest15XmlTestReporterD1Ev
 247      00
 248              	.LEHE7:
  23:TestXmlTestReporter.cpp **** {
 249              		.loc 3 23 0 is_stmt 0 discriminator 1
 250 007b 488B45E8 		movq	-24(%rbp), %rax
 251 007f 4889C7   		movq	%rax, %rdi
 252              	.LEHB8:
 253 0082 E8000000 		call	_ZNSt19basic_ostringstreamIcSt11char_traitsIcESaIcEED1Ev
 253      00
 254              	.LEHE8:
 255 0087 EB1A     		jmp	.L17
 256              	.L16:
 257 0089 4889C3   		movq	%rax, %rbx
  23:TestXmlTestReporter.cpp **** {
 258              		.loc 3 23 0
 259 008c 488B45E8 		movq	-24(%rbp), %rax
 260 0090 4889C7   		movq	%rax, %rdi
 261 0093 E8000000 		call	_ZNSt19basic_ostringstreamIcSt11char_traitsIcESaIcEED1Ev
 261      00
 262 0098 4889D8   		movq	%rbx, %rax
 263 009b 4889C7   		movq	%rax, %rdi
 264              	.LEHB9:
 265 009e E8000000 		call	_Unwind_Resume
 265      00
 266              	.LEHE9:
 267              	.L17:
 268              	.LBE6:
 269 00a3 4883C418 		addq	$24, %rsp
 270 00a7 5B       		popq	%rbx
 271 00a8 5D       		popq	%rbp
 272              		.cfi_def_cfa 7, 8
 273 00a9 C3       		ret
 274              		.cfi_endproc
 275              	.LFE1285:
 276              		.section	.gcc_except_table
 277              	.LLSDA1285:
 278 0010 FF       		.byte	0xff
 279 0011 FF       		.byte	0xff
 280 0012 01       		.byte	0x1
 281 0013 0C       		.uleb128 .LLSDACSE1285-.LLSDACSB1285
 282              	.LLSDACSB1285:
 283 0014 1A       		.uleb128 .LEHB7-.LFB1285
 284 0015 05       		.uleb128 .LEHE7-.LEHB7
 285 0016 2D       		.uleb128 .L16-.LFB1285
 286 0017 00       		.uleb128 0
 287 0018 26       		.uleb128 .LEHB8-.LFB1285
 288 0019 05       		.uleb128 .LEHE8-.LEHB8
 289 001a 00       		.uleb128 0
 290 001b 00       		.uleb128 0
 291 001c 42       		.uleb128 .LEHB9-.LFB1285
 292 001d 05       		.uleb128 .LEHE9-.LEHB9
 293 001e 00       		.uleb128 0
 294 001f 00       		.uleb128 0
 295              	.LLSDACSE1285:
 296              		.text
 298              		.align 2
 300              	_ZN12_GLOBAL__N_156XmlTestReporterFixtureMultipleCharactersAreEscapedHelperC2ERKN8UnitTest11TestDet
 301              	.LFB1287:
  29:TestXmlTestReporter.cpp **** 
  30:TestXmlTestReporter.cpp ****     ostringstream output;
  31:TestXmlTestReporter.cpp ****     XmlTestReporter reporter;
  32:TestXmlTestReporter.cpp **** };
  33:TestXmlTestReporter.cpp **** 
  34:TestXmlTestReporter.cpp **** TEST_FIXTURE(XmlTestReporterFixture, MultipleCharactersAreEscaped)
 302              		.loc 3 34 0 is_stmt 1
 303              		.cfi_startproc
 304 00aa 55       		pushq	%rbp
 305              		.cfi_def_cfa_offset 16
 306              		.cfi_offset 6, -16
 307 00ab 4889E5   		movq	%rsp, %rbp
 308              		.cfi_def_cfa_register 6
 309 00ae 4883EC10 		subq	$16, %rsp
 310 00b2 48897DF8 		movq	%rdi, -8(%rbp)
 311 00b6 488975F0 		movq	%rsi, -16(%rbp)
 312              	.LBB7:
 313              		.loc 3 34 0
 314 00ba 488B45F8 		movq	-8(%rbp), %rax
 315 00be 4889C7   		movq	%rax, %rdi
 316 00c1 E83AFFFF 		call	_ZN12_GLOBAL__N_122XmlTestReporterFixtureC2Ev
 316      FF
 317 00c6 488B45F8 		movq	-8(%rbp), %rax
 318 00ca 488B55F0 		movq	-16(%rbp), %rdx
 319 00ce 48899088 		movq	%rdx, 392(%rax)
 319      010000
 320              	.LBE7:
 321 00d5 C9       		leave
 322              		.cfi_def_cfa 7, 8
 323 00d6 C3       		ret
 324              		.cfi_endproc
 325              	.LFE1287:
 327              		.set	_ZN12_GLOBAL__N_156XmlTestReporterFixtureMultipleCharactersAreEscapedHelperC1ERKN8UnitTest11T
 328              		.section	.rodata
 329              	.LC1:
 330 000d 54657374 		.string	"TestXmlTestReporter.cpp"
 330      586D6C54 
 330      65737452 
 330      65706F72 
 330      7465722E 
 331              	.LC2:
 332 0025 4D756C74 		.string	"MultipleCharactersAreEscaped"
 332      69706C65 
 332      43686172 
 332      61637465 
 332      72734172 
 333              		.text
 334 00d7 90       		.align 2
 336              	_ZN12_GLOBAL__N_154TestXmlTestReporterFixtureMultipleCharactersAreEscapedC2Ev:
 337              	.LFB1290:
 338              		.loc 3 34 0
 339              		.cfi_startproc
 340 00d8 55       		pushq	%rbp
 341              		.cfi_def_cfa_offset 16
 342              		.cfi_offset 6, -16
 343 00d9 4889E5   		movq	%rsp, %rbp
 344              		.cfi_def_cfa_register 6
 345 00dc 4883EC10 		subq	$16, %rsp
 346 00e0 48897DF8 		movq	%rdi, -8(%rbp)
 347              	.LBB8:
 348              		.loc 3 34 0
 349 00e4 E8000000 		call	_ZN13UnitTestSuite12GetSuiteNameEv
 349      00
 350 00e9 4889C2   		movq	%rax, %rdx
 351 00ec 488B45F8 		movq	-8(%rbp), %rax
 352 00f0 41B82200 		movl	$34, %r8d
 352      0000
 353 00f6 B9000000 		movl	$.LC1, %ecx
 353      00
 354 00fb BE000000 		movl	$.LC2, %esi
 354      00
 355 0100 4889C7   		movq	%rax, %rdi
 356 0103 E8000000 		call	_ZN8UnitTest4TestC2EPKcS2_S2_i
 356      00
 357 0108 488B45F8 		movq	-8(%rbp), %rax
 358 010c 48C70000 		movq	$_ZTVN12_GLOBAL__N_154TestXmlTestReporterFixtureMultipleCharactersAreEscapedE+16, (%rax)
 358      000000
 359              	.LBE8:
 360 0113 C9       		leave
 361              		.cfi_def_cfa 7, 8
 362 0114 C3       		ret
 363              		.cfi_endproc
 364              	.LFE1290:
 366              		.set	_ZN12_GLOBAL__N_154TestXmlTestReporterFixtureMultipleCharactersAreEscapedC1Ev,_ZN12_GLOBAL__N
 367              		.local	_ZN12_GLOBAL__N_162testXmlTestReporterFixtureMultipleCharactersAreEscapedInstanceE
 368              		.comm	_ZN12_GLOBAL__N_162testXmlTestReporterFixtureMultipleCharactersAreEscapedInstanceE,56,32
 369              		.local	_ZN12_GLOBAL__N_155adderXmlTestReporterFixtureMultipleCharactersAreEscapedE
 370              		.comm	_ZN12_GLOBAL__N_155adderXmlTestReporterFixtureMultipleCharactersAreEscapedE,1,1
 371 0115 90       		.align 2
 373              	_ZN12_GLOBAL__N_156XmlTestReporterFixtureMultipleCharactersAreEscapedHelperD2Ev:
 374              	.LFB1294:
 375              		.loc 3 34 0
 376              		.cfi_startproc
 377 0116 55       		pushq	%rbp
 378              		.cfi_def_cfa_offset 16
 379              		.cfi_offset 6, -16
 380 0117 4889E5   		movq	%rsp, %rbp
 381              		.cfi_def_cfa_register 6
 382 011a 4883EC10 		subq	$16, %rsp
 383 011e 48897DF8 		movq	%rdi, -8(%rbp)
 384              	.LBB9:
 385              		.loc 3 34 0
 386 0122 488B45F8 		movq	-8(%rbp), %rax
 387 0126 4889C7   		movq	%rax, %rdi
 388 0129 E82EFFFF 		call	_ZN12_GLOBAL__N_122XmlTestReporterFixtureD2Ev
 388      FF
 389              	.LBE9:
 390 012e C9       		leave
 391              		.cfi_def_cfa 7, 8
 392 012f C3       		ret
 393              		.cfi_endproc
 394              	.LFE1294:
 396              		.set	_ZN12_GLOBAL__N_156XmlTestReporterFixtureMultipleCharactersAreEscapedHelperD1Ev,_ZN12_GLOBAL_
 397              		.section	.rodata
 398              	.LC3:
 399 0042 556E6861 		.string	"Unhandled exception: "
 399      6E646C65 
 399      64206578 
 399      63657074 
 399      696F6E3A 
 400              		.align 8
 401              	.LC4:
 402 0058 556E6861 		.string	"Unhandled exception while destroying fixture XmlTestReporterFixture"
 402      6E646C65 
 402      64206578 
 402      63657074 
 402      696F6E20 
 403 009c 00000000 		.align 8
 404              	.LC5:
 405 00a0 556E6861 		.string	"Unhandled exception while constructing fixture XmlTestReporterFixture"
 405      6E646C65 
 405      64206578 
 405      63657074 
 405      696F6E20 
 406              		.text
 407              		.align 2
 409              	_ZNK12_GLOBAL__N_154TestXmlTestReporterFixtureMultipleCharactersAreEscaped7RunImplEv:
 410              	.LFB1292:
 411              		.loc 3 34 0
 412              		.cfi_startproc
 413              		.cfi_personality 0x3,__gxx_personality_v0
 414              		.cfi_lsda 0x3,.LLSDA1292
 415 0130 55       		pushq	%rbp
 416              		.cfi_def_cfa_offset 16
 417              		.cfi_offset 6, -16
 418 0131 4889E5   		movq	%rsp, %rbp
 419              		.cfi_def_cfa_register 6
 420 0134 4154     		pushq	%r12
 421 0136 53       		pushq	%rbx
 422 0137 4881ECC0 		subq	$448, %rsp
 422      010000
 423              		.cfi_offset 12, -24
 424              		.cfi_offset 3, -32
 425 013e 4889BD38 		movq	%rdi, -456(%rbp)
 425      FEFFFF
 426              	.LBB10:
 427              		.loc 3 34 0
 428 0145 C6854FFE 		movb	$0, -433(%rbp)
 428      FFFF00
 429              	.LBB11:
 430 014c 488B8538 		movq	-456(%rbp), %rax
 430      FEFFFF
 431 0153 488D5008 		leaq	8(%rax), %rdx
 432 0157 488D8560 		leaq	-416(%rbp), %rax
 432      FEFFFF
 433 015e 4889D6   		movq	%rdx, %rsi
 434 0161 4889C7   		movq	%rax, %rdi
 435              	.LEHB10:
 436 0164 E841FFFF 		call	_ZN12_GLOBAL__N_156XmlTestReporterFixtureMultipleCharactersAreEscapedHelperC1ERKN8UnitTest11T
 436      FF
 437              	.LEHE10:
 438              		.loc 3 34 0 is_stmt 0 discriminator 1
 439 0169 C6854FFE 		movb	$1, -433(%rbp)
 439      FFFF01
 440 0170 488B8538 		movq	-456(%rbp), %rax
 440      FEFFFF
 441 0177 488D5008 		leaq	8(%rax), %rdx
 442 017b 488D8560 		leaq	-416(%rbp), %rax
 442      FEFFFF
 443 0182 4889D6   		movq	%rdx, %rsi
 444 0185 4889C7   		movq	%rax, %rdi
 445              	.LEHB11:
 446 0188 E8992700 		call	_ZN8UnitTest11ExecuteTestIN12_GLOBAL__N_156XmlTestReporterFixtureMultipleCharactersAreEscaped
 446      00
 447              	.LEHE11:
 448 018d 488D8560 		leaq	-416(%rbp), %rax
 448      FEFFFF
 449 0194 4889C7   		movq	%rax, %rdi
 450              	.LEHB12:
 451 0197 E87AFFFF 		call	_ZN12_GLOBAL__N_156XmlTestReporterFixtureMultipleCharactersAreEscapedHelperD1Ev
 451      FF
 452              	.LEHE12:
 453              	.LBE11:
 454              	.LBE10:
 455              		.loc 3 34 0
 456 019c E9640200 		jmp	.L42
 456      00
 457              	.L36:
 458 01a1 4989C4   		movq	%rax, %r12
 459 01a4 4889D3   		movq	%rdx, %rbx
 460              	.LBB19:
 461              	.LBB12:
 462 01a7 488D8560 		leaq	-416(%rbp), %rax
 462      FEFFFF
 463 01ae 4889C7   		movq	%rax, %rdi
 464 01b1 E860FFFF 		call	_ZN12_GLOBAL__N_156XmlTestReporterFixtureMultipleCharactersAreEscapedHelperD1Ev
 464      FF
 465 01b6 4C89E0   		movq	%r12, %rax
 466 01b9 4889DA   		movq	%rbx, %rdx
 467 01bc EB00     		jmp	.L24
 468              	.L35:
 469              	.L24:
 470 01be 4883FA01 		cmpq	$1, %rdx
 471 01c2 745C     		je	.L26
 472 01c4 4883FA02 		cmpq	$2, %rdx
 473 01c8 0F84F400 		je	.L27
 473      0000
 474 01ce E9980100 		jmp	.L41
 474      00
 475              	.L37:
 476 01d3 4889C3   		movq	%rax, %rbx
 477              	.LBE12:
 478              	.LBB13:
 479 01d6 E8000000 		call	__cxa_end_catch
 479      00
 480 01db 4889D8   		movq	%rbx, %rax
 481 01de 4889C7   		movq	%rax, %rdi
 482              	.LEHB13:
 483 01e1 E8000000 		call	_Unwind_Resume
 483      00
 484              	.LEHE13:
 485              	.L38:
 486 01e6 4889C3   		movq	%rax, %rbx
 487              	.LBE13:
 488              	.LBB14:
 489              	.LBB15:
 490 01e9 488D8560 		leaq	-416(%rbp), %rax
 490      FEFFFF
 491 01f0 4889C7   		movq	%rax, %rdi
 492 01f3 E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 492      00
 493 01f8 EB03     		jmp	.L30
 494              	.L39:
 495 01fa 4889C3   		movq	%rax, %rbx
 496              	.L30:
 497              	.LBE15:
 498 01fd E8000000 		call	__cxa_end_catch
 498      00
 499 0202 4889D8   		movq	%rbx, %rax
 500 0205 4889C7   		movq	%rax, %rdi
 501              	.LEHB14:
 502 0208 E8000000 		call	_Unwind_Resume
 502      00
 503              	.LEHE14:
 504              	.L40:
 505 020d 4889C3   		movq	%rax, %rbx
 506              	.LBE14:
 507 0210 E8000000 		call	__cxa_end_catch
 507      00
 508 0215 4889D8   		movq	%rbx, %rax
 509 0218 4889C7   		movq	%rax, %rdi
 510              	.LEHB15:
 511 021b E8000000 		call	_Unwind_Resume
 511      00
 512              	.LEHE15:
 513              	.L26:
 514              	.LBB17:
 515 0220 4889C7   		movq	%rax, %rdi
 516 0223 E8000000 		call	__cxa_begin_catch
 516      00
 517 0228 48898550 		movq	%rax, -432(%rbp)
 517      FEFFFF
 518 022f 488B8550 		movq	-432(%rbp), %rax
 518      FEFFFF
 519 0236 488B00   		movq	(%rax), %rax
 520 0239 4883C010 		addq	$16, %rax
 521 023d 488B00   		movq	(%rax), %rax
 522 0240 488B9550 		movq	-432(%rbp), %rdx
 522      FEFFFF
 523 0247 4889D7   		movq	%rdx, %rdi
 524 024a FFD0     		call	*%rax
 525 024c 4889C3   		movq	%rax, %rbx
 526 024f 488B8550 		movq	-432(%rbp), %rax
 526      FEFFFF
 527 0256 4889C7   		movq	%rax, %rdi
 528              	.LEHB16:
 529 0259 E8000000 		call	_ZNK8UnitTest15AssertException10LineNumberEv
 529      00
 530 025e 4189C4   		movl	%eax, %r12d
 531 0261 488B8550 		movq	-432(%rbp), %rax
 531      FEFFFF
 532 0268 4889C7   		movq	%rax, %rdi
 533 026b E8000000 		call	_ZNK8UnitTest15AssertException8FilenameEv
 533      00
 534              		.loc 3 34 0 discriminator 1
 535 0270 4889C1   		movq	%rax, %rcx
 536 0273 488B8538 		movq	-456(%rbp), %rax
 536      FEFFFF
 537 027a 488B5008 		movq	8(%rax), %rdx
 538 027e 488B8538 		movq	-456(%rbp), %rax
 538      FEFFFF
 539 0285 488B7010 		movq	16(%rax), %rsi
 540 0289 488D8560 		leaq	-416(%rbp), %rax
 540      FEFFFF
 541 0290 4589E0   		movl	%r12d, %r8d
 542 0293 4889C7   		movq	%rax, %rdi
 543 0296 E8000000 		call	_ZN8UnitTest11TestDetailsC1EPKcS2_S2_i
 543      00
 544              		.loc 3 34 0 discriminator 3
 545 029b E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 545      00
 546 02a0 488B00   		movq	(%rax), %rax
 547 02a3 488D8D60 		leaq	-416(%rbp), %rcx
 547      FEFFFF
 548 02aa 4889DA   		movq	%rbx, %rdx
 549 02ad 4889CE   		movq	%rcx, %rsi
 550 02b0 4889C7   		movq	%rax, %rdi
 551 02b3 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 551      00
 552              	.LEHE16:
 553              		.loc 3 34 0 discriminator 1
 554 02b8 E8000000 		call	__cxa_end_catch
 554      00
 555              	.LBE17:
 556              	.LBE19:
 557 02bd E9430100 		jmp	.L42
 557      00
 558              	.L27:
 559              	.LBB20:
 560              	.LBB18:
 561              		.loc 3 34 0
 562 02c2 4889C7   		movq	%rax, %rdi
 563 02c5 E8000000 		call	__cxa_begin_catch
 563      00
 564 02ca 48898558 		movq	%rax, -424(%rbp)
 564      FEFFFF
 565              	.LBB16:
 566 02d1 488D8560 		leaq	-416(%rbp), %rax
 566      FEFFFF
 567 02d8 4889C7   		movq	%rax, %rdi
 568              	.LEHB17:
 569 02db E8000000 		call	_ZN8UnitTest15MemoryOutStreamC1Ev
 569      00
 570              	.LEHE17:
 571              		.loc 3 34 0 discriminator 1
 572 02e0 488B8558 		movq	-424(%rbp), %rax
 572      FEFFFF
 573 02e7 488B00   		movq	(%rax), %rax
 574 02ea 4883C010 		addq	$16, %rax
 575 02ee 488B00   		movq	(%rax), %rax
 576 02f1 488B9558 		movq	-424(%rbp), %rdx
 576      FEFFFF
 577 02f8 4889D7   		movq	%rdx, %rdi
 578 02fb FFD0     		call	*%rax
 579 02fd 4889C3   		movq	%rax, %rbx
 580 0300 488D8560 		leaq	-416(%rbp), %rax
 580      FEFFFF
 581 0307 BE000000 		movl	$.LC3, %esi
 581      00
 582 030c 4889C7   		movq	%rax, %rdi
 583              	.LEHB18:
 584 030f E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
 584      00
 585 0314 4889DE   		movq	%rbx, %rsi
 586 0317 4889C7   		movq	%rax, %rdi
 587 031a E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
 587      00
 588 031f 488D8560 		leaq	-416(%rbp), %rax
 588      FEFFFF
 589 0326 4889C7   		movq	%rax, %rdi
 590 0329 E8000000 		call	_ZNK8UnitTest15MemoryOutStream7GetTextEv
 590      00
 591 032e 4889C3   		movq	%rax, %rbx
 592 0331 488B8538 		movq	-456(%rbp), %rax
 592      FEFFFF
 593 0338 4C8D6008 		leaq	8(%rax), %r12
 594 033c E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 594      00
 595 0341 488B00   		movq	(%rax), %rax
 596 0344 4889DA   		movq	%rbx, %rdx
 597 0347 4C89E6   		movq	%r12, %rsi
 598 034a 4889C7   		movq	%rax, %rdi
 599 034d E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 599      00
 600              	.LEHE18:
 601 0352 488D8560 		leaq	-416(%rbp), %rax
 601      FEFFFF
 602 0359 4889C7   		movq	%rax, %rdi
 603              	.LEHB19:
 604 035c E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 604      00
 605              	.LEHE19:
 606              	.LBE16:
 607              		.loc 3 34 0
 608 0361 E8000000 		call	__cxa_end_catch
 608      00
 609              	.LBE18:
 610              	.LBE20:
 611 0366 E99A0000 		jmp	.L42
 611      00
 612              	.L41:
 613              	.LBB21:
 614 036b 4889C7   		movq	%rax, %rdi
 615 036e E8000000 		call	__cxa_begin_catch
 615      00
 616 0373 80BD4FFE 		cmpb	$0, -433(%rbp)
 616      FFFF00
 617 037a 7443     		je	.L33
 618              		.loc 3 34 0 discriminator 1
 619 037c 488B8538 		movq	-456(%rbp), %rax
 619      FEFFFF
 620 0383 488D4808 		leaq	8(%rax), %rcx
 621 0387 488D8560 		leaq	-416(%rbp), %rax
 621      FEFFFF
 622 038e BA220000 		movl	$34, %edx
 622      00
 623 0393 4889CE   		movq	%rcx, %rsi
 624 0396 4889C7   		movq	%rax, %rdi
 625              	.LEHB20:
 626 0399 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 626      00
 627 039e E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 627      00
 628 03a3 488B00   		movq	(%rax), %rax
 629 03a6 488D8D60 		leaq	-416(%rbp), %rcx
 629      FEFFFF
 630 03ad BA000000 		movl	$.LC4, %edx
 630      00
 631 03b2 4889CE   		movq	%rcx, %rsi
 632 03b5 4889C7   		movq	%rax, %rdi
 633 03b8 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 633      00
 634 03bd EB41     		jmp	.L34
 635              	.L33:
 636              		.loc 3 34 0 discriminator 2
 637 03bf 488B8538 		movq	-456(%rbp), %rax
 637      FEFFFF
 638 03c6 488D4808 		leaq	8(%rax), %rcx
 639 03ca 488D8560 		leaq	-416(%rbp), %rax
 639      FEFFFF
 640 03d1 BA220000 		movl	$34, %edx
 640      00
 641 03d6 4889CE   		movq	%rcx, %rsi
 642 03d9 4889C7   		movq	%rax, %rdi
 643 03dc E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 643      00
 644              		.loc 3 34 0 discriminator 1
 645 03e1 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 645      00
 646 03e6 488B00   		movq	(%rax), %rax
 647 03e9 488D8D60 		leaq	-416(%rbp), %rcx
 647      FEFFFF
 648 03f0 BA000000 		movl	$.LC5, %edx
 648      00
 649 03f5 4889CE   		movq	%rcx, %rsi
 650 03f8 4889C7   		movq	%rax, %rdi
 651 03fb E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 651      00
 652              	.LEHE20:
 653              	.L34:
 654              	.LEHB21:
 655 0400 E8000000 		call	__cxa_end_catch
 655      00
 656              	.LEHE21:
 657              	.L42:
 658              	.LBE21:
 659              		.loc 3 34 0
 660 0405 90       		nop
 661 0406 4881C4C0 		addq	$448, %rsp
 661      010000
 662 040d 5B       		popq	%rbx
 663 040e 415C     		popq	%r12
 664 0410 5D       		popq	%rbp
 665              		.cfi_def_cfa 7, 8
 666 0411 C3       		ret
 667              		.cfi_endproc
 668              	.LFE1292:
 669              		.section	.gcc_except_table
 670              		.align 4
 671              	.LLSDA1292:
 672 0020 FF       		.byte	0xff
 673 0021 03       		.byte	0x3
 674 0022 59       		.uleb128 .LLSDATT1292-.LLSDATTD1292
 675              	.LLSDATTD1292:
 676 0023 01       		.byte	0x1
 677 0024 40       		.uleb128 .LLSDACSE1292-.LLSDACSB1292
 678              	.LLSDACSB1292:
 679 0025 34       		.uleb128 .LEHB10-.LFB1292
 680 0026 05       		.uleb128 .LEHE10-.LEHB10
 681 0027 8E01     		.uleb128 .L35-.LFB1292
 682 0029 05       		.uleb128 0x5
 683 002a 58       		.uleb128 .LEHB11-.LFB1292
 684 002b 05       		.uleb128 .LEHE11-.LEHB11
 685 002c 71       		.uleb128 .L36-.LFB1292
 686 002d 07       		.uleb128 0x7
 687 002e 67       		.uleb128 .LEHB12-.LFB1292
 688 002f 05       		.uleb128 .LEHE12-.LEHB12
 689 0030 8E01     		.uleb128 .L35-.LFB1292
 690 0032 05       		.uleb128 0x5
 691 0033 B101     		.uleb128 .LEHB13-.LFB1292
 692 0035 05       		.uleb128 .LEHE13-.LEHB13
 693 0036 00       		.uleb128 0
 694 0037 00       		.uleb128 0
 695 0038 D801     		.uleb128 .LEHB14-.LFB1292
 696 003a 05       		.uleb128 .LEHE14-.LEHB14
 697 003b 00       		.uleb128 0
 698 003c 00       		.uleb128 0
 699 003d EB01     		.uleb128 .LEHB15-.LFB1292
 700 003f 05       		.uleb128 .LEHE15-.LEHB15
 701 0040 00       		.uleb128 0
 702 0041 00       		.uleb128 0
 703 0042 A902     		.uleb128 .LEHB16-.LFB1292
 704 0044 5F       		.uleb128 .LEHE16-.LEHB16
 705 0045 A301     		.uleb128 .L37-.LFB1292
 706 0047 00       		.uleb128 0
 707 0048 AB03     		.uleb128 .LEHB17-.LFB1292
 708 004a 05       		.uleb128 .LEHE17-.LEHB17
 709 004b CA01     		.uleb128 .L39-.LFB1292
 710 004d 00       		.uleb128 0
 711 004e DF03     		.uleb128 .LEHB18-.LFB1292
 712 0050 43       		.uleb128 .LEHE18-.LEHB18
 713 0051 B601     		.uleb128 .L38-.LFB1292
 714 0053 00       		.uleb128 0
 715 0054 AC04     		.uleb128 .LEHB19-.LFB1292
 716 0056 05       		.uleb128 .LEHE19-.LEHB19
 717 0057 CA01     		.uleb128 .L39-.LFB1292
 718 0059 00       		.uleb128 0
 719 005a E904     		.uleb128 .LEHB20-.LFB1292
 720 005c 67       		.uleb128 .LEHE20-.LEHB20
 721 005d DD01     		.uleb128 .L40-.LFB1292
 722 005f 00       		.uleb128 0
 723 0060 D005     		.uleb128 .LEHB21-.LFB1292
 724 0062 05       		.uleb128 .LEHE21-.LEHB21
 725 0063 00       		.uleb128 0
 726 0064 00       		.uleb128 0
 727              	.LLSDACSE1292:
 728 0065 03       		.byte	0x3
 729 0066 00       		.byte	0
 730 0067 02       		.byte	0x2
 731 0068 7D       		.byte	0x7d
 732 0069 01       		.byte	0x1
 733 006a 7D       		.byte	0x7d
 734 006b 00       		.byte	0
 735 006c 7D       		.byte	0x7d
 736 006d 000000   		.align 4
 737 0070 00000000 		.long	0
 738              	
 739 0074 00000000 		.long	_ZTISt9exception
 740 0078 00000000 		.long	_ZTIN8UnitTest15AssertExceptionE
 741              	.LLSDATT1292:
 742              		.text
 744              		.section	.rodata
 745              	.LC6:
 746 00e6 66696C65 		.string	"filename.h"
 746      6E616D65 
 746      2E6800
 747              	.LC7:
 748 00f1 73756974 		.string	"suite"
 748      6500
 749              	.LC8:
 750 00f7 54657374 		.string	"TestName"
 750      4E616D65 
 750      00
 751              	.LC9:
 752 0100 22222727 		.string	"\"\"''&&<<>>"
 752      26263C3C 
 752      3E3E00
 753 010b 00000000 		.align 8
 753      00
 754              	.LC11:
 755 0110 3C3F786D 		.string	"<?xml version=\"1.0\"?><unittest-results tests=\"1\" failedtests=\"2\" failures=\"3\" tim
 755      6C207665 
 755      7273696F 
 755      6E3D2231 
 755      2E30223F 
 756 020d 000000   		.align 8
 757              	.LC12:
 758 0210 556E6861 		.string	"Unhandled exception in CHECK_EQUAL(expected, output.str())"
 758      6E646C65 
 758      64206578 
 758      63657074 
 758      696F6E20 
 759              		.text
 760              		.align 2
 762              	_ZN12_GLOBAL__N_156XmlTestReporterFixtureMultipleCharactersAreEscapedHelper7RunImplEv:
 763              	.LFB1296:
  35:TestXmlTestReporter.cpp **** {
 764              		.loc 3 35 0 is_stmt 1
 765              		.cfi_startproc
 766              		.cfi_personality 0x3,__gxx_personality_v0
 767              		.cfi_lsda 0x3,.LLSDA1296
 768 0412 55       		pushq	%rbp
 769              		.cfi_def_cfa_offset 16
 770              		.cfi_offset 6, -16
 771 0413 4889E5   		movq	%rsp, %rbp
 772              		.cfi_def_cfa_register 6
 773 0416 53       		pushq	%rbx
 774 0417 4883EC68 		subq	$104, %rsp
 775              		.cfi_offset 3, -24
 776 041b 48897D98 		movq	%rdi, -104(%rbp)
 777              	.LBB22:
  36:TestXmlTestReporter.cpp ****     TestDetails const details("TestName", "suite", "filename.h", 4321);
 778              		.loc 3 36 0
 779 041f 488D45B0 		leaq	-80(%rbp), %rax
 780 0423 41B8E110 		movl	$4321, %r8d
 780      0000
 781 0429 B9000000 		movl	$.LC6, %ecx
 781      00
 782 042e BA000000 		movl	$.LC7, %edx
 782      00
 783 0433 BE000000 		movl	$.LC8, %esi
 783      00
 784 0438 4889C7   		movq	%rax, %rdi
 785              	.LEHB22:
 786 043b E8000000 		call	_ZN8UnitTest11TestDetailsC1EPKcS2_S2_i
 786      00
  37:TestXmlTestReporter.cpp **** 
  38:TestXmlTestReporter.cpp ****     reporter.ReportTestStart(details);
 787              		.loc 3 38 0
 788 0440 488B4598 		movq	-104(%rbp), %rax
 789 0444 488D9060 		leaq	352(%rax), %rdx
 789      010000
 790 044b 488D45B0 		leaq	-80(%rbp), %rax
 791 044f 4889C6   		movq	%rax, %rsi
 792 0452 4889D7   		movq	%rdx, %rdi
 793 0455 E8000000 		call	_ZN8UnitTest20DeferredTestReporter15ReportTestStartERKNS_11TestDetailsE
 793      00
  39:TestXmlTestReporter.cpp ****     reporter.ReportFailure(details, "\"\"\'\'&&<<>>");
 794              		.loc 3 39 0
 795 045a 488B4598 		movq	-104(%rbp), %rax
 796 045e 488D8860 		leaq	352(%rax), %rcx
 796      010000
 797 0465 488D45B0 		leaq	-80(%rbp), %rax
 798 0469 BA000000 		movl	$.LC9, %edx
 798      00
 799 046e 4889C6   		movq	%rax, %rsi
 800 0471 4889CF   		movq	%rcx, %rdi
 801 0474 E8000000 		call	_ZN8UnitTest20DeferredTestReporter13ReportFailureERKNS_11TestDetailsEPKc
 801      00
  40:TestXmlTestReporter.cpp ****     reporter.ReportTestFinish(details, 0.1f);
 802              		.loc 3 40 0
 803 0479 488B4598 		movq	-104(%rbp), %rax
 804 047d 488D9060 		leaq	352(%rax), %rdx
 804      010000
 805 0484 488D45B0 		leaq	-80(%rbp), %rax
 806 0488 F30F1005 		movss	.LC10(%rip), %xmm0
 806      00000000 
 807 0490 4889C6   		movq	%rax, %rsi
 808 0493 4889D7   		movq	%rdx, %rdi
 809 0496 E8000000 		call	_ZN8UnitTest20DeferredTestReporter16ReportTestFinishERKNS_11TestDetailsEf
 809      00
  41:TestXmlTestReporter.cpp ****     reporter.ReportSummary(1, 2, 3, 0.1f);
 810              		.loc 3 41 0
 811 049b 488B4598 		movq	-104(%rbp), %rax
 812 049f 48056001 		addq	$352, %rax
 812      0000
 813 04a5 F30F1005 		movss	.LC10(%rip), %xmm0
 813      00000000 
 814 04ad B9030000 		movl	$3, %ecx
 814      00
 815 04b2 BA020000 		movl	$2, %edx
 815      00
 816 04b7 BE010000 		movl	$1, %esi
 816      00
 817 04bc 4889C7   		movq	%rax, %rdi
 818 04bf E8000000 		call	_ZN8UnitTest15XmlTestReporter13ReportSummaryEiiif
 818      00
 819              	.LEHE22:
  42:TestXmlTestReporter.cpp **** 
  43:TestXmlTestReporter.cpp ****     char const* expected =
  44:TestXmlTestReporter.cpp ****         "<?xml version=\"1.0\"?>"
  45:TestXmlTestReporter.cpp ****         "<unittest-results tests=\"1\" failedtests=\"2\" failures=\"3\" time=\"0.1\">"
  46:TestXmlTestReporter.cpp ****         "<test suite=\"suite\" name=\"TestName\" time=\"0.1\">"
  47:TestXmlTestReporter.cpp ****         "<failure message=\"filename.h(4321) : "
  48:TestXmlTestReporter.cpp ****         "&quot;&quot;&apos;&apos;&amp;&amp;&lt;&lt;&gt;&gt;\"/>"
  49:TestXmlTestReporter.cpp ****         "</test>"
  50:TestXmlTestReporter.cpp ****         "</unittest-results>";
 820              		.loc 3 50 0
 821 04c4 48C745A8 		movq	$.LC11, -88(%rbp)
 821      00000000 
 822              	.LEHB23:
  51:TestXmlTestReporter.cpp **** 
  52:TestXmlTestReporter.cpp ****     CHECK_EQUAL(expected, output.str());
 823              		.loc 3 52 0
 824 04cc E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 824      00
 825 04d1 488B08   		movq	(%rax), %rcx
 826 04d4 488D45D0 		leaq	-48(%rbp), %rax
 827 04d8 BA340000 		movl	$52, %edx
 827      00
 828 04dd 4889CE   		movq	%rcx, %rsi
 829 04e0 4889C7   		movq	%rax, %rdi
 830 04e3 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 830      00
 831              		.loc 3 52 0 is_stmt 0 discriminator 1
 832 04e8 488B5598 		movq	-104(%rbp), %rdx
 833 04ec 488D45A0 		leaq	-96(%rbp), %rax
 834 04f0 4889D6   		movq	%rdx, %rsi
 835 04f3 4889C7   		movq	%rax, %rdi
 836 04f6 E8000000 		call	_ZNKSt19basic_ostringstreamIcSt11char_traitsIcESaIcEE3strEv
 836      00
 837              	.LEHE23:
 838              	.LEHB24:
 839              		.loc 3 52 0 discriminator 2
 840 04fb E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 840      00
 841 0500 488B00   		movq	(%rax), %rax
 842 0503 488D4DD0 		leaq	-48(%rbp), %rcx
 843 0507 488D55A0 		leaq	-96(%rbp), %rdx
 844 050b 488D75A8 		leaq	-88(%rbp), %rsi
 845 050f 4889C7   		movq	%rax, %rdi
 846 0512 E8000000 		call	_ZN8UnitTest10CheckEqualIPKcSsEEvRNS_11TestResultsERKT_RKT0_RKNS_11TestDetailsE
 846      00
 847              	.LEHE24:
 848              		.loc 3 52 0 discriminator 1
 849 0517 488D45A0 		leaq	-96(%rbp), %rax
 850 051b 4889C7   		movq	%rax, %rdi
 851              	.LEHB25:
 852 051e E8000000 		call	_ZNSsD1Ev
 852      00
 853              	.LEHE25:
 854              	.LBE22:
  53:TestXmlTestReporter.cpp **** }
 855              		.loc 3 53 0 is_stmt 1
 856 0523 EB6C     		jmp	.L51
 857              	.L49:
 858 0525 4889C3   		movq	%rax, %rbx
 859              	.LBB23:
  52:TestXmlTestReporter.cpp **** }
 860              		.loc 3 52 0
 861 0528 488D45A0 		leaq	-96(%rbp), %rax
 862 052c 4889C7   		movq	%rax, %rdi
 863 052f E8000000 		call	_ZNSsD1Ev
 863      00
 864 0534 4889D8   		movq	%rbx, %rax
 865 0537 EB13     		jmp	.L45
 866              	.L50:
 867 0539 4889C3   		movq	%rax, %rbx
 868 053c E8000000 		call	__cxa_end_catch
 868      00
 869 0541 4889D8   		movq	%rbx, %rax
 870 0544 4889C7   		movq	%rax, %rdi
 871              	.LEHB26:
 872 0547 E8000000 		call	_Unwind_Resume
 872      00
 873              	.LEHE26:
 874              	.L48:
 875              	.L45:
 876 054c 4889C7   		movq	%rax, %rdi
 877 054f E8000000 		call	__cxa_begin_catch
 877      00
 878              	.LEHB27:
 879 0554 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 879      00
 880 0559 488B08   		movq	(%rax), %rcx
 881 055c 488D45D0 		leaq	-48(%rbp), %rax
 882 0560 BA340000 		movl	$52, %edx
 882      00
 883 0565 4889CE   		movq	%rcx, %rsi
 884 0568 4889C7   		movq	%rax, %rdi
 885 056b E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 885      00
  52:TestXmlTestReporter.cpp **** }
 886              		.loc 3 52 0 is_stmt 0 discriminator 1
 887 0570 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 887      00
 888 0575 488B00   		movq	(%rax), %rax
 889 0578 488D4DD0 		leaq	-48(%rbp), %rcx
 890 057c BA000000 		movl	$.LC12, %edx
 890      00
 891 0581 4889CE   		movq	%rcx, %rsi
 892 0584 4889C7   		movq	%rax, %rdi
 893 0587 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 893      00
 894              	.LEHE27:
 895              	.LEHB28:
 896 058c E8000000 		call	__cxa_end_catch
 896      00
 897              	.LEHE28:
 898              	.L51:
 899              	.LBE23:
 900              		.loc 3 53 0 is_stmt 1
 901 0591 90       		nop
 902 0592 4883C468 		addq	$104, %rsp
 903 0596 5B       		popq	%rbx
 904 0597 5D       		popq	%rbp
 905              		.cfi_def_cfa 7, 8
 906 0598 C3       		ret
 907              		.cfi_endproc
 908              	.LFE1296:
 909              		.section	.gcc_except_table
 910              		.align 4
 911              	.LLSDA1296:
 912 007c FF       		.byte	0xff
 913 007d 03       		.byte	0x3
 914 007e 31       		.uleb128 .LLSDATT1296-.LLSDATTD1296
 915              	.LLSDATTD1296:
 916 007f 01       		.byte	0x1
 917 0080 27       		.uleb128 .LLSDACSE1296-.LLSDACSB1296
 918              	.LLSDACSB1296:
 919 0081 29       		.uleb128 .LEHB22-.LFB1296
 920 0082 8901     		.uleb128 .LEHE22-.LEHB22
 921 0084 00       		.uleb128 0
 922 0085 00       		.uleb128 0
 923 0086 BA01     		.uleb128 .LEHB23-.LFB1296
 924 0088 2F       		.uleb128 .LEHE23-.LEHB23
 925 0089 BA02     		.uleb128 .L48-.LFB1296
 926 008b 01       		.uleb128 0x1
 927 008c E901     		.uleb128 .LEHB24-.LFB1296
 928 008e 1C       		.uleb128 .LEHE24-.LEHB24
 929 008f 9302     		.uleb128 .L49-.LFB1296
 930 0091 03       		.uleb128 0x3
 931 0092 8C02     		.uleb128 .LEHB25-.LFB1296
 932 0094 05       		.uleb128 .LEHE25-.LEHB25
 933 0095 BA02     		.uleb128 .L48-.LFB1296
 934 0097 01       		.uleb128 0x1
 935 0098 B502     		.uleb128 .LEHB26-.LFB1296
 936 009a 05       		.uleb128 .LEHE26-.LEHB26
 937 009b 00       		.uleb128 0
 938 009c 00       		.uleb128 0
 939 009d C202     		.uleb128 .LEHB27-.LFB1296
 940 009f 38       		.uleb128 .LEHE27-.LEHB27
 941 00a0 A702     		.uleb128 .L50-.LFB1296
 942 00a2 00       		.uleb128 0
 943 00a3 FA02     		.uleb128 .LEHB28-.LFB1296
 944 00a5 05       		.uleb128 .LEHE28-.LEHB28
 945 00a6 00       		.uleb128 0
 946 00a7 00       		.uleb128 0
 947              	.LLSDACSE1296:
 948 00a8 01       		.byte	0x1
 949 00a9 00       		.byte	0
 950 00aa 00       		.byte	0
 951 00ab 7D       		.byte	0x7d
 952              		.align 4
 953 00ac 00000000 		.long	0
 954              	
 955              	.LLSDATT1296:
 956              		.text
 958 0599 90       		.align 2
 960              	_ZN12_GLOBAL__N_168XmlTestReporterFixtureOutputIsCachedUntilReportSummaryIsCalledHelperC2ERKN8UnitT
 961              	.LFB1298:
  54:TestXmlTestReporter.cpp **** 
  55:TestXmlTestReporter.cpp **** TEST_FIXTURE(XmlTestReporterFixture, OutputIsCachedUntilReportSummaryIsCalled)
 962              		.loc 3 55 0
 963              		.cfi_startproc
 964 059a 55       		pushq	%rbp
 965              		.cfi_def_cfa_offset 16
 966              		.cfi_offset 6, -16
 967 059b 4889E5   		movq	%rsp, %rbp
 968              		.cfi_def_cfa_register 6
 969 059e 4883EC10 		subq	$16, %rsp
 970 05a2 48897DF8 		movq	%rdi, -8(%rbp)
 971 05a6 488975F0 		movq	%rsi, -16(%rbp)
 972              	.LBB24:
 973              		.loc 3 55 0
 974 05aa 488B45F8 		movq	-8(%rbp), %rax
 975 05ae 4889C7   		movq	%rax, %rdi
 976 05b1 E84AFAFF 		call	_ZN12_GLOBAL__N_122XmlTestReporterFixtureC2Ev
 976      FF
 977 05b6 488B45F8 		movq	-8(%rbp), %rax
 978 05ba 488B55F0 		movq	-16(%rbp), %rdx
 979 05be 48899088 		movq	%rdx, 392(%rax)
 979      010000
 980              	.LBE24:
 981 05c5 C9       		leave
 982              		.cfi_def_cfa 7, 8
 983 05c6 C3       		ret
 984              		.cfi_endproc
 985              	.LFE1298:
 987              		.set	_ZN12_GLOBAL__N_168XmlTestReporterFixtureOutputIsCachedUntilReportSummaryIsCalledHelperC1ERKN
 988              		.section	.rodata
 989 024b 00000000 		.align 8
 989      00
 990              	.LC13:
 991 0250 4F757470 		.string	"OutputIsCachedUntilReportSummaryIsCalled"
 991      75744973 
 991      43616368 
 991      6564556E 
 991      74696C52 
 992              		.text
 993 05c7 90       		.align 2
 995              	_ZN12_GLOBAL__N_166TestXmlTestReporterFixtureOutputIsCachedUntilReportSummaryIsCalledC2Ev:
 996              	.LFB1301:
 997              		.loc 3 55 0
 998              		.cfi_startproc
 999 05c8 55       		pushq	%rbp
 1000              		.cfi_def_cfa_offset 16
 1001              		.cfi_offset 6, -16
 1002 05c9 4889E5   		movq	%rsp, %rbp
 1003              		.cfi_def_cfa_register 6
 1004 05cc 4883EC10 		subq	$16, %rsp
 1005 05d0 48897DF8 		movq	%rdi, -8(%rbp)
 1006              	.LBB25:
 1007              		.loc 3 55 0
 1008 05d4 E8000000 		call	_ZN13UnitTestSuite12GetSuiteNameEv
 1008      00
 1009 05d9 4889C2   		movq	%rax, %rdx
 1010 05dc 488B45F8 		movq	-8(%rbp), %rax
 1011 05e0 41B83700 		movl	$55, %r8d
 1011      0000
 1012 05e6 B9000000 		movl	$.LC1, %ecx
 1012      00
 1013 05eb BE000000 		movl	$.LC13, %esi
 1013      00
 1014 05f0 4889C7   		movq	%rax, %rdi
 1015 05f3 E8000000 		call	_ZN8UnitTest4TestC2EPKcS2_S2_i
 1015      00
 1016 05f8 488B45F8 		movq	-8(%rbp), %rax
 1017 05fc 48C70000 		movq	$_ZTVN12_GLOBAL__N_166TestXmlTestReporterFixtureOutputIsCachedUntilReportSummaryIsCalledE+16,
 1017      000000
 1018              	.LBE25:
 1019 0603 C9       		leave
 1020              		.cfi_def_cfa 7, 8
 1021 0604 C3       		ret
 1022              		.cfi_endproc
 1023              	.LFE1301:
 1025              		.set	_ZN12_GLOBAL__N_166TestXmlTestReporterFixtureOutputIsCachedUntilReportSummaryIsCalledC1Ev,_ZN
 1026              		.local	_ZN12_GLOBAL__N_174testXmlTestReporterFixtureOutputIsCachedUntilReportSummaryIsCalledInstan
 1027              		.comm	_ZN12_GLOBAL__N_174testXmlTestReporterFixtureOutputIsCachedUntilReportSummaryIsCalledInstanc
 1028              		.local	_ZN12_GLOBAL__N_167adderXmlTestReporterFixtureOutputIsCachedUntilReportSummaryIsCalledE
 1029              		.comm	_ZN12_GLOBAL__N_167adderXmlTestReporterFixtureOutputIsCachedUntilReportSummaryIsCalledE,1,1
 1030 0605 90       		.align 2
 1032              	_ZN12_GLOBAL__N_168XmlTestReporterFixtureOutputIsCachedUntilReportSummaryIsCalledHelperD2Ev:
 1033              	.LFB1305:
 1034              		.loc 3 55 0
 1035              		.cfi_startproc
 1036 0606 55       		pushq	%rbp
 1037              		.cfi_def_cfa_offset 16
 1038              		.cfi_offset 6, -16
 1039 0607 4889E5   		movq	%rsp, %rbp
 1040              		.cfi_def_cfa_register 6
 1041 060a 4883EC10 		subq	$16, %rsp
 1042 060e 48897DF8 		movq	%rdi, -8(%rbp)
 1043              	.LBB26:
 1044              		.loc 3 55 0
 1045 0612 488B45F8 		movq	-8(%rbp), %rax
 1046 0616 4889C7   		movq	%rax, %rdi
 1047 0619 E83EFAFF 		call	_ZN12_GLOBAL__N_122XmlTestReporterFixtureD2Ev
 1047      FF
 1048              	.LBE26:
 1049 061e C9       		leave
 1050              		.cfi_def_cfa 7, 8
 1051 061f C3       		ret
 1052              		.cfi_endproc
 1053              	.LFE1305:
 1055              		.set	_ZN12_GLOBAL__N_168XmlTestReporterFixtureOutputIsCachedUntilReportSummaryIsCalledHelperD1Ev,_
 1056              		.align 2
 1058              	_ZNK12_GLOBAL__N_166TestXmlTestReporterFixtureOutputIsCachedUntilReportSummaryIsCalled7RunImplEv:
 1059              	.LFB1303:
 1060              		.loc 3 55 0
 1061              		.cfi_startproc
 1062              		.cfi_personality 0x3,__gxx_personality_v0
 1063              		.cfi_lsda 0x3,.LLSDA1303
 1064 0620 55       		pushq	%rbp
 1065              		.cfi_def_cfa_offset 16
 1066              		.cfi_offset 6, -16
 1067 0621 4889E5   		movq	%rsp, %rbp
 1068              		.cfi_def_cfa_register 6
 1069 0624 4154     		pushq	%r12
 1070 0626 53       		pushq	%rbx
 1071 0627 4881ECC0 		subq	$448, %rsp
 1071      010000
 1072              		.cfi_offset 12, -24
 1073              		.cfi_offset 3, -32
 1074 062e 4889BD38 		movq	%rdi, -456(%rbp)
 1074      FEFFFF
 1075              	.LBB27:
 1076              		.loc 3 55 0
 1077 0635 C6854FFE 		movb	$0, -433(%rbp)
 1077      FFFF00
 1078              	.LBB28:
 1079 063c 488B8538 		movq	-456(%rbp), %rax
 1079      FEFFFF
 1080 0643 488D5008 		leaq	8(%rax), %rdx
 1081 0647 488D8560 		leaq	-416(%rbp), %rax
 1081      FEFFFF
 1082 064e 4889D6   		movq	%rdx, %rsi
 1083 0651 4889C7   		movq	%rax, %rdi
 1084              	.LEHB29:
 1085 0654 E841FFFF 		call	_ZN12_GLOBAL__N_168XmlTestReporterFixtureOutputIsCachedUntilReportSummaryIsCalledHelperC1ERKN
 1085      FF
 1086              	.LEHE29:
 1087              		.loc 3 55 0 is_stmt 0 discriminator 1
 1088 0659 C6854FFE 		movb	$1, -433(%rbp)
 1088      FFFF01
 1089 0660 488B8538 		movq	-456(%rbp), %rax
 1089      FEFFFF
 1090 0667 488D5008 		leaq	8(%rax), %rdx
 1091 066b 488D8560 		leaq	-416(%rbp), %rax
 1091      FEFFFF
 1092 0672 4889D6   		movq	%rdx, %rsi
 1093 0675 4889C7   		movq	%rax, %rdi
 1094              	.LEHB30:
 1095 0678 E8412500 		call	_ZN8UnitTest11ExecuteTestIN12_GLOBAL__N_168XmlTestReporterFixtureOutputIsCachedUntilReportSum
 1095      00
 1096              	.LEHE30:
 1097 067d 488D8560 		leaq	-416(%rbp), %rax
 1097      FEFFFF
 1098 0684 4889C7   		movq	%rax, %rdi
 1099              	.LEHB31:
 1100 0687 E87AFFFF 		call	_ZN12_GLOBAL__N_168XmlTestReporterFixtureOutputIsCachedUntilReportSummaryIsCalledHelperD1Ev
 1100      FF
 1101              	.LEHE31:
 1102              	.LBE28:
 1103              	.LBE27:
 1104              		.loc 3 55 0
 1105 068c E9640200 		jmp	.L76
 1105      00
 1106              	.L70:
 1107 0691 4989C4   		movq	%rax, %r12
 1108 0694 4889D3   		movq	%rdx, %rbx
 1109              	.LBB36:
 1110              	.LBB29:
 1111 0697 488D8560 		leaq	-416(%rbp), %rax
 1111      FEFFFF
 1112 069e 4889C7   		movq	%rax, %rdi
 1113 06a1 E860FFFF 		call	_ZN12_GLOBAL__N_168XmlTestReporterFixtureOutputIsCachedUntilReportSummaryIsCalledHelperD1Ev
 1113      FF
 1114 06a6 4C89E0   		movq	%r12, %rax
 1115 06a9 4889DA   		movq	%rbx, %rdx
 1116 06ac EB00     		jmp	.L58
 1117              	.L69:
 1118              	.L58:
 1119 06ae 4883FA01 		cmpq	$1, %rdx
 1120 06b2 745C     		je	.L60
 1121 06b4 4883FA02 		cmpq	$2, %rdx
 1122 06b8 0F84F400 		je	.L61
 1122      0000
 1123 06be E9980100 		jmp	.L75
 1123      00
 1124              	.L71:
 1125 06c3 4889C3   		movq	%rax, %rbx
 1126              	.LBE29:
 1127              	.LBB30:
 1128 06c6 E8000000 		call	__cxa_end_catch
 1128      00
 1129 06cb 4889D8   		movq	%rbx, %rax
 1130 06ce 4889C7   		movq	%rax, %rdi
 1131              	.LEHB32:
 1132 06d1 E8000000 		call	_Unwind_Resume
 1132      00
 1133              	.LEHE32:
 1134              	.L72:
 1135 06d6 4889C3   		movq	%rax, %rbx
 1136              	.LBE30:
 1137              	.LBB31:
 1138              	.LBB32:
 1139 06d9 488D8560 		leaq	-416(%rbp), %rax
 1139      FEFFFF
 1140 06e0 4889C7   		movq	%rax, %rdi
 1141 06e3 E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 1141      00
 1142 06e8 EB03     		jmp	.L64
 1143              	.L73:
 1144 06ea 4889C3   		movq	%rax, %rbx
 1145              	.L64:
 1146              	.LBE32:
 1147 06ed E8000000 		call	__cxa_end_catch
 1147      00
 1148 06f2 4889D8   		movq	%rbx, %rax
 1149 06f5 4889C7   		movq	%rax, %rdi
 1150              	.LEHB33:
 1151 06f8 E8000000 		call	_Unwind_Resume
 1151      00
 1152              	.LEHE33:
 1153              	.L74:
 1154 06fd 4889C3   		movq	%rax, %rbx
 1155              	.LBE31:
 1156 0700 E8000000 		call	__cxa_end_catch
 1156      00
 1157 0705 4889D8   		movq	%rbx, %rax
 1158 0708 4889C7   		movq	%rax, %rdi
 1159              	.LEHB34:
 1160 070b E8000000 		call	_Unwind_Resume
 1160      00
 1161              	.LEHE34:
 1162              	.L60:
 1163              	.LBB34:
 1164 0710 4889C7   		movq	%rax, %rdi
 1165 0713 E8000000 		call	__cxa_begin_catch
 1165      00
 1166 0718 48898550 		movq	%rax, -432(%rbp)
 1166      FEFFFF
 1167 071f 488B8550 		movq	-432(%rbp), %rax
 1167      FEFFFF
 1168 0726 488B00   		movq	(%rax), %rax
 1169 0729 4883C010 		addq	$16, %rax
 1170 072d 488B00   		movq	(%rax), %rax
 1171 0730 488B9550 		movq	-432(%rbp), %rdx
 1171      FEFFFF
 1172 0737 4889D7   		movq	%rdx, %rdi
 1173 073a FFD0     		call	*%rax
 1174 073c 4889C3   		movq	%rax, %rbx
 1175 073f 488B8550 		movq	-432(%rbp), %rax
 1175      FEFFFF
 1176 0746 4889C7   		movq	%rax, %rdi
 1177              	.LEHB35:
 1178 0749 E8000000 		call	_ZNK8UnitTest15AssertException10LineNumberEv
 1178      00
 1179 074e 4189C4   		movl	%eax, %r12d
 1180 0751 488B8550 		movq	-432(%rbp), %rax
 1180      FEFFFF
 1181 0758 4889C7   		movq	%rax, %rdi
 1182 075b E8000000 		call	_ZNK8UnitTest15AssertException8FilenameEv
 1182      00
 1183              		.loc 3 55 0 discriminator 1
 1184 0760 4889C1   		movq	%rax, %rcx
 1185 0763 488B8538 		movq	-456(%rbp), %rax
 1185      FEFFFF
 1186 076a 488B5008 		movq	8(%rax), %rdx
 1187 076e 488B8538 		movq	-456(%rbp), %rax
 1187      FEFFFF
 1188 0775 488B7010 		movq	16(%rax), %rsi
 1189 0779 488D8560 		leaq	-416(%rbp), %rax
 1189      FEFFFF
 1190 0780 4589E0   		movl	%r12d, %r8d
 1191 0783 4889C7   		movq	%rax, %rdi
 1192 0786 E8000000 		call	_ZN8UnitTest11TestDetailsC1EPKcS2_S2_i
 1192      00
 1193              		.loc 3 55 0 discriminator 3
 1194 078b E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 1194      00
 1195 0790 488B00   		movq	(%rax), %rax
 1196 0793 488D8D60 		leaq	-416(%rbp), %rcx
 1196      FEFFFF
 1197 079a 4889DA   		movq	%rbx, %rdx
 1198 079d 4889CE   		movq	%rcx, %rsi
 1199 07a0 4889C7   		movq	%rax, %rdi
 1200 07a3 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 1200      00
 1201              	.LEHE35:
 1202              		.loc 3 55 0 discriminator 1
 1203 07a8 E8000000 		call	__cxa_end_catch
 1203      00
 1204              	.LBE34:
 1205              	.LBE36:
 1206 07ad E9430100 		jmp	.L76
 1206      00
 1207              	.L61:
 1208              	.LBB37:
 1209              	.LBB35:
 1210              		.loc 3 55 0
 1211 07b2 4889C7   		movq	%rax, %rdi
 1212 07b5 E8000000 		call	__cxa_begin_catch
 1212      00
 1213 07ba 48898558 		movq	%rax, -424(%rbp)
 1213      FEFFFF
 1214              	.LBB33:
 1215 07c1 488D8560 		leaq	-416(%rbp), %rax
 1215      FEFFFF
 1216 07c8 4889C7   		movq	%rax, %rdi
 1217              	.LEHB36:
 1218 07cb E8000000 		call	_ZN8UnitTest15MemoryOutStreamC1Ev
 1218      00
 1219              	.LEHE36:
 1220              		.loc 3 55 0 discriminator 1
 1221 07d0 488B8558 		movq	-424(%rbp), %rax
 1221      FEFFFF
 1222 07d7 488B00   		movq	(%rax), %rax
 1223 07da 4883C010 		addq	$16, %rax
 1224 07de 488B00   		movq	(%rax), %rax
 1225 07e1 488B9558 		movq	-424(%rbp), %rdx
 1225      FEFFFF
 1226 07e8 4889D7   		movq	%rdx, %rdi
 1227 07eb FFD0     		call	*%rax
 1228 07ed 4889C3   		movq	%rax, %rbx
 1229 07f0 488D8560 		leaq	-416(%rbp), %rax
 1229      FEFFFF
 1230 07f7 BE000000 		movl	$.LC3, %esi
 1230      00
 1231 07fc 4889C7   		movq	%rax, %rdi
 1232              	.LEHB37:
 1233 07ff E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
 1233      00
 1234 0804 4889DE   		movq	%rbx, %rsi
 1235 0807 4889C7   		movq	%rax, %rdi
 1236 080a E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
 1236      00
 1237 080f 488D8560 		leaq	-416(%rbp), %rax
 1237      FEFFFF
 1238 0816 4889C7   		movq	%rax, %rdi
 1239 0819 E8000000 		call	_ZNK8UnitTest15MemoryOutStream7GetTextEv
 1239      00
 1240 081e 4889C3   		movq	%rax, %rbx
 1241 0821 488B8538 		movq	-456(%rbp), %rax
 1241      FEFFFF
 1242 0828 4C8D6008 		leaq	8(%rax), %r12
 1243 082c E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 1243      00
 1244 0831 488B00   		movq	(%rax), %rax
 1245 0834 4889DA   		movq	%rbx, %rdx
 1246 0837 4C89E6   		movq	%r12, %rsi
 1247 083a 4889C7   		movq	%rax, %rdi
 1248 083d E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 1248      00
 1249              	.LEHE37:
 1250 0842 488D8560 		leaq	-416(%rbp), %rax
 1250      FEFFFF
 1251 0849 4889C7   		movq	%rax, %rdi
 1252              	.LEHB38:
 1253 084c E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 1253      00
 1254              	.LEHE38:
 1255              	.LBE33:
 1256              		.loc 3 55 0
 1257 0851 E8000000 		call	__cxa_end_catch
 1257      00
 1258              	.LBE35:
 1259              	.LBE37:
 1260 0856 E99A0000 		jmp	.L76
 1260      00
 1261              	.L75:
 1262              	.LBB38:
 1263 085b 4889C7   		movq	%rax, %rdi
 1264 085e E8000000 		call	__cxa_begin_catch
 1264      00
 1265 0863 80BD4FFE 		cmpb	$0, -433(%rbp)
 1265      FFFF00
 1266 086a 7443     		je	.L67
 1267              		.loc 3 55 0 discriminator 1
 1268 086c 488B8538 		movq	-456(%rbp), %rax
 1268      FEFFFF
 1269 0873 488D4808 		leaq	8(%rax), %rcx
 1270 0877 488D8560 		leaq	-416(%rbp), %rax
 1270      FEFFFF
 1271 087e BA370000 		movl	$55, %edx
 1271      00
 1272 0883 4889CE   		movq	%rcx, %rsi
 1273 0886 4889C7   		movq	%rax, %rdi
 1274              	.LEHB39:
 1275 0889 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 1275      00
 1276 088e E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 1276      00
 1277 0893 488B00   		movq	(%rax), %rax
 1278 0896 488D8D60 		leaq	-416(%rbp), %rcx
 1278      FEFFFF
 1279 089d BA000000 		movl	$.LC4, %edx
 1279      00
 1280 08a2 4889CE   		movq	%rcx, %rsi
 1281 08a5 4889C7   		movq	%rax, %rdi
 1282 08a8 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 1282      00
 1283 08ad EB41     		jmp	.L68
 1284              	.L67:
 1285              		.loc 3 55 0 discriminator 2
 1286 08af 488B8538 		movq	-456(%rbp), %rax
 1286      FEFFFF
 1287 08b6 488D4808 		leaq	8(%rax), %rcx
 1288 08ba 488D8560 		leaq	-416(%rbp), %rax
 1288      FEFFFF
 1289 08c1 BA370000 		movl	$55, %edx
 1289      00
 1290 08c6 4889CE   		movq	%rcx, %rsi
 1291 08c9 4889C7   		movq	%rax, %rdi
 1292 08cc E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 1292      00
 1293              		.loc 3 55 0 discriminator 1
 1294 08d1 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 1294      00
 1295 08d6 488B00   		movq	(%rax), %rax
 1296 08d9 488D8D60 		leaq	-416(%rbp), %rcx
 1296      FEFFFF
 1297 08e0 BA000000 		movl	$.LC5, %edx
 1297      00
 1298 08e5 4889CE   		movq	%rcx, %rsi
 1299 08e8 4889C7   		movq	%rax, %rdi
 1300 08eb E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 1300      00
 1301              	.LEHE39:
 1302              	.L68:
 1303              	.LEHB40:
 1304 08f0 E8000000 		call	__cxa_end_catch
 1304      00
 1305              	.LEHE40:
 1306              	.L76:
 1307              	.LBE38:
 1308              		.loc 3 55 0
 1309 08f5 90       		nop
 1310 08f6 4881C4C0 		addq	$448, %rsp
 1310      010000
 1311 08fd 5B       		popq	%rbx
 1312 08fe 415C     		popq	%r12
 1313 0900 5D       		popq	%rbp
 1314              		.cfi_def_cfa 7, 8
 1315 0901 C3       		ret
 1316              		.cfi_endproc
 1317              	.LFE1303:
 1318              		.section	.gcc_except_table
 1319              		.align 4
 1320              	.LLSDA1303:
 1321 00b0 FF       		.byte	0xff
 1322 00b1 03       		.byte	0x3
 1323 00b2 59       		.uleb128 .LLSDATT1303-.LLSDATTD1303
 1324              	.LLSDATTD1303:
 1325 00b3 01       		.byte	0x1
 1326 00b4 40       		.uleb128 .LLSDACSE1303-.LLSDACSB1303
 1327              	.LLSDACSB1303:
 1328 00b5 34       		.uleb128 .LEHB29-.LFB1303
 1329 00b6 05       		.uleb128 .LEHE29-.LEHB29
 1330 00b7 8E01     		.uleb128 .L69-.LFB1303
 1331 00b9 05       		.uleb128 0x5
 1332 00ba 58       		.uleb128 .LEHB30-.LFB1303
 1333 00bb 05       		.uleb128 .LEHE30-.LEHB30
 1334 00bc 71       		.uleb128 .L70-.LFB1303
 1335 00bd 07       		.uleb128 0x7
 1336 00be 67       		.uleb128 .LEHB31-.LFB1303
 1337 00bf 05       		.uleb128 .LEHE31-.LEHB31
 1338 00c0 8E01     		.uleb128 .L69-.LFB1303
 1339 00c2 05       		.uleb128 0x5
 1340 00c3 B101     		.uleb128 .LEHB32-.LFB1303
 1341 00c5 05       		.uleb128 .LEHE32-.LEHB32
 1342 00c6 00       		.uleb128 0
 1343 00c7 00       		.uleb128 0
 1344 00c8 D801     		.uleb128 .LEHB33-.LFB1303
 1345 00ca 05       		.uleb128 .LEHE33-.LEHB33
 1346 00cb 00       		.uleb128 0
 1347 00cc 00       		.uleb128 0
 1348 00cd EB01     		.uleb128 .LEHB34-.LFB1303
 1349 00cf 05       		.uleb128 .LEHE34-.LEHB34
 1350 00d0 00       		.uleb128 0
 1351 00d1 00       		.uleb128 0
 1352 00d2 A902     		.uleb128 .LEHB35-.LFB1303
 1353 00d4 5F       		.uleb128 .LEHE35-.LEHB35
 1354 00d5 A301     		.uleb128 .L71-.LFB1303
 1355 00d7 00       		.uleb128 0
 1356 00d8 AB03     		.uleb128 .LEHB36-.LFB1303
 1357 00da 05       		.uleb128 .LEHE36-.LEHB36
 1358 00db CA01     		.uleb128 .L73-.LFB1303
 1359 00dd 00       		.uleb128 0
 1360 00de DF03     		.uleb128 .LEHB37-.LFB1303
 1361 00e0 43       		.uleb128 .LEHE37-.LEHB37
 1362 00e1 B601     		.uleb128 .L72-.LFB1303
 1363 00e3 00       		.uleb128 0
 1364 00e4 AC04     		.uleb128 .LEHB38-.LFB1303
 1365 00e6 05       		.uleb128 .LEHE38-.LEHB38
 1366 00e7 CA01     		.uleb128 .L73-.LFB1303
 1367 00e9 00       		.uleb128 0
 1368 00ea E904     		.uleb128 .LEHB39-.LFB1303
 1369 00ec 67       		.uleb128 .LEHE39-.LEHB39
 1370 00ed DD01     		.uleb128 .L74-.LFB1303
 1371 00ef 00       		.uleb128 0
 1372 00f0 D005     		.uleb128 .LEHB40-.LFB1303
 1373 00f2 05       		.uleb128 .LEHE40-.LEHB40
 1374 00f3 00       		.uleb128 0
 1375 00f4 00       		.uleb128 0
 1376              	.LLSDACSE1303:
 1377 00f5 03       		.byte	0x3
 1378 00f6 00       		.byte	0
 1379 00f7 02       		.byte	0x2
 1380 00f8 7D       		.byte	0x7d
 1381 00f9 01       		.byte	0x1
 1382 00fa 7D       		.byte	0x7d
 1383 00fb 00       		.byte	0
 1384 00fc 7D       		.byte	0x7d
 1385 00fd 000000   		.align 4
 1386 0100 00000000 		.long	0
 1387              	
 1388 0104 00000000 		.long	_ZTISt9exception
 1389 0108 00000000 		.long	_ZTIN8UnitTest15AssertExceptionE
 1390              	.LLSDATT1303:
 1391              		.text
 1393              		.section	.rodata
 1394              	.LC14:
 1395 0279 00       		.string	""
 1396              	.LC15:
 1397 027a 6D657373 		.string	"message"
 1397      61676500 
 1398              	.LC17:
 1399 0282 6F757470 		.string	"output.str().empty()"
 1399      75742E73 
 1399      74722829 
 1399      2E656D70 
 1399      74792829 
 1400              	.LC18:
 1401 0297 216F7574 		.string	"!output.str().empty()"
 1401      7075742E 
 1401      73747228 
 1401      292E656D 
 1401      70747928 
 1402 02ad 000000   		.align 8
 1403              	.LC19:
 1404 02b0 556E6861 		.string	"Unhandled exception in CHECK(output.str().empty())"
 1404      6E646C65 
 1404      64206578 
 1404      63657074 
 1404      696F6E20 
 1405 02e3 00000000 		.align 8
 1405      00
 1406              	.LC20:
 1407 02e8 556E6861 		.string	"Unhandled exception in CHECK(!output.str().empty())"
 1407      6E646C65 
 1407      64206578 
 1407      63657074 
 1407      696F6E20 
 1408              		.text
 1409              		.align 2
 1411              	_ZN12_GLOBAL__N_168XmlTestReporterFixtureOutputIsCachedUntilReportSummaryIsCalledHelper7RunImplEv:
 1412              	.LFB1307:
  56:TestXmlTestReporter.cpp **** {
 1413              		.loc 3 56 0 is_stmt 1
 1414              		.cfi_startproc
 1415              		.cfi_personality 0x3,__gxx_personality_v0
 1416              		.cfi_lsda 0x3,.LLSDA1307
 1417 0902 55       		pushq	%rbp
 1418              		.cfi_def_cfa_offset 16
 1419              		.cfi_offset 6, -16
 1420 0903 4889E5   		movq	%rsp, %rbp
 1421              		.cfi_def_cfa_register 6
 1422 0906 53       		pushq	%rbx
 1423 0907 4883EC78 		subq	$120, %rsp
 1424              		.cfi_offset 3, -24
 1425 090b 48897D88 		movq	%rdi, -120(%rbp)
 1426              	.LBB39:
  57:TestXmlTestReporter.cpp ****     TestDetails const details("", "", "", 0);
 1427              		.loc 3 57 0
 1428 090f 488D45B0 		leaq	-80(%rbp), %rax
 1429 0913 41B80000 		movl	$0, %r8d
 1429      0000
 1430 0919 B9000000 		movl	$.LC14, %ecx
 1430      00
 1431 091e BA000000 		movl	$.LC14, %edx
 1431      00
 1432 0923 BE000000 		movl	$.LC14, %esi
 1432      00
 1433 0928 4889C7   		movq	%rax, %rdi
 1434              	.LEHB41:
 1435 092b E8000000 		call	_ZN8UnitTest11TestDetailsC1EPKcS2_S2_i
 1435      00
  58:TestXmlTestReporter.cpp **** 
  59:TestXmlTestReporter.cpp ****     reporter.ReportTestStart(details);
 1436              		.loc 3 59 0
 1437 0930 488B4588 		movq	-120(%rbp), %rax
 1438 0934 488D9060 		leaq	352(%rax), %rdx
 1438      010000
 1439 093b 488D45B0 		leaq	-80(%rbp), %rax
 1440 093f 4889C6   		movq	%rax, %rsi
 1441 0942 4889D7   		movq	%rdx, %rdi
 1442 0945 E8000000 		call	_ZN8UnitTest20DeferredTestReporter15ReportTestStartERKNS_11TestDetailsE
 1442      00
  60:TestXmlTestReporter.cpp ****     reporter.ReportFailure(details, "message");
 1443              		.loc 3 60 0
 1444 094a 488B4588 		movq	-120(%rbp), %rax
 1445 094e 488D8860 		leaq	352(%rax), %rcx
 1445      010000
 1446 0955 488D45B0 		leaq	-80(%rbp), %rax
 1447 0959 BA000000 		movl	$.LC15, %edx
 1447      00
 1448 095e 4889C6   		movq	%rax, %rsi
 1449 0961 4889CF   		movq	%rcx, %rdi
 1450 0964 E8000000 		call	_ZN8UnitTest20DeferredTestReporter13ReportFailureERKNS_11TestDetailsEPKc
 1450      00
  61:TestXmlTestReporter.cpp ****     reporter.ReportTestFinish(details, 1.0F);
 1451              		.loc 3 61 0
 1452 0969 488B4588 		movq	-120(%rbp), %rax
 1453 096d 488D9060 		leaq	352(%rax), %rdx
 1453      010000
 1454 0974 488D45B0 		leaq	-80(%rbp), %rax
 1455 0978 F30F1005 		movss	.LC16(%rip), %xmm0
 1455      00000000 
 1456 0980 4889C6   		movq	%rax, %rsi
 1457 0983 4889D7   		movq	%rdx, %rdi
 1458 0986 E8000000 		call	_ZN8UnitTest20DeferredTestReporter16ReportTestFinishERKNS_11TestDetailsEf
 1458      00
 1459              	.LEHE41:
  62:TestXmlTestReporter.cpp ****     CHECK(output.str().empty());
 1460              		.loc 3 62 0
 1461 098b 488B5588 		movq	-120(%rbp), %rdx
 1462 098f 488D4590 		leaq	-112(%rbp), %rax
 1463 0993 4889D6   		movq	%rdx, %rsi
 1464 0996 4889C7   		movq	%rax, %rdi
 1465              	.LEHB42:
 1466 0999 E8000000 		call	_ZNKSt19basic_ostringstreamIcSt11char_traitsIcESaIcEE3strEv
 1466      00
 1467              	.LEHE42:
 1468              		.loc 3 62 0 is_stmt 0 discriminator 1
 1469 099e 488D4590 		leaq	-112(%rbp), %rax
 1470 09a2 4889C7   		movq	%rax, %rdi
 1471              	.LEHB43:
 1472 09a5 E8000000 		call	_ZNKSs5emptyEv
 1472      00
 1473              	.LEHE43:
 1474 09aa 0FB6C0   		movzbl	%al, %eax
 1475 09ad 89C7     		movl	%eax, %edi
 1476 09af E8000000 		call	_ZN8UnitTest5CheckIbEEbT_
 1476      00
 1477 09b4 83F001   		xorl	$1, %eax
 1478 09b7 89C3     		movl	%eax, %ebx
 1479 09b9 488D4590 		leaq	-112(%rbp), %rax
 1480 09bd 4889C7   		movq	%rax, %rdi
 1481              	.LEHB44:
 1482 09c0 E8000000 		call	_ZNSsD1Ev
 1482      00
 1483              		.loc 3 62 0 discriminator 3
 1484 09c5 84DB     		testb	%bl, %bl
 1485 09c7 7438     		je	.L78
 1486              		.loc 3 62 0 discriminator 1
 1487 09c9 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 1487      00
 1488 09ce 488B08   		movq	(%rax), %rcx
 1489 09d1 488D45D0 		leaq	-48(%rbp), %rax
 1490 09d5 BA3E0000 		movl	$62, %edx
 1490      00
 1491 09da 4889CE   		movq	%rcx, %rsi
 1492 09dd 4889C7   		movq	%rax, %rdi
 1493 09e0 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 1493      00
 1494 09e5 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 1494      00
 1495 09ea 488B00   		movq	(%rax), %rax
 1496 09ed 488D4DD0 		leaq	-48(%rbp), %rcx
 1497 09f1 BA000000 		movl	$.LC17, %edx
 1497      00
 1498 09f6 4889CE   		movq	%rcx, %rsi
 1499 09f9 4889C7   		movq	%rax, %rdi
 1500 09fc E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 1500      00
 1501              	.LEHE44:
 1502              	.L78:
  63:TestXmlTestReporter.cpp **** 
  64:TestXmlTestReporter.cpp ****     reporter.ReportSummary(1, 1, 1, 1.0f);
 1503              		.loc 3 64 0 is_stmt 1
 1504 0a01 488B4588 		movq	-120(%rbp), %rax
 1505 0a05 48056001 		addq	$352, %rax
 1505      0000
 1506 0a0b F30F1005 		movss	.LC16(%rip), %xmm0
 1506      00000000 
 1507 0a13 B9010000 		movl	$1, %ecx
 1507      00
 1508 0a18 BA010000 		movl	$1, %edx
 1508      00
 1509 0a1d BE010000 		movl	$1, %esi
 1509      00
 1510 0a22 4889C7   		movq	%rax, %rdi
 1511              	.LEHB45:
 1512 0a25 E8000000 		call	_ZN8UnitTest15XmlTestReporter13ReportSummaryEiiif
 1512      00
 1513              	.LEHE45:
  65:TestXmlTestReporter.cpp ****     CHECK(!output.str().empty());
 1514              		.loc 3 65 0
 1515 0a2a 488B5588 		movq	-120(%rbp), %rdx
 1516 0a2e 488D45A0 		leaq	-96(%rbp), %rax
 1517 0a32 4889D6   		movq	%rdx, %rsi
 1518 0a35 4889C7   		movq	%rax, %rdi
 1519              	.LEHB46:
 1520 0a38 E8000000 		call	_ZNKSt19basic_ostringstreamIcSt11char_traitsIcESaIcEE3strEv
 1520      00
 1521              	.LEHE46:
 1522              		.loc 3 65 0 is_stmt 0 discriminator 1
 1523 0a3d 488D45A0 		leaq	-96(%rbp), %rax
 1524 0a41 4889C7   		movq	%rax, %rdi
 1525              	.LEHB47:
 1526 0a44 E8000000 		call	_ZNKSs5emptyEv
 1526      00
 1527              	.LEHE47:
 1528 0a49 83F001   		xorl	$1, %eax
 1529 0a4c 0FB6C0   		movzbl	%al, %eax
 1530 0a4f 89C7     		movl	%eax, %edi
 1531 0a51 E8000000 		call	_ZN8UnitTest5CheckIbEEbT_
 1531      00
 1532 0a56 83F001   		xorl	$1, %eax
 1533 0a59 89C3     		movl	%eax, %ebx
 1534 0a5b 488D45A0 		leaq	-96(%rbp), %rax
 1535 0a5f 4889C7   		movq	%rax, %rdi
 1536              	.LEHB48:
 1537 0a62 E8000000 		call	_ZNSsD1Ev
 1537      00
 1538              		.loc 3 65 0 discriminator 3
 1539 0a67 84DB     		testb	%bl, %bl
 1540 0a69 0F841B01 		je	.L77
 1540      0000
 1541              		.loc 3 65 0 discriminator 1
 1542 0a6f E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 1542      00
 1543 0a74 488B08   		movq	(%rax), %rcx
 1544 0a77 488D45D0 		leaq	-48(%rbp), %rax
 1545 0a7b BA410000 		movl	$65, %edx
 1545      00
 1546 0a80 4889CE   		movq	%rcx, %rsi
 1547 0a83 4889C7   		movq	%rax, %rdi
 1548 0a86 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 1548      00
 1549 0a8b E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 1549      00
 1550 0a90 488B00   		movq	(%rax), %rax
 1551 0a93 488D4DD0 		leaq	-48(%rbp), %rcx
 1552 0a97 BA000000 		movl	$.LC18, %edx
 1552      00
 1553 0a9c 4889CE   		movq	%rcx, %rsi
 1554 0a9f 4889C7   		movq	%rax, %rdi
 1555 0aa2 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 1555      00
 1556              	.LEHE48:
 1557 0aa7 E9DE0000 		jmp	.L77
 1557      00
 1558              	.L87:
 1559 0aac 4889C3   		movq	%rax, %rbx
  62:TestXmlTestReporter.cpp ****     CHECK(output.str().empty());
 1560              		.loc 3 62 0 is_stmt 1
 1561 0aaf 488D4590 		leaq	-112(%rbp), %rax
 1562 0ab3 4889C7   		movq	%rax, %rdi
 1563 0ab6 E8000000 		call	_ZNSsD1Ev
 1563      00
 1564 0abb 4889D8   		movq	%rbx, %rax
 1565 0abe EB13     		jmp	.L81
 1566              	.L88:
 1567 0ac0 4889C3   		movq	%rax, %rbx
 1568 0ac3 E8000000 		call	__cxa_end_catch
 1568      00
 1569 0ac8 4889D8   		movq	%rbx, %rax
 1570 0acb 4889C7   		movq	%rax, %rdi
 1571              	.LEHB49:
 1572 0ace E8000000 		call	_Unwind_Resume
 1572      00
 1573              	.LEHE49:
 1574              	.L86:
 1575              	.L81:
 1576 0ad3 4889C7   		movq	%rax, %rdi
 1577 0ad6 E8000000 		call	__cxa_begin_catch
 1577      00
 1578              	.LEHB50:
 1579 0adb E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 1579      00
 1580 0ae0 488B08   		movq	(%rax), %rcx
 1581 0ae3 488D45D0 		leaq	-48(%rbp), %rax
 1582 0ae7 BA3E0000 		movl	$62, %edx
 1582      00
 1583 0aec 4889CE   		movq	%rcx, %rsi
 1584 0aef 4889C7   		movq	%rax, %rdi
 1585 0af2 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 1585      00
  62:TestXmlTestReporter.cpp ****     CHECK(output.str().empty());
 1586              		.loc 3 62 0 is_stmt 0 discriminator 1
 1587 0af7 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 1587      00
 1588 0afc 488B00   		movq	(%rax), %rax
 1589 0aff 488D4DD0 		leaq	-48(%rbp), %rcx
 1590 0b03 BA000000 		movl	$.LC19, %edx
 1590      00
 1591 0b08 4889CE   		movq	%rcx, %rsi
 1592 0b0b 4889C7   		movq	%rax, %rdi
 1593 0b0e E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 1593      00
 1594              	.LEHE50:
 1595              	.LEHB51:
 1596 0b13 E8000000 		call	__cxa_end_catch
 1596      00
 1597              	.LEHE51:
 1598 0b18 E9E4FEFF 		jmp	.L78
 1598      FF
 1599              	.L90:
 1600 0b1d 4889C3   		movq	%rax, %rbx
 1601              		.loc 3 65 0 is_stmt 1
 1602 0b20 488D45A0 		leaq	-96(%rbp), %rax
 1603 0b24 4889C7   		movq	%rax, %rdi
 1604 0b27 E8000000 		call	_ZNSsD1Ev
 1604      00
 1605 0b2c 4889D8   		movq	%rbx, %rax
 1606 0b2f EB13     		jmp	.L84
 1607              	.L91:
 1608 0b31 4889C3   		movq	%rax, %rbx
 1609 0b34 E8000000 		call	__cxa_end_catch
 1609      00
 1610 0b39 4889D8   		movq	%rbx, %rax
 1611 0b3c 4889C7   		movq	%rax, %rdi
 1612              	.LEHB52:
 1613 0b3f E8000000 		call	_Unwind_Resume
 1613      00
 1614              	.LEHE52:
 1615              	.L89:
 1616              	.L84:
 1617 0b44 4889C7   		movq	%rax, %rdi
 1618 0b47 E8000000 		call	__cxa_begin_catch
 1618      00
 1619              	.LEHB53:
 1620 0b4c E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 1620      00
 1621 0b51 488B08   		movq	(%rax), %rcx
 1622 0b54 488D45D0 		leaq	-48(%rbp), %rax
 1623 0b58 BA410000 		movl	$65, %edx
 1623      00
 1624 0b5d 4889CE   		movq	%rcx, %rsi
 1625 0b60 4889C7   		movq	%rax, %rdi
 1626 0b63 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 1626      00
 1627              		.loc 3 65 0 is_stmt 0 discriminator 1
 1628 0b68 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 1628      00
 1629 0b6d 488B00   		movq	(%rax), %rax
 1630 0b70 488D4DD0 		leaq	-48(%rbp), %rcx
 1631 0b74 BA000000 		movl	$.LC20, %edx
 1631      00
 1632 0b79 4889CE   		movq	%rcx, %rsi
 1633 0b7c 4889C7   		movq	%rax, %rdi
 1634 0b7f E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 1634      00
 1635              	.LEHE53:
 1636              	.LEHB54:
 1637 0b84 E8000000 		call	__cxa_end_catch
 1637      00
 1638              	.LEHE54:
 1639              	.LBE39:
  66:TestXmlTestReporter.cpp **** }
 1640              		.loc 3 66 0 is_stmt 1 discriminator 1
 1641 0b89 90       		nop
 1642              	.L77:
 1643              		.loc 3 66 0 is_stmt 0
 1644 0b8a 4883C478 		addq	$120, %rsp
 1645 0b8e 5B       		popq	%rbx
 1646 0b8f 5D       		popq	%rbp
 1647              		.cfi_def_cfa 7, 8
 1648 0b90 C3       		ret
 1649              		.cfi_endproc
 1650              	.LFE1307:
 1651              		.section	.gcc_except_table
 1652              		.align 4
 1653              	.LLSDA1307:
 1654 010c FF       		.byte	0xff
 1655 010d 03       		.byte	0x3
 1656 010e 59       		.uleb128 .LLSDATT1307-.LLSDATTD1307
 1657              	.LLSDATTD1307:
 1658 010f 01       		.byte	0x1
 1659 0110 4D       		.uleb128 .LLSDACSE1307-.LLSDACSB1307
 1660              	.LLSDACSB1307:
 1661 0111 29       		.uleb128 .LEHB41-.LFB1307
 1662 0112 60       		.uleb128 .LEHE41-.LEHB41
 1663 0113 00       		.uleb128 0
 1664 0114 00       		.uleb128 0
 1665 0115 9701     		.uleb128 .LEHB42-.LFB1307
 1666 0117 05       		.uleb128 .LEHE42-.LEHB42
 1667 0118 D103     		.uleb128 .L86-.LFB1307
 1668 011a 01       		.uleb128 0x1
 1669 011b A301     		.uleb128 .LEHB43-.LFB1307
 1670 011d 05       		.uleb128 .LEHE43-.LEHB43
 1671 011e AA03     		.uleb128 .L87-.LFB1307
 1672 0120 03       		.uleb128 0x3
 1673 0121 BE01     		.uleb128 .LEHB44-.LFB1307
 1674 0123 41       		.uleb128 .LEHE44-.LEHB44
 1675 0124 D103     		.uleb128 .L86-.LFB1307
 1676 0126 01       		.uleb128 0x1
 1677 0127 A302     		.uleb128 .LEHB45-.LFB1307
 1678 0129 05       		.uleb128 .LEHE45-.LEHB45
 1679 012a 00       		.uleb128 0
 1680 012b 00       		.uleb128 0
 1681 012c B602     		.uleb128 .LEHB46-.LFB1307
 1682 012e 05       		.uleb128 .LEHE46-.LEHB46
 1683 012f C204     		.uleb128 .L89-.LFB1307
 1684 0131 01       		.uleb128 0x1
 1685 0132 C202     		.uleb128 .LEHB47-.LFB1307
 1686 0134 05       		.uleb128 .LEHE47-.LEHB47
 1687 0135 9B04     		.uleb128 .L90-.LFB1307
 1688 0137 03       		.uleb128 0x3
 1689 0138 E002     		.uleb128 .LEHB48-.LFB1307
 1690 013a 45       		.uleb128 .LEHE48-.LEHB48
 1691 013b C204     		.uleb128 .L89-.LFB1307
 1692 013d 01       		.uleb128 0x1
 1693 013e CC03     		.uleb128 .LEHB49-.LFB1307
 1694 0140 05       		.uleb128 .LEHE49-.LEHB49
 1695 0141 00       		.uleb128 0
 1696 0142 00       		.uleb128 0
 1697 0143 D903     		.uleb128 .LEHB50-.LFB1307
 1698 0145 38       		.uleb128 .LEHE50-.LEHB50
 1699 0146 BE03     		.uleb128 .L88-.LFB1307
 1700 0148 00       		.uleb128 0
 1701 0149 9104     		.uleb128 .LEHB51-.LFB1307
 1702 014b 05       		.uleb128 .LEHE51-.LEHB51
 1703 014c 00       		.uleb128 0
 1704 014d 00       		.uleb128 0
 1705 014e BD04     		.uleb128 .LEHB52-.LFB1307
 1706 0150 05       		.uleb128 .LEHE52-.LEHB52
 1707 0151 00       		.uleb128 0
 1708 0152 00       		.uleb128 0
 1709 0153 CA04     		.uleb128 .LEHB53-.LFB1307
 1710 0155 38       		.uleb128 .LEHE53-.LEHB53
 1711 0156 AF04     		.uleb128 .L91-.LFB1307
 1712 0158 00       		.uleb128 0
 1713 0159 8205     		.uleb128 .LEHB54-.LFB1307
 1714 015b 05       		.uleb128 .LEHE54-.LEHB54
 1715 015c 00       		.uleb128 0
 1716 015d 00       		.uleb128 0
 1717              	.LLSDACSE1307:
 1718 015e 01       		.byte	0x1
 1719 015f 00       		.byte	0
 1720 0160 00       		.byte	0
 1721 0161 7D       		.byte	0x7d
 1722 0162 0000     		.align 4
 1723 0164 00000000 		.long	0
 1724              	
 1725              	.LLSDATT1307:
 1726              		.text
 1728 0b91 90       		.align 2
 1730              	_ZN12_GLOBAL__N_152XmlTestReporterFixtureEmptyReportSummaryFormatHelperC2ERKN8UnitTest11TestDetails
 1731              	.LFB1309:
  67:TestXmlTestReporter.cpp **** 
  68:TestXmlTestReporter.cpp **** TEST_FIXTURE(XmlTestReporterFixture, EmptyReportSummaryFormat)
 1732              		.loc 3 68 0 is_stmt 1
 1733              		.cfi_startproc
 1734 0b92 55       		pushq	%rbp
 1735              		.cfi_def_cfa_offset 16
 1736              		.cfi_offset 6, -16
 1737 0b93 4889E5   		movq	%rsp, %rbp
 1738              		.cfi_def_cfa_register 6
 1739 0b96 4883EC10 		subq	$16, %rsp
 1740 0b9a 48897DF8 		movq	%rdi, -8(%rbp)
 1741 0b9e 488975F0 		movq	%rsi, -16(%rbp)
 1742              	.LBB40:
 1743              		.loc 3 68 0
 1744 0ba2 488B45F8 		movq	-8(%rbp), %rax
 1745 0ba6 4889C7   		movq	%rax, %rdi
 1746 0ba9 E852F4FF 		call	_ZN12_GLOBAL__N_122XmlTestReporterFixtureC2Ev
 1746      FF
 1747 0bae 488B45F8 		movq	-8(%rbp), %rax
 1748 0bb2 488B55F0 		movq	-16(%rbp), %rdx
 1749 0bb6 48899088 		movq	%rdx, 392(%rax)
 1749      010000
 1750              	.LBE40:
 1751 0bbd C9       		leave
 1752              		.cfi_def_cfa 7, 8
 1753 0bbe C3       		ret
 1754              		.cfi_endproc
 1755              	.LFE1309:
 1757              		.set	_ZN12_GLOBAL__N_152XmlTestReporterFixtureEmptyReportSummaryFormatHelperC1ERKN8UnitTest11TestD
 1758              		.section	.rodata
 1759              	.LC21:
 1760 031c 456D7074 		.string	"EmptyReportSummaryFormat"
 1760      79526570 
 1760      6F727453 
 1760      756D6D61 
 1760      7279466F 
 1761              		.text
 1762 0bbf 90       		.align 2
 1764              	_ZN12_GLOBAL__N_150TestXmlTestReporterFixtureEmptyReportSummaryFormatC2Ev:
 1765              	.LFB1312:
 1766              		.loc 3 68 0
 1767              		.cfi_startproc
 1768 0bc0 55       		pushq	%rbp
 1769              		.cfi_def_cfa_offset 16
 1770              		.cfi_offset 6, -16
 1771 0bc1 4889E5   		movq	%rsp, %rbp
 1772              		.cfi_def_cfa_register 6
 1773 0bc4 4883EC10 		subq	$16, %rsp
 1774 0bc8 48897DF8 		movq	%rdi, -8(%rbp)
 1775              	.LBB41:
 1776              		.loc 3 68 0
 1777 0bcc E8000000 		call	_ZN13UnitTestSuite12GetSuiteNameEv
 1777      00
 1778 0bd1 4889C2   		movq	%rax, %rdx
 1779 0bd4 488B45F8 		movq	-8(%rbp), %rax
 1780 0bd8 41B84400 		movl	$68, %r8d
 1780      0000
 1781 0bde B9000000 		movl	$.LC1, %ecx
 1781      00
 1782 0be3 BE000000 		movl	$.LC21, %esi
 1782      00
 1783 0be8 4889C7   		movq	%rax, %rdi
 1784 0beb E8000000 		call	_ZN8UnitTest4TestC2EPKcS2_S2_i
 1784      00
 1785 0bf0 488B45F8 		movq	-8(%rbp), %rax
 1786 0bf4 48C70000 		movq	$_ZTVN12_GLOBAL__N_150TestXmlTestReporterFixtureEmptyReportSummaryFormatE+16, (%rax)
 1786      000000
 1787              	.LBE41:
 1788 0bfb C9       		leave
 1789              		.cfi_def_cfa 7, 8
 1790 0bfc C3       		ret
 1791              		.cfi_endproc
 1792              	.LFE1312:
 1794              		.set	_ZN12_GLOBAL__N_150TestXmlTestReporterFixtureEmptyReportSummaryFormatC1Ev,_ZN12_GLOBAL__N_150
 1795              		.local	_ZN12_GLOBAL__N_158testXmlTestReporterFixtureEmptyReportSummaryFormatInstanceE
 1796              		.comm	_ZN12_GLOBAL__N_158testXmlTestReporterFixtureEmptyReportSummaryFormatInstanceE,56,32
 1797              		.local	_ZN12_GLOBAL__N_151adderXmlTestReporterFixtureEmptyReportSummaryFormatE
 1798              		.comm	_ZN12_GLOBAL__N_151adderXmlTestReporterFixtureEmptyReportSummaryFormatE,1,1
 1799 0bfd 90       		.align 2
 1801              	_ZN12_GLOBAL__N_152XmlTestReporterFixtureEmptyReportSummaryFormatHelperD2Ev:
 1802              	.LFB1316:
 1803              		.loc 3 68 0
 1804              		.cfi_startproc
 1805 0bfe 55       		pushq	%rbp
 1806              		.cfi_def_cfa_offset 16
 1807              		.cfi_offset 6, -16
 1808 0bff 4889E5   		movq	%rsp, %rbp
 1809              		.cfi_def_cfa_register 6
 1810 0c02 4883EC10 		subq	$16, %rsp
 1811 0c06 48897DF8 		movq	%rdi, -8(%rbp)
 1812              	.LBB42:
 1813              		.loc 3 68 0
 1814 0c0a 488B45F8 		movq	-8(%rbp), %rax
 1815 0c0e 4889C7   		movq	%rax, %rdi
 1816 0c11 E846F4FF 		call	_ZN12_GLOBAL__N_122XmlTestReporterFixtureD2Ev
 1816      FF
 1817              	.LBE42:
 1818 0c16 C9       		leave
 1819              		.cfi_def_cfa 7, 8
 1820 0c17 C3       		ret
 1821              		.cfi_endproc
 1822              	.LFE1316:
 1824              		.set	_ZN12_GLOBAL__N_152XmlTestReporterFixtureEmptyReportSummaryFormatHelperD1Ev,_ZN12_GLOBAL__N_1
 1825              		.align 2
 1827              	_ZNK12_GLOBAL__N_150TestXmlTestReporterFixtureEmptyReportSummaryFormat7RunImplEv:
 1828              	.LFB1314:
 1829              		.loc 3 68 0
 1830              		.cfi_startproc
 1831              		.cfi_personality 0x3,__gxx_personality_v0
 1832              		.cfi_lsda 0x3,.LLSDA1314
 1833 0c18 55       		pushq	%rbp
 1834              		.cfi_def_cfa_offset 16
 1835              		.cfi_offset 6, -16
 1836 0c19 4889E5   		movq	%rsp, %rbp
 1837              		.cfi_def_cfa_register 6
 1838 0c1c 4154     		pushq	%r12
 1839 0c1e 53       		pushq	%rbx
 1840 0c1f 4881ECC0 		subq	$448, %rsp
 1840      010000
 1841              		.cfi_offset 12, -24
 1842              		.cfi_offset 3, -32
 1843 0c26 4889BD38 		movq	%rdi, -456(%rbp)
 1843      FEFFFF
 1844              	.LBB43:
 1845              		.loc 3 68 0
 1846 0c2d C6854FFE 		movb	$0, -433(%rbp)
 1846      FFFF00
 1847              	.LBB44:
 1848 0c34 488B8538 		movq	-456(%rbp), %rax
 1848      FEFFFF
 1849 0c3b 488D5008 		leaq	8(%rax), %rdx
 1850 0c3f 488D8560 		leaq	-416(%rbp), %rax
 1850      FEFFFF
 1851 0c46 4889D6   		movq	%rdx, %rsi
 1852 0c49 4889C7   		movq	%rax, %rdi
 1853              	.LEHB55:
 1854 0c4c E841FFFF 		call	_ZN12_GLOBAL__N_152XmlTestReporterFixtureEmptyReportSummaryFormatHelperC1ERKN8UnitTest11TestD
 1854      FF
 1855              	.LEHE55:
 1856              		.loc 3 68 0 is_stmt 0 discriminator 1
 1857 0c51 C6854FFE 		movb	$1, -433(%rbp)
 1857      FFFF01
 1858 0c58 488B8538 		movq	-456(%rbp), %rax
 1858      FEFFFF
 1859 0c5f 488D5008 		leaq	8(%rax), %rdx
 1860 0c63 488D8560 		leaq	-416(%rbp), %rax
 1860      FEFFFF
 1861 0c6a 4889D6   		movq	%rdx, %rsi
 1862 0c6d 4889C7   		movq	%rax, %rdi
 1863              	.LEHB56:
 1864 0c70 E8E12100 		call	_ZN8UnitTest11ExecuteTestIN12_GLOBAL__N_152XmlTestReporterFixtureEmptyReportSummaryFormatHelp
 1864      00
 1865              	.LEHE56:
 1866 0c75 488D8560 		leaq	-416(%rbp), %rax
 1866      FEFFFF
 1867 0c7c 4889C7   		movq	%rax, %rdi
 1868              	.LEHB57:
 1869 0c7f E87AFFFF 		call	_ZN12_GLOBAL__N_152XmlTestReporterFixtureEmptyReportSummaryFormatHelperD1Ev
 1869      FF
 1870              	.LEHE57:
 1871              	.LBE44:
 1872              	.LBE43:
 1873              		.loc 3 68 0
 1874 0c84 E9640200 		jmp	.L116
 1874      00
 1875              	.L110:
 1876 0c89 4989C4   		movq	%rax, %r12
 1877 0c8c 4889D3   		movq	%rdx, %rbx
 1878              	.LBB52:
 1879              	.LBB45:
 1880 0c8f 488D8560 		leaq	-416(%rbp), %rax
 1880      FEFFFF
 1881 0c96 4889C7   		movq	%rax, %rdi
 1882 0c99 E860FFFF 		call	_ZN12_GLOBAL__N_152XmlTestReporterFixtureEmptyReportSummaryFormatHelperD1Ev
 1882      FF
 1883 0c9e 4C89E0   		movq	%r12, %rax
 1884 0ca1 4889DA   		movq	%rbx, %rdx
 1885 0ca4 EB00     		jmp	.L98
 1886              	.L109:
 1887              	.L98:
 1888 0ca6 4883FA01 		cmpq	$1, %rdx
 1889 0caa 745C     		je	.L100
 1890 0cac 4883FA02 		cmpq	$2, %rdx
 1891 0cb0 0F84F400 		je	.L101
 1891      0000
 1892 0cb6 E9980100 		jmp	.L115
 1892      00
 1893              	.L111:
 1894 0cbb 4889C3   		movq	%rax, %rbx
 1895              	.LBE45:
 1896              	.LBB46:
 1897 0cbe E8000000 		call	__cxa_end_catch
 1897      00
 1898 0cc3 4889D8   		movq	%rbx, %rax
 1899 0cc6 4889C7   		movq	%rax, %rdi
 1900              	.LEHB58:
 1901 0cc9 E8000000 		call	_Unwind_Resume
 1901      00
 1902              	.LEHE58:
 1903              	.L112:
 1904 0cce 4889C3   		movq	%rax, %rbx
 1905              	.LBE46:
 1906              	.LBB47:
 1907              	.LBB48:
 1908 0cd1 488D8560 		leaq	-416(%rbp), %rax
 1908      FEFFFF
 1909 0cd8 4889C7   		movq	%rax, %rdi
 1910 0cdb E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 1910      00
 1911 0ce0 EB03     		jmp	.L104
 1912              	.L113:
 1913 0ce2 4889C3   		movq	%rax, %rbx
 1914              	.L104:
 1915              	.LBE48:
 1916 0ce5 E8000000 		call	__cxa_end_catch
 1916      00
 1917 0cea 4889D8   		movq	%rbx, %rax
 1918 0ced 4889C7   		movq	%rax, %rdi
 1919              	.LEHB59:
 1920 0cf0 E8000000 		call	_Unwind_Resume
 1920      00
 1921              	.LEHE59:
 1922              	.L114:
 1923 0cf5 4889C3   		movq	%rax, %rbx
 1924              	.LBE47:
 1925 0cf8 E8000000 		call	__cxa_end_catch
 1925      00
 1926 0cfd 4889D8   		movq	%rbx, %rax
 1927 0d00 4889C7   		movq	%rax, %rdi
 1928              	.LEHB60:
 1929 0d03 E8000000 		call	_Unwind_Resume
 1929      00
 1930              	.LEHE60:
 1931              	.L100:
 1932              	.LBB50:
 1933 0d08 4889C7   		movq	%rax, %rdi
 1934 0d0b E8000000 		call	__cxa_begin_catch
 1934      00
 1935 0d10 48898550 		movq	%rax, -432(%rbp)
 1935      FEFFFF
 1936 0d17 488B8550 		movq	-432(%rbp), %rax
 1936      FEFFFF
 1937 0d1e 488B00   		movq	(%rax), %rax
 1938 0d21 4883C010 		addq	$16, %rax
 1939 0d25 488B00   		movq	(%rax), %rax
 1940 0d28 488B9550 		movq	-432(%rbp), %rdx
 1940      FEFFFF
 1941 0d2f 4889D7   		movq	%rdx, %rdi
 1942 0d32 FFD0     		call	*%rax
 1943 0d34 4889C3   		movq	%rax, %rbx
 1944 0d37 488B8550 		movq	-432(%rbp), %rax
 1944      FEFFFF
 1945 0d3e 4889C7   		movq	%rax, %rdi
 1946              	.LEHB61:
 1947 0d41 E8000000 		call	_ZNK8UnitTest15AssertException10LineNumberEv
 1947      00
 1948 0d46 4189C4   		movl	%eax, %r12d
 1949 0d49 488B8550 		movq	-432(%rbp), %rax
 1949      FEFFFF
 1950 0d50 4889C7   		movq	%rax, %rdi
 1951 0d53 E8000000 		call	_ZNK8UnitTest15AssertException8FilenameEv
 1951      00
 1952              		.loc 3 68 0 discriminator 1
 1953 0d58 4889C1   		movq	%rax, %rcx
 1954 0d5b 488B8538 		movq	-456(%rbp), %rax
 1954      FEFFFF
 1955 0d62 488B5008 		movq	8(%rax), %rdx
 1956 0d66 488B8538 		movq	-456(%rbp), %rax
 1956      FEFFFF
 1957 0d6d 488B7010 		movq	16(%rax), %rsi
 1958 0d71 488D8560 		leaq	-416(%rbp), %rax
 1958      FEFFFF
 1959 0d78 4589E0   		movl	%r12d, %r8d
 1960 0d7b 4889C7   		movq	%rax, %rdi
 1961 0d7e E8000000 		call	_ZN8UnitTest11TestDetailsC1EPKcS2_S2_i
 1961      00
 1962              		.loc 3 68 0 discriminator 3
 1963 0d83 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 1963      00
 1964 0d88 488B00   		movq	(%rax), %rax
 1965 0d8b 488D8D60 		leaq	-416(%rbp), %rcx
 1965      FEFFFF
 1966 0d92 4889DA   		movq	%rbx, %rdx
 1967 0d95 4889CE   		movq	%rcx, %rsi
 1968 0d98 4889C7   		movq	%rax, %rdi
 1969 0d9b E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 1969      00
 1970              	.LEHE61:
 1971              		.loc 3 68 0 discriminator 1
 1972 0da0 E8000000 		call	__cxa_end_catch
 1972      00
 1973              	.LBE50:
 1974              	.LBE52:
 1975 0da5 E9430100 		jmp	.L116
 1975      00
 1976              	.L101:
 1977              	.LBB53:
 1978              	.LBB51:
 1979              		.loc 3 68 0
 1980 0daa 4889C7   		movq	%rax, %rdi
 1981 0dad E8000000 		call	__cxa_begin_catch
 1981      00
 1982 0db2 48898558 		movq	%rax, -424(%rbp)
 1982      FEFFFF
 1983              	.LBB49:
 1984 0db9 488D8560 		leaq	-416(%rbp), %rax
 1984      FEFFFF
 1985 0dc0 4889C7   		movq	%rax, %rdi
 1986              	.LEHB62:
 1987 0dc3 E8000000 		call	_ZN8UnitTest15MemoryOutStreamC1Ev
 1987      00
 1988              	.LEHE62:
 1989              		.loc 3 68 0 discriminator 1
 1990 0dc8 488B8558 		movq	-424(%rbp), %rax
 1990      FEFFFF
 1991 0dcf 488B00   		movq	(%rax), %rax
 1992 0dd2 4883C010 		addq	$16, %rax
 1993 0dd6 488B00   		movq	(%rax), %rax
 1994 0dd9 488B9558 		movq	-424(%rbp), %rdx
 1994      FEFFFF
 1995 0de0 4889D7   		movq	%rdx, %rdi
 1996 0de3 FFD0     		call	*%rax
 1997 0de5 4889C3   		movq	%rax, %rbx
 1998 0de8 488D8560 		leaq	-416(%rbp), %rax
 1998      FEFFFF
 1999 0def BE000000 		movl	$.LC3, %esi
 1999      00
 2000 0df4 4889C7   		movq	%rax, %rdi
 2001              	.LEHB63:
 2002 0df7 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
 2002      00
 2003 0dfc 4889DE   		movq	%rbx, %rsi
 2004 0dff 4889C7   		movq	%rax, %rdi
 2005 0e02 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
 2005      00
 2006 0e07 488D8560 		leaq	-416(%rbp), %rax
 2006      FEFFFF
 2007 0e0e 4889C7   		movq	%rax, %rdi
 2008 0e11 E8000000 		call	_ZNK8UnitTest15MemoryOutStream7GetTextEv
 2008      00
 2009 0e16 4889C3   		movq	%rax, %rbx
 2010 0e19 488B8538 		movq	-456(%rbp), %rax
 2010      FEFFFF
 2011 0e20 4C8D6008 		leaq	8(%rax), %r12
 2012 0e24 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 2012      00
 2013 0e29 488B00   		movq	(%rax), %rax
 2014 0e2c 4889DA   		movq	%rbx, %rdx
 2015 0e2f 4C89E6   		movq	%r12, %rsi
 2016 0e32 4889C7   		movq	%rax, %rdi
 2017 0e35 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 2017      00
 2018              	.LEHE63:
 2019 0e3a 488D8560 		leaq	-416(%rbp), %rax
 2019      FEFFFF
 2020 0e41 4889C7   		movq	%rax, %rdi
 2021              	.LEHB64:
 2022 0e44 E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 2022      00
 2023              	.LEHE64:
 2024              	.LBE49:
 2025              		.loc 3 68 0
 2026 0e49 E8000000 		call	__cxa_end_catch
 2026      00
 2027              	.LBE51:
 2028              	.LBE53:
 2029 0e4e E99A0000 		jmp	.L116
 2029      00
 2030              	.L115:
 2031              	.LBB54:
 2032 0e53 4889C7   		movq	%rax, %rdi
 2033 0e56 E8000000 		call	__cxa_begin_catch
 2033      00
 2034 0e5b 80BD4FFE 		cmpb	$0, -433(%rbp)
 2034      FFFF00
 2035 0e62 7443     		je	.L107
 2036              		.loc 3 68 0 discriminator 1
 2037 0e64 488B8538 		movq	-456(%rbp), %rax
 2037      FEFFFF
 2038 0e6b 488D4808 		leaq	8(%rax), %rcx
 2039 0e6f 488D8560 		leaq	-416(%rbp), %rax
 2039      FEFFFF
 2040 0e76 BA440000 		movl	$68, %edx
 2040      00
 2041 0e7b 4889CE   		movq	%rcx, %rsi
 2042 0e7e 4889C7   		movq	%rax, %rdi
 2043              	.LEHB65:
 2044 0e81 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 2044      00
 2045 0e86 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 2045      00
 2046 0e8b 488B00   		movq	(%rax), %rax
 2047 0e8e 488D8D60 		leaq	-416(%rbp), %rcx
 2047      FEFFFF
 2048 0e95 BA000000 		movl	$.LC4, %edx
 2048      00
 2049 0e9a 4889CE   		movq	%rcx, %rsi
 2050 0e9d 4889C7   		movq	%rax, %rdi
 2051 0ea0 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 2051      00
 2052 0ea5 EB41     		jmp	.L108
 2053              	.L107:
 2054              		.loc 3 68 0 discriminator 2
 2055 0ea7 488B8538 		movq	-456(%rbp), %rax
 2055      FEFFFF
 2056 0eae 488D4808 		leaq	8(%rax), %rcx
 2057 0eb2 488D8560 		leaq	-416(%rbp), %rax
 2057      FEFFFF
 2058 0eb9 BA440000 		movl	$68, %edx
 2058      00
 2059 0ebe 4889CE   		movq	%rcx, %rsi
 2060 0ec1 4889C7   		movq	%rax, %rdi
 2061 0ec4 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 2061      00
 2062              		.loc 3 68 0 discriminator 1
 2063 0ec9 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 2063      00
 2064 0ece 488B00   		movq	(%rax), %rax
 2065 0ed1 488D8D60 		leaq	-416(%rbp), %rcx
 2065      FEFFFF
 2066 0ed8 BA000000 		movl	$.LC5, %edx
 2066      00
 2067 0edd 4889CE   		movq	%rcx, %rsi
 2068 0ee0 4889C7   		movq	%rax, %rdi
 2069 0ee3 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 2069      00
 2070              	.LEHE65:
 2071              	.L108:
 2072              	.LEHB66:
 2073 0ee8 E8000000 		call	__cxa_end_catch
 2073      00
 2074              	.LEHE66:
 2075              	.L116:
 2076              	.LBE54:
 2077              		.loc 3 68 0
 2078 0eed 90       		nop
 2079 0eee 4881C4C0 		addq	$448, %rsp
 2079      010000
 2080 0ef5 5B       		popq	%rbx
 2081 0ef6 415C     		popq	%r12
 2082 0ef8 5D       		popq	%rbp
 2083              		.cfi_def_cfa 7, 8
 2084 0ef9 C3       		ret
 2085              		.cfi_endproc
 2086              	.LFE1314:
 2087              		.section	.gcc_except_table
 2088              		.align 4
 2089              	.LLSDA1314:
 2090 0168 FF       		.byte	0xff
 2091 0169 03       		.byte	0x3
 2092 016a 59       		.uleb128 .LLSDATT1314-.LLSDATTD1314
 2093              	.LLSDATTD1314:
 2094 016b 01       		.byte	0x1
 2095 016c 40       		.uleb128 .LLSDACSE1314-.LLSDACSB1314
 2096              	.LLSDACSB1314:
 2097 016d 34       		.uleb128 .LEHB55-.LFB1314
 2098 016e 05       		.uleb128 .LEHE55-.LEHB55
 2099 016f 8E01     		.uleb128 .L109-.LFB1314
 2100 0171 05       		.uleb128 0x5
 2101 0172 58       		.uleb128 .LEHB56-.LFB1314
 2102 0173 05       		.uleb128 .LEHE56-.LEHB56
 2103 0174 71       		.uleb128 .L110-.LFB1314
 2104 0175 07       		.uleb128 0x7
 2105 0176 67       		.uleb128 .LEHB57-.LFB1314
 2106 0177 05       		.uleb128 .LEHE57-.LEHB57
 2107 0178 8E01     		.uleb128 .L109-.LFB1314
 2108 017a 05       		.uleb128 0x5
 2109 017b B101     		.uleb128 .LEHB58-.LFB1314
 2110 017d 05       		.uleb128 .LEHE58-.LEHB58
 2111 017e 00       		.uleb128 0
 2112 017f 00       		.uleb128 0
 2113 0180 D801     		.uleb128 .LEHB59-.LFB1314
 2114 0182 05       		.uleb128 .LEHE59-.LEHB59
 2115 0183 00       		.uleb128 0
 2116 0184 00       		.uleb128 0
 2117 0185 EB01     		.uleb128 .LEHB60-.LFB1314
 2118 0187 05       		.uleb128 .LEHE60-.LEHB60
 2119 0188 00       		.uleb128 0
 2120 0189 00       		.uleb128 0
 2121 018a A902     		.uleb128 .LEHB61-.LFB1314
 2122 018c 5F       		.uleb128 .LEHE61-.LEHB61
 2123 018d A301     		.uleb128 .L111-.LFB1314
 2124 018f 00       		.uleb128 0
 2125 0190 AB03     		.uleb128 .LEHB62-.LFB1314
 2126 0192 05       		.uleb128 .LEHE62-.LEHB62
 2127 0193 CA01     		.uleb128 .L113-.LFB1314
 2128 0195 00       		.uleb128 0
 2129 0196 DF03     		.uleb128 .LEHB63-.LFB1314
 2130 0198 43       		.uleb128 .LEHE63-.LEHB63
 2131 0199 B601     		.uleb128 .L112-.LFB1314
 2132 019b 00       		.uleb128 0
 2133 019c AC04     		.uleb128 .LEHB64-.LFB1314
 2134 019e 05       		.uleb128 .LEHE64-.LEHB64
 2135 019f CA01     		.uleb128 .L113-.LFB1314
 2136 01a1 00       		.uleb128 0
 2137 01a2 E904     		.uleb128 .LEHB65-.LFB1314
 2138 01a4 67       		.uleb128 .LEHE65-.LEHB65
 2139 01a5 DD01     		.uleb128 .L114-.LFB1314
 2140 01a7 00       		.uleb128 0
 2141 01a8 D005     		.uleb128 .LEHB66-.LFB1314
 2142 01aa 05       		.uleb128 .LEHE66-.LEHB66
 2143 01ab 00       		.uleb128 0
 2144 01ac 00       		.uleb128 0
 2145              	.LLSDACSE1314:
 2146 01ad 03       		.byte	0x3
 2147 01ae 00       		.byte	0
 2148 01af 02       		.byte	0x2
 2149 01b0 7D       		.byte	0x7d
 2150 01b1 01       		.byte	0x1
 2151 01b2 7D       		.byte	0x7d
 2152 01b3 00       		.byte	0
 2153 01b4 7D       		.byte	0x7d
 2154 01b5 000000   		.align 4
 2155 01b8 00000000 		.long	0
 2156              	
 2157 01bc 00000000 		.long	_ZTISt9exception
 2158 01c0 00000000 		.long	_ZTIN8UnitTest15AssertExceptionE
 2159              	.LLSDATT1314:
 2160              		.text
 2162              		.section	.rodata
 2163 0335 000000   		.align 8
 2164              	.LC22:
 2165 0338 3C3F786D 		.string	"<?xml version=\"1.0\"?><unittest-results tests=\"0\" failedtests=\"0\" failures=\"0\" tim
 2165      6C207665 
 2165      7273696F 
 2165      6E3D2231 
 2165      2E30223F 
 2166              		.text
 2167              		.align 2
 2169              	_ZN12_GLOBAL__N_152XmlTestReporterFixtureEmptyReportSummaryFormatHelper7RunImplEv:
 2170              	.LFB1318:
  69:TestXmlTestReporter.cpp **** {
 2171              		.loc 3 69 0 is_stmt 1
 2172              		.cfi_startproc
 2173              		.cfi_personality 0x3,__gxx_personality_v0
 2174              		.cfi_lsda 0x3,.LLSDA1318
 2175 0efa 55       		pushq	%rbp
 2176              		.cfi_def_cfa_offset 16
 2177              		.cfi_offset 6, -16
 2178 0efb 4889E5   		movq	%rsp, %rbp
 2179              		.cfi_def_cfa_register 6
 2180 0efe 53       		pushq	%rbx
 2181 0eff 4883EC48 		subq	$72, %rsp
 2182              		.cfi_offset 3, -24
 2183 0f03 48897DB8 		movq	%rdi, -72(%rbp)
 2184              	.LBB55:
  70:TestXmlTestReporter.cpp ****     reporter.ReportSummary(0, 0, 0, 0.1f);
 2185              		.loc 3 70 0
 2186 0f07 488B45B8 		movq	-72(%rbp), %rax
 2187 0f0b 48056001 		addq	$352, %rax
 2187      0000
 2188 0f11 F30F1005 		movss	.LC10(%rip), %xmm0
 2188      00000000 
 2189 0f19 B9000000 		movl	$0, %ecx
 2189      00
 2190 0f1e BA000000 		movl	$0, %edx
 2190      00
 2191 0f23 BE000000 		movl	$0, %esi
 2191      00
 2192 0f28 4889C7   		movq	%rax, %rdi
 2193              	.LEHB67:
 2194 0f2b E8000000 		call	_ZN8UnitTest15XmlTestReporter13ReportSummaryEiiif
 2194      00
 2195              	.LEHE67:
  71:TestXmlTestReporter.cpp **** 
  72:TestXmlTestReporter.cpp ****     const char *expected =
  73:TestXmlTestReporter.cpp **** "<?xml version=\"1.0\"?>"
  74:TestXmlTestReporter.cpp **** "<unittest-results tests=\"0\" failedtests=\"0\" failures=\"0\" time=\"0.1\">"
  75:TestXmlTestReporter.cpp **** "</unittest-results>";
 2196              		.loc 3 75 0
 2197 0f30 48C745C8 		movq	$.LC22, -56(%rbp)
 2197      00000000 
 2198              	.LEHB68:
  76:TestXmlTestReporter.cpp **** 
  77:TestXmlTestReporter.cpp ****     CHECK_EQUAL(expected, output.str());
 2199              		.loc 3 77 0
 2200 0f38 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 2200      00
 2201 0f3d 488B08   		movq	(%rax), %rcx
 2202 0f40 488D45D0 		leaq	-48(%rbp), %rax
 2203 0f44 BA4D0000 		movl	$77, %edx
 2203      00
 2204 0f49 4889CE   		movq	%rcx, %rsi
 2205 0f4c 4889C7   		movq	%rax, %rdi
 2206 0f4f E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 2206      00
 2207              		.loc 3 77 0 is_stmt 0 discriminator 1
 2208 0f54 488B55B8 		movq	-72(%rbp), %rdx
 2209 0f58 488D45C0 		leaq	-64(%rbp), %rax
 2210 0f5c 4889D6   		movq	%rdx, %rsi
 2211 0f5f 4889C7   		movq	%rax, %rdi
 2212 0f62 E8000000 		call	_ZNKSt19basic_ostringstreamIcSt11char_traitsIcESaIcEE3strEv
 2212      00
 2213              	.LEHE68:
 2214              	.LEHB69:
 2215              		.loc 3 77 0 discriminator 2
 2216 0f67 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 2216      00
 2217 0f6c 488B00   		movq	(%rax), %rax
 2218 0f6f 488D4DD0 		leaq	-48(%rbp), %rcx
 2219 0f73 488D55C0 		leaq	-64(%rbp), %rdx
 2220 0f77 488D75C8 		leaq	-56(%rbp), %rsi
 2221 0f7b 4889C7   		movq	%rax, %rdi
 2222 0f7e E8000000 		call	_ZN8UnitTest10CheckEqualIPKcSsEEvRNS_11TestResultsERKT_RKT0_RKNS_11TestDetailsE
 2222      00
 2223              	.LEHE69:
 2224              		.loc 3 77 0 discriminator 1
 2225 0f83 488D45C0 		leaq	-64(%rbp), %rax
 2226 0f87 4889C7   		movq	%rax, %rdi
 2227              	.LEHB70:
 2228 0f8a E8000000 		call	_ZNSsD1Ev
 2228      00
 2229              	.LEHE70:
 2230              	.LBE55:
  78:TestXmlTestReporter.cpp **** }
 2231              		.loc 3 78 0 is_stmt 1
 2232 0f8f EB6C     		jmp	.L125
 2233              	.L123:
 2234 0f91 4889C3   		movq	%rax, %rbx
 2235              	.LBB56:
  77:TestXmlTestReporter.cpp **** }
 2236              		.loc 3 77 0
 2237 0f94 488D45C0 		leaq	-64(%rbp), %rax
 2238 0f98 4889C7   		movq	%rax, %rdi
 2239 0f9b E8000000 		call	_ZNSsD1Ev
 2239      00
 2240 0fa0 4889D8   		movq	%rbx, %rax
 2241 0fa3 EB13     		jmp	.L119
 2242              	.L124:
 2243 0fa5 4889C3   		movq	%rax, %rbx
 2244 0fa8 E8000000 		call	__cxa_end_catch
 2244      00
 2245 0fad 4889D8   		movq	%rbx, %rax
 2246 0fb0 4889C7   		movq	%rax, %rdi
 2247              	.LEHB71:
 2248 0fb3 E8000000 		call	_Unwind_Resume
 2248      00
 2249              	.LEHE71:
 2250              	.L122:
 2251              	.L119:
 2252 0fb8 4889C7   		movq	%rax, %rdi
 2253 0fbb E8000000 		call	__cxa_begin_catch
 2253      00
 2254              	.LEHB72:
 2255 0fc0 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 2255      00
 2256 0fc5 488B08   		movq	(%rax), %rcx
 2257 0fc8 488D45D0 		leaq	-48(%rbp), %rax
 2258 0fcc BA4D0000 		movl	$77, %edx
 2258      00
 2259 0fd1 4889CE   		movq	%rcx, %rsi
 2260 0fd4 4889C7   		movq	%rax, %rdi
 2261 0fd7 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 2261      00
  77:TestXmlTestReporter.cpp **** }
 2262              		.loc 3 77 0 is_stmt 0 discriminator 1
 2263 0fdc E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 2263      00
 2264 0fe1 488B00   		movq	(%rax), %rax
 2265 0fe4 488D4DD0 		leaq	-48(%rbp), %rcx
 2266 0fe8 BA000000 		movl	$.LC12, %edx
 2266      00
 2267 0fed 4889CE   		movq	%rcx, %rsi
 2268 0ff0 4889C7   		movq	%rax, %rdi
 2269 0ff3 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 2269      00
 2270              	.LEHE72:
 2271              	.LEHB73:
 2272 0ff8 E8000000 		call	__cxa_end_catch
 2272      00
 2273              	.LEHE73:
 2274              	.L125:
 2275              	.LBE56:
 2276              		.loc 3 78 0 is_stmt 1
 2277 0ffd 90       		nop
 2278 0ffe 4883C448 		addq	$72, %rsp
 2279 1002 5B       		popq	%rbx
 2280 1003 5D       		popq	%rbp
 2281              		.cfi_def_cfa 7, 8
 2282 1004 C3       		ret
 2283              		.cfi_endproc
 2284              	.LFE1318:
 2285              		.section	.gcc_except_table
 2286              		.align 4
 2287              	.LLSDA1318:
 2288 01c4 FF       		.byte	0xff
 2289 01c5 03       		.byte	0x3
 2290 01c6 31       		.uleb128 .LLSDATT1318-.LLSDATTD1318
 2291              	.LLSDATTD1318:
 2292 01c7 01       		.byte	0x1
 2293 01c8 24       		.uleb128 .LLSDACSE1318-.LLSDACSB1318
 2294              	.LLSDACSB1318:
 2295 01c9 31       		.uleb128 .LEHB67-.LFB1318
 2296 01ca 05       		.uleb128 .LEHE67-.LEHB67
 2297 01cb 00       		.uleb128 0
 2298 01cc 00       		.uleb128 0
 2299 01cd 3E       		.uleb128 .LEHB68-.LFB1318
 2300 01ce 2F       		.uleb128 .LEHE68-.LEHB68
 2301 01cf BE01     		.uleb128 .L122-.LFB1318
 2302 01d1 01       		.uleb128 0x1
 2303 01d2 6D       		.uleb128 .LEHB69-.LFB1318
 2304 01d3 1C       		.uleb128 .LEHE69-.LEHB69
 2305 01d4 9701     		.uleb128 .L123-.LFB1318
 2306 01d6 03       		.uleb128 0x3
 2307 01d7 9001     		.uleb128 .LEHB70-.LFB1318
 2308 01d9 05       		.uleb128 .LEHE70-.LEHB70
 2309 01da BE01     		.uleb128 .L122-.LFB1318
 2310 01dc 01       		.uleb128 0x1
 2311 01dd B901     		.uleb128 .LEHB71-.LFB1318
 2312 01df 05       		.uleb128 .LEHE71-.LEHB71
 2313 01e0 00       		.uleb128 0
 2314 01e1 00       		.uleb128 0
 2315 01e2 C601     		.uleb128 .LEHB72-.LFB1318
 2316 01e4 38       		.uleb128 .LEHE72-.LEHB72
 2317 01e5 AB01     		.uleb128 .L124-.LFB1318
 2318 01e7 00       		.uleb128 0
 2319 01e8 FE01     		.uleb128 .LEHB73-.LFB1318
 2320 01ea 05       		.uleb128 .LEHE73-.LEHB73
 2321 01eb 00       		.uleb128 0
 2322 01ec 00       		.uleb128 0
 2323              	.LLSDACSE1318:
 2324 01ed 01       		.byte	0x1
 2325 01ee 00       		.byte	0
 2326 01ef 00       		.byte	0
 2327 01f0 7D       		.byte	0x7d
 2328 01f1 000000   		.align 4
 2329 01f4 00000000 		.long	0
 2330              	
 2331              	.LLSDATT1318:
 2332              		.text
 2334 1005 90       		.align 2
 2336              	_ZN12_GLOBAL__N_167XmlTestReporterFixtureSingleSuccessfulTestReportSummaryFormatHelperC2ERKN8UnitTe
 2337              	.LFB1320:
  79:TestXmlTestReporter.cpp **** 
  80:TestXmlTestReporter.cpp **** TEST_FIXTURE(XmlTestReporterFixture, SingleSuccessfulTestReportSummaryFormat)
 2338              		.loc 3 80 0
 2339              		.cfi_startproc
 2340 1006 55       		pushq	%rbp
 2341              		.cfi_def_cfa_offset 16
 2342              		.cfi_offset 6, -16
 2343 1007 4889E5   		movq	%rsp, %rbp
 2344              		.cfi_def_cfa_register 6
 2345 100a 4883EC10 		subq	$16, %rsp
 2346 100e 48897DF8 		movq	%rdi, -8(%rbp)
 2347 1012 488975F0 		movq	%rsi, -16(%rbp)
 2348              	.LBB57:
 2349              		.loc 3 80 0
 2350 1016 488B45F8 		movq	-8(%rbp), %rax
 2351 101a 4889C7   		movq	%rax, %rdi
 2352 101d E8DEEFFF 		call	_ZN12_GLOBAL__N_122XmlTestReporterFixtureC2Ev
 2352      FF
 2353 1022 488B45F8 		movq	-8(%rbp), %rax
 2354 1026 488B55F0 		movq	-16(%rbp), %rdx
 2355 102a 48899088 		movq	%rdx, 392(%rax)
 2355      010000
 2356              	.LBE57:
 2357 1031 C9       		leave
 2358              		.cfi_def_cfa 7, 8
 2359 1032 C3       		ret
 2360              		.cfi_endproc
 2361              	.LFE1320:
 2363              		.set	_ZN12_GLOBAL__N_167XmlTestReporterFixtureSingleSuccessfulTestReportSummaryFormatHelperC1ERKN8
 2364              		.section	.rodata
 2365 03a5 000000   		.align 8
 2366              	.LC23:
 2367 03a8 53696E67 		.string	"SingleSuccessfulTestReportSummaryFormat"
 2367      6C655375 
 2367      63636573 
 2367      7366756C 
 2367      54657374 
 2368              		.text
 2369 1033 90       		.align 2
 2371              	_ZN12_GLOBAL__N_165TestXmlTestReporterFixtureSingleSuccessfulTestReportSummaryFormatC2Ev:
 2372              	.LFB1323:
 2373              		.loc 3 80 0
 2374              		.cfi_startproc
 2375 1034 55       		pushq	%rbp
 2376              		.cfi_def_cfa_offset 16
 2377              		.cfi_offset 6, -16
 2378 1035 4889E5   		movq	%rsp, %rbp
 2379              		.cfi_def_cfa_register 6
 2380 1038 4883EC10 		subq	$16, %rsp
 2381 103c 48897DF8 		movq	%rdi, -8(%rbp)
 2382              	.LBB58:
 2383              		.loc 3 80 0
 2384 1040 E8000000 		call	_ZN13UnitTestSuite12GetSuiteNameEv
 2384      00
 2385 1045 4889C2   		movq	%rax, %rdx
 2386 1048 488B45F8 		movq	-8(%rbp), %rax
 2387 104c 41B85000 		movl	$80, %r8d
 2387      0000
 2388 1052 B9000000 		movl	$.LC1, %ecx
 2388      00
 2389 1057 BE000000 		movl	$.LC23, %esi
 2389      00
 2390 105c 4889C7   		movq	%rax, %rdi
 2391 105f E8000000 		call	_ZN8UnitTest4TestC2EPKcS2_S2_i
 2391      00
 2392 1064 488B45F8 		movq	-8(%rbp), %rax
 2393 1068 48C70000 		movq	$_ZTVN12_GLOBAL__N_165TestXmlTestReporterFixtureSingleSuccessfulTestReportSummaryFormatE+16, 
 2393      000000
 2394              	.LBE58:
 2395 106f C9       		leave
 2396              		.cfi_def_cfa 7, 8
 2397 1070 C3       		ret
 2398              		.cfi_endproc
 2399              	.LFE1323:
 2401              		.set	_ZN12_GLOBAL__N_165TestXmlTestReporterFixtureSingleSuccessfulTestReportSummaryFormatC1Ev,_ZN1
 2402              		.local	_ZN12_GLOBAL__N_173testXmlTestReporterFixtureSingleSuccessfulTestReportSummaryFormatInstanc
 2403              		.comm	_ZN12_GLOBAL__N_173testXmlTestReporterFixtureSingleSuccessfulTestReportSummaryFormatInstance
 2404              		.local	_ZN12_GLOBAL__N_166adderXmlTestReporterFixtureSingleSuccessfulTestReportSummaryFormatE
 2405              		.comm	_ZN12_GLOBAL__N_166adderXmlTestReporterFixtureSingleSuccessfulTestReportSummaryFormatE,1,1
 2406 1071 90       		.align 2
 2408              	_ZN12_GLOBAL__N_167XmlTestReporterFixtureSingleSuccessfulTestReportSummaryFormatHelperD2Ev:
 2409              	.LFB1327:
 2410              		.loc 3 80 0
 2411              		.cfi_startproc
 2412 1072 55       		pushq	%rbp
 2413              		.cfi_def_cfa_offset 16
 2414              		.cfi_offset 6, -16
 2415 1073 4889E5   		movq	%rsp, %rbp
 2416              		.cfi_def_cfa_register 6
 2417 1076 4883EC10 		subq	$16, %rsp
 2418 107a 48897DF8 		movq	%rdi, -8(%rbp)
 2419              	.LBB59:
 2420              		.loc 3 80 0
 2421 107e 488B45F8 		movq	-8(%rbp), %rax
 2422 1082 4889C7   		movq	%rax, %rdi
 2423 1085 E8D2EFFF 		call	_ZN12_GLOBAL__N_122XmlTestReporterFixtureD2Ev
 2423      FF
 2424              	.LBE59:
 2425 108a C9       		leave
 2426              		.cfi_def_cfa 7, 8
 2427 108b C3       		ret
 2428              		.cfi_endproc
 2429              	.LFE1327:
 2431              		.set	_ZN12_GLOBAL__N_167XmlTestReporterFixtureSingleSuccessfulTestReportSummaryFormatHelperD1Ev,_Z
 2432              		.align 2
 2434              	_ZNK12_GLOBAL__N_165TestXmlTestReporterFixtureSingleSuccessfulTestReportSummaryFormat7RunImplEv:
 2435              	.LFB1325:
 2436              		.loc 3 80 0
 2437              		.cfi_startproc
 2438              		.cfi_personality 0x3,__gxx_personality_v0
 2439              		.cfi_lsda 0x3,.LLSDA1325
 2440 108c 55       		pushq	%rbp
 2441              		.cfi_def_cfa_offset 16
 2442              		.cfi_offset 6, -16
 2443 108d 4889E5   		movq	%rsp, %rbp
 2444              		.cfi_def_cfa_register 6
 2445 1090 4154     		pushq	%r12
 2446 1092 53       		pushq	%rbx
 2447 1093 4881ECC0 		subq	$448, %rsp
 2447      010000
 2448              		.cfi_offset 12, -24
 2449              		.cfi_offset 3, -32
 2450 109a 4889BD38 		movq	%rdi, -456(%rbp)
 2450      FEFFFF
 2451              	.LBB60:
 2452              		.loc 3 80 0
 2453 10a1 C6854FFE 		movb	$0, -433(%rbp)
 2453      FFFF00
 2454              	.LBB61:
 2455 10a8 488B8538 		movq	-456(%rbp), %rax
 2455      FEFFFF
 2456 10af 488D5008 		leaq	8(%rax), %rdx
 2457 10b3 488D8560 		leaq	-416(%rbp), %rax
 2457      FEFFFF
 2458 10ba 4889D6   		movq	%rdx, %rsi
 2459 10bd 4889C7   		movq	%rax, %rdi
 2460              	.LEHB74:
 2461 10c0 E841FFFF 		call	_ZN12_GLOBAL__N_167XmlTestReporterFixtureSingleSuccessfulTestReportSummaryFormatHelperC1ERKN8
 2461      FF
 2462              	.LEHE74:
 2463              		.loc 3 80 0 is_stmt 0 discriminator 1
 2464 10c5 C6854FFE 		movb	$1, -433(%rbp)
 2464      FFFF01
 2465 10cc 488B8538 		movq	-456(%rbp), %rax
 2465      FEFFFF
 2466 10d3 488D5008 		leaq	8(%rax), %rdx
 2467 10d7 488D8560 		leaq	-416(%rbp), %rax
 2467      FEFFFF
 2468 10de 4889D6   		movq	%rdx, %rsi
 2469 10e1 4889C7   		movq	%rax, %rdi
 2470              	.LEHB75:
 2471 10e4 E8052000 		call	_ZN8UnitTest11ExecuteTestIN12_GLOBAL__N_167XmlTestReporterFixtureSingleSuccessfulTestReportSu
 2471      00
 2472              	.LEHE75:
 2473 10e9 488D8560 		leaq	-416(%rbp), %rax
 2473      FEFFFF
 2474 10f0 4889C7   		movq	%rax, %rdi
 2475              	.LEHB76:
 2476 10f3 E87AFFFF 		call	_ZN12_GLOBAL__N_167XmlTestReporterFixtureSingleSuccessfulTestReportSummaryFormatHelperD1Ev
 2476      FF
 2477              	.LEHE76:
 2478              	.LBE61:
 2479              	.LBE60:
 2480              		.loc 3 80 0
 2481 10f8 E9640200 		jmp	.L150
 2481      00
 2482              	.L144:
 2483 10fd 4989C4   		movq	%rax, %r12
 2484 1100 4889D3   		movq	%rdx, %rbx
 2485              	.LBB69:
 2486              	.LBB62:
 2487 1103 488D8560 		leaq	-416(%rbp), %rax
 2487      FEFFFF
 2488 110a 4889C7   		movq	%rax, %rdi
 2489 110d E860FFFF 		call	_ZN12_GLOBAL__N_167XmlTestReporterFixtureSingleSuccessfulTestReportSummaryFormatHelperD1Ev
 2489      FF
 2490 1112 4C89E0   		movq	%r12, %rax
 2491 1115 4889DA   		movq	%rbx, %rdx
 2492 1118 EB00     		jmp	.L132
 2493              	.L143:
 2494              	.L132:
 2495 111a 4883FA01 		cmpq	$1, %rdx
 2496 111e 745C     		je	.L134
 2497 1120 4883FA02 		cmpq	$2, %rdx
 2498 1124 0F84F400 		je	.L135
 2498      0000
 2499 112a E9980100 		jmp	.L149
 2499      00
 2500              	.L145:
 2501 112f 4889C3   		movq	%rax, %rbx
 2502              	.LBE62:
 2503              	.LBB63:
 2504 1132 E8000000 		call	__cxa_end_catch
 2504      00
 2505 1137 4889D8   		movq	%rbx, %rax
 2506 113a 4889C7   		movq	%rax, %rdi
 2507              	.LEHB77:
 2508 113d E8000000 		call	_Unwind_Resume
 2508      00
 2509              	.LEHE77:
 2510              	.L146:
 2511 1142 4889C3   		movq	%rax, %rbx
 2512              	.LBE63:
 2513              	.LBB64:
 2514              	.LBB65:
 2515 1145 488D8560 		leaq	-416(%rbp), %rax
 2515      FEFFFF
 2516 114c 4889C7   		movq	%rax, %rdi
 2517 114f E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 2517      00
 2518 1154 EB03     		jmp	.L138
 2519              	.L147:
 2520 1156 4889C3   		movq	%rax, %rbx
 2521              	.L138:
 2522              	.LBE65:
 2523 1159 E8000000 		call	__cxa_end_catch
 2523      00
 2524 115e 4889D8   		movq	%rbx, %rax
 2525 1161 4889C7   		movq	%rax, %rdi
 2526              	.LEHB78:
 2527 1164 E8000000 		call	_Unwind_Resume
 2527      00
 2528              	.LEHE78:
 2529              	.L148:
 2530 1169 4889C3   		movq	%rax, %rbx
 2531              	.LBE64:
 2532 116c E8000000 		call	__cxa_end_catch
 2532      00
 2533 1171 4889D8   		movq	%rbx, %rax
 2534 1174 4889C7   		movq	%rax, %rdi
 2535              	.LEHB79:
 2536 1177 E8000000 		call	_Unwind_Resume
 2536      00
 2537              	.LEHE79:
 2538              	.L134:
 2539              	.LBB67:
 2540 117c 4889C7   		movq	%rax, %rdi
 2541 117f E8000000 		call	__cxa_begin_catch
 2541      00
 2542 1184 48898550 		movq	%rax, -432(%rbp)
 2542      FEFFFF
 2543 118b 488B8550 		movq	-432(%rbp), %rax
 2543      FEFFFF
 2544 1192 488B00   		movq	(%rax), %rax
 2545 1195 4883C010 		addq	$16, %rax
 2546 1199 488B00   		movq	(%rax), %rax
 2547 119c 488B9550 		movq	-432(%rbp), %rdx
 2547      FEFFFF
 2548 11a3 4889D7   		movq	%rdx, %rdi
 2549 11a6 FFD0     		call	*%rax
 2550 11a8 4889C3   		movq	%rax, %rbx
 2551 11ab 488B8550 		movq	-432(%rbp), %rax
 2551      FEFFFF
 2552 11b2 4889C7   		movq	%rax, %rdi
 2553              	.LEHB80:
 2554 11b5 E8000000 		call	_ZNK8UnitTest15AssertException10LineNumberEv
 2554      00
 2555 11ba 4189C4   		movl	%eax, %r12d
 2556 11bd 488B8550 		movq	-432(%rbp), %rax
 2556      FEFFFF
 2557 11c4 4889C7   		movq	%rax, %rdi
 2558 11c7 E8000000 		call	_ZNK8UnitTest15AssertException8FilenameEv
 2558      00
 2559              		.loc 3 80 0 discriminator 1
 2560 11cc 4889C1   		movq	%rax, %rcx
 2561 11cf 488B8538 		movq	-456(%rbp), %rax
 2561      FEFFFF
 2562 11d6 488B5008 		movq	8(%rax), %rdx
 2563 11da 488B8538 		movq	-456(%rbp), %rax
 2563      FEFFFF
 2564 11e1 488B7010 		movq	16(%rax), %rsi
 2565 11e5 488D8560 		leaq	-416(%rbp), %rax
 2565      FEFFFF
 2566 11ec 4589E0   		movl	%r12d, %r8d
 2567 11ef 4889C7   		movq	%rax, %rdi
 2568 11f2 E8000000 		call	_ZN8UnitTest11TestDetailsC1EPKcS2_S2_i
 2568      00
 2569              		.loc 3 80 0 discriminator 3
 2570 11f7 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 2570      00
 2571 11fc 488B00   		movq	(%rax), %rax
 2572 11ff 488D8D60 		leaq	-416(%rbp), %rcx
 2572      FEFFFF
 2573 1206 4889DA   		movq	%rbx, %rdx
 2574 1209 4889CE   		movq	%rcx, %rsi
 2575 120c 4889C7   		movq	%rax, %rdi
 2576 120f E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 2576      00
 2577              	.LEHE80:
 2578              		.loc 3 80 0 discriminator 1
 2579 1214 E8000000 		call	__cxa_end_catch
 2579      00
 2580              	.LBE67:
 2581              	.LBE69:
 2582 1219 E9430100 		jmp	.L150
 2582      00
 2583              	.L135:
 2584              	.LBB70:
 2585              	.LBB68:
 2586              		.loc 3 80 0
 2587 121e 4889C7   		movq	%rax, %rdi
 2588 1221 E8000000 		call	__cxa_begin_catch
 2588      00
 2589 1226 48898558 		movq	%rax, -424(%rbp)
 2589      FEFFFF
 2590              	.LBB66:
 2591 122d 488D8560 		leaq	-416(%rbp), %rax
 2591      FEFFFF
 2592 1234 4889C7   		movq	%rax, %rdi
 2593              	.LEHB81:
 2594 1237 E8000000 		call	_ZN8UnitTest15MemoryOutStreamC1Ev
 2594      00
 2595              	.LEHE81:
 2596              		.loc 3 80 0 discriminator 1
 2597 123c 488B8558 		movq	-424(%rbp), %rax
 2597      FEFFFF
 2598 1243 488B00   		movq	(%rax), %rax
 2599 1246 4883C010 		addq	$16, %rax
 2600 124a 488B00   		movq	(%rax), %rax
 2601 124d 488B9558 		movq	-424(%rbp), %rdx
 2601      FEFFFF
 2602 1254 4889D7   		movq	%rdx, %rdi
 2603 1257 FFD0     		call	*%rax
 2604 1259 4889C3   		movq	%rax, %rbx
 2605 125c 488D8560 		leaq	-416(%rbp), %rax
 2605      FEFFFF
 2606 1263 BE000000 		movl	$.LC3, %esi
 2606      00
 2607 1268 4889C7   		movq	%rax, %rdi
 2608              	.LEHB82:
 2609 126b E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
 2609      00
 2610 1270 4889DE   		movq	%rbx, %rsi
 2611 1273 4889C7   		movq	%rax, %rdi
 2612 1276 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
 2612      00
 2613 127b 488D8560 		leaq	-416(%rbp), %rax
 2613      FEFFFF
 2614 1282 4889C7   		movq	%rax, %rdi
 2615 1285 E8000000 		call	_ZNK8UnitTest15MemoryOutStream7GetTextEv
 2615      00
 2616 128a 4889C3   		movq	%rax, %rbx
 2617 128d 488B8538 		movq	-456(%rbp), %rax
 2617      FEFFFF
 2618 1294 4C8D6008 		leaq	8(%rax), %r12
 2619 1298 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 2619      00
 2620 129d 488B00   		movq	(%rax), %rax
 2621 12a0 4889DA   		movq	%rbx, %rdx
 2622 12a3 4C89E6   		movq	%r12, %rsi
 2623 12a6 4889C7   		movq	%rax, %rdi
 2624 12a9 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 2624      00
 2625              	.LEHE82:
 2626 12ae 488D8560 		leaq	-416(%rbp), %rax
 2626      FEFFFF
 2627 12b5 4889C7   		movq	%rax, %rdi
 2628              	.LEHB83:
 2629 12b8 E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 2629      00
 2630              	.LEHE83:
 2631              	.LBE66:
 2632              		.loc 3 80 0
 2633 12bd E8000000 		call	__cxa_end_catch
 2633      00
 2634              	.LBE68:
 2635              	.LBE70:
 2636 12c2 E99A0000 		jmp	.L150
 2636      00
 2637              	.L149:
 2638              	.LBB71:
 2639 12c7 4889C7   		movq	%rax, %rdi
 2640 12ca E8000000 		call	__cxa_begin_catch
 2640      00
 2641 12cf 80BD4FFE 		cmpb	$0, -433(%rbp)
 2641      FFFF00
 2642 12d6 7443     		je	.L141
 2643              		.loc 3 80 0 discriminator 1
 2644 12d8 488B8538 		movq	-456(%rbp), %rax
 2644      FEFFFF
 2645 12df 488D4808 		leaq	8(%rax), %rcx
 2646 12e3 488D8560 		leaq	-416(%rbp), %rax
 2646      FEFFFF
 2647 12ea BA500000 		movl	$80, %edx
 2647      00
 2648 12ef 4889CE   		movq	%rcx, %rsi
 2649 12f2 4889C7   		movq	%rax, %rdi
 2650              	.LEHB84:
 2651 12f5 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 2651      00
 2652 12fa E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 2652      00
 2653 12ff 488B00   		movq	(%rax), %rax
 2654 1302 488D8D60 		leaq	-416(%rbp), %rcx
 2654      FEFFFF
 2655 1309 BA000000 		movl	$.LC4, %edx
 2655      00
 2656 130e 4889CE   		movq	%rcx, %rsi
 2657 1311 4889C7   		movq	%rax, %rdi
 2658 1314 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 2658      00
 2659 1319 EB41     		jmp	.L142
 2660              	.L141:
 2661              		.loc 3 80 0 discriminator 2
 2662 131b 488B8538 		movq	-456(%rbp), %rax
 2662      FEFFFF
 2663 1322 488D4808 		leaq	8(%rax), %rcx
 2664 1326 488D8560 		leaq	-416(%rbp), %rax
 2664      FEFFFF
 2665 132d BA500000 		movl	$80, %edx
 2665      00
 2666 1332 4889CE   		movq	%rcx, %rsi
 2667 1335 4889C7   		movq	%rax, %rdi
 2668 1338 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 2668      00
 2669              		.loc 3 80 0 discriminator 1
 2670 133d E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 2670      00
 2671 1342 488B00   		movq	(%rax), %rax
 2672 1345 488D8D60 		leaq	-416(%rbp), %rcx
 2672      FEFFFF
 2673 134c BA000000 		movl	$.LC5, %edx
 2673      00
 2674 1351 4889CE   		movq	%rcx, %rsi
 2675 1354 4889C7   		movq	%rax, %rdi
 2676 1357 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 2676      00
 2677              	.LEHE84:
 2678              	.L142:
 2679              	.LEHB85:
 2680 135c E8000000 		call	__cxa_end_catch
 2680      00
 2681              	.LEHE85:
 2682              	.L150:
 2683              	.LBE71:
 2684              		.loc 3 80 0
 2685 1361 90       		nop
 2686 1362 4881C4C0 		addq	$448, %rsp
 2686      010000
 2687 1369 5B       		popq	%rbx
 2688 136a 415C     		popq	%r12
 2689 136c 5D       		popq	%rbp
 2690              		.cfi_def_cfa 7, 8
 2691 136d C3       		ret
 2692              		.cfi_endproc
 2693              	.LFE1325:
 2694              		.section	.gcc_except_table
 2695              		.align 4
 2696              	.LLSDA1325:
 2697 01f8 FF       		.byte	0xff
 2698 01f9 03       		.byte	0x3
 2699 01fa 59       		.uleb128 .LLSDATT1325-.LLSDATTD1325
 2700              	.LLSDATTD1325:
 2701 01fb 01       		.byte	0x1
 2702 01fc 40       		.uleb128 .LLSDACSE1325-.LLSDACSB1325
 2703              	.LLSDACSB1325:
 2704 01fd 34       		.uleb128 .LEHB74-.LFB1325
 2705 01fe 05       		.uleb128 .LEHE74-.LEHB74
 2706 01ff 8E01     		.uleb128 .L143-.LFB1325
 2707 0201 05       		.uleb128 0x5
 2708 0202 58       		.uleb128 .LEHB75-.LFB1325
 2709 0203 05       		.uleb128 .LEHE75-.LEHB75
 2710 0204 71       		.uleb128 .L144-.LFB1325
 2711 0205 07       		.uleb128 0x7
 2712 0206 67       		.uleb128 .LEHB76-.LFB1325
 2713 0207 05       		.uleb128 .LEHE76-.LEHB76
 2714 0208 8E01     		.uleb128 .L143-.LFB1325
 2715 020a 05       		.uleb128 0x5
 2716 020b B101     		.uleb128 .LEHB77-.LFB1325
 2717 020d 05       		.uleb128 .LEHE77-.LEHB77
 2718 020e 00       		.uleb128 0
 2719 020f 00       		.uleb128 0
 2720 0210 D801     		.uleb128 .LEHB78-.LFB1325
 2721 0212 05       		.uleb128 .LEHE78-.LEHB78
 2722 0213 00       		.uleb128 0
 2723 0214 00       		.uleb128 0
 2724 0215 EB01     		.uleb128 .LEHB79-.LFB1325
 2725 0217 05       		.uleb128 .LEHE79-.LEHB79
 2726 0218 00       		.uleb128 0
 2727 0219 00       		.uleb128 0
 2728 021a A902     		.uleb128 .LEHB80-.LFB1325
 2729 021c 5F       		.uleb128 .LEHE80-.LEHB80
 2730 021d A301     		.uleb128 .L145-.LFB1325
 2731 021f 00       		.uleb128 0
 2732 0220 AB03     		.uleb128 .LEHB81-.LFB1325
 2733 0222 05       		.uleb128 .LEHE81-.LEHB81
 2734 0223 CA01     		.uleb128 .L147-.LFB1325
 2735 0225 00       		.uleb128 0
 2736 0226 DF03     		.uleb128 .LEHB82-.LFB1325
 2737 0228 43       		.uleb128 .LEHE82-.LEHB82
 2738 0229 B601     		.uleb128 .L146-.LFB1325
 2739 022b 00       		.uleb128 0
 2740 022c AC04     		.uleb128 .LEHB83-.LFB1325
 2741 022e 05       		.uleb128 .LEHE83-.LEHB83
 2742 022f CA01     		.uleb128 .L147-.LFB1325
 2743 0231 00       		.uleb128 0
 2744 0232 E904     		.uleb128 .LEHB84-.LFB1325
 2745 0234 67       		.uleb128 .LEHE84-.LEHB84
 2746 0235 DD01     		.uleb128 .L148-.LFB1325
 2747 0237 00       		.uleb128 0
 2748 0238 D005     		.uleb128 .LEHB85-.LFB1325
 2749 023a 05       		.uleb128 .LEHE85-.LEHB85
 2750 023b 00       		.uleb128 0
 2751 023c 00       		.uleb128 0
 2752              	.LLSDACSE1325:
 2753 023d 03       		.byte	0x3
 2754 023e 00       		.byte	0
 2755 023f 02       		.byte	0x2
 2756 0240 7D       		.byte	0x7d
 2757 0241 01       		.byte	0x1
 2758 0242 7D       		.byte	0x7d
 2759 0243 00       		.byte	0
 2760 0244 7D       		.byte	0x7d
 2761 0245 000000   		.align 4
 2762 0248 00000000 		.long	0
 2763              	
 2764 024c 00000000 		.long	_ZTISt9exception
 2765 0250 00000000 		.long	_ZTIN8UnitTest15AssertExceptionE
 2766              	.LLSDATT1325:
 2767              		.text
 2769              		.section	.rodata
 2770              		.align 8
 2771              	.LC24:
 2772 03d0 3C3F786D 		.string	"<?xml version=\"1.0\"?><unittest-results tests=\"1\" failedtests=\"0\" failures=\"0\" tim
 2772      6C207665 
 2772      7273696F 
 2772      6E3D2231 
 2772      2E30223F 
 2773              		.text
 2774              		.align 2
 2776              	_ZN12_GLOBAL__N_167XmlTestReporterFixtureSingleSuccessfulTestReportSummaryFormatHelper7RunImplEv:
 2777              	.LFB1329:
  81:TestXmlTestReporter.cpp **** {
 2778              		.loc 3 81 0 is_stmt 1
 2779              		.cfi_startproc
 2780              		.cfi_personality 0x3,__gxx_personality_v0
 2781              		.cfi_lsda 0x3,.LLSDA1329
 2782 136e 55       		pushq	%rbp
 2783              		.cfi_def_cfa_offset 16
 2784              		.cfi_offset 6, -16
 2785 136f 4889E5   		movq	%rsp, %rbp
 2786              		.cfi_def_cfa_register 6
 2787 1372 53       		pushq	%rbx
 2788 1373 4883EC68 		subq	$104, %rsp
 2789              		.cfi_offset 3, -24
 2790 1377 48897D98 		movq	%rdi, -104(%rbp)
 2791              	.LBB72:
  82:TestXmlTestReporter.cpp ****     TestDetails const details("TestName", "DefaultSuite", "", 0);
 2792              		.loc 3 82 0
 2793 137b 488D45B0 		leaq	-80(%rbp), %rax
 2794 137f 41B80000 		movl	$0, %r8d
 2794      0000
 2795 1385 B9000000 		movl	$.LC14, %ecx
 2795      00
 2796 138a BA000000 		movl	$.LC0, %edx
 2796      00
 2797 138f BE000000 		movl	$.LC8, %esi
 2797      00
 2798 1394 4889C7   		movq	%rax, %rdi
 2799              	.LEHB86:
 2800 1397 E8000000 		call	_ZN8UnitTest11TestDetailsC1EPKcS2_S2_i
 2800      00
  83:TestXmlTestReporter.cpp **** 
  84:TestXmlTestReporter.cpp ****     reporter.ReportTestStart(details);
 2801              		.loc 3 84 0
 2802 139c 488B4598 		movq	-104(%rbp), %rax
 2803 13a0 488D9060 		leaq	352(%rax), %rdx
 2803      010000
 2804 13a7 488D45B0 		leaq	-80(%rbp), %rax
 2805 13ab 4889C6   		movq	%rax, %rsi
 2806 13ae 4889D7   		movq	%rdx, %rdi
 2807 13b1 E8000000 		call	_ZN8UnitTest20DeferredTestReporter15ReportTestStartERKNS_11TestDetailsE
 2807      00
  85:TestXmlTestReporter.cpp ****     reporter.ReportSummary(1, 0, 0, 0.1f);
 2808              		.loc 3 85 0
 2809 13b6 488B4598 		movq	-104(%rbp), %rax
 2810 13ba 48056001 		addq	$352, %rax
 2810      0000
 2811 13c0 F30F1005 		movss	.LC10(%rip), %xmm0
 2811      00000000 
 2812 13c8 B9000000 		movl	$0, %ecx
 2812      00
 2813 13cd BA000000 		movl	$0, %edx
 2813      00
 2814 13d2 BE010000 		movl	$1, %esi
 2814      00
 2815 13d7 4889C7   		movq	%rax, %rdi
 2816 13da E8000000 		call	_ZN8UnitTest15XmlTestReporter13ReportSummaryEiiif
 2816      00
 2817              	.LEHE86:
  86:TestXmlTestReporter.cpp **** 
  87:TestXmlTestReporter.cpp ****     const char *expected =
  88:TestXmlTestReporter.cpp **** "<?xml version=\"1.0\"?>"
  89:TestXmlTestReporter.cpp **** "<unittest-results tests=\"1\" failedtests=\"0\" failures=\"0\" time=\"0.1\">"
  90:TestXmlTestReporter.cpp **** "<test suite=\"DefaultSuite\" name=\"TestName\" time=\"0\"/>"
  91:TestXmlTestReporter.cpp **** "</unittest-results>";
 2818              		.loc 3 91 0
 2819 13df 48C745A8 		movq	$.LC24, -88(%rbp)
 2819      00000000 
 2820              	.LEHB87:
  92:TestXmlTestReporter.cpp **** 
  93:TestXmlTestReporter.cpp ****     CHECK_EQUAL(expected, output.str());
 2821              		.loc 3 93 0
 2822 13e7 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 2822      00
 2823 13ec 488B08   		movq	(%rax), %rcx
 2824 13ef 488D45D0 		leaq	-48(%rbp), %rax
 2825 13f3 BA5D0000 		movl	$93, %edx
 2825      00
 2826 13f8 4889CE   		movq	%rcx, %rsi
 2827 13fb 4889C7   		movq	%rax, %rdi
 2828 13fe E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 2828      00
 2829              		.loc 3 93 0 is_stmt 0 discriminator 1
 2830 1403 488B5598 		movq	-104(%rbp), %rdx
 2831 1407 488D45A0 		leaq	-96(%rbp), %rax
 2832 140b 4889D6   		movq	%rdx, %rsi
 2833 140e 4889C7   		movq	%rax, %rdi
 2834 1411 E8000000 		call	_ZNKSt19basic_ostringstreamIcSt11char_traitsIcESaIcEE3strEv
 2834      00
 2835              	.LEHE87:
 2836              	.LEHB88:
 2837              		.loc 3 93 0 discriminator 2
 2838 1416 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 2838      00
 2839 141b 488B00   		movq	(%rax), %rax
 2840 141e 488D4DD0 		leaq	-48(%rbp), %rcx
 2841 1422 488D55A0 		leaq	-96(%rbp), %rdx
 2842 1426 488D75A8 		leaq	-88(%rbp), %rsi
 2843 142a 4889C7   		movq	%rax, %rdi
 2844 142d E8000000 		call	_ZN8UnitTest10CheckEqualIPKcSsEEvRNS_11TestResultsERKT_RKT0_RKNS_11TestDetailsE
 2844      00
 2845              	.LEHE88:
 2846              		.loc 3 93 0 discriminator 1
 2847 1432 488D45A0 		leaq	-96(%rbp), %rax
 2848 1436 4889C7   		movq	%rax, %rdi
 2849              	.LEHB89:
 2850 1439 E8000000 		call	_ZNSsD1Ev
 2850      00
 2851              	.LEHE89:
 2852              	.LBE72:
  94:TestXmlTestReporter.cpp **** }
 2853              		.loc 3 94 0 is_stmt 1
 2854 143e EB6C     		jmp	.L159
 2855              	.L157:
 2856 1440 4889C3   		movq	%rax, %rbx
 2857              	.LBB73:
  93:TestXmlTestReporter.cpp **** }
 2858              		.loc 3 93 0
 2859 1443 488D45A0 		leaq	-96(%rbp), %rax
 2860 1447 4889C7   		movq	%rax, %rdi
 2861 144a E8000000 		call	_ZNSsD1Ev
 2861      00
 2862 144f 4889D8   		movq	%rbx, %rax
 2863 1452 EB13     		jmp	.L153
 2864              	.L158:
 2865 1454 4889C3   		movq	%rax, %rbx
 2866 1457 E8000000 		call	__cxa_end_catch
 2866      00
 2867 145c 4889D8   		movq	%rbx, %rax
 2868 145f 4889C7   		movq	%rax, %rdi
 2869              	.LEHB90:
 2870 1462 E8000000 		call	_Unwind_Resume
 2870      00
 2871              	.LEHE90:
 2872              	.L156:
 2873              	.L153:
 2874 1467 4889C7   		movq	%rax, %rdi
 2875 146a E8000000 		call	__cxa_begin_catch
 2875      00
 2876              	.LEHB91:
 2877 146f E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 2877      00
 2878 1474 488B08   		movq	(%rax), %rcx
 2879 1477 488D45D0 		leaq	-48(%rbp), %rax
 2880 147b BA5D0000 		movl	$93, %edx
 2880      00
 2881 1480 4889CE   		movq	%rcx, %rsi
 2882 1483 4889C7   		movq	%rax, %rdi
 2883 1486 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 2883      00
  93:TestXmlTestReporter.cpp **** }
 2884              		.loc 3 93 0 is_stmt 0 discriminator 1
 2885 148b E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 2885      00
 2886 1490 488B00   		movq	(%rax), %rax
 2887 1493 488D4DD0 		leaq	-48(%rbp), %rcx
 2888 1497 BA000000 		movl	$.LC12, %edx
 2888      00
 2889 149c 4889CE   		movq	%rcx, %rsi
 2890 149f 4889C7   		movq	%rax, %rdi
 2891 14a2 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 2891      00
 2892              	.LEHE91:
 2893              	.LEHB92:
 2894 14a7 E8000000 		call	__cxa_end_catch
 2894      00
 2895              	.LEHE92:
 2896              	.L159:
 2897              	.LBE73:
 2898              		.loc 3 94 0 is_stmt 1
 2899 14ac 90       		nop
 2900 14ad 4883C468 		addq	$104, %rsp
 2901 14b1 5B       		popq	%rbx
 2902 14b2 5D       		popq	%rbp
 2903              		.cfi_def_cfa 7, 8
 2904 14b3 C3       		ret
 2905              		.cfi_endproc
 2906              	.LFE1329:
 2907              		.section	.gcc_except_table
 2908              		.align 4
 2909              	.LLSDA1329:
 2910 0254 FF       		.byte	0xff
 2911 0255 03       		.byte	0x3
 2912 0256 31       		.uleb128 .LLSDATT1329-.LLSDATTD1329
 2913              	.LLSDATTD1329:
 2914 0257 01       		.byte	0x1
 2915 0258 25       		.uleb128 .LLSDACSE1329-.LLSDACSB1329
 2916              	.LLSDACSB1329:
 2917 0259 29       		.uleb128 .LEHB86-.LFB1329
 2918 025a 48       		.uleb128 .LEHE86-.LEHB86
 2919 025b 00       		.uleb128 0
 2920 025c 00       		.uleb128 0
 2921 025d 79       		.uleb128 .LEHB87-.LFB1329
 2922 025e 2F       		.uleb128 .LEHE87-.LEHB87
 2923 025f F901     		.uleb128 .L156-.LFB1329
 2924 0261 01       		.uleb128 0x1
 2925 0262 A801     		.uleb128 .LEHB88-.LFB1329
 2926 0264 1C       		.uleb128 .LEHE88-.LEHB88
 2927 0265 D201     		.uleb128 .L157-.LFB1329
 2928 0267 03       		.uleb128 0x3
 2929 0268 CB01     		.uleb128 .LEHB89-.LFB1329
 2930 026a 05       		.uleb128 .LEHE89-.LEHB89
 2931 026b F901     		.uleb128 .L156-.LFB1329
 2932 026d 01       		.uleb128 0x1
 2933 026e F401     		.uleb128 .LEHB90-.LFB1329
 2934 0270 05       		.uleb128 .LEHE90-.LEHB90
 2935 0271 00       		.uleb128 0
 2936 0272 00       		.uleb128 0
 2937 0273 8102     		.uleb128 .LEHB91-.LFB1329
 2938 0275 38       		.uleb128 .LEHE91-.LEHB91
 2939 0276 E601     		.uleb128 .L158-.LFB1329
 2940 0278 00       		.uleb128 0
 2941 0279 B902     		.uleb128 .LEHB92-.LFB1329
 2942 027b 05       		.uleb128 .LEHE92-.LEHB92
 2943 027c 00       		.uleb128 0
 2944 027d 00       		.uleb128 0
 2945              	.LLSDACSE1329:
 2946 027e 01       		.byte	0x1
 2947 027f 00       		.byte	0
 2948 0280 00       		.byte	0
 2949 0281 7D       		.byte	0x7d
 2950 0282 0000     		.align 4
 2951 0284 00000000 		.long	0
 2952              	
 2953              	.LLSDATT1329:
 2954              		.text
 2956              		.align 2
 2958              	_ZN12_GLOBAL__N_163XmlTestReporterFixtureSingleFailedTestReportSummaryFormatHelperC2ERKN8UnitTest11
 2959              	.LFB1331:
  95:TestXmlTestReporter.cpp **** 
  96:TestXmlTestReporter.cpp **** TEST_FIXTURE(XmlTestReporterFixture, SingleFailedTestReportSummaryFormat)
 2960              		.loc 3 96 0
 2961              		.cfi_startproc
 2962 14b4 55       		pushq	%rbp
 2963              		.cfi_def_cfa_offset 16
 2964              		.cfi_offset 6, -16
 2965 14b5 4889E5   		movq	%rsp, %rbp
 2966              		.cfi_def_cfa_register 6
 2967 14b8 4883EC10 		subq	$16, %rsp
 2968 14bc 48897DF8 		movq	%rdi, -8(%rbp)
 2969 14c0 488975F0 		movq	%rsi, -16(%rbp)
 2970              	.LBB74:
 2971              		.loc 3 96 0
 2972 14c4 488B45F8 		movq	-8(%rbp), %rax
 2973 14c8 4889C7   		movq	%rax, %rdi
 2974 14cb E830EBFF 		call	_ZN12_GLOBAL__N_122XmlTestReporterFixtureC2Ev
 2974      FF
 2975 14d0 488B45F8 		movq	-8(%rbp), %rax
 2976 14d4 488B55F0 		movq	-16(%rbp), %rdx
 2977 14d8 48899088 		movq	%rdx, 392(%rax)
 2977      010000
 2978              	.LBE74:
 2979 14df C9       		leave
 2980              		.cfi_def_cfa 7, 8
 2981 14e0 C3       		ret
 2982              		.cfi_endproc
 2983              	.LFE1331:
 2985              		.set	_ZN12_GLOBAL__N_163XmlTestReporterFixtureSingleFailedTestReportSummaryFormatHelperC1ERKN8Unit
 2986              		.section	.rodata
 2987 0472 00000000 		.align 8
 2987      0000
 2988              	.LC25:
 2989 0478 53696E67 		.string	"SingleFailedTestReportSummaryFormat"
 2989      6C654661 
 2989      696C6564 
 2989      54657374 
 2989      5265706F 
 2990              		.text
 2991 14e1 90       		.align 2
 2993              	_ZN12_GLOBAL__N_161TestXmlTestReporterFixtureSingleFailedTestReportSummaryFormatC2Ev:
 2994              	.LFB1334:
 2995              		.loc 3 96 0
 2996              		.cfi_startproc
 2997 14e2 55       		pushq	%rbp
 2998              		.cfi_def_cfa_offset 16
 2999              		.cfi_offset 6, -16
 3000 14e3 4889E5   		movq	%rsp, %rbp
 3001              		.cfi_def_cfa_register 6
 3002 14e6 4883EC10 		subq	$16, %rsp
 3003 14ea 48897DF8 		movq	%rdi, -8(%rbp)
 3004              	.LBB75:
 3005              		.loc 3 96 0
 3006 14ee E8000000 		call	_ZN13UnitTestSuite12GetSuiteNameEv
 3006      00
 3007 14f3 4889C2   		movq	%rax, %rdx
 3008 14f6 488B45F8 		movq	-8(%rbp), %rax
 3009 14fa 41B86000 		movl	$96, %r8d
 3009      0000
 3010 1500 B9000000 		movl	$.LC1, %ecx
 3010      00
 3011 1505 BE000000 		movl	$.LC25, %esi
 3011      00
 3012 150a 4889C7   		movq	%rax, %rdi
 3013 150d E8000000 		call	_ZN8UnitTest4TestC2EPKcS2_S2_i
 3013      00
 3014 1512 488B45F8 		movq	-8(%rbp), %rax
 3015 1516 48C70000 		movq	$_ZTVN12_GLOBAL__N_161TestXmlTestReporterFixtureSingleFailedTestReportSummaryFormatE+16, (%ra
 3015      000000
 3016              	.LBE75:
 3017 151d C9       		leave
 3018              		.cfi_def_cfa 7, 8
 3019 151e C3       		ret
 3020              		.cfi_endproc
 3021              	.LFE1334:
 3023              		.set	_ZN12_GLOBAL__N_161TestXmlTestReporterFixtureSingleFailedTestReportSummaryFormatC1Ev,_ZN12_GL
 3024              		.local	_ZN12_GLOBAL__N_169testXmlTestReporterFixtureSingleFailedTestReportSummaryFormatInstanceE
 3025              		.comm	_ZN12_GLOBAL__N_169testXmlTestReporterFixtureSingleFailedTestReportSummaryFormatInstanceE,56
 3026              		.local	_ZN12_GLOBAL__N_162adderXmlTestReporterFixtureSingleFailedTestReportSummaryFormatE
 3027              		.comm	_ZN12_GLOBAL__N_162adderXmlTestReporterFixtureSingleFailedTestReportSummaryFormatE,1,1
 3028 151f 90       		.align 2
 3030              	_ZN12_GLOBAL__N_163XmlTestReporterFixtureSingleFailedTestReportSummaryFormatHelperD2Ev:
 3031              	.LFB1338:
 3032              		.loc 3 96 0
 3033              		.cfi_startproc
 3034 1520 55       		pushq	%rbp
 3035              		.cfi_def_cfa_offset 16
 3036              		.cfi_offset 6, -16
 3037 1521 4889E5   		movq	%rsp, %rbp
 3038              		.cfi_def_cfa_register 6
 3039 1524 4883EC10 		subq	$16, %rsp
 3040 1528 48897DF8 		movq	%rdi, -8(%rbp)
 3041              	.LBB76:
 3042              		.loc 3 96 0
 3043 152c 488B45F8 		movq	-8(%rbp), %rax
 3044 1530 4889C7   		movq	%rax, %rdi
 3045 1533 E824EBFF 		call	_ZN12_GLOBAL__N_122XmlTestReporterFixtureD2Ev
 3045      FF
 3046              	.LBE76:
 3047 1538 C9       		leave
 3048              		.cfi_def_cfa 7, 8
 3049 1539 C3       		ret
 3050              		.cfi_endproc
 3051              	.LFE1338:
 3053              		.set	_ZN12_GLOBAL__N_163XmlTestReporterFixtureSingleFailedTestReportSummaryFormatHelperD1Ev,_ZN12_
 3054              		.align 2
 3056              	_ZNK12_GLOBAL__N_161TestXmlTestReporterFixtureSingleFailedTestReportSummaryFormat7RunImplEv:
 3057              	.LFB1336:
 3058              		.loc 3 96 0
 3059              		.cfi_startproc
 3060              		.cfi_personality 0x3,__gxx_personality_v0
 3061              		.cfi_lsda 0x3,.LLSDA1336
 3062 153a 55       		pushq	%rbp
 3063              		.cfi_def_cfa_offset 16
 3064              		.cfi_offset 6, -16
 3065 153b 4889E5   		movq	%rsp, %rbp
 3066              		.cfi_def_cfa_register 6
 3067 153e 4154     		pushq	%r12
 3068 1540 53       		pushq	%rbx
 3069 1541 4881ECC0 		subq	$448, %rsp
 3069      010000
 3070              		.cfi_offset 12, -24
 3071              		.cfi_offset 3, -32
 3072 1548 4889BD38 		movq	%rdi, -456(%rbp)
 3072      FEFFFF
 3073              	.LBB77:
 3074              		.loc 3 96 0
 3075 154f C6854FFE 		movb	$0, -433(%rbp)
 3075      FFFF00
 3076              	.LBB78:
 3077 1556 488B8538 		movq	-456(%rbp), %rax
 3077      FEFFFF
 3078 155d 488D5008 		leaq	8(%rax), %rdx
 3079 1561 488D8560 		leaq	-416(%rbp), %rax
 3079      FEFFFF
 3080 1568 4889D6   		movq	%rdx, %rsi
 3081 156b 4889C7   		movq	%rax, %rdi
 3082              	.LEHB93:
 3083 156e E841FFFF 		call	_ZN12_GLOBAL__N_163XmlTestReporterFixtureSingleFailedTestReportSummaryFormatHelperC1ERKN8Unit
 3083      FF
 3084              	.LEHE93:
 3085              		.loc 3 96 0 is_stmt 0 discriminator 1
 3086 1573 C6854FFE 		movb	$1, -433(%rbp)
 3086      FFFF01
 3087 157a 488B8538 		movq	-456(%rbp), %rax
 3087      FEFFFF
 3088 1581 488D5008 		leaq	8(%rax), %rdx
 3089 1585 488D8560 		leaq	-416(%rbp), %rax
 3089      FEFFFF
 3090 158c 4889D6   		movq	%rdx, %rsi
 3091 158f 4889C7   		movq	%rax, %rdi
 3092              	.LEHB94:
 3093 1592 E8EF1D00 		call	_ZN8UnitTest11ExecuteTestIN12_GLOBAL__N_163XmlTestReporterFixtureSingleFailedTestReportSummar
 3093      00
 3094              	.LEHE94:
 3095 1597 488D8560 		leaq	-416(%rbp), %rax
 3095      FEFFFF
 3096 159e 4889C7   		movq	%rax, %rdi
 3097              	.LEHB95:
 3098 15a1 E87AFFFF 		call	_ZN12_GLOBAL__N_163XmlTestReporterFixtureSingleFailedTestReportSummaryFormatHelperD1Ev
 3098      FF
 3099              	.LEHE95:
 3100              	.LBE78:
 3101              	.LBE77:
 3102              		.loc 3 96 0
 3103 15a6 E9640200 		jmp	.L184
 3103      00
 3104              	.L178:
 3105 15ab 4989C4   		movq	%rax, %r12
 3106 15ae 4889D3   		movq	%rdx, %rbx
 3107              	.LBB86:
 3108              	.LBB79:
 3109 15b1 488D8560 		leaq	-416(%rbp), %rax
 3109      FEFFFF
 3110 15b8 4889C7   		movq	%rax, %rdi
 3111 15bb E860FFFF 		call	_ZN12_GLOBAL__N_163XmlTestReporterFixtureSingleFailedTestReportSummaryFormatHelperD1Ev
 3111      FF
 3112 15c0 4C89E0   		movq	%r12, %rax
 3113 15c3 4889DA   		movq	%rbx, %rdx
 3114 15c6 EB00     		jmp	.L166
 3115              	.L177:
 3116              	.L166:
 3117 15c8 4883FA01 		cmpq	$1, %rdx
 3118 15cc 745C     		je	.L168
 3119 15ce 4883FA02 		cmpq	$2, %rdx
 3120 15d2 0F84F400 		je	.L169
 3120      0000
 3121 15d8 E9980100 		jmp	.L183
 3121      00
 3122              	.L179:
 3123 15dd 4889C3   		movq	%rax, %rbx
 3124              	.LBE79:
 3125              	.LBB80:
 3126 15e0 E8000000 		call	__cxa_end_catch
 3126      00
 3127 15e5 4889D8   		movq	%rbx, %rax
 3128 15e8 4889C7   		movq	%rax, %rdi
 3129              	.LEHB96:
 3130 15eb E8000000 		call	_Unwind_Resume
 3130      00
 3131              	.LEHE96:
 3132              	.L180:
 3133 15f0 4889C3   		movq	%rax, %rbx
 3134              	.LBE80:
 3135              	.LBB81:
 3136              	.LBB82:
 3137 15f3 488D8560 		leaq	-416(%rbp), %rax
 3137      FEFFFF
 3138 15fa 4889C7   		movq	%rax, %rdi
 3139 15fd E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 3139      00
 3140 1602 EB03     		jmp	.L172
 3141              	.L181:
 3142 1604 4889C3   		movq	%rax, %rbx
 3143              	.L172:
 3144              	.LBE82:
 3145 1607 E8000000 		call	__cxa_end_catch
 3145      00
 3146 160c 4889D8   		movq	%rbx, %rax
 3147 160f 4889C7   		movq	%rax, %rdi
 3148              	.LEHB97:
 3149 1612 E8000000 		call	_Unwind_Resume
 3149      00
 3150              	.LEHE97:
 3151              	.L182:
 3152 1617 4889C3   		movq	%rax, %rbx
 3153              	.LBE81:
 3154 161a E8000000 		call	__cxa_end_catch
 3154      00
 3155 161f 4889D8   		movq	%rbx, %rax
 3156 1622 4889C7   		movq	%rax, %rdi
 3157              	.LEHB98:
 3158 1625 E8000000 		call	_Unwind_Resume
 3158      00
 3159              	.LEHE98:
 3160              	.L168:
 3161              	.LBB84:
 3162 162a 4889C7   		movq	%rax, %rdi
 3163 162d E8000000 		call	__cxa_begin_catch
 3163      00
 3164 1632 48898550 		movq	%rax, -432(%rbp)
 3164      FEFFFF
 3165 1639 488B8550 		movq	-432(%rbp), %rax
 3165      FEFFFF
 3166 1640 488B00   		movq	(%rax), %rax
 3167 1643 4883C010 		addq	$16, %rax
 3168 1647 488B00   		movq	(%rax), %rax
 3169 164a 488B9550 		movq	-432(%rbp), %rdx
 3169      FEFFFF
 3170 1651 4889D7   		movq	%rdx, %rdi
 3171 1654 FFD0     		call	*%rax
 3172 1656 4889C3   		movq	%rax, %rbx
 3173 1659 488B8550 		movq	-432(%rbp), %rax
 3173      FEFFFF
 3174 1660 4889C7   		movq	%rax, %rdi
 3175              	.LEHB99:
 3176 1663 E8000000 		call	_ZNK8UnitTest15AssertException10LineNumberEv
 3176      00
 3177 1668 4189C4   		movl	%eax, %r12d
 3178 166b 488B8550 		movq	-432(%rbp), %rax
 3178      FEFFFF
 3179 1672 4889C7   		movq	%rax, %rdi
 3180 1675 E8000000 		call	_ZNK8UnitTest15AssertException8FilenameEv
 3180      00
 3181              		.loc 3 96 0 discriminator 1
 3182 167a 4889C1   		movq	%rax, %rcx
 3183 167d 488B8538 		movq	-456(%rbp), %rax
 3183      FEFFFF
 3184 1684 488B5008 		movq	8(%rax), %rdx
 3185 1688 488B8538 		movq	-456(%rbp), %rax
 3185      FEFFFF
 3186 168f 488B7010 		movq	16(%rax), %rsi
 3187 1693 488D8560 		leaq	-416(%rbp), %rax
 3187      FEFFFF
 3188 169a 4589E0   		movl	%r12d, %r8d
 3189 169d 4889C7   		movq	%rax, %rdi
 3190 16a0 E8000000 		call	_ZN8UnitTest11TestDetailsC1EPKcS2_S2_i
 3190      00
 3191              		.loc 3 96 0 discriminator 3
 3192 16a5 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 3192      00
 3193 16aa 488B00   		movq	(%rax), %rax
 3194 16ad 488D8D60 		leaq	-416(%rbp), %rcx
 3194      FEFFFF
 3195 16b4 4889DA   		movq	%rbx, %rdx
 3196 16b7 4889CE   		movq	%rcx, %rsi
 3197 16ba 4889C7   		movq	%rax, %rdi
 3198 16bd E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 3198      00
 3199              	.LEHE99:
 3200              		.loc 3 96 0 discriminator 1
 3201 16c2 E8000000 		call	__cxa_end_catch
 3201      00
 3202              	.LBE84:
 3203              	.LBE86:
 3204 16c7 E9430100 		jmp	.L184
 3204      00
 3205              	.L169:
 3206              	.LBB87:
 3207              	.LBB85:
 3208              		.loc 3 96 0
 3209 16cc 4889C7   		movq	%rax, %rdi
 3210 16cf E8000000 		call	__cxa_begin_catch
 3210      00
 3211 16d4 48898558 		movq	%rax, -424(%rbp)
 3211      FEFFFF
 3212              	.LBB83:
 3213 16db 488D8560 		leaq	-416(%rbp), %rax
 3213      FEFFFF
 3214 16e2 4889C7   		movq	%rax, %rdi
 3215              	.LEHB100:
 3216 16e5 E8000000 		call	_ZN8UnitTest15MemoryOutStreamC1Ev
 3216      00
 3217              	.LEHE100:
 3218              		.loc 3 96 0 discriminator 1
 3219 16ea 488B8558 		movq	-424(%rbp), %rax
 3219      FEFFFF
 3220 16f1 488B00   		movq	(%rax), %rax
 3221 16f4 4883C010 		addq	$16, %rax
 3222 16f8 488B00   		movq	(%rax), %rax
 3223 16fb 488B9558 		movq	-424(%rbp), %rdx
 3223      FEFFFF
 3224 1702 4889D7   		movq	%rdx, %rdi
 3225 1705 FFD0     		call	*%rax
 3226 1707 4889C3   		movq	%rax, %rbx
 3227 170a 488D8560 		leaq	-416(%rbp), %rax
 3227      FEFFFF
 3228 1711 BE000000 		movl	$.LC3, %esi
 3228      00
 3229 1716 4889C7   		movq	%rax, %rdi
 3230              	.LEHB101:
 3231 1719 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
 3231      00
 3232 171e 4889DE   		movq	%rbx, %rsi
 3233 1721 4889C7   		movq	%rax, %rdi
 3234 1724 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
 3234      00
 3235 1729 488D8560 		leaq	-416(%rbp), %rax
 3235      FEFFFF
 3236 1730 4889C7   		movq	%rax, %rdi
 3237 1733 E8000000 		call	_ZNK8UnitTest15MemoryOutStream7GetTextEv
 3237      00
 3238 1738 4889C3   		movq	%rax, %rbx
 3239 173b 488B8538 		movq	-456(%rbp), %rax
 3239      FEFFFF
 3240 1742 4C8D6008 		leaq	8(%rax), %r12
 3241 1746 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 3241      00
 3242 174b 488B00   		movq	(%rax), %rax
 3243 174e 4889DA   		movq	%rbx, %rdx
 3244 1751 4C89E6   		movq	%r12, %rsi
 3245 1754 4889C7   		movq	%rax, %rdi
 3246 1757 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 3246      00
 3247              	.LEHE101:
 3248 175c 488D8560 		leaq	-416(%rbp), %rax
 3248      FEFFFF
 3249 1763 4889C7   		movq	%rax, %rdi
 3250              	.LEHB102:
 3251 1766 E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 3251      00
 3252              	.LEHE102:
 3253              	.LBE83:
 3254              		.loc 3 96 0
 3255 176b E8000000 		call	__cxa_end_catch
 3255      00
 3256              	.LBE85:
 3257              	.LBE87:
 3258 1770 E99A0000 		jmp	.L184
 3258      00
 3259              	.L183:
 3260              	.LBB88:
 3261 1775 4889C7   		movq	%rax, %rdi
 3262 1778 E8000000 		call	__cxa_begin_catch
 3262      00
 3263 177d 80BD4FFE 		cmpb	$0, -433(%rbp)
 3263      FFFF00
 3264 1784 7443     		je	.L175
 3265              		.loc 3 96 0 discriminator 1
 3266 1786 488B8538 		movq	-456(%rbp), %rax
 3266      FEFFFF
 3267 178d 488D4808 		leaq	8(%rax), %rcx
 3268 1791 488D8560 		leaq	-416(%rbp), %rax
 3268      FEFFFF
 3269 1798 BA600000 		movl	$96, %edx
 3269      00
 3270 179d 4889CE   		movq	%rcx, %rsi
 3271 17a0 4889C7   		movq	%rax, %rdi
 3272              	.LEHB103:
 3273 17a3 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 3273      00
 3274 17a8 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 3274      00
 3275 17ad 488B00   		movq	(%rax), %rax
 3276 17b0 488D8D60 		leaq	-416(%rbp), %rcx
 3276      FEFFFF
 3277 17b7 BA000000 		movl	$.LC4, %edx
 3277      00
 3278 17bc 4889CE   		movq	%rcx, %rsi
 3279 17bf 4889C7   		movq	%rax, %rdi
 3280 17c2 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 3280      00
 3281 17c7 EB41     		jmp	.L176
 3282              	.L175:
 3283              		.loc 3 96 0 discriminator 2
 3284 17c9 488B8538 		movq	-456(%rbp), %rax
 3284      FEFFFF
 3285 17d0 488D4808 		leaq	8(%rax), %rcx
 3286 17d4 488D8560 		leaq	-416(%rbp), %rax
 3286      FEFFFF
 3287 17db BA600000 		movl	$96, %edx
 3287      00
 3288 17e0 4889CE   		movq	%rcx, %rsi
 3289 17e3 4889C7   		movq	%rax, %rdi
 3290 17e6 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 3290      00
 3291              		.loc 3 96 0 discriminator 1
 3292 17eb E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 3292      00
 3293 17f0 488B00   		movq	(%rax), %rax
 3294 17f3 488D8D60 		leaq	-416(%rbp), %rcx
 3294      FEFFFF
 3295 17fa BA000000 		movl	$.LC5, %edx
 3295      00
 3296 17ff 4889CE   		movq	%rcx, %rsi
 3297 1802 4889C7   		movq	%rax, %rdi
 3298 1805 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 3298      00
 3299              	.LEHE103:
 3300              	.L176:
 3301              	.LEHB104:
 3302 180a E8000000 		call	__cxa_end_catch
 3302      00
 3303              	.LEHE104:
 3304              	.L184:
 3305              	.LBE88:
 3306              		.loc 3 96 0
 3307 180f 90       		nop
 3308 1810 4881C4C0 		addq	$448, %rsp
 3308      010000
 3309 1817 5B       		popq	%rbx
 3310 1818 415C     		popq	%r12
 3311 181a 5D       		popq	%rbp
 3312              		.cfi_def_cfa 7, 8
 3313 181b C3       		ret
 3314              		.cfi_endproc
 3315              	.LFE1336:
 3316              		.section	.gcc_except_table
 3317              		.align 4
 3318              	.LLSDA1336:
 3319 0288 FF       		.byte	0xff
 3320 0289 03       		.byte	0x3
 3321 028a 59       		.uleb128 .LLSDATT1336-.LLSDATTD1336
 3322              	.LLSDATTD1336:
 3323 028b 01       		.byte	0x1
 3324 028c 40       		.uleb128 .LLSDACSE1336-.LLSDACSB1336
 3325              	.LLSDACSB1336:
 3326 028d 34       		.uleb128 .LEHB93-.LFB1336
 3327 028e 05       		.uleb128 .LEHE93-.LEHB93
 3328 028f 8E01     		.uleb128 .L177-.LFB1336
 3329 0291 05       		.uleb128 0x5
 3330 0292 58       		.uleb128 .LEHB94-.LFB1336
 3331 0293 05       		.uleb128 .LEHE94-.LEHB94
 3332 0294 71       		.uleb128 .L178-.LFB1336
 3333 0295 07       		.uleb128 0x7
 3334 0296 67       		.uleb128 .LEHB95-.LFB1336
 3335 0297 05       		.uleb128 .LEHE95-.LEHB95
 3336 0298 8E01     		.uleb128 .L177-.LFB1336
 3337 029a 05       		.uleb128 0x5
 3338 029b B101     		.uleb128 .LEHB96-.LFB1336
 3339 029d 05       		.uleb128 .LEHE96-.LEHB96
 3340 029e 00       		.uleb128 0
 3341 029f 00       		.uleb128 0
 3342 02a0 D801     		.uleb128 .LEHB97-.LFB1336
 3343 02a2 05       		.uleb128 .LEHE97-.LEHB97
 3344 02a3 00       		.uleb128 0
 3345 02a4 00       		.uleb128 0
 3346 02a5 EB01     		.uleb128 .LEHB98-.LFB1336
 3347 02a7 05       		.uleb128 .LEHE98-.LEHB98
 3348 02a8 00       		.uleb128 0
 3349 02a9 00       		.uleb128 0
 3350 02aa A902     		.uleb128 .LEHB99-.LFB1336
 3351 02ac 5F       		.uleb128 .LEHE99-.LEHB99
 3352 02ad A301     		.uleb128 .L179-.LFB1336
 3353 02af 00       		.uleb128 0
 3354 02b0 AB03     		.uleb128 .LEHB100-.LFB1336
 3355 02b2 05       		.uleb128 .LEHE100-.LEHB100
 3356 02b3 CA01     		.uleb128 .L181-.LFB1336
 3357 02b5 00       		.uleb128 0
 3358 02b6 DF03     		.uleb128 .LEHB101-.LFB1336
 3359 02b8 43       		.uleb128 .LEHE101-.LEHB101
 3360 02b9 B601     		.uleb128 .L180-.LFB1336
 3361 02bb 00       		.uleb128 0
 3362 02bc AC04     		.uleb128 .LEHB102-.LFB1336
 3363 02be 05       		.uleb128 .LEHE102-.LEHB102
 3364 02bf CA01     		.uleb128 .L181-.LFB1336
 3365 02c1 00       		.uleb128 0
 3366 02c2 E904     		.uleb128 .LEHB103-.LFB1336
 3367 02c4 67       		.uleb128 .LEHE103-.LEHB103
 3368 02c5 DD01     		.uleb128 .L182-.LFB1336
 3369 02c7 00       		.uleb128 0
 3370 02c8 D005     		.uleb128 .LEHB104-.LFB1336
 3371 02ca 05       		.uleb128 .LEHE104-.LEHB104
 3372 02cb 00       		.uleb128 0
 3373 02cc 00       		.uleb128 0
 3374              	.LLSDACSE1336:
 3375 02cd 03       		.byte	0x3
 3376 02ce 00       		.byte	0
 3377 02cf 02       		.byte	0x2
 3378 02d0 7D       		.byte	0x7d
 3379 02d1 01       		.byte	0x1
 3380 02d2 7D       		.byte	0x7d
 3381 02d3 00       		.byte	0
 3382 02d4 7D       		.byte	0x7d
 3383 02d5 000000   		.align 4
 3384 02d8 00000000 		.long	0
 3385              	
 3386 02dc 00000000 		.long	_ZTISt9exception
 3387 02e0 00000000 		.long	_ZTIN8UnitTest15AssertExceptionE
 3388              	.LLSDATT1336:
 3389              		.text
 3391              		.section	.rodata
 3392              	.LC26:
 3393 049c 41204669 		.string	"A File"
 3393      6C6500
 3394              	.LC27:
 3395 04a3 41205465 		.string	"A Test"
 3395      737400
 3396              	.LC28:
 3397 04aa 41204661 		.string	"A Failure"
 3397      696C7572 
 3397      6500
 3398 04b4 00000000 		.align 8
 3399              	.LC29:
 3400 04b8 3C3F786D 		.string	"<?xml version=\"1.0\"?><unittest-results tests=\"1\" failedtests=\"1\" failures=\"1\" tim
 3400      6C207665 
 3400      7273696F 
 3400      6E3D2231 
 3400      2E30223F 
 3401              		.text
 3402              		.align 2
 3404              	_ZN12_GLOBAL__N_163XmlTestReporterFixtureSingleFailedTestReportSummaryFormatHelper7RunImplEv:
 3405              	.LFB1340:
  97:TestXmlTestReporter.cpp **** {
 3406              		.loc 3 97 0 is_stmt 1
 3407              		.cfi_startproc
 3408              		.cfi_personality 0x3,__gxx_personality_v0
 3409              		.cfi_lsda 0x3,.LLSDA1340
 3410 181c 55       		pushq	%rbp
 3411              		.cfi_def_cfa_offset 16
 3412              		.cfi_offset 6, -16
 3413 181d 4889E5   		movq	%rsp, %rbp
 3414              		.cfi_def_cfa_register 6
 3415 1820 53       		pushq	%rbx
 3416 1821 4883EC68 		subq	$104, %rsp
 3417              		.cfi_offset 3, -24
 3418 1825 48897D98 		movq	%rdi, -104(%rbp)
 3419              	.LBB89:
  98:TestXmlTestReporter.cpp ****     TestDetails const details("A Test", "suite", "A File", 4321);
 3420              		.loc 3 98 0
 3421 1829 488D45B0 		leaq	-80(%rbp), %rax
 3422 182d 41B8E110 		movl	$4321, %r8d
 3422      0000
 3423 1833 B9000000 		movl	$.LC26, %ecx
 3423      00
 3424 1838 BA000000 		movl	$.LC7, %edx
 3424      00
 3425 183d BE000000 		movl	$.LC27, %esi
 3425      00
 3426 1842 4889C7   		movq	%rax, %rdi
 3427              	.LEHB105:
 3428 1845 E8000000 		call	_ZN8UnitTest11TestDetailsC1EPKcS2_S2_i
 3428      00
  99:TestXmlTestReporter.cpp **** 
 100:TestXmlTestReporter.cpp ****     reporter.ReportTestStart(details);
 3429              		.loc 3 100 0
 3430 184a 488B4598 		movq	-104(%rbp), %rax
 3431 184e 488D9060 		leaq	352(%rax), %rdx
 3431      010000
 3432 1855 488D45B0 		leaq	-80(%rbp), %rax
 3433 1859 4889C6   		movq	%rax, %rsi
 3434 185c 4889D7   		movq	%rdx, %rdi
 3435 185f E8000000 		call	_ZN8UnitTest20DeferredTestReporter15ReportTestStartERKNS_11TestDetailsE
 3435      00
 101:TestXmlTestReporter.cpp ****     reporter.ReportFailure(details, "A Failure");
 3436              		.loc 3 101 0
 3437 1864 488B4598 		movq	-104(%rbp), %rax
 3438 1868 488D8860 		leaq	352(%rax), %rcx
 3438      010000
 3439 186f 488D45B0 		leaq	-80(%rbp), %rax
 3440 1873 BA000000 		movl	$.LC28, %edx
 3440      00
 3441 1878 4889C6   		movq	%rax, %rsi
 3442 187b 4889CF   		movq	%rcx, %rdi
 3443 187e E8000000 		call	_ZN8UnitTest20DeferredTestReporter13ReportFailureERKNS_11TestDetailsEPKc
 3443      00
 102:TestXmlTestReporter.cpp ****     reporter.ReportSummary(1, 1, 1, 0.1f);
 3444              		.loc 3 102 0
 3445 1883 488B4598 		movq	-104(%rbp), %rax
 3446 1887 48056001 		addq	$352, %rax
 3446      0000
 3447 188d F30F1005 		movss	.LC10(%rip), %xmm0
 3447      00000000 
 3448 1895 B9010000 		movl	$1, %ecx
 3448      00
 3449 189a BA010000 		movl	$1, %edx
 3449      00
 3450 189f BE010000 		movl	$1, %esi
 3450      00
 3451 18a4 4889C7   		movq	%rax, %rdi
 3452 18a7 E8000000 		call	_ZN8UnitTest15XmlTestReporter13ReportSummaryEiiif
 3452      00
 3453              	.LEHE105:
 103:TestXmlTestReporter.cpp **** 
 104:TestXmlTestReporter.cpp ****     const char *expected =
 105:TestXmlTestReporter.cpp ****         "<?xml version=\"1.0\"?>"
 106:TestXmlTestReporter.cpp ****         "<unittest-results tests=\"1\" failedtests=\"1\" failures=\"1\" time=\"0.1\">"
 107:TestXmlTestReporter.cpp ****         "<test suite=\"suite\" name=\"A Test\" time=\"0\">"
 108:TestXmlTestReporter.cpp ****         "<failure message=\"A File(4321) : A Failure\"/>"
 109:TestXmlTestReporter.cpp ****         "</test>"
 110:TestXmlTestReporter.cpp ****         "</unittest-results>";
 3454              		.loc 3 110 0
 3455 18ac 48C745A8 		movq	$.LC29, -88(%rbp)
 3455      00000000 
 3456              	.LEHB106:
 111:TestXmlTestReporter.cpp **** 
 112:TestXmlTestReporter.cpp ****     CHECK_EQUAL(expected, output.str());
 3457              		.loc 3 112 0
 3458 18b4 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 3458      00
 3459 18b9 488B08   		movq	(%rax), %rcx
 3460 18bc 488D45D0 		leaq	-48(%rbp), %rax
 3461 18c0 BA700000 		movl	$112, %edx
 3461      00
 3462 18c5 4889CE   		movq	%rcx, %rsi
 3463 18c8 4889C7   		movq	%rax, %rdi
 3464 18cb E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 3464      00
 3465              		.loc 3 112 0 is_stmt 0 discriminator 1
 3466 18d0 488B5598 		movq	-104(%rbp), %rdx
 3467 18d4 488D45A0 		leaq	-96(%rbp), %rax
 3468 18d8 4889D6   		movq	%rdx, %rsi
 3469 18db 4889C7   		movq	%rax, %rdi
 3470 18de E8000000 		call	_ZNKSt19basic_ostringstreamIcSt11char_traitsIcESaIcEE3strEv
 3470      00
 3471              	.LEHE106:
 3472              	.LEHB107:
 3473              		.loc 3 112 0 discriminator 2
 3474 18e3 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 3474      00
 3475 18e8 488B00   		movq	(%rax), %rax
 3476 18eb 488D4DD0 		leaq	-48(%rbp), %rcx
 3477 18ef 488D55A0 		leaq	-96(%rbp), %rdx
 3478 18f3 488D75A8 		leaq	-88(%rbp), %rsi
 3479 18f7 4889C7   		movq	%rax, %rdi
 3480 18fa E8000000 		call	_ZN8UnitTest10CheckEqualIPKcSsEEvRNS_11TestResultsERKT_RKT0_RKNS_11TestDetailsE
 3480      00
 3481              	.LEHE107:
 3482              		.loc 3 112 0 discriminator 1
 3483 18ff 488D45A0 		leaq	-96(%rbp), %rax
 3484 1903 4889C7   		movq	%rax, %rdi
 3485              	.LEHB108:
 3486 1906 E8000000 		call	_ZNSsD1Ev
 3486      00
 3487              	.LEHE108:
 3488              	.LBE89:
 113:TestXmlTestReporter.cpp **** }
 3489              		.loc 3 113 0 is_stmt 1
 3490 190b EB6C     		jmp	.L193
 3491              	.L191:
 3492 190d 4889C3   		movq	%rax, %rbx
 3493              	.LBB90:
 112:TestXmlTestReporter.cpp **** }
 3494              		.loc 3 112 0
 3495 1910 488D45A0 		leaq	-96(%rbp), %rax
 3496 1914 4889C7   		movq	%rax, %rdi
 3497 1917 E8000000 		call	_ZNSsD1Ev
 3497      00
 3498 191c 4889D8   		movq	%rbx, %rax
 3499 191f EB13     		jmp	.L187
 3500              	.L192:
 3501 1921 4889C3   		movq	%rax, %rbx
 3502 1924 E8000000 		call	__cxa_end_catch
 3502      00
 3503 1929 4889D8   		movq	%rbx, %rax
 3504 192c 4889C7   		movq	%rax, %rdi
 3505              	.LEHB109:
 3506 192f E8000000 		call	_Unwind_Resume
 3506      00
 3507              	.LEHE109:
 3508              	.L190:
 3509              	.L187:
 3510 1934 4889C7   		movq	%rax, %rdi
 3511 1937 E8000000 		call	__cxa_begin_catch
 3511      00
 3512              	.LEHB110:
 3513 193c E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 3513      00
 3514 1941 488B08   		movq	(%rax), %rcx
 3515 1944 488D45D0 		leaq	-48(%rbp), %rax
 3516 1948 BA700000 		movl	$112, %edx
 3516      00
 3517 194d 4889CE   		movq	%rcx, %rsi
 3518 1950 4889C7   		movq	%rax, %rdi
 3519 1953 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 3519      00
 112:TestXmlTestReporter.cpp **** }
 3520              		.loc 3 112 0 is_stmt 0 discriminator 1
 3521 1958 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 3521      00
 3522 195d 488B00   		movq	(%rax), %rax
 3523 1960 488D4DD0 		leaq	-48(%rbp), %rcx
 3524 1964 BA000000 		movl	$.LC12, %edx
 3524      00
 3525 1969 4889CE   		movq	%rcx, %rsi
 3526 196c 4889C7   		movq	%rax, %rdi
 3527 196f E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 3527      00
 3528              	.LEHE110:
 3529              	.LEHB111:
 3530 1974 E8000000 		call	__cxa_end_catch
 3530      00
 3531              	.LEHE111:
 3532              	.L193:
 3533              	.LBE90:
 3534              		.loc 3 113 0 is_stmt 1
 3535 1979 90       		nop
 3536 197a 4883C468 		addq	$104, %rsp
 3537 197e 5B       		popq	%rbx
 3538 197f 5D       		popq	%rbp
 3539              		.cfi_def_cfa 7, 8
 3540 1980 C3       		ret
 3541              		.cfi_endproc
 3542              	.LFE1340:
 3543              		.section	.gcc_except_table
 3544              		.align 4
 3545              	.LLSDA1340:
 3546 02e4 FF       		.byte	0xff
 3547 02e5 03       		.byte	0x3
 3548 02e6 31       		.uleb128 .LLSDATT1340-.LLSDATTD1340
 3549              	.LLSDATTD1340:
 3550 02e7 01       		.byte	0x1
 3551 02e8 26       		.uleb128 .LLSDACSE1340-.LLSDACSB1340
 3552              	.LLSDACSB1340:
 3553 02e9 29       		.uleb128 .LEHB105-.LFB1340
 3554 02ea 67       		.uleb128 .LEHE105-.LEHB105
 3555 02eb 00       		.uleb128 0
 3556 02ec 00       		.uleb128 0
 3557 02ed 9801     		.uleb128 .LEHB106-.LFB1340
 3558 02ef 2F       		.uleb128 .LEHE106-.LEHB106
 3559 02f0 9802     		.uleb128 .L190-.LFB1340
 3560 02f2 01       		.uleb128 0x1
 3561 02f3 C701     		.uleb128 .LEHB107-.LFB1340
 3562 02f5 1C       		.uleb128 .LEHE107-.LEHB107
 3563 02f6 F101     		.uleb128 .L191-.LFB1340
 3564 02f8 03       		.uleb128 0x3
 3565 02f9 EA01     		.uleb128 .LEHB108-.LFB1340
 3566 02fb 05       		.uleb128 .LEHE108-.LEHB108
 3567 02fc 9802     		.uleb128 .L190-.LFB1340
 3568 02fe 01       		.uleb128 0x1
 3569 02ff 9302     		.uleb128 .LEHB109-.LFB1340
 3570 0301 05       		.uleb128 .LEHE109-.LEHB109
 3571 0302 00       		.uleb128 0
 3572 0303 00       		.uleb128 0
 3573 0304 A002     		.uleb128 .LEHB110-.LFB1340
 3574 0306 38       		.uleb128 .LEHE110-.LEHB110
 3575 0307 8502     		.uleb128 .L192-.LFB1340
 3576 0309 00       		.uleb128 0
 3577 030a D802     		.uleb128 .LEHB111-.LFB1340
 3578 030c 05       		.uleb128 .LEHE111-.LEHB111
 3579 030d 00       		.uleb128 0
 3580 030e 00       		.uleb128 0
 3581              	.LLSDACSE1340:
 3582 030f 01       		.byte	0x1
 3583 0310 00       		.byte	0
 3584 0311 00       		.byte	0
 3585 0312 7D       		.byte	0x7d
 3586 0313 00       		.align 4
 3587 0314 00000000 		.long	0
 3588              	
 3589              	.LLSDATT1340:
 3590              		.text
 3592 1981 90       		.align 2
 3594              	_ZN12_GLOBAL__N_154XmlTestReporterFixtureFailureMessageIsXMLEscapedHelperC2ERKN8UnitTest11TestDetai
 3595              	.LFB1342:
 114:TestXmlTestReporter.cpp **** 
 115:TestXmlTestReporter.cpp **** TEST_FIXTURE(XmlTestReporterFixture, FailureMessageIsXMLEscaped)
 3596              		.loc 3 115 0
 3597              		.cfi_startproc
 3598 1982 55       		pushq	%rbp
 3599              		.cfi_def_cfa_offset 16
 3600              		.cfi_offset 6, -16
 3601 1983 4889E5   		movq	%rsp, %rbp
 3602              		.cfi_def_cfa_register 6
 3603 1986 4883EC10 		subq	$16, %rsp
 3604 198a 48897DF8 		movq	%rdi, -8(%rbp)
 3605 198e 488975F0 		movq	%rsi, -16(%rbp)
 3606              	.LBB91:
 3607              		.loc 3 115 0
 3608 1992 488B45F8 		movq	-8(%rbp), %rax
 3609 1996 4889C7   		movq	%rax, %rdi
 3610 1999 E862E6FF 		call	_ZN12_GLOBAL__N_122XmlTestReporterFixtureC2Ev
 3610      FF
 3611 199e 488B45F8 		movq	-8(%rbp), %rax
 3612 19a2 488B55F0 		movq	-16(%rbp), %rdx
 3613 19a6 48899088 		movq	%rdx, 392(%rax)
 3613      010000
 3614              	.LBE91:
 3615 19ad C9       		leave
 3616              		.cfi_def_cfa 7, 8
 3617 19ae C3       		ret
 3618              		.cfi_endproc
 3619              	.LFE1342:
 3621              		.set	_ZN12_GLOBAL__N_154XmlTestReporterFixtureFailureMessageIsXMLEscapedHelperC1ERKN8UnitTest11Tes
 3622              		.section	.rodata
 3623              	.LC30:
 3624 0584 4661696C 		.string	"FailureMessageIsXMLEscaped"
 3624      7572654D 
 3624      65737361 
 3624      67654973 
 3624      584D4C45 
 3625              		.text
 3626 19af 90       		.align 2
 3628              	_ZN12_GLOBAL__N_152TestXmlTestReporterFixtureFailureMessageIsXMLEscapedC2Ev:
 3629              	.LFB1345:
 3630              		.loc 3 115 0
 3631              		.cfi_startproc
 3632 19b0 55       		pushq	%rbp
 3633              		.cfi_def_cfa_offset 16
 3634              		.cfi_offset 6, -16
 3635 19b1 4889E5   		movq	%rsp, %rbp
 3636              		.cfi_def_cfa_register 6
 3637 19b4 4883EC10 		subq	$16, %rsp
 3638 19b8 48897DF8 		movq	%rdi, -8(%rbp)
 3639              	.LBB92:
 3640              		.loc 3 115 0
 3641 19bc E8000000 		call	_ZN13UnitTestSuite12GetSuiteNameEv
 3641      00
 3642 19c1 4889C2   		movq	%rax, %rdx
 3643 19c4 488B45F8 		movq	-8(%rbp), %rax
 3644 19c8 41B87300 		movl	$115, %r8d
 3644      0000
 3645 19ce B9000000 		movl	$.LC1, %ecx
 3645      00
 3646 19d3 BE000000 		movl	$.LC30, %esi
 3646      00
 3647 19d8 4889C7   		movq	%rax, %rdi
 3648 19db E8000000 		call	_ZN8UnitTest4TestC2EPKcS2_S2_i
 3648      00
 3649 19e0 488B45F8 		movq	-8(%rbp), %rax
 3650 19e4 48C70000 		movq	$_ZTVN12_GLOBAL__N_152TestXmlTestReporterFixtureFailureMessageIsXMLEscapedE+16, (%rax)
 3650      000000
 3651              	.LBE92:
 3652 19eb C9       		leave
 3653              		.cfi_def_cfa 7, 8
 3654 19ec C3       		ret
 3655              		.cfi_endproc
 3656              	.LFE1345:
 3658              		.set	_ZN12_GLOBAL__N_152TestXmlTestReporterFixtureFailureMessageIsXMLEscapedC1Ev,_ZN12_GLOBAL__N_1
 3659              		.local	_ZN12_GLOBAL__N_160testXmlTestReporterFixtureFailureMessageIsXMLEscapedInstanceE
 3660              		.comm	_ZN12_GLOBAL__N_160testXmlTestReporterFixtureFailureMessageIsXMLEscapedInstanceE,56,32
 3661              		.local	_ZN12_GLOBAL__N_153adderXmlTestReporterFixtureFailureMessageIsXMLEscapedE
 3662              		.comm	_ZN12_GLOBAL__N_153adderXmlTestReporterFixtureFailureMessageIsXMLEscapedE,1,1
 3663 19ed 90       		.align 2
 3665              	_ZN12_GLOBAL__N_154XmlTestReporterFixtureFailureMessageIsXMLEscapedHelperD2Ev:
 3666              	.LFB1349:
 3667              		.loc 3 115 0
 3668              		.cfi_startproc
 3669 19ee 55       		pushq	%rbp
 3670              		.cfi_def_cfa_offset 16
 3671              		.cfi_offset 6, -16
 3672 19ef 4889E5   		movq	%rsp, %rbp
 3673              		.cfi_def_cfa_register 6
 3674 19f2 4883EC10 		subq	$16, %rsp
 3675 19f6 48897DF8 		movq	%rdi, -8(%rbp)
 3676              	.LBB93:
 3677              		.loc 3 115 0
 3678 19fa 488B45F8 		movq	-8(%rbp), %rax
 3679 19fe 4889C7   		movq	%rax, %rdi
 3680 1a01 E856E6FF 		call	_ZN12_GLOBAL__N_122XmlTestReporterFixtureD2Ev
 3680      FF
 3681              	.LBE93:
 3682 1a06 C9       		leave
 3683              		.cfi_def_cfa 7, 8
 3684 1a07 C3       		ret
 3685              		.cfi_endproc
 3686              	.LFE1349:
 3688              		.set	_ZN12_GLOBAL__N_154XmlTestReporterFixtureFailureMessageIsXMLEscapedHelperD1Ev,_ZN12_GLOBAL__N
 3689              		.align 2
 3691              	_ZNK12_GLOBAL__N_152TestXmlTestReporterFixtureFailureMessageIsXMLEscaped7RunImplEv:
 3692              	.LFB1347:
 3693              		.loc 3 115 0
 3694              		.cfi_startproc
 3695              		.cfi_personality 0x3,__gxx_personality_v0
 3696              		.cfi_lsda 0x3,.LLSDA1347
 3697 1a08 55       		pushq	%rbp
 3698              		.cfi_def_cfa_offset 16
 3699              		.cfi_offset 6, -16
 3700 1a09 4889E5   		movq	%rsp, %rbp
 3701              		.cfi_def_cfa_register 6
 3702 1a0c 4154     		pushq	%r12
 3703 1a0e 53       		pushq	%rbx
 3704 1a0f 4881ECC0 		subq	$448, %rsp
 3704      010000
 3705              		.cfi_offset 12, -24
 3706              		.cfi_offset 3, -32
 3707 1a16 4889BD38 		movq	%rdi, -456(%rbp)
 3707      FEFFFF
 3708              	.LBB94:
 3709              		.loc 3 115 0
 3710 1a1d C6854FFE 		movb	$0, -433(%rbp)
 3710      FFFF00
 3711              	.LBB95:
 3712 1a24 488B8538 		movq	-456(%rbp), %rax
 3712      FEFFFF
 3713 1a2b 488D5008 		leaq	8(%rax), %rdx
 3714 1a2f 488D8560 		leaq	-416(%rbp), %rax
 3714      FEFFFF
 3715 1a36 4889D6   		movq	%rdx, %rsi
 3716 1a39 4889C7   		movq	%rax, %rdi
 3717              	.LEHB112:
 3718 1a3c E841FFFF 		call	_ZN12_GLOBAL__N_154XmlTestReporterFixtureFailureMessageIsXMLEscapedHelperC1ERKN8UnitTest11Tes
 3718      FF
 3719              	.LEHE112:
 3720              		.loc 3 115 0 is_stmt 0 discriminator 1
 3721 1a41 C6854FFE 		movb	$1, -433(%rbp)
 3721      FFFF01
 3722 1a48 488B8538 		movq	-456(%rbp), %rax
 3722      FEFFFF
 3723 1a4f 488D5008 		leaq	8(%rax), %rdx
 3724 1a53 488D8560 		leaq	-416(%rbp), %rax
 3724      FEFFFF
 3725 1a5a 4889D6   		movq	%rdx, %rsi
 3726 1a5d 4889C7   		movq	%rax, %rdi
 3727              	.LEHB113:
 3728 1a60 E8B91B00 		call	_ZN8UnitTest11ExecuteTestIN12_GLOBAL__N_154XmlTestReporterFixtureFailureMessageIsXMLEscapedHe
 3728      00
 3729              	.LEHE113:
 3730 1a65 488D8560 		leaq	-416(%rbp), %rax
 3730      FEFFFF
 3731 1a6c 4889C7   		movq	%rax, %rdi
 3732              	.LEHB114:
 3733 1a6f E87AFFFF 		call	_ZN12_GLOBAL__N_154XmlTestReporterFixtureFailureMessageIsXMLEscapedHelperD1Ev
 3733      FF
 3734              	.LEHE114:
 3735              	.LBE95:
 3736              	.LBE94:
 3737              		.loc 3 115 0
 3738 1a74 E9640200 		jmp	.L218
 3738      00
 3739              	.L212:
 3740 1a79 4989C4   		movq	%rax, %r12
 3741 1a7c 4889D3   		movq	%rdx, %rbx
 3742              	.LBB103:
 3743              	.LBB96:
 3744 1a7f 488D8560 		leaq	-416(%rbp), %rax
 3744      FEFFFF
 3745 1a86 4889C7   		movq	%rax, %rdi
 3746 1a89 E860FFFF 		call	_ZN12_GLOBAL__N_154XmlTestReporterFixtureFailureMessageIsXMLEscapedHelperD1Ev
 3746      FF
 3747 1a8e 4C89E0   		movq	%r12, %rax
 3748 1a91 4889DA   		movq	%rbx, %rdx
 3749 1a94 EB00     		jmp	.L200
 3750              	.L211:
 3751              	.L200:
 3752 1a96 4883FA01 		cmpq	$1, %rdx
 3753 1a9a 745C     		je	.L202
 3754 1a9c 4883FA02 		cmpq	$2, %rdx
 3755 1aa0 0F84F400 		je	.L203
 3755      0000
 3756 1aa6 E9980100 		jmp	.L217
 3756      00
 3757              	.L213:
 3758 1aab 4889C3   		movq	%rax, %rbx
 3759              	.LBE96:
 3760              	.LBB97:
 3761 1aae E8000000 		call	__cxa_end_catch
 3761      00
 3762 1ab3 4889D8   		movq	%rbx, %rax
 3763 1ab6 4889C7   		movq	%rax, %rdi
 3764              	.LEHB115:
 3765 1ab9 E8000000 		call	_Unwind_Resume
 3765      00
 3766              	.LEHE115:
 3767              	.L214:
 3768 1abe 4889C3   		movq	%rax, %rbx
 3769              	.LBE97:
 3770              	.LBB98:
 3771              	.LBB99:
 3772 1ac1 488D8560 		leaq	-416(%rbp), %rax
 3772      FEFFFF
 3773 1ac8 4889C7   		movq	%rax, %rdi
 3774 1acb E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 3774      00
 3775 1ad0 EB03     		jmp	.L206
 3776              	.L215:
 3777 1ad2 4889C3   		movq	%rax, %rbx
 3778              	.L206:
 3779              	.LBE99:
 3780 1ad5 E8000000 		call	__cxa_end_catch
 3780      00
 3781 1ada 4889D8   		movq	%rbx, %rax
 3782 1add 4889C7   		movq	%rax, %rdi
 3783              	.LEHB116:
 3784 1ae0 E8000000 		call	_Unwind_Resume
 3784      00
 3785              	.LEHE116:
 3786              	.L216:
 3787 1ae5 4889C3   		movq	%rax, %rbx
 3788              	.LBE98:
 3789 1ae8 E8000000 		call	__cxa_end_catch
 3789      00
 3790 1aed 4889D8   		movq	%rbx, %rax
 3791 1af0 4889C7   		movq	%rax, %rdi
 3792              	.LEHB117:
 3793 1af3 E8000000 		call	_Unwind_Resume
 3793      00
 3794              	.LEHE117:
 3795              	.L202:
 3796              	.LBB101:
 3797 1af8 4889C7   		movq	%rax, %rdi
 3798 1afb E8000000 		call	__cxa_begin_catch
 3798      00
 3799 1b00 48898550 		movq	%rax, -432(%rbp)
 3799      FEFFFF
 3800 1b07 488B8550 		movq	-432(%rbp), %rax
 3800      FEFFFF
 3801 1b0e 488B00   		movq	(%rax), %rax
 3802 1b11 4883C010 		addq	$16, %rax
 3803 1b15 488B00   		movq	(%rax), %rax
 3804 1b18 488B9550 		movq	-432(%rbp), %rdx
 3804      FEFFFF
 3805 1b1f 4889D7   		movq	%rdx, %rdi
 3806 1b22 FFD0     		call	*%rax
 3807 1b24 4889C3   		movq	%rax, %rbx
 3808 1b27 488B8550 		movq	-432(%rbp), %rax
 3808      FEFFFF
 3809 1b2e 4889C7   		movq	%rax, %rdi
 3810              	.LEHB118:
 3811 1b31 E8000000 		call	_ZNK8UnitTest15AssertException10LineNumberEv
 3811      00
 3812 1b36 4189C4   		movl	%eax, %r12d
 3813 1b39 488B8550 		movq	-432(%rbp), %rax
 3813      FEFFFF
 3814 1b40 4889C7   		movq	%rax, %rdi
 3815 1b43 E8000000 		call	_ZNK8UnitTest15AssertException8FilenameEv
 3815      00
 3816              		.loc 3 115 0 discriminator 1
 3817 1b48 4889C1   		movq	%rax, %rcx
 3818 1b4b 488B8538 		movq	-456(%rbp), %rax
 3818      FEFFFF
 3819 1b52 488B5008 		movq	8(%rax), %rdx
 3820 1b56 488B8538 		movq	-456(%rbp), %rax
 3820      FEFFFF
 3821 1b5d 488B7010 		movq	16(%rax), %rsi
 3822 1b61 488D8560 		leaq	-416(%rbp), %rax
 3822      FEFFFF
 3823 1b68 4589E0   		movl	%r12d, %r8d
 3824 1b6b 4889C7   		movq	%rax, %rdi
 3825 1b6e E8000000 		call	_ZN8UnitTest11TestDetailsC1EPKcS2_S2_i
 3825      00
 3826              		.loc 3 115 0 discriminator 3
 3827 1b73 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 3827      00
 3828 1b78 488B00   		movq	(%rax), %rax
 3829 1b7b 488D8D60 		leaq	-416(%rbp), %rcx
 3829      FEFFFF
 3830 1b82 4889DA   		movq	%rbx, %rdx
 3831 1b85 4889CE   		movq	%rcx, %rsi
 3832 1b88 4889C7   		movq	%rax, %rdi
 3833 1b8b E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 3833      00
 3834              	.LEHE118:
 3835              		.loc 3 115 0 discriminator 1
 3836 1b90 E8000000 		call	__cxa_end_catch
 3836      00
 3837              	.LBE101:
 3838              	.LBE103:
 3839 1b95 E9430100 		jmp	.L218
 3839      00
 3840              	.L203:
 3841              	.LBB104:
 3842              	.LBB102:
 3843              		.loc 3 115 0
 3844 1b9a 4889C7   		movq	%rax, %rdi
 3845 1b9d E8000000 		call	__cxa_begin_catch
 3845      00
 3846 1ba2 48898558 		movq	%rax, -424(%rbp)
 3846      FEFFFF
 3847              	.LBB100:
 3848 1ba9 488D8560 		leaq	-416(%rbp), %rax
 3848      FEFFFF
 3849 1bb0 4889C7   		movq	%rax, %rdi
 3850              	.LEHB119:
 3851 1bb3 E8000000 		call	_ZN8UnitTest15MemoryOutStreamC1Ev
 3851      00
 3852              	.LEHE119:
 3853              		.loc 3 115 0 discriminator 1
 3854 1bb8 488B8558 		movq	-424(%rbp), %rax
 3854      FEFFFF
 3855 1bbf 488B00   		movq	(%rax), %rax
 3856 1bc2 4883C010 		addq	$16, %rax
 3857 1bc6 488B00   		movq	(%rax), %rax
 3858 1bc9 488B9558 		movq	-424(%rbp), %rdx
 3858      FEFFFF
 3859 1bd0 4889D7   		movq	%rdx, %rdi
 3860 1bd3 FFD0     		call	*%rax
 3861 1bd5 4889C3   		movq	%rax, %rbx
 3862 1bd8 488D8560 		leaq	-416(%rbp), %rax
 3862      FEFFFF
 3863 1bdf BE000000 		movl	$.LC3, %esi
 3863      00
 3864 1be4 4889C7   		movq	%rax, %rdi
 3865              	.LEHB120:
 3866 1be7 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
 3866      00
 3867 1bec 4889DE   		movq	%rbx, %rsi
 3868 1bef 4889C7   		movq	%rax, %rdi
 3869 1bf2 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
 3869      00
 3870 1bf7 488D8560 		leaq	-416(%rbp), %rax
 3870      FEFFFF
 3871 1bfe 4889C7   		movq	%rax, %rdi
 3872 1c01 E8000000 		call	_ZNK8UnitTest15MemoryOutStream7GetTextEv
 3872      00
 3873 1c06 4889C3   		movq	%rax, %rbx
 3874 1c09 488B8538 		movq	-456(%rbp), %rax
 3874      FEFFFF
 3875 1c10 4C8D6008 		leaq	8(%rax), %r12
 3876 1c14 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 3876      00
 3877 1c19 488B00   		movq	(%rax), %rax
 3878 1c1c 4889DA   		movq	%rbx, %rdx
 3879 1c1f 4C89E6   		movq	%r12, %rsi
 3880 1c22 4889C7   		movq	%rax, %rdi
 3881 1c25 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 3881      00
 3882              	.LEHE120:
 3883 1c2a 488D8560 		leaq	-416(%rbp), %rax
 3883      FEFFFF
 3884 1c31 4889C7   		movq	%rax, %rdi
 3885              	.LEHB121:
 3886 1c34 E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 3886      00
 3887              	.LEHE121:
 3888              	.LBE100:
 3889              		.loc 3 115 0
 3890 1c39 E8000000 		call	__cxa_end_catch
 3890      00
 3891              	.LBE102:
 3892              	.LBE104:
 3893 1c3e E99A0000 		jmp	.L218
 3893      00
 3894              	.L217:
 3895              	.LBB105:
 3896 1c43 4889C7   		movq	%rax, %rdi
 3897 1c46 E8000000 		call	__cxa_begin_catch
 3897      00
 3898 1c4b 80BD4FFE 		cmpb	$0, -433(%rbp)
 3898      FFFF00
 3899 1c52 7443     		je	.L209
 3900              		.loc 3 115 0 discriminator 1
 3901 1c54 488B8538 		movq	-456(%rbp), %rax
 3901      FEFFFF
 3902 1c5b 488D4808 		leaq	8(%rax), %rcx
 3903 1c5f 488D8560 		leaq	-416(%rbp), %rax
 3903      FEFFFF
 3904 1c66 BA730000 		movl	$115, %edx
 3904      00
 3905 1c6b 4889CE   		movq	%rcx, %rsi
 3906 1c6e 4889C7   		movq	%rax, %rdi
 3907              	.LEHB122:
 3908 1c71 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 3908      00
 3909 1c76 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 3909      00
 3910 1c7b 488B00   		movq	(%rax), %rax
 3911 1c7e 488D8D60 		leaq	-416(%rbp), %rcx
 3911      FEFFFF
 3912 1c85 BA000000 		movl	$.LC4, %edx
 3912      00
 3913 1c8a 4889CE   		movq	%rcx, %rsi
 3914 1c8d 4889C7   		movq	%rax, %rdi
 3915 1c90 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 3915      00
 3916 1c95 EB41     		jmp	.L210
 3917              	.L209:
 3918              		.loc 3 115 0 discriminator 2
 3919 1c97 488B8538 		movq	-456(%rbp), %rax
 3919      FEFFFF
 3920 1c9e 488D4808 		leaq	8(%rax), %rcx
 3921 1ca2 488D8560 		leaq	-416(%rbp), %rax
 3921      FEFFFF
 3922 1ca9 BA730000 		movl	$115, %edx
 3922      00
 3923 1cae 4889CE   		movq	%rcx, %rsi
 3924 1cb1 4889C7   		movq	%rax, %rdi
 3925 1cb4 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 3925      00
 3926              		.loc 3 115 0 discriminator 1
 3927 1cb9 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 3927      00
 3928 1cbe 488B00   		movq	(%rax), %rax
 3929 1cc1 488D8D60 		leaq	-416(%rbp), %rcx
 3929      FEFFFF
 3930 1cc8 BA000000 		movl	$.LC5, %edx
 3930      00
 3931 1ccd 4889CE   		movq	%rcx, %rsi
 3932 1cd0 4889C7   		movq	%rax, %rdi
 3933 1cd3 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 3933      00
 3934              	.LEHE122:
 3935              	.L210:
 3936              	.LEHB123:
 3937 1cd8 E8000000 		call	__cxa_end_catch
 3937      00
 3938              	.LEHE123:
 3939              	.L218:
 3940              	.LBE105:
 3941              		.loc 3 115 0
 3942 1cdd 90       		nop
 3943 1cde 4881C4C0 		addq	$448, %rsp
 3943      010000
 3944 1ce5 5B       		popq	%rbx
 3945 1ce6 415C     		popq	%r12
 3946 1ce8 5D       		popq	%rbp
 3947              		.cfi_def_cfa 7, 8
 3948 1ce9 C3       		ret
 3949              		.cfi_endproc
 3950              	.LFE1347:
 3951              		.section	.gcc_except_table
 3952              		.align 4
 3953              	.LLSDA1347:
 3954 0318 FF       		.byte	0xff
 3955 0319 03       		.byte	0x3
 3956 031a 59       		.uleb128 .LLSDATT1347-.LLSDATTD1347
 3957              	.LLSDATTD1347:
 3958 031b 01       		.byte	0x1
 3959 031c 40       		.uleb128 .LLSDACSE1347-.LLSDACSB1347
 3960              	.LLSDACSB1347:
 3961 031d 34       		.uleb128 .LEHB112-.LFB1347
 3962 031e 05       		.uleb128 .LEHE112-.LEHB112
 3963 031f 8E01     		.uleb128 .L211-.LFB1347
 3964 0321 05       		.uleb128 0x5
 3965 0322 58       		.uleb128 .LEHB113-.LFB1347
 3966 0323 05       		.uleb128 .LEHE113-.LEHB113
 3967 0324 71       		.uleb128 .L212-.LFB1347
 3968 0325 07       		.uleb128 0x7
 3969 0326 67       		.uleb128 .LEHB114-.LFB1347
 3970 0327 05       		.uleb128 .LEHE114-.LEHB114
 3971 0328 8E01     		.uleb128 .L211-.LFB1347
 3972 032a 05       		.uleb128 0x5
 3973 032b B101     		.uleb128 .LEHB115-.LFB1347
 3974 032d 05       		.uleb128 .LEHE115-.LEHB115
 3975 032e 00       		.uleb128 0
 3976 032f 00       		.uleb128 0
 3977 0330 D801     		.uleb128 .LEHB116-.LFB1347
 3978 0332 05       		.uleb128 .LEHE116-.LEHB116
 3979 0333 00       		.uleb128 0
 3980 0334 00       		.uleb128 0
 3981 0335 EB01     		.uleb128 .LEHB117-.LFB1347
 3982 0337 05       		.uleb128 .LEHE117-.LEHB117
 3983 0338 00       		.uleb128 0
 3984 0339 00       		.uleb128 0
 3985 033a A902     		.uleb128 .LEHB118-.LFB1347
 3986 033c 5F       		.uleb128 .LEHE118-.LEHB118
 3987 033d A301     		.uleb128 .L213-.LFB1347
 3988 033f 00       		.uleb128 0
 3989 0340 AB03     		.uleb128 .LEHB119-.LFB1347
 3990 0342 05       		.uleb128 .LEHE119-.LEHB119
 3991 0343 CA01     		.uleb128 .L215-.LFB1347
 3992 0345 00       		.uleb128 0
 3993 0346 DF03     		.uleb128 .LEHB120-.LFB1347
 3994 0348 43       		.uleb128 .LEHE120-.LEHB120
 3995 0349 B601     		.uleb128 .L214-.LFB1347
 3996 034b 00       		.uleb128 0
 3997 034c AC04     		.uleb128 .LEHB121-.LFB1347
 3998 034e 05       		.uleb128 .LEHE121-.LEHB121
 3999 034f CA01     		.uleb128 .L215-.LFB1347
 4000 0351 00       		.uleb128 0
 4001 0352 E904     		.uleb128 .LEHB122-.LFB1347
 4002 0354 67       		.uleb128 .LEHE122-.LEHB122
 4003 0355 DD01     		.uleb128 .L216-.LFB1347
 4004 0357 00       		.uleb128 0
 4005 0358 D005     		.uleb128 .LEHB123-.LFB1347
 4006 035a 05       		.uleb128 .LEHE123-.LEHB123
 4007 035b 00       		.uleb128 0
 4008 035c 00       		.uleb128 0
 4009              	.LLSDACSE1347:
 4010 035d 03       		.byte	0x3
 4011 035e 00       		.byte	0
 4012 035f 02       		.byte	0x2
 4013 0360 7D       		.byte	0x7d
 4014 0361 01       		.byte	0x1
 4015 0362 7D       		.byte	0x7d
 4016 0363 00       		.byte	0
 4017 0364 7D       		.byte	0x7d
 4018 0365 000000   		.align 4
 4019 0368 00000000 		.long	0
 4020              	
 4021 036c 00000000 		.long	_ZTISt9exception
 4022 0370 00000000 		.long	_ZTIN8UnitTest15AssertExceptionE
 4023              	.LLSDATT1347:
 4024              		.text
 4026              		.section	.rodata
 4027              	.LC31:
 4028 059f 2227263C 		.string	"\"'&<>"
 4028      3E00
 4029 05a5 000000   		.align 8
 4030              	.LC32:
 4031 05a8 3C3F786D 		.string	"<?xml version=\"1.0\"?><unittest-results tests=\"1\" failedtests=\"1\" failures=\"1\" tim
 4031      6C207665 
 4031      7273696F 
 4031      6E3D2231 
 4031      2E30223F 
 4032              		.text
 4033              		.align 2
 4035              	_ZN12_GLOBAL__N_154XmlTestReporterFixtureFailureMessageIsXMLEscapedHelper7RunImplEv:
 4036              	.LFB1351:
 116:TestXmlTestReporter.cpp **** {
 4037              		.loc 3 116 0 is_stmt 1
 4038              		.cfi_startproc
 4039              		.cfi_personality 0x3,__gxx_personality_v0
 4040              		.cfi_lsda 0x3,.LLSDA1351
 4041 1cea 55       		pushq	%rbp
 4042              		.cfi_def_cfa_offset 16
 4043              		.cfi_offset 6, -16
 4044 1ceb 4889E5   		movq	%rsp, %rbp
 4045              		.cfi_def_cfa_register 6
 4046 1cee 53       		pushq	%rbx
 4047 1cef 4883EC68 		subq	$104, %rsp
 4048              		.cfi_offset 3, -24
 4049 1cf3 48897D98 		movq	%rdi, -104(%rbp)
 4050              	.LBB106:
 117:TestXmlTestReporter.cpp ****     TestDetails const details("TestName", "suite", "filename.h", 4321);
 4051              		.loc 3 117 0
 4052 1cf7 488D45B0 		leaq	-80(%rbp), %rax
 4053 1cfb 41B8E110 		movl	$4321, %r8d
 4053      0000
 4054 1d01 B9000000 		movl	$.LC6, %ecx
 4054      00
 4055 1d06 BA000000 		movl	$.LC7, %edx
 4055      00
 4056 1d0b BE000000 		movl	$.LC8, %esi
 4056      00
 4057 1d10 4889C7   		movq	%rax, %rdi
 4058              	.LEHB124:
 4059 1d13 E8000000 		call	_ZN8UnitTest11TestDetailsC1EPKcS2_S2_i
 4059      00
 118:TestXmlTestReporter.cpp **** 
 119:TestXmlTestReporter.cpp ****     reporter.ReportTestStart(details);
 4060              		.loc 3 119 0
 4061 1d18 488B4598 		movq	-104(%rbp), %rax
 4062 1d1c 488D9060 		leaq	352(%rax), %rdx
 4062      010000
 4063 1d23 488D45B0 		leaq	-80(%rbp), %rax
 4064 1d27 4889C6   		movq	%rax, %rsi
 4065 1d2a 4889D7   		movq	%rdx, %rdi
 4066 1d2d E8000000 		call	_ZN8UnitTest20DeferredTestReporter15ReportTestStartERKNS_11TestDetailsE
 4066      00
 120:TestXmlTestReporter.cpp ****     reporter.ReportFailure(details, "\"\'&<>");
 4067              		.loc 3 120 0
 4068 1d32 488B4598 		movq	-104(%rbp), %rax
 4069 1d36 488D8860 		leaq	352(%rax), %rcx
 4069      010000
 4070 1d3d 488D45B0 		leaq	-80(%rbp), %rax
 4071 1d41 BA000000 		movl	$.LC31, %edx
 4071      00
 4072 1d46 4889C6   		movq	%rax, %rsi
 4073 1d49 4889CF   		movq	%rcx, %rdi
 4074 1d4c E8000000 		call	_ZN8UnitTest20DeferredTestReporter13ReportFailureERKNS_11TestDetailsEPKc
 4074      00
 121:TestXmlTestReporter.cpp ****     reporter.ReportTestFinish(details, 0.1f);
 4075              		.loc 3 121 0
 4076 1d51 488B4598 		movq	-104(%rbp), %rax
 4077 1d55 488D9060 		leaq	352(%rax), %rdx
 4077      010000
 4078 1d5c 488D45B0 		leaq	-80(%rbp), %rax
 4079 1d60 F30F1005 		movss	.LC10(%rip), %xmm0
 4079      00000000 
 4080 1d68 4889C6   		movq	%rax, %rsi
 4081 1d6b 4889D7   		movq	%rdx, %rdi
 4082 1d6e E8000000 		call	_ZN8UnitTest20DeferredTestReporter16ReportTestFinishERKNS_11TestDetailsEf
 4082      00
 122:TestXmlTestReporter.cpp ****     reporter.ReportSummary(1, 1, 1, 0.1f);
 4083              		.loc 3 122 0
 4084 1d73 488B4598 		movq	-104(%rbp), %rax
 4085 1d77 48056001 		addq	$352, %rax
 4085      0000
 4086 1d7d F30F1005 		movss	.LC10(%rip), %xmm0
 4086      00000000 
 4087 1d85 B9010000 		movl	$1, %ecx
 4087      00
 4088 1d8a BA010000 		movl	$1, %edx
 4088      00
 4089 1d8f BE010000 		movl	$1, %esi
 4089      00
 4090 1d94 4889C7   		movq	%rax, %rdi
 4091 1d97 E8000000 		call	_ZN8UnitTest15XmlTestReporter13ReportSummaryEiiif
 4091      00
 4092              	.LEHE124:
 123:TestXmlTestReporter.cpp **** 
 124:TestXmlTestReporter.cpp ****     char const* expected =
 125:TestXmlTestReporter.cpp ****         "<?xml version=\"1.0\"?>"
 126:TestXmlTestReporter.cpp ****         "<unittest-results tests=\"1\" failedtests=\"1\" failures=\"1\" time=\"0.1\">"
 127:TestXmlTestReporter.cpp ****         "<test suite=\"suite\" name=\"TestName\" time=\"0.1\">"
 128:TestXmlTestReporter.cpp ****         "<failure message=\"filename.h(4321) : &quot;&apos;&amp;&lt;&gt;\"/>"
 129:TestXmlTestReporter.cpp ****         "</test>"
 130:TestXmlTestReporter.cpp ****         "</unittest-results>";
 4093              		.loc 3 130 0
 4094 1d9c 48C745A8 		movq	$.LC32, -88(%rbp)
 4094      00000000 
 4095              	.LEHB125:
 131:TestXmlTestReporter.cpp **** 
 132:TestXmlTestReporter.cpp ****     CHECK_EQUAL(expected, output.str());
 4096              		.loc 3 132 0
 4097 1da4 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 4097      00
 4098 1da9 488B08   		movq	(%rax), %rcx
 4099 1dac 488D45D0 		leaq	-48(%rbp), %rax
 4100 1db0 BA840000 		movl	$132, %edx
 4100      00
 4101 1db5 4889CE   		movq	%rcx, %rsi
 4102 1db8 4889C7   		movq	%rax, %rdi
 4103 1dbb E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 4103      00
 4104              		.loc 3 132 0 is_stmt 0 discriminator 1
 4105 1dc0 488B5598 		movq	-104(%rbp), %rdx
 4106 1dc4 488D45A0 		leaq	-96(%rbp), %rax
 4107 1dc8 4889D6   		movq	%rdx, %rsi
 4108 1dcb 4889C7   		movq	%rax, %rdi
 4109 1dce E8000000 		call	_ZNKSt19basic_ostringstreamIcSt11char_traitsIcESaIcEE3strEv
 4109      00
 4110              	.LEHE125:
 4111              	.LEHB126:
 4112              		.loc 3 132 0 discriminator 2
 4113 1dd3 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 4113      00
 4114 1dd8 488B00   		movq	(%rax), %rax
 4115 1ddb 488D4DD0 		leaq	-48(%rbp), %rcx
 4116 1ddf 488D55A0 		leaq	-96(%rbp), %rdx
 4117 1de3 488D75A8 		leaq	-88(%rbp), %rsi
 4118 1de7 4889C7   		movq	%rax, %rdi
 4119 1dea E8000000 		call	_ZN8UnitTest10CheckEqualIPKcSsEEvRNS_11TestResultsERKT_RKT0_RKNS_11TestDetailsE
 4119      00
 4120              	.LEHE126:
 4121              		.loc 3 132 0 discriminator 1
 4122 1def 488D45A0 		leaq	-96(%rbp), %rax
 4123 1df3 4889C7   		movq	%rax, %rdi
 4124              	.LEHB127:
 4125 1df6 E8000000 		call	_ZNSsD1Ev
 4125      00
 4126              	.LEHE127:
 4127              	.LBE106:
 133:TestXmlTestReporter.cpp **** }
 4128              		.loc 3 133 0 is_stmt 1
 4129 1dfb EB6C     		jmp	.L227
 4130              	.L225:
 4131 1dfd 4889C3   		movq	%rax, %rbx
 4132              	.LBB107:
 132:TestXmlTestReporter.cpp **** }
 4133              		.loc 3 132 0
 4134 1e00 488D45A0 		leaq	-96(%rbp), %rax
 4135 1e04 4889C7   		movq	%rax, %rdi
 4136 1e07 E8000000 		call	_ZNSsD1Ev
 4136      00
 4137 1e0c 4889D8   		movq	%rbx, %rax
 4138 1e0f EB13     		jmp	.L221
 4139              	.L226:
 4140 1e11 4889C3   		movq	%rax, %rbx
 4141 1e14 E8000000 		call	__cxa_end_catch
 4141      00
 4142 1e19 4889D8   		movq	%rbx, %rax
 4143 1e1c 4889C7   		movq	%rax, %rdi
 4144              	.LEHB128:
 4145 1e1f E8000000 		call	_Unwind_Resume
 4145      00
 4146              	.LEHE128:
 4147              	.L224:
 4148              	.L221:
 4149 1e24 4889C7   		movq	%rax, %rdi
 4150 1e27 E8000000 		call	__cxa_begin_catch
 4150      00
 4151              	.LEHB129:
 4152 1e2c E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 4152      00
 4153 1e31 488B08   		movq	(%rax), %rcx
 4154 1e34 488D45D0 		leaq	-48(%rbp), %rax
 4155 1e38 BA840000 		movl	$132, %edx
 4155      00
 4156 1e3d 4889CE   		movq	%rcx, %rsi
 4157 1e40 4889C7   		movq	%rax, %rdi
 4158 1e43 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 4158      00
 132:TestXmlTestReporter.cpp **** }
 4159              		.loc 3 132 0 is_stmt 0 discriminator 1
 4160 1e48 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 4160      00
 4161 1e4d 488B00   		movq	(%rax), %rax
 4162 1e50 488D4DD0 		leaq	-48(%rbp), %rcx
 4163 1e54 BA000000 		movl	$.LC12, %edx
 4163      00
 4164 1e59 4889CE   		movq	%rcx, %rsi
 4165 1e5c 4889C7   		movq	%rax, %rdi
 4166 1e5f E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 4166      00
 4167              	.LEHE129:
 4168              	.LEHB130:
 4169 1e64 E8000000 		call	__cxa_end_catch
 4169      00
 4170              	.LEHE130:
 4171              	.L227:
 4172              	.LBE107:
 4173              		.loc 3 133 0 is_stmt 1
 4174 1e69 90       		nop
 4175 1e6a 4883C468 		addq	$104, %rsp
 4176 1e6e 5B       		popq	%rbx
 4177 1e6f 5D       		popq	%rbp
 4178              		.cfi_def_cfa 7, 8
 4179 1e70 C3       		ret
 4180              		.cfi_endproc
 4181              	.LFE1351:
 4182              		.section	.gcc_except_table
 4183              		.align 4
 4184              	.LLSDA1351:
 4185 0374 FF       		.byte	0xff
 4186 0375 03       		.byte	0x3
 4187 0376 31       		.uleb128 .LLSDATT1351-.LLSDATTD1351
 4188              	.LLSDATTD1351:
 4189 0377 01       		.byte	0x1
 4190 0378 27       		.uleb128 .LLSDACSE1351-.LLSDACSB1351
 4191              	.LLSDACSB1351:
 4192 0379 29       		.uleb128 .LEHB124-.LFB1351
 4193 037a 8901     		.uleb128 .LEHE124-.LEHB124
 4194 037c 00       		.uleb128 0
 4195 037d 00       		.uleb128 0
 4196 037e BA01     		.uleb128 .LEHB125-.LFB1351
 4197 0380 2F       		.uleb128 .LEHE125-.LEHB125
 4198 0381 BA02     		.uleb128 .L224-.LFB1351
 4199 0383 01       		.uleb128 0x1
 4200 0384 E901     		.uleb128 .LEHB126-.LFB1351
 4201 0386 1C       		.uleb128 .LEHE126-.LEHB126
 4202 0387 9302     		.uleb128 .L225-.LFB1351
 4203 0389 03       		.uleb128 0x3
 4204 038a 8C02     		.uleb128 .LEHB127-.LFB1351
 4205 038c 05       		.uleb128 .LEHE127-.LEHB127
 4206 038d BA02     		.uleb128 .L224-.LFB1351
 4207 038f 01       		.uleb128 0x1
 4208 0390 B502     		.uleb128 .LEHB128-.LFB1351
 4209 0392 05       		.uleb128 .LEHE128-.LEHB128
 4210 0393 00       		.uleb128 0
 4211 0394 00       		.uleb128 0
 4212 0395 C202     		.uleb128 .LEHB129-.LFB1351
 4213 0397 38       		.uleb128 .LEHE129-.LEHB129
 4214 0398 A702     		.uleb128 .L226-.LFB1351
 4215 039a 00       		.uleb128 0
 4216 039b FA02     		.uleb128 .LEHB130-.LFB1351
 4217 039d 05       		.uleb128 .LEHE130-.LEHB130
 4218 039e 00       		.uleb128 0
 4219 039f 00       		.uleb128 0
 4220              	.LLSDACSE1351:
 4221 03a0 01       		.byte	0x1
 4222 03a1 00       		.byte	0
 4223 03a2 00       		.byte	0
 4224 03a3 7D       		.byte	0x7d
 4225              		.align 4
 4226 03a4 00000000 		.long	0
 4227              	
 4228              	.LLSDATT1351:
 4229              		.text
 4231 1e71 90       		.align 2
 4233              	_ZN12_GLOBAL__N_151XmlTestReporterFixtureOneFailureAndOneSuccessHelperC2ERKN8UnitTest11TestDetailsE
 4234              	.LFB1353:
 134:TestXmlTestReporter.cpp **** 
 135:TestXmlTestReporter.cpp **** TEST_FIXTURE(XmlTestReporterFixture, OneFailureAndOneSuccess)
 4235              		.loc 3 135 0
 4236              		.cfi_startproc
 4237 1e72 55       		pushq	%rbp
 4238              		.cfi_def_cfa_offset 16
 4239              		.cfi_offset 6, -16
 4240 1e73 4889E5   		movq	%rsp, %rbp
 4241              		.cfi_def_cfa_register 6
 4242 1e76 4883EC10 		subq	$16, %rsp
 4243 1e7a 48897DF8 		movq	%rdi, -8(%rbp)
 4244 1e7e 488975F0 		movq	%rsi, -16(%rbp)
 4245              	.LBB108:
 4246              		.loc 3 135 0
 4247 1e82 488B45F8 		movq	-8(%rbp), %rax
 4248 1e86 4889C7   		movq	%rax, %rdi
 4249 1e89 E872E1FF 		call	_ZN12_GLOBAL__N_122XmlTestReporterFixtureC2Ev
 4249      FF
 4250 1e8e 488B45F8 		movq	-8(%rbp), %rax
 4251 1e92 488B55F0 		movq	-16(%rbp), %rdx
 4252 1e96 48899088 		movq	%rdx, 392(%rax)
 4252      010000
 4253              	.LBE108:
 4254 1e9d C9       		leave
 4255              		.cfi_def_cfa 7, 8
 4256 1e9e C3       		ret
 4257              		.cfi_endproc
 4258              	.LFE1353:
 4260              		.set	_ZN12_GLOBAL__N_151XmlTestReporterFixtureOneFailureAndOneSuccessHelperC1ERKN8UnitTest11TestDe
 4261              		.section	.rodata
 4262              	.LC33:
 4263 068c 4F6E6546 		.string	"OneFailureAndOneSuccess"
 4263      61696C75 
 4263      7265416E 
 4263      644F6E65 
 4263      53756363 
 4264              		.text
 4265 1e9f 90       		.align 2
 4267              	_ZN12_GLOBAL__N_149TestXmlTestReporterFixtureOneFailureAndOneSuccessC2Ev:
 4268              	.LFB1356:
 4269              		.loc 3 135 0
 4270              		.cfi_startproc
 4271 1ea0 55       		pushq	%rbp
 4272              		.cfi_def_cfa_offset 16
 4273              		.cfi_offset 6, -16
 4274 1ea1 4889E5   		movq	%rsp, %rbp
 4275              		.cfi_def_cfa_register 6
 4276 1ea4 4883EC10 		subq	$16, %rsp
 4277 1ea8 48897DF8 		movq	%rdi, -8(%rbp)
 4278              	.LBB109:
 4279              		.loc 3 135 0
 4280 1eac E8000000 		call	_ZN13UnitTestSuite12GetSuiteNameEv
 4280      00
 4281 1eb1 4889C2   		movq	%rax, %rdx
 4282 1eb4 488B45F8 		movq	-8(%rbp), %rax
 4283 1eb8 41B88700 		movl	$135, %r8d
 4283      0000
 4284 1ebe B9000000 		movl	$.LC1, %ecx
 4284      00
 4285 1ec3 BE000000 		movl	$.LC33, %esi
 4285      00
 4286 1ec8 4889C7   		movq	%rax, %rdi
 4287 1ecb E8000000 		call	_ZN8UnitTest4TestC2EPKcS2_S2_i
 4287      00
 4288 1ed0 488B45F8 		movq	-8(%rbp), %rax
 4289 1ed4 48C70000 		movq	$_ZTVN12_GLOBAL__N_149TestXmlTestReporterFixtureOneFailureAndOneSuccessE+16, (%rax)
 4289      000000
 4290              	.LBE109:
 4291 1edb C9       		leave
 4292              		.cfi_def_cfa 7, 8
 4293 1edc C3       		ret
 4294              		.cfi_endproc
 4295              	.LFE1356:
 4297              		.set	_ZN12_GLOBAL__N_149TestXmlTestReporterFixtureOneFailureAndOneSuccessC1Ev,_ZN12_GLOBAL__N_149T
 4298              		.local	_ZN12_GLOBAL__N_157testXmlTestReporterFixtureOneFailureAndOneSuccessInstanceE
 4299              		.comm	_ZN12_GLOBAL__N_157testXmlTestReporterFixtureOneFailureAndOneSuccessInstanceE,56,32
 4300              		.local	_ZN12_GLOBAL__N_150adderXmlTestReporterFixtureOneFailureAndOneSuccessE
 4301              		.comm	_ZN12_GLOBAL__N_150adderXmlTestReporterFixtureOneFailureAndOneSuccessE,1,1
 4302 1edd 90       		.align 2
 4304              	_ZN12_GLOBAL__N_151XmlTestReporterFixtureOneFailureAndOneSuccessHelperD2Ev:
 4305              	.LFB1360:
 4306              		.loc 3 135 0
 4307              		.cfi_startproc
 4308 1ede 55       		pushq	%rbp
 4309              		.cfi_def_cfa_offset 16
 4310              		.cfi_offset 6, -16
 4311 1edf 4889E5   		movq	%rsp, %rbp
 4312              		.cfi_def_cfa_register 6
 4313 1ee2 4883EC10 		subq	$16, %rsp
 4314 1ee6 48897DF8 		movq	%rdi, -8(%rbp)
 4315              	.LBB110:
 4316              		.loc 3 135 0
 4317 1eea 488B45F8 		movq	-8(%rbp), %rax
 4318 1eee 4889C7   		movq	%rax, %rdi
 4319 1ef1 E866E1FF 		call	_ZN12_GLOBAL__N_122XmlTestReporterFixtureD2Ev
 4319      FF
 4320              	.LBE110:
 4321 1ef6 C9       		leave
 4322              		.cfi_def_cfa 7, 8
 4323 1ef7 C3       		ret
 4324              		.cfi_endproc
 4325              	.LFE1360:
 4327              		.set	_ZN12_GLOBAL__N_151XmlTestReporterFixtureOneFailureAndOneSuccessHelperD1Ev,_ZN12_GLOBAL__N_15
 4328              		.align 2
 4330              	_ZNK12_GLOBAL__N_149TestXmlTestReporterFixtureOneFailureAndOneSuccess7RunImplEv:
 4331              	.LFB1358:
 4332              		.loc 3 135 0
 4333              		.cfi_startproc
 4334              		.cfi_personality 0x3,__gxx_personality_v0
 4335              		.cfi_lsda 0x3,.LLSDA1358
 4336 1ef8 55       		pushq	%rbp
 4337              		.cfi_def_cfa_offset 16
 4338              		.cfi_offset 6, -16
 4339 1ef9 4889E5   		movq	%rsp, %rbp
 4340              		.cfi_def_cfa_register 6
 4341 1efc 4154     		pushq	%r12
 4342 1efe 53       		pushq	%rbx
 4343 1eff 4881ECC0 		subq	$448, %rsp
 4343      010000
 4344              		.cfi_offset 12, -24
 4345              		.cfi_offset 3, -32
 4346 1f06 4889BD38 		movq	%rdi, -456(%rbp)
 4346      FEFFFF
 4347              	.LBB111:
 4348              		.loc 3 135 0
 4349 1f0d C6854FFE 		movb	$0, -433(%rbp)
 4349      FFFF00
 4350              	.LBB112:
 4351 1f14 488B8538 		movq	-456(%rbp), %rax
 4351      FEFFFF
 4352 1f1b 488D5008 		leaq	8(%rax), %rdx
 4353 1f1f 488D8560 		leaq	-416(%rbp), %rax
 4353      FEFFFF
 4354 1f26 4889D6   		movq	%rdx, %rsi
 4355 1f29 4889C7   		movq	%rax, %rdi
 4356              	.LEHB131:
 4357 1f2c E841FFFF 		call	_ZN12_GLOBAL__N_151XmlTestReporterFixtureOneFailureAndOneSuccessHelperC1ERKN8UnitTest11TestDe
 4357      FF
 4358              	.LEHE131:
 4359              		.loc 3 135 0 is_stmt 0 discriminator 1
 4360 1f31 C6854FFE 		movb	$1, -433(%rbp)
 4360      FFFF01
 4361 1f38 488B8538 		movq	-456(%rbp), %rax
 4361      FEFFFF
 4362 1f3f 488D5008 		leaq	8(%rax), %rdx
 4363 1f43 488D8560 		leaq	-416(%rbp), %rax
 4363      FEFFFF
 4364 1f4a 4889D6   		movq	%rdx, %rsi
 4365 1f4d 4889C7   		movq	%rax, %rdi
 4366              	.LEHB132:
 4367 1f50 E8611900 		call	_ZN8UnitTest11ExecuteTestIN12_GLOBAL__N_151XmlTestReporterFixtureOneFailureAndOneSuccessHelpe
 4367      00
 4368              	.LEHE132:
 4369 1f55 488D8560 		leaq	-416(%rbp), %rax
 4369      FEFFFF
 4370 1f5c 4889C7   		movq	%rax, %rdi
 4371              	.LEHB133:
 4372 1f5f E87AFFFF 		call	_ZN12_GLOBAL__N_151XmlTestReporterFixtureOneFailureAndOneSuccessHelperD1Ev
 4372      FF
 4373              	.LEHE133:
 4374              	.LBE112:
 4375              	.LBE111:
 4376              		.loc 3 135 0
 4377 1f64 E9640200 		jmp	.L252
 4377      00
 4378              	.L246:
 4379 1f69 4989C4   		movq	%rax, %r12
 4380 1f6c 4889D3   		movq	%rdx, %rbx
 4381              	.LBB120:
 4382              	.LBB113:
 4383 1f6f 488D8560 		leaq	-416(%rbp), %rax
 4383      FEFFFF
 4384 1f76 4889C7   		movq	%rax, %rdi
 4385 1f79 E860FFFF 		call	_ZN12_GLOBAL__N_151XmlTestReporterFixtureOneFailureAndOneSuccessHelperD1Ev
 4385      FF
 4386 1f7e 4C89E0   		movq	%r12, %rax
 4387 1f81 4889DA   		movq	%rbx, %rdx
 4388 1f84 EB00     		jmp	.L234
 4389              	.L245:
 4390              	.L234:
 4391 1f86 4883FA01 		cmpq	$1, %rdx
 4392 1f8a 745C     		je	.L236
 4393 1f8c 4883FA02 		cmpq	$2, %rdx
 4394 1f90 0F84F400 		je	.L237
 4394      0000
 4395 1f96 E9980100 		jmp	.L251
 4395      00
 4396              	.L247:
 4397 1f9b 4889C3   		movq	%rax, %rbx
 4398              	.LBE113:
 4399              	.LBB114:
 4400 1f9e E8000000 		call	__cxa_end_catch
 4400      00
 4401 1fa3 4889D8   		movq	%rbx, %rax
 4402 1fa6 4889C7   		movq	%rax, %rdi
 4403              	.LEHB134:
 4404 1fa9 E8000000 		call	_Unwind_Resume
 4404      00
 4405              	.LEHE134:
 4406              	.L248:
 4407 1fae 4889C3   		movq	%rax, %rbx
 4408              	.LBE114:
 4409              	.LBB115:
 4410              	.LBB116:
 4411 1fb1 488D8560 		leaq	-416(%rbp), %rax
 4411      FEFFFF
 4412 1fb8 4889C7   		movq	%rax, %rdi
 4413 1fbb E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 4413      00
 4414 1fc0 EB03     		jmp	.L240
 4415              	.L249:
 4416 1fc2 4889C3   		movq	%rax, %rbx
 4417              	.L240:
 4418              	.LBE116:
 4419 1fc5 E8000000 		call	__cxa_end_catch
 4419      00
 4420 1fca 4889D8   		movq	%rbx, %rax
 4421 1fcd 4889C7   		movq	%rax, %rdi
 4422              	.LEHB135:
 4423 1fd0 E8000000 		call	_Unwind_Resume
 4423      00
 4424              	.LEHE135:
 4425              	.L250:
 4426 1fd5 4889C3   		movq	%rax, %rbx
 4427              	.LBE115:
 4428 1fd8 E8000000 		call	__cxa_end_catch
 4428      00
 4429 1fdd 4889D8   		movq	%rbx, %rax
 4430 1fe0 4889C7   		movq	%rax, %rdi
 4431              	.LEHB136:
 4432 1fe3 E8000000 		call	_Unwind_Resume
 4432      00
 4433              	.LEHE136:
 4434              	.L236:
 4435              	.LBB118:
 4436 1fe8 4889C7   		movq	%rax, %rdi
 4437 1feb E8000000 		call	__cxa_begin_catch
 4437      00
 4438 1ff0 48898550 		movq	%rax, -432(%rbp)
 4438      FEFFFF
 4439 1ff7 488B8550 		movq	-432(%rbp), %rax
 4439      FEFFFF
 4440 1ffe 488B00   		movq	(%rax), %rax
 4441 2001 4883C010 		addq	$16, %rax
 4442 2005 488B00   		movq	(%rax), %rax
 4443 2008 488B9550 		movq	-432(%rbp), %rdx
 4443      FEFFFF
 4444 200f 4889D7   		movq	%rdx, %rdi
 4445 2012 FFD0     		call	*%rax
 4446 2014 4889C3   		movq	%rax, %rbx
 4447 2017 488B8550 		movq	-432(%rbp), %rax
 4447      FEFFFF
 4448 201e 4889C7   		movq	%rax, %rdi
 4449              	.LEHB137:
 4450 2021 E8000000 		call	_ZNK8UnitTest15AssertException10LineNumberEv
 4450      00
 4451 2026 4189C4   		movl	%eax, %r12d
 4452 2029 488B8550 		movq	-432(%rbp), %rax
 4452      FEFFFF
 4453 2030 4889C7   		movq	%rax, %rdi
 4454 2033 E8000000 		call	_ZNK8UnitTest15AssertException8FilenameEv
 4454      00
 4455              		.loc 3 135 0 discriminator 1
 4456 2038 4889C1   		movq	%rax, %rcx
 4457 203b 488B8538 		movq	-456(%rbp), %rax
 4457      FEFFFF
 4458 2042 488B5008 		movq	8(%rax), %rdx
 4459 2046 488B8538 		movq	-456(%rbp), %rax
 4459      FEFFFF
 4460 204d 488B7010 		movq	16(%rax), %rsi
 4461 2051 488D8560 		leaq	-416(%rbp), %rax
 4461      FEFFFF
 4462 2058 4589E0   		movl	%r12d, %r8d
 4463 205b 4889C7   		movq	%rax, %rdi
 4464 205e E8000000 		call	_ZN8UnitTest11TestDetailsC1EPKcS2_S2_i
 4464      00
 4465              		.loc 3 135 0 discriminator 3
 4466 2063 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 4466      00
 4467 2068 488B00   		movq	(%rax), %rax
 4468 206b 488D8D60 		leaq	-416(%rbp), %rcx
 4468      FEFFFF
 4469 2072 4889DA   		movq	%rbx, %rdx
 4470 2075 4889CE   		movq	%rcx, %rsi
 4471 2078 4889C7   		movq	%rax, %rdi
 4472 207b E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 4472      00
 4473              	.LEHE137:
 4474              		.loc 3 135 0 discriminator 1
 4475 2080 E8000000 		call	__cxa_end_catch
 4475      00
 4476              	.LBE118:
 4477              	.LBE120:
 4478 2085 E9430100 		jmp	.L252
 4478      00
 4479              	.L237:
 4480              	.LBB121:
 4481              	.LBB119:
 4482              		.loc 3 135 0
 4483 208a 4889C7   		movq	%rax, %rdi
 4484 208d E8000000 		call	__cxa_begin_catch
 4484      00
 4485 2092 48898558 		movq	%rax, -424(%rbp)
 4485      FEFFFF
 4486              	.LBB117:
 4487 2099 488D8560 		leaq	-416(%rbp), %rax
 4487      FEFFFF
 4488 20a0 4889C7   		movq	%rax, %rdi
 4489              	.LEHB138:
 4490 20a3 E8000000 		call	_ZN8UnitTest15MemoryOutStreamC1Ev
 4490      00
 4491              	.LEHE138:
 4492              		.loc 3 135 0 discriminator 1
 4493 20a8 488B8558 		movq	-424(%rbp), %rax
 4493      FEFFFF
 4494 20af 488B00   		movq	(%rax), %rax
 4495 20b2 4883C010 		addq	$16, %rax
 4496 20b6 488B00   		movq	(%rax), %rax
 4497 20b9 488B9558 		movq	-424(%rbp), %rdx
 4497      FEFFFF
 4498 20c0 4889D7   		movq	%rdx, %rdi
 4499 20c3 FFD0     		call	*%rax
 4500 20c5 4889C3   		movq	%rax, %rbx
 4501 20c8 488D8560 		leaq	-416(%rbp), %rax
 4501      FEFFFF
 4502 20cf BE000000 		movl	$.LC3, %esi
 4502      00
 4503 20d4 4889C7   		movq	%rax, %rdi
 4504              	.LEHB139:
 4505 20d7 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
 4505      00
 4506 20dc 4889DE   		movq	%rbx, %rsi
 4507 20df 4889C7   		movq	%rax, %rdi
 4508 20e2 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
 4508      00
 4509 20e7 488D8560 		leaq	-416(%rbp), %rax
 4509      FEFFFF
 4510 20ee 4889C7   		movq	%rax, %rdi
 4511 20f1 E8000000 		call	_ZNK8UnitTest15MemoryOutStream7GetTextEv
 4511      00
 4512 20f6 4889C3   		movq	%rax, %rbx
 4513 20f9 488B8538 		movq	-456(%rbp), %rax
 4513      FEFFFF
 4514 2100 4C8D6008 		leaq	8(%rax), %r12
 4515 2104 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 4515      00
 4516 2109 488B00   		movq	(%rax), %rax
 4517 210c 4889DA   		movq	%rbx, %rdx
 4518 210f 4C89E6   		movq	%r12, %rsi
 4519 2112 4889C7   		movq	%rax, %rdi
 4520 2115 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 4520      00
 4521              	.LEHE139:
 4522 211a 488D8560 		leaq	-416(%rbp), %rax
 4522      FEFFFF
 4523 2121 4889C7   		movq	%rax, %rdi
 4524              	.LEHB140:
 4525 2124 E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 4525      00
 4526              	.LEHE140:
 4527              	.LBE117:
 4528              		.loc 3 135 0
 4529 2129 E8000000 		call	__cxa_end_catch
 4529      00
 4530              	.LBE119:
 4531              	.LBE121:
 4532 212e E99A0000 		jmp	.L252
 4532      00
 4533              	.L251:
 4534              	.LBB122:
 4535 2133 4889C7   		movq	%rax, %rdi
 4536 2136 E8000000 		call	__cxa_begin_catch
 4536      00
 4537 213b 80BD4FFE 		cmpb	$0, -433(%rbp)
 4537      FFFF00
 4538 2142 7443     		je	.L243
 4539              		.loc 3 135 0 discriminator 1
 4540 2144 488B8538 		movq	-456(%rbp), %rax
 4540      FEFFFF
 4541 214b 488D4808 		leaq	8(%rax), %rcx
 4542 214f 488D8560 		leaq	-416(%rbp), %rax
 4542      FEFFFF
 4543 2156 BA870000 		movl	$135, %edx
 4543      00
 4544 215b 4889CE   		movq	%rcx, %rsi
 4545 215e 4889C7   		movq	%rax, %rdi
 4546              	.LEHB141:
 4547 2161 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 4547      00
 4548 2166 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 4548      00
 4549 216b 488B00   		movq	(%rax), %rax
 4550 216e 488D8D60 		leaq	-416(%rbp), %rcx
 4550      FEFFFF
 4551 2175 BA000000 		movl	$.LC4, %edx
 4551      00
 4552 217a 4889CE   		movq	%rcx, %rsi
 4553 217d 4889C7   		movq	%rax, %rdi
 4554 2180 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 4554      00
 4555 2185 EB41     		jmp	.L244
 4556              	.L243:
 4557              		.loc 3 135 0 discriminator 2
 4558 2187 488B8538 		movq	-456(%rbp), %rax
 4558      FEFFFF
 4559 218e 488D4808 		leaq	8(%rax), %rcx
 4560 2192 488D8560 		leaq	-416(%rbp), %rax
 4560      FEFFFF
 4561 2199 BA870000 		movl	$135, %edx
 4561      00
 4562 219e 4889CE   		movq	%rcx, %rsi
 4563 21a1 4889C7   		movq	%rax, %rdi
 4564 21a4 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 4564      00
 4565              		.loc 3 135 0 discriminator 1
 4566 21a9 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 4566      00
 4567 21ae 488B00   		movq	(%rax), %rax
 4568 21b1 488D8D60 		leaq	-416(%rbp), %rcx
 4568      FEFFFF
 4569 21b8 BA000000 		movl	$.LC5, %edx
 4569      00
 4570 21bd 4889CE   		movq	%rcx, %rsi
 4571 21c0 4889C7   		movq	%rax, %rdi
 4572 21c3 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 4572      00
 4573              	.LEHE141:
 4574              	.L244:
 4575              	.LEHB142:
 4576 21c8 E8000000 		call	__cxa_end_catch
 4576      00
 4577              	.LEHE142:
 4578              	.L252:
 4579              	.LBE122:
 4580              		.loc 3 135 0
 4581 21cd 90       		nop
 4582 21ce 4881C4C0 		addq	$448, %rsp
 4582      010000
 4583 21d5 5B       		popq	%rbx
 4584 21d6 415C     		popq	%r12
 4585 21d8 5D       		popq	%rbp
 4586              		.cfi_def_cfa 7, 8
 4587 21d9 C3       		ret
 4588              		.cfi_endproc
 4589              	.LFE1358:
 4590              		.section	.gcc_except_table
 4591              		.align 4
 4592              	.LLSDA1358:
 4593 03a8 FF       		.byte	0xff
 4594 03a9 03       		.byte	0x3
 4595 03aa 59       		.uleb128 .LLSDATT1358-.LLSDATTD1358
 4596              	.LLSDATTD1358:
 4597 03ab 01       		.byte	0x1
 4598 03ac 40       		.uleb128 .LLSDACSE1358-.LLSDACSB1358
 4599              	.LLSDACSB1358:
 4600 03ad 34       		.uleb128 .LEHB131-.LFB1358
 4601 03ae 05       		.uleb128 .LEHE131-.LEHB131
 4602 03af 8E01     		.uleb128 .L245-.LFB1358
 4603 03b1 05       		.uleb128 0x5
 4604 03b2 58       		.uleb128 .LEHB132-.LFB1358
 4605 03b3 05       		.uleb128 .LEHE132-.LEHB132
 4606 03b4 71       		.uleb128 .L246-.LFB1358
 4607 03b5 07       		.uleb128 0x7
 4608 03b6 67       		.uleb128 .LEHB133-.LFB1358
 4609 03b7 05       		.uleb128 .LEHE133-.LEHB133
 4610 03b8 8E01     		.uleb128 .L245-.LFB1358
 4611 03ba 05       		.uleb128 0x5
 4612 03bb B101     		.uleb128 .LEHB134-.LFB1358
 4613 03bd 05       		.uleb128 .LEHE134-.LEHB134
 4614 03be 00       		.uleb128 0
 4615 03bf 00       		.uleb128 0
 4616 03c0 D801     		.uleb128 .LEHB135-.LFB1358
 4617 03c2 05       		.uleb128 .LEHE135-.LEHB135
 4618 03c3 00       		.uleb128 0
 4619 03c4 00       		.uleb128 0
 4620 03c5 EB01     		.uleb128 .LEHB136-.LFB1358
 4621 03c7 05       		.uleb128 .LEHE136-.LEHB136
 4622 03c8 00       		.uleb128 0
 4623 03c9 00       		.uleb128 0
 4624 03ca A902     		.uleb128 .LEHB137-.LFB1358
 4625 03cc 5F       		.uleb128 .LEHE137-.LEHB137
 4626 03cd A301     		.uleb128 .L247-.LFB1358
 4627 03cf 00       		.uleb128 0
 4628 03d0 AB03     		.uleb128 .LEHB138-.LFB1358
 4629 03d2 05       		.uleb128 .LEHE138-.LEHB138
 4630 03d3 CA01     		.uleb128 .L249-.LFB1358
 4631 03d5 00       		.uleb128 0
 4632 03d6 DF03     		.uleb128 .LEHB139-.LFB1358
 4633 03d8 43       		.uleb128 .LEHE139-.LEHB139
 4634 03d9 B601     		.uleb128 .L248-.LFB1358
 4635 03db 00       		.uleb128 0
 4636 03dc AC04     		.uleb128 .LEHB140-.LFB1358
 4637 03de 05       		.uleb128 .LEHE140-.LEHB140
 4638 03df CA01     		.uleb128 .L249-.LFB1358
 4639 03e1 00       		.uleb128 0
 4640 03e2 E904     		.uleb128 .LEHB141-.LFB1358
 4641 03e4 67       		.uleb128 .LEHE141-.LEHB141
 4642 03e5 DD01     		.uleb128 .L250-.LFB1358
 4643 03e7 00       		.uleb128 0
 4644 03e8 D005     		.uleb128 .LEHB142-.LFB1358
 4645 03ea 05       		.uleb128 .LEHE142-.LEHB142
 4646 03eb 00       		.uleb128 0
 4647 03ec 00       		.uleb128 0
 4648              	.LLSDACSE1358:
 4649 03ed 03       		.byte	0x3
 4650 03ee 00       		.byte	0
 4651 03ef 02       		.byte	0x2
 4652 03f0 7D       		.byte	0x7d
 4653 03f1 01       		.byte	0x1
 4654 03f2 7D       		.byte	0x7d
 4655 03f3 00       		.byte	0
 4656 03f4 7D       		.byte	0x7d
 4657 03f5 000000   		.align 4
 4658 03f8 00000000 		.long	0
 4659              	
 4660 03fc 00000000 		.long	_ZTISt9exception
 4661 0400 00000000 		.long	_ZTIN8UnitTest15AssertExceptionE
 4662              	.LLSDATT1358:
 4663              		.text
 4665              		.section	.rodata
 4666              	.LC34:
 4667 06a4 6661696C 		.string	"fail.h"
 4667      2E6800
 4668              	.LC35:
 4669 06ab 4661696C 		.string	"FailedTest"
 4669      65645465 
 4669      737400
 4670              	.LC36:
 4671 06b6 65787065 		.string	"expected 1 but was 2"
 4671      63746564 
 4671      20312062 
 4671      75742077 
 4671      61732032 
 4672              	.LC37:
 4673 06cb 53756363 		.string	"SucceededTest"
 4673      65656465 
 4673      64546573 
 4673      7400
 4674 06d9 00000000 		.align 8
 4674      000000
 4675              	.LC39:
 4676 06e0 3C3F786D 		.ascii	"<?xml versio"
 4676      6C207665 
 4676      7273696F 
 4677 06ec 6E3D2231 		.string	"n=\"1.0\"?><unittest-results tests=\"2\" failedtests=\"1\" failures=\"1\" time=\"1.1\"><t
 4677      2E30223F 
 4677      3E3C756E 
 4677      69747465 
 4677      73742D72 
 4678              		.text
 4679              		.align 2
 4681              	_ZN12_GLOBAL__N_151XmlTestReporterFixtureOneFailureAndOneSuccessHelper7RunImplEv:
 4682              	.LFB1362:
 136:TestXmlTestReporter.cpp **** {
 4683              		.loc 3 136 0 is_stmt 1
 4684              		.cfi_startproc
 4685              		.cfi_personality 0x3,__gxx_personality_v0
 4686              		.cfi_lsda 0x3,.LLSDA1362
 4687 21da 55       		pushq	%rbp
 4688              		.cfi_def_cfa_offset 16
 4689              		.cfi_offset 6, -16
 4690 21db 4889E5   		movq	%rsp, %rbp
 4691              		.cfi_def_cfa_register 6
 4692 21de 53       		pushq	%rbx
 4693 21df 4881EC88 		subq	$136, %rsp
 4693      000000
 4694              		.cfi_offset 3, -24
 4695 21e6 4889BD78 		movq	%rdi, -136(%rbp)
 4695      FFFFFF
 4696              	.LBB123:
 137:TestXmlTestReporter.cpp ****     TestDetails const failedDetails("FailedTest", "suite", "fail.h", 1);
 4697              		.loc 3 137 0
 4698 21ed 488D4590 		leaq	-112(%rbp), %rax
 4699 21f1 41B80100 		movl	$1, %r8d
 4699      0000
 4700 21f7 B9000000 		movl	$.LC34, %ecx
 4700      00
 4701 21fc BA000000 		movl	$.LC7, %edx
 4701      00
 4702 2201 BE000000 		movl	$.LC35, %esi
 4702      00
 4703 2206 4889C7   		movq	%rax, %rdi
 4704              	.LEHB143:
 4705 2209 E8000000 		call	_ZN8UnitTest11TestDetailsC1EPKcS2_S2_i
 4705      00
 138:TestXmlTestReporter.cpp ****     reporter.ReportTestStart(failedDetails);
 4706              		.loc 3 138 0
 4707 220e 488B8578 		movq	-136(%rbp), %rax
 4707      FFFFFF
 4708 2215 488D9060 		leaq	352(%rax), %rdx
 4708      010000
 4709 221c 488D4590 		leaq	-112(%rbp), %rax
 4710 2220 4889C6   		movq	%rax, %rsi
 4711 2223 4889D7   		movq	%rdx, %rdi
 4712 2226 E8000000 		call	_ZN8UnitTest20DeferredTestReporter15ReportTestStartERKNS_11TestDetailsE
 4712      00
 139:TestXmlTestReporter.cpp ****     reporter.ReportFailure(failedDetails, "expected 1 but was 2");
 4713              		.loc 3 139 0
 4714 222b 488B8578 		movq	-136(%rbp), %rax
 4714      FFFFFF
 4715 2232 488D8860 		leaq	352(%rax), %rcx
 4715      010000
 4716 2239 488D4590 		leaq	-112(%rbp), %rax
 4717 223d BA000000 		movl	$.LC36, %edx
 4717      00
 4718 2242 4889C6   		movq	%rax, %rsi
 4719 2245 4889CF   		movq	%rcx, %rdi
 4720 2248 E8000000 		call	_ZN8UnitTest20DeferredTestReporter13ReportFailureERKNS_11TestDetailsEPKc
 4720      00
 140:TestXmlTestReporter.cpp ****     reporter.ReportTestFinish(failedDetails, 0.1f);
 4721              		.loc 3 140 0
 4722 224d 488B8578 		movq	-136(%rbp), %rax
 4722      FFFFFF
 4723 2254 488D9060 		leaq	352(%rax), %rdx
 4723      010000
 4724 225b 488D4590 		leaq	-112(%rbp), %rax
 4725 225f F30F1005 		movss	.LC10(%rip), %xmm0
 4725      00000000 
 4726 2267 4889C6   		movq	%rax, %rsi
 4727 226a 4889D7   		movq	%rdx, %rdi
 4728 226d E8000000 		call	_ZN8UnitTest20DeferredTestReporter16ReportTestFinishERKNS_11TestDetailsEf
 4728      00
 141:TestXmlTestReporter.cpp **** 
 142:TestXmlTestReporter.cpp ****     TestDetails const succeededDetails("SucceededTest", "suite", "", 0);
 4729              		.loc 3 142 0
 4730 2272 488D45B0 		leaq	-80(%rbp), %rax
 4731 2276 41B80000 		movl	$0, %r8d
 4731      0000
 4732 227c B9000000 		movl	$.LC14, %ecx
 4732      00
 4733 2281 BA000000 		movl	$.LC7, %edx
 4733      00
 4734 2286 BE000000 		movl	$.LC37, %esi
 4734      00
 4735 228b 4889C7   		movq	%rax, %rdi
 4736 228e E8000000 		call	_ZN8UnitTest11TestDetailsC1EPKcS2_S2_i
 4736      00
 143:TestXmlTestReporter.cpp ****     reporter.ReportTestStart(succeededDetails);
 4737              		.loc 3 143 0
 4738 2293 488B8578 		movq	-136(%rbp), %rax
 4738      FFFFFF
 4739 229a 488D9060 		leaq	352(%rax), %rdx
 4739      010000
 4740 22a1 488D45B0 		leaq	-80(%rbp), %rax
 4741 22a5 4889C6   		movq	%rax, %rsi
 4742 22a8 4889D7   		movq	%rdx, %rdi
 4743 22ab E8000000 		call	_ZN8UnitTest20DeferredTestReporter15ReportTestStartERKNS_11TestDetailsE
 4743      00
 144:TestXmlTestReporter.cpp ****     reporter.ReportTestFinish(succeededDetails, 1.0f);
 4744              		.loc 3 144 0
 4745 22b0 488B8578 		movq	-136(%rbp), %rax
 4745      FFFFFF
 4746 22b7 488D9060 		leaq	352(%rax), %rdx
 4746      010000
 4747 22be 488D45B0 		leaq	-80(%rbp), %rax
 4748 22c2 F30F1005 		movss	.LC16(%rip), %xmm0
 4748      00000000 
 4749 22ca 4889C6   		movq	%rax, %rsi
 4750 22cd 4889D7   		movq	%rdx, %rdi
 4751 22d0 E8000000 		call	_ZN8UnitTest20DeferredTestReporter16ReportTestFinishERKNS_11TestDetailsEf
 4751      00
 145:TestXmlTestReporter.cpp ****     reporter.ReportSummary(2, 1, 1, 1.1f);
 4752              		.loc 3 145 0
 4753 22d5 488B8578 		movq	-136(%rbp), %rax
 4753      FFFFFF
 4754 22dc 48056001 		addq	$352, %rax
 4754      0000
 4755 22e2 F30F1005 		movss	.LC38(%rip), %xmm0
 4755      00000000 
 4756 22ea B9010000 		movl	$1, %ecx
 4756      00
 4757 22ef BA010000 		movl	$1, %edx
 4757      00
 4758 22f4 BE020000 		movl	$2, %esi
 4758      00
 4759 22f9 4889C7   		movq	%rax, %rdi
 4760 22fc E8000000 		call	_ZN8UnitTest15XmlTestReporter13ReportSummaryEiiif
 4760      00
 4761              	.LEHE143:
 146:TestXmlTestReporter.cpp **** 
 147:TestXmlTestReporter.cpp ****     char const* expected =
 148:TestXmlTestReporter.cpp ****         "<?xml version=\"1.0\"?>"
 149:TestXmlTestReporter.cpp ****         "<unittest-results tests=\"2\" failedtests=\"1\" failures=\"1\" time=\"1.1\">"
 150:TestXmlTestReporter.cpp ****         "<test suite=\"suite\" name=\"FailedTest\" time=\"0.1\">"
 151:TestXmlTestReporter.cpp ****         "<failure message=\"fail.h(1) : expected 1 but was 2\"/>"
 152:TestXmlTestReporter.cpp ****         "</test>"
 153:TestXmlTestReporter.cpp ****         "<test suite=\"suite\" name=\"SucceededTest\" time=\"1\"/>"
 154:TestXmlTestReporter.cpp ****         "</unittest-results>";
 4762              		.loc 3 154 0
 4763 2301 48C74588 		movq	$.LC39, -120(%rbp)
 4763      00000000 
 4764              	.LEHB144:
 155:TestXmlTestReporter.cpp **** 
 156:TestXmlTestReporter.cpp ****     CHECK_EQUAL(expected, output.str());
 4765              		.loc 3 156 0
 4766 2309 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 4766      00
 4767 230e 488B08   		movq	(%rax), %rcx
 4768 2311 488D45D0 		leaq	-48(%rbp), %rax
 4769 2315 BA9C0000 		movl	$156, %edx
 4769      00
 4770 231a 4889CE   		movq	%rcx, %rsi
 4771 231d 4889C7   		movq	%rax, %rdi
 4772 2320 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 4772      00
 4773              		.loc 3 156 0 is_stmt 0 discriminator 1
 4774 2325 488B9578 		movq	-136(%rbp), %rdx
 4774      FFFFFF
 4775 232c 488D4580 		leaq	-128(%rbp), %rax
 4776 2330 4889D6   		movq	%rdx, %rsi
 4777 2333 4889C7   		movq	%rax, %rdi
 4778 2336 E8000000 		call	_ZNKSt19basic_ostringstreamIcSt11char_traitsIcESaIcEE3strEv
 4778      00
 4779              	.LEHE144:
 4780              	.LEHB145:
 4781              		.loc 3 156 0 discriminator 2
 4782 233b E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 4782      00
 4783 2340 488B00   		movq	(%rax), %rax
 4784 2343 488D4DD0 		leaq	-48(%rbp), %rcx
 4785 2347 488D5580 		leaq	-128(%rbp), %rdx
 4786 234b 488D7588 		leaq	-120(%rbp), %rsi
 4787 234f 4889C7   		movq	%rax, %rdi
 4788 2352 E8000000 		call	_ZN8UnitTest10CheckEqualIPKcSsEEvRNS_11TestResultsERKT_RKT0_RKNS_11TestDetailsE
 4788      00
 4789              	.LEHE145:
 4790              		.loc 3 156 0 discriminator 1
 4791 2357 488D4580 		leaq	-128(%rbp), %rax
 4792 235b 4889C7   		movq	%rax, %rdi
 4793              	.LEHB146:
 4794 235e E8000000 		call	_ZNSsD1Ev
 4794      00
 4795              	.LEHE146:
 4796              	.LBE123:
 157:TestXmlTestReporter.cpp **** }
 4797              		.loc 3 157 0 is_stmt 1
 4798 2363 EB6C     		jmp	.L261
 4799              	.L259:
 4800 2365 4889C3   		movq	%rax, %rbx
 4801              	.LBB124:
 156:TestXmlTestReporter.cpp **** }
 4802              		.loc 3 156 0
 4803 2368 488D4580 		leaq	-128(%rbp), %rax
 4804 236c 4889C7   		movq	%rax, %rdi
 4805 236f E8000000 		call	_ZNSsD1Ev
 4805      00
 4806 2374 4889D8   		movq	%rbx, %rax
 4807 2377 EB13     		jmp	.L255
 4808              	.L260:
 4809 2379 4889C3   		movq	%rax, %rbx
 4810 237c E8000000 		call	__cxa_end_catch
 4810      00
 4811 2381 4889D8   		movq	%rbx, %rax
 4812 2384 4889C7   		movq	%rax, %rdi
 4813              	.LEHB147:
 4814 2387 E8000000 		call	_Unwind_Resume
 4814      00
 4815              	.LEHE147:
 4816              	.L258:
 4817              	.L255:
 4818 238c 4889C7   		movq	%rax, %rdi
 4819 238f E8000000 		call	__cxa_begin_catch
 4819      00
 4820              	.LEHB148:
 4821 2394 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 4821      00
 4822 2399 488B08   		movq	(%rax), %rcx
 4823 239c 488D45D0 		leaq	-48(%rbp), %rax
 4824 23a0 BA9C0000 		movl	$156, %edx
 4824      00
 4825 23a5 4889CE   		movq	%rcx, %rsi
 4826 23a8 4889C7   		movq	%rax, %rdi
 4827 23ab E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 4827      00
 156:TestXmlTestReporter.cpp **** }
 4828              		.loc 3 156 0 is_stmt 0 discriminator 1
 4829 23b0 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 4829      00
 4830 23b5 488B00   		movq	(%rax), %rax
 4831 23b8 488D4DD0 		leaq	-48(%rbp), %rcx
 4832 23bc BA000000 		movl	$.LC12, %edx
 4832      00
 4833 23c1 4889CE   		movq	%rcx, %rsi
 4834 23c4 4889C7   		movq	%rax, %rdi
 4835 23c7 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 4835      00
 4836              	.LEHE148:
 4837              	.LEHB149:
 4838 23cc E8000000 		call	__cxa_end_catch
 4838      00
 4839              	.LEHE149:
 4840              	.L261:
 4841              	.LBE124:
 4842              		.loc 3 157 0 is_stmt 1
 4843 23d1 90       		nop
 4844 23d2 4881C488 		addq	$136, %rsp
 4844      000000
 4845 23d9 5B       		popq	%rbx
 4846 23da 5D       		popq	%rbp
 4847              		.cfi_def_cfa 7, 8
 4848 23db C3       		ret
 4849              		.cfi_endproc
 4850              	.LFE1362:
 4851              		.section	.gcc_except_table
 4852              		.align 4
 4853              	.LLSDA1362:
 4854 0404 FF       		.byte	0xff
 4855 0405 03       		.byte	0x3
 4856 0406 31       		.uleb128 .LLSDATT1362-.LLSDATTD1362
 4857              	.LLSDATTD1362:
 4858 0407 01       		.byte	0x1
 4859 0408 27       		.uleb128 .LLSDACSE1362-.LLSDACSB1362
 4860              	.LLSDACSB1362:
 4861 0409 2F       		.uleb128 .LEHB143-.LFB1362
 4862 040a F801     		.uleb128 .LEHE143-.LEHB143
 4863 040c 00       		.uleb128 0
 4864 040d 00       		.uleb128 0
 4865 040e AF02     		.uleb128 .LEHB144-.LFB1362
 4866 0410 32       		.uleb128 .LEHE144-.LEHB144
 4867 0411 B203     		.uleb128 .L258-.LFB1362
 4868 0413 01       		.uleb128 0x1
 4869 0414 E102     		.uleb128 .LEHB145-.LFB1362
 4870 0416 1C       		.uleb128 .LEHE145-.LEHB145
 4871 0417 8B03     		.uleb128 .L259-.LFB1362
 4872 0419 03       		.uleb128 0x3
 4873 041a 8403     		.uleb128 .LEHB146-.LFB1362
 4874 041c 05       		.uleb128 .LEHE146-.LEHB146
 4875 041d B203     		.uleb128 .L258-.LFB1362
 4876 041f 01       		.uleb128 0x1
 4877 0420 AD03     		.uleb128 .LEHB147-.LFB1362
 4878 0422 05       		.uleb128 .LEHE147-.LEHB147
 4879 0423 00       		.uleb128 0
 4880 0424 00       		.uleb128 0
 4881 0425 BA03     		.uleb128 .LEHB148-.LFB1362
 4882 0427 38       		.uleb128 .LEHE148-.LEHB148
 4883 0428 9F03     		.uleb128 .L260-.LFB1362
 4884 042a 00       		.uleb128 0
 4885 042b F203     		.uleb128 .LEHB149-.LFB1362
 4886 042d 05       		.uleb128 .LEHE149-.LEHB149
 4887 042e 00       		.uleb128 0
 4888 042f 00       		.uleb128 0
 4889              	.LLSDACSE1362:
 4890 0430 01       		.byte	0x1
 4891 0431 00       		.byte	0
 4892 0432 00       		.byte	0
 4893 0433 7D       		.byte	0x7d
 4894              		.align 4
 4895 0434 00000000 		.long	0
 4896              	
 4897              	.LLSDATT1362:
 4898              		.text
 4900              		.align 2
 4902              	_ZN12_GLOBAL__N_144XmlTestReporterFixtureMultipleFailuresHelperC2ERKN8UnitTest11TestDetailsE:
 4903              	.LFB1364:
 158:TestXmlTestReporter.cpp **** 
 159:TestXmlTestReporter.cpp **** TEST_FIXTURE(XmlTestReporterFixture, MultipleFailures)
 4904              		.loc 3 159 0
 4905              		.cfi_startproc
 4906 23dc 55       		pushq	%rbp
 4907              		.cfi_def_cfa_offset 16
 4908              		.cfi_offset 6, -16
 4909 23dd 4889E5   		movq	%rsp, %rbp
 4910              		.cfi_def_cfa_register 6
 4911 23e0 4883EC10 		subq	$16, %rsp
 4912 23e4 48897DF8 		movq	%rdi, -8(%rbp)
 4913 23e8 488975F0 		movq	%rsi, -16(%rbp)
 4914              	.LBB125:
 4915              		.loc 3 159 0
 4916 23ec 488B45F8 		movq	-8(%rbp), %rax
 4917 23f0 4889C7   		movq	%rax, %rdi
 4918 23f3 E808DCFF 		call	_ZN12_GLOBAL__N_122XmlTestReporterFixtureC2Ev
 4918      FF
 4919 23f8 488B45F8 		movq	-8(%rbp), %rax
 4920 23fc 488B55F0 		movq	-16(%rbp), %rdx
 4921 2400 48899088 		movq	%rdx, 392(%rax)
 4921      010000
 4922              	.LBE125:
 4923 2407 C9       		leave
 4924              		.cfi_def_cfa 7, 8
 4925 2408 C3       		ret
 4926              		.cfi_endproc
 4927              	.LFE1364:
 4929              		.set	_ZN12_GLOBAL__N_144XmlTestReporterFixtureMultipleFailuresHelperC1ERKN8UnitTest11TestDetailsE,
 4930              		.section	.rodata
 4931              	.LC40:
 4932 07ed 4D756C74 		.string	"MultipleFailures"
 4932      69706C65 
 4932      4661696C 
 4932      75726573 
 4932      00
 4933              		.text
 4934 2409 90       		.align 2
 4936              	_ZN12_GLOBAL__N_142TestXmlTestReporterFixtureMultipleFailuresC2Ev:
 4937              	.LFB1367:
 4938              		.loc 3 159 0
 4939              		.cfi_startproc
 4940 240a 55       		pushq	%rbp
 4941              		.cfi_def_cfa_offset 16
 4942              		.cfi_offset 6, -16
 4943 240b 4889E5   		movq	%rsp, %rbp
 4944              		.cfi_def_cfa_register 6
 4945 240e 4883EC10 		subq	$16, %rsp
 4946 2412 48897DF8 		movq	%rdi, -8(%rbp)
 4947              	.LBB126:
 4948              		.loc 3 159 0
 4949 2416 E8000000 		call	_ZN13UnitTestSuite12GetSuiteNameEv
 4949      00
 4950 241b 4889C2   		movq	%rax, %rdx
 4951 241e 488B45F8 		movq	-8(%rbp), %rax
 4952 2422 41B89F00 		movl	$159, %r8d
 4952      0000
 4953 2428 B9000000 		movl	$.LC1, %ecx
 4953      00
 4954 242d BE000000 		movl	$.LC40, %esi
 4954      00
 4955 2432 4889C7   		movq	%rax, %rdi
 4956 2435 E8000000 		call	_ZN8UnitTest4TestC2EPKcS2_S2_i
 4956      00
 4957 243a 488B45F8 		movq	-8(%rbp), %rax
 4958 243e 48C70000 		movq	$_ZTVN12_GLOBAL__N_142TestXmlTestReporterFixtureMultipleFailuresE+16, (%rax)
 4958      000000
 4959              	.LBE126:
 4960 2445 C9       		leave
 4961              		.cfi_def_cfa 7, 8
 4962 2446 C3       		ret
 4963              		.cfi_endproc
 4964              	.LFE1367:
 4966              		.set	_ZN12_GLOBAL__N_142TestXmlTestReporterFixtureMultipleFailuresC1Ev,_ZN12_GLOBAL__N_142TestXmlT
 4967              		.local	_ZN12_GLOBAL__N_150testXmlTestReporterFixtureMultipleFailuresInstanceE
 4968              		.comm	_ZN12_GLOBAL__N_150testXmlTestReporterFixtureMultipleFailuresInstanceE,56,32
 4969              		.local	_ZN12_GLOBAL__N_143adderXmlTestReporterFixtureMultipleFailuresE
 4970              		.comm	_ZN12_GLOBAL__N_143adderXmlTestReporterFixtureMultipleFailuresE,1,1
 4971 2447 90       		.align 2
 4973              	_ZN12_GLOBAL__N_144XmlTestReporterFixtureMultipleFailuresHelperD2Ev:
 4974              	.LFB1371:
 4975              		.loc 3 159 0
 4976              		.cfi_startproc
 4977 2448 55       		pushq	%rbp
 4978              		.cfi_def_cfa_offset 16
 4979              		.cfi_offset 6, -16
 4980 2449 4889E5   		movq	%rsp, %rbp
 4981              		.cfi_def_cfa_register 6
 4982 244c 4883EC10 		subq	$16, %rsp
 4983 2450 48897DF8 		movq	%rdi, -8(%rbp)
 4984              	.LBB127:
 4985              		.loc 3 159 0
 4986 2454 488B45F8 		movq	-8(%rbp), %rax
 4987 2458 4889C7   		movq	%rax, %rdi
 4988 245b E8FCDBFF 		call	_ZN12_GLOBAL__N_122XmlTestReporterFixtureD2Ev
 4988      FF
 4989              	.LBE127:
 4990 2460 C9       		leave
 4991              		.cfi_def_cfa 7, 8
 4992 2461 C3       		ret
 4993              		.cfi_endproc
 4994              	.LFE1371:
 4996              		.set	_ZN12_GLOBAL__N_144XmlTestReporterFixtureMultipleFailuresHelperD1Ev,_ZN12_GLOBAL__N_144XmlTes
 4997              		.align 2
 4999              	_ZNK12_GLOBAL__N_142TestXmlTestReporterFixtureMultipleFailures7RunImplEv:
 5000              	.LFB1369:
 5001              		.loc 3 159 0
 5002              		.cfi_startproc
 5003              		.cfi_personality 0x3,__gxx_personality_v0
 5004              		.cfi_lsda 0x3,.LLSDA1369
 5005 2462 55       		pushq	%rbp
 5006              		.cfi_def_cfa_offset 16
 5007              		.cfi_offset 6, -16
 5008 2463 4889E5   		movq	%rsp, %rbp
 5009              		.cfi_def_cfa_register 6
 5010 2466 4154     		pushq	%r12
 5011 2468 53       		pushq	%rbx
 5012 2469 4881ECC0 		subq	$448, %rsp
 5012      010000
 5013              		.cfi_offset 12, -24
 5014              		.cfi_offset 3, -32
 5015 2470 4889BD38 		movq	%rdi, -456(%rbp)
 5015      FEFFFF
 5016              	.LBB128:
 5017              		.loc 3 159 0
 5018 2477 C6854FFE 		movb	$0, -433(%rbp)
 5018      FFFF00
 5019              	.LBB129:
 5020 247e 488B8538 		movq	-456(%rbp), %rax
 5020      FEFFFF
 5021 2485 488D5008 		leaq	8(%rax), %rdx
 5022 2489 488D8560 		leaq	-416(%rbp), %rax
 5022      FEFFFF
 5023 2490 4889D6   		movq	%rdx, %rsi
 5024 2493 4889C7   		movq	%rax, %rdi
 5025              	.LEHB150:
 5026 2496 E841FFFF 		call	_ZN12_GLOBAL__N_144XmlTestReporterFixtureMultipleFailuresHelperC1ERKN8UnitTest11TestDetailsE
 5026      FF
 5027              	.LEHE150:
 5028              		.loc 3 159 0 is_stmt 0 discriminator 1
 5029 249b C6854FFE 		movb	$1, -433(%rbp)
 5029      FFFF01
 5030 24a2 488B8538 		movq	-456(%rbp), %rax
 5030      FEFFFF
 5031 24a9 488D5008 		leaq	8(%rax), %rdx
 5032 24ad 488D8560 		leaq	-416(%rbp), %rax
 5032      FEFFFF
 5033 24b4 4889D6   		movq	%rdx, %rsi
 5034 24b7 4889C7   		movq	%rax, %rdi
 5035              	.LEHB151:
 5036 24ba E88F1600 		call	_ZN8UnitTest11ExecuteTestIN12_GLOBAL__N_144XmlTestReporterFixtureMultipleFailuresHelperEEEvRT
 5036      00
 5037              	.LEHE151:
 5038 24bf 488D8560 		leaq	-416(%rbp), %rax
 5038      FEFFFF
 5039 24c6 4889C7   		movq	%rax, %rdi
 5040              	.LEHB152:
 5041 24c9 E87AFFFF 		call	_ZN12_GLOBAL__N_144XmlTestReporterFixtureMultipleFailuresHelperD1Ev
 5041      FF
 5042              	.LEHE152:
 5043              	.LBE129:
 5044              	.LBE128:
 5045              		.loc 3 159 0
 5046 24ce E9640200 		jmp	.L286
 5046      00
 5047              	.L280:
 5048 24d3 4989C4   		movq	%rax, %r12
 5049 24d6 4889D3   		movq	%rdx, %rbx
 5050              	.LBB137:
 5051              	.LBB130:
 5052 24d9 488D8560 		leaq	-416(%rbp), %rax
 5052      FEFFFF
 5053 24e0 4889C7   		movq	%rax, %rdi
 5054 24e3 E860FFFF 		call	_ZN12_GLOBAL__N_144XmlTestReporterFixtureMultipleFailuresHelperD1Ev
 5054      FF
 5055 24e8 4C89E0   		movq	%r12, %rax
 5056 24eb 4889DA   		movq	%rbx, %rdx
 5057 24ee EB00     		jmp	.L268
 5058              	.L279:
 5059              	.L268:
 5060 24f0 4883FA01 		cmpq	$1, %rdx
 5061 24f4 745C     		je	.L270
 5062 24f6 4883FA02 		cmpq	$2, %rdx
 5063 24fa 0F84F400 		je	.L271
 5063      0000
 5064 2500 E9980100 		jmp	.L285
 5064      00
 5065              	.L281:
 5066 2505 4889C3   		movq	%rax, %rbx
 5067              	.LBE130:
 5068              	.LBB131:
 5069 2508 E8000000 		call	__cxa_end_catch
 5069      00
 5070 250d 4889D8   		movq	%rbx, %rax
 5071 2510 4889C7   		movq	%rax, %rdi
 5072              	.LEHB153:
 5073 2513 E8000000 		call	_Unwind_Resume
 5073      00
 5074              	.LEHE153:
 5075              	.L282:
 5076 2518 4889C3   		movq	%rax, %rbx
 5077              	.LBE131:
 5078              	.LBB132:
 5079              	.LBB133:
 5080 251b 488D8560 		leaq	-416(%rbp), %rax
 5080      FEFFFF
 5081 2522 4889C7   		movq	%rax, %rdi
 5082 2525 E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 5082      00
 5083 252a EB03     		jmp	.L274
 5084              	.L283:
 5085 252c 4889C3   		movq	%rax, %rbx
 5086              	.L274:
 5087              	.LBE133:
 5088 252f E8000000 		call	__cxa_end_catch
 5088      00
 5089 2534 4889D8   		movq	%rbx, %rax
 5090 2537 4889C7   		movq	%rax, %rdi
 5091              	.LEHB154:
 5092 253a E8000000 		call	_Unwind_Resume
 5092      00
 5093              	.LEHE154:
 5094              	.L284:
 5095 253f 4889C3   		movq	%rax, %rbx
 5096              	.LBE132:
 5097 2542 E8000000 		call	__cxa_end_catch
 5097      00
 5098 2547 4889D8   		movq	%rbx, %rax
 5099 254a 4889C7   		movq	%rax, %rdi
 5100              	.LEHB155:
 5101 254d E8000000 		call	_Unwind_Resume
 5101      00
 5102              	.LEHE155:
 5103              	.L270:
 5104              	.LBB135:
 5105 2552 4889C7   		movq	%rax, %rdi
 5106 2555 E8000000 		call	__cxa_begin_catch
 5106      00
 5107 255a 48898550 		movq	%rax, -432(%rbp)
 5107      FEFFFF
 5108 2561 488B8550 		movq	-432(%rbp), %rax
 5108      FEFFFF
 5109 2568 488B00   		movq	(%rax), %rax
 5110 256b 4883C010 		addq	$16, %rax
 5111 256f 488B00   		movq	(%rax), %rax
 5112 2572 488B9550 		movq	-432(%rbp), %rdx
 5112      FEFFFF
 5113 2579 4889D7   		movq	%rdx, %rdi
 5114 257c FFD0     		call	*%rax
 5115 257e 4889C3   		movq	%rax, %rbx
 5116 2581 488B8550 		movq	-432(%rbp), %rax
 5116      FEFFFF
 5117 2588 4889C7   		movq	%rax, %rdi
 5118              	.LEHB156:
 5119 258b E8000000 		call	_ZNK8UnitTest15AssertException10LineNumberEv
 5119      00
 5120 2590 4189C4   		movl	%eax, %r12d
 5121 2593 488B8550 		movq	-432(%rbp), %rax
 5121      FEFFFF
 5122 259a 4889C7   		movq	%rax, %rdi
 5123 259d E8000000 		call	_ZNK8UnitTest15AssertException8FilenameEv
 5123      00
 5124              		.loc 3 159 0 discriminator 1
 5125 25a2 4889C1   		movq	%rax, %rcx
 5126 25a5 488B8538 		movq	-456(%rbp), %rax
 5126      FEFFFF
 5127 25ac 488B5008 		movq	8(%rax), %rdx
 5128 25b0 488B8538 		movq	-456(%rbp), %rax
 5128      FEFFFF
 5129 25b7 488B7010 		movq	16(%rax), %rsi
 5130 25bb 488D8560 		leaq	-416(%rbp), %rax
 5130      FEFFFF
 5131 25c2 4589E0   		movl	%r12d, %r8d
 5132 25c5 4889C7   		movq	%rax, %rdi
 5133 25c8 E8000000 		call	_ZN8UnitTest11TestDetailsC1EPKcS2_S2_i
 5133      00
 5134              		.loc 3 159 0 discriminator 3
 5135 25cd E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 5135      00
 5136 25d2 488B00   		movq	(%rax), %rax
 5137 25d5 488D8D60 		leaq	-416(%rbp), %rcx
 5137      FEFFFF
 5138 25dc 4889DA   		movq	%rbx, %rdx
 5139 25df 4889CE   		movq	%rcx, %rsi
 5140 25e2 4889C7   		movq	%rax, %rdi
 5141 25e5 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 5141      00
 5142              	.LEHE156:
 5143              		.loc 3 159 0 discriminator 1
 5144 25ea E8000000 		call	__cxa_end_catch
 5144      00
 5145              	.LBE135:
 5146              	.LBE137:
 5147 25ef E9430100 		jmp	.L286
 5147      00
 5148              	.L271:
 5149              	.LBB138:
 5150              	.LBB136:
 5151              		.loc 3 159 0
 5152 25f4 4889C7   		movq	%rax, %rdi
 5153 25f7 E8000000 		call	__cxa_begin_catch
 5153      00
 5154 25fc 48898558 		movq	%rax, -424(%rbp)
 5154      FEFFFF
 5155              	.LBB134:
 5156 2603 488D8560 		leaq	-416(%rbp), %rax
 5156      FEFFFF
 5157 260a 4889C7   		movq	%rax, %rdi
 5158              	.LEHB157:
 5159 260d E8000000 		call	_ZN8UnitTest15MemoryOutStreamC1Ev
 5159      00
 5160              	.LEHE157:
 5161              		.loc 3 159 0 discriminator 1
 5162 2612 488B8558 		movq	-424(%rbp), %rax
 5162      FEFFFF
 5163 2619 488B00   		movq	(%rax), %rax
 5164 261c 4883C010 		addq	$16, %rax
 5165 2620 488B00   		movq	(%rax), %rax
 5166 2623 488B9558 		movq	-424(%rbp), %rdx
 5166      FEFFFF
 5167 262a 4889D7   		movq	%rdx, %rdi
 5168 262d FFD0     		call	*%rax
 5169 262f 4889C3   		movq	%rax, %rbx
 5170 2632 488D8560 		leaq	-416(%rbp), %rax
 5170      FEFFFF
 5171 2639 BE000000 		movl	$.LC3, %esi
 5171      00
 5172 263e 4889C7   		movq	%rax, %rdi
 5173              	.LEHB158:
 5174 2641 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
 5174      00
 5175 2646 4889DE   		movq	%rbx, %rsi
 5176 2649 4889C7   		movq	%rax, %rdi
 5177 264c E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
 5177      00
 5178 2651 488D8560 		leaq	-416(%rbp), %rax
 5178      FEFFFF
 5179 2658 4889C7   		movq	%rax, %rdi
 5180 265b E8000000 		call	_ZNK8UnitTest15MemoryOutStream7GetTextEv
 5180      00
 5181 2660 4889C3   		movq	%rax, %rbx
 5182 2663 488B8538 		movq	-456(%rbp), %rax
 5182      FEFFFF
 5183 266a 4C8D6008 		leaq	8(%rax), %r12
 5184 266e E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 5184      00
 5185 2673 488B00   		movq	(%rax), %rax
 5186 2676 4889DA   		movq	%rbx, %rdx
 5187 2679 4C89E6   		movq	%r12, %rsi
 5188 267c 4889C7   		movq	%rax, %rdi
 5189 267f E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 5189      00
 5190              	.LEHE158:
 5191 2684 488D8560 		leaq	-416(%rbp), %rax
 5191      FEFFFF
 5192 268b 4889C7   		movq	%rax, %rdi
 5193              	.LEHB159:
 5194 268e E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 5194      00
 5195              	.LEHE159:
 5196              	.LBE134:
 5197              		.loc 3 159 0
 5198 2693 E8000000 		call	__cxa_end_catch
 5198      00
 5199              	.LBE136:
 5200              	.LBE138:
 5201 2698 E99A0000 		jmp	.L286
 5201      00
 5202              	.L285:
 5203              	.LBB139:
 5204 269d 4889C7   		movq	%rax, %rdi
 5205 26a0 E8000000 		call	__cxa_begin_catch
 5205      00
 5206 26a5 80BD4FFE 		cmpb	$0, -433(%rbp)
 5206      FFFF00
 5207 26ac 7443     		je	.L277
 5208              		.loc 3 159 0 discriminator 1
 5209 26ae 488B8538 		movq	-456(%rbp), %rax
 5209      FEFFFF
 5210 26b5 488D4808 		leaq	8(%rax), %rcx
 5211 26b9 488D8560 		leaq	-416(%rbp), %rax
 5211      FEFFFF
 5212 26c0 BA9F0000 		movl	$159, %edx
 5212      00
 5213 26c5 4889CE   		movq	%rcx, %rsi
 5214 26c8 4889C7   		movq	%rax, %rdi
 5215              	.LEHB160:
 5216 26cb E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 5216      00
 5217 26d0 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 5217      00
 5218 26d5 488B00   		movq	(%rax), %rax
 5219 26d8 488D8D60 		leaq	-416(%rbp), %rcx
 5219      FEFFFF
 5220 26df BA000000 		movl	$.LC4, %edx
 5220      00
 5221 26e4 4889CE   		movq	%rcx, %rsi
 5222 26e7 4889C7   		movq	%rax, %rdi
 5223 26ea E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 5223      00
 5224 26ef EB41     		jmp	.L278
 5225              	.L277:
 5226              		.loc 3 159 0 discriminator 2
 5227 26f1 488B8538 		movq	-456(%rbp), %rax
 5227      FEFFFF
 5228 26f8 488D4808 		leaq	8(%rax), %rcx
 5229 26fc 488D8560 		leaq	-416(%rbp), %rax
 5229      FEFFFF
 5230 2703 BA9F0000 		movl	$159, %edx
 5230      00
 5231 2708 4889CE   		movq	%rcx, %rsi
 5232 270b 4889C7   		movq	%rax, %rdi
 5233 270e E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 5233      00
 5234              		.loc 3 159 0 discriminator 1
 5235 2713 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 5235      00
 5236 2718 488B00   		movq	(%rax), %rax
 5237 271b 488D8D60 		leaq	-416(%rbp), %rcx
 5237      FEFFFF
 5238 2722 BA000000 		movl	$.LC5, %edx
 5238      00
 5239 2727 4889CE   		movq	%rcx, %rsi
 5240 272a 4889C7   		movq	%rax, %rdi
 5241 272d E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 5241      00
 5242              	.LEHE160:
 5243              	.L278:
 5244              	.LEHB161:
 5245 2732 E8000000 		call	__cxa_end_catch
 5245      00
 5246              	.LEHE161:
 5247              	.L286:
 5248              	.LBE139:
 5249              		.loc 3 159 0
 5250 2737 90       		nop
 5251 2738 4881C4C0 		addq	$448, %rsp
 5251      010000
 5252 273f 5B       		popq	%rbx
 5253 2740 415C     		popq	%r12
 5254 2742 5D       		popq	%rbp
 5255              		.cfi_def_cfa 7, 8
 5256 2743 C3       		ret
 5257              		.cfi_endproc
 5258              	.LFE1369:
 5259              		.section	.gcc_except_table
 5260              		.align 4
 5261              	.LLSDA1369:
 5262 0438 FF       		.byte	0xff
 5263 0439 03       		.byte	0x3
 5264 043a 59       		.uleb128 .LLSDATT1369-.LLSDATTD1369
 5265              	.LLSDATTD1369:
 5266 043b 01       		.byte	0x1
 5267 043c 40       		.uleb128 .LLSDACSE1369-.LLSDACSB1369
 5268              	.LLSDACSB1369:
 5269 043d 34       		.uleb128 .LEHB150-.LFB1369
 5270 043e 05       		.uleb128 .LEHE150-.LEHB150
 5271 043f 8E01     		.uleb128 .L279-.LFB1369
 5272 0441 05       		.uleb128 0x5
 5273 0442 58       		.uleb128 .LEHB151-.LFB1369
 5274 0443 05       		.uleb128 .LEHE151-.LEHB151
 5275 0444 71       		.uleb128 .L280-.LFB1369
 5276 0445 07       		.uleb128 0x7
 5277 0446 67       		.uleb128 .LEHB152-.LFB1369
 5278 0447 05       		.uleb128 .LEHE152-.LEHB152
 5279 0448 8E01     		.uleb128 .L279-.LFB1369
 5280 044a 05       		.uleb128 0x5
 5281 044b B101     		.uleb128 .LEHB153-.LFB1369
 5282 044d 05       		.uleb128 .LEHE153-.LEHB153
 5283 044e 00       		.uleb128 0
 5284 044f 00       		.uleb128 0
 5285 0450 D801     		.uleb128 .LEHB154-.LFB1369
 5286 0452 05       		.uleb128 .LEHE154-.LEHB154
 5287 0453 00       		.uleb128 0
 5288 0454 00       		.uleb128 0
 5289 0455 EB01     		.uleb128 .LEHB155-.LFB1369
 5290 0457 05       		.uleb128 .LEHE155-.LEHB155
 5291 0458 00       		.uleb128 0
 5292 0459 00       		.uleb128 0
 5293 045a A902     		.uleb128 .LEHB156-.LFB1369
 5294 045c 5F       		.uleb128 .LEHE156-.LEHB156
 5295 045d A301     		.uleb128 .L281-.LFB1369
 5296 045f 00       		.uleb128 0
 5297 0460 AB03     		.uleb128 .LEHB157-.LFB1369
 5298 0462 05       		.uleb128 .LEHE157-.LEHB157
 5299 0463 CA01     		.uleb128 .L283-.LFB1369
 5300 0465 00       		.uleb128 0
 5301 0466 DF03     		.uleb128 .LEHB158-.LFB1369
 5302 0468 43       		.uleb128 .LEHE158-.LEHB158
 5303 0469 B601     		.uleb128 .L282-.LFB1369
 5304 046b 00       		.uleb128 0
 5305 046c AC04     		.uleb128 .LEHB159-.LFB1369
 5306 046e 05       		.uleb128 .LEHE159-.LEHB159
 5307 046f CA01     		.uleb128 .L283-.LFB1369
 5308 0471 00       		.uleb128 0
 5309 0472 E904     		.uleb128 .LEHB160-.LFB1369
 5310 0474 67       		.uleb128 .LEHE160-.LEHB160
 5311 0475 DD01     		.uleb128 .L284-.LFB1369
 5312 0477 00       		.uleb128 0
 5313 0478 D005     		.uleb128 .LEHB161-.LFB1369
 5314 047a 05       		.uleb128 .LEHE161-.LEHB161
 5315 047b 00       		.uleb128 0
 5316 047c 00       		.uleb128 0
 5317              	.LLSDACSE1369:
 5318 047d 03       		.byte	0x3
 5319 047e 00       		.byte	0
 5320 047f 02       		.byte	0x2
 5321 0480 7D       		.byte	0x7d
 5322 0481 01       		.byte	0x1
 5323 0482 7D       		.byte	0x7d
 5324 0483 00       		.byte	0
 5325 0484 7D       		.byte	0x7d
 5326 0485 000000   		.align 4
 5327 0488 00000000 		.long	0
 5328              	
 5329 048c 00000000 		.long	_ZTISt9exception
 5330 0490 00000000 		.long	_ZTIN8UnitTest15AssertExceptionE
 5331              	.LLSDATT1369:
 5332              		.text
 5334              		.section	.rodata
 5335              	.LC41:
 5336 07fe 65787065 		.string	"expected one but was two"
 5336      63746564 
 5336      206F6E65 
 5336      20627574 
 5336      20776173 
 5337 0817 00       		.align 8
 5338              	.LC42:
 5339 0818 3C3F786D 		.ascii	"<?xml version=\"1.0\""
 5339      6C207665 
 5339      7273696F 
 5339      6E3D2231 
 5339      2E3022
 5340 082b 3F3E3C75 		.string	"?><unittest-results tests=\"1\" failedtests=\"1\" failures=\"2\" time=\"1.1\"><test suite
 5340      6E697474 
 5340      6573742D 
 5340      72657375 
 5340      6C747320 
 5341              		.text
 5342              		.align 2
 5344              	_ZN12_GLOBAL__N_144XmlTestReporterFixtureMultipleFailuresHelper7RunImplEv:
 5345              	.LFB1373:
 160:TestXmlTestReporter.cpp **** {
 5346              		.loc 3 160 0 is_stmt 1
 5347              		.cfi_startproc
 5348              		.cfi_personality 0x3,__gxx_personality_v0
 5349              		.cfi_lsda 0x3,.LLSDA1373
 5350 2744 55       		pushq	%rbp
 5351              		.cfi_def_cfa_offset 16
 5352              		.cfi_offset 6, -16
 5353 2745 4889E5   		movq	%rsp, %rbp
 5354              		.cfi_def_cfa_register 6
 5355 2748 53       		pushq	%rbx
 5356 2749 4881EC88 		subq	$136, %rsp
 5356      000000
 5357              		.cfi_offset 3, -24
 5358 2750 4889BD78 		movq	%rdi, -136(%rbp)
 5358      FFFFFF
 5359              	.LBB140:
 161:TestXmlTestReporter.cpp ****     TestDetails const failedDetails1("FailedTest", "suite", "fail.h", 1);
 5360              		.loc 3 161 0
 5361 2757 488D4590 		leaq	-112(%rbp), %rax
 5362 275b 41B80100 		movl	$1, %r8d
 5362      0000
 5363 2761 B9000000 		movl	$.LC34, %ecx
 5363      00
 5364 2766 BA000000 		movl	$.LC7, %edx
 5364      00
 5365 276b BE000000 		movl	$.LC35, %esi
 5365      00
 5366 2770 4889C7   		movq	%rax, %rdi
 5367              	.LEHB162:
 5368 2773 E8000000 		call	_ZN8UnitTest11TestDetailsC1EPKcS2_S2_i
 5368      00
 162:TestXmlTestReporter.cpp ****     TestDetails const failedDetails2("FailedTest", "suite", "fail.h", 31);
 5369              		.loc 3 162 0
 5370 2778 488D45B0 		leaq	-80(%rbp), %rax
 5371 277c 41B81F00 		movl	$31, %r8d
 5371      0000
 5372 2782 B9000000 		movl	$.LC34, %ecx
 5372      00
 5373 2787 BA000000 		movl	$.LC7, %edx
 5373      00
 5374 278c BE000000 		movl	$.LC35, %esi
 5374      00
 5375 2791 4889C7   		movq	%rax, %rdi
 5376 2794 E8000000 		call	_ZN8UnitTest11TestDetailsC1EPKcS2_S2_i
 5376      00
 163:TestXmlTestReporter.cpp **** 
 164:TestXmlTestReporter.cpp ****     reporter.ReportTestStart(failedDetails1);
 5377              		.loc 3 164 0
 5378 2799 488B8578 		movq	-136(%rbp), %rax
 5378      FFFFFF
 5379 27a0 488D9060 		leaq	352(%rax), %rdx
 5379      010000
 5380 27a7 488D4590 		leaq	-112(%rbp), %rax
 5381 27ab 4889C6   		movq	%rax, %rsi
 5382 27ae 4889D7   		movq	%rdx, %rdi
 5383 27b1 E8000000 		call	_ZN8UnitTest20DeferredTestReporter15ReportTestStartERKNS_11TestDetailsE
 5383      00
 165:TestXmlTestReporter.cpp ****     reporter.ReportFailure(failedDetails1, "expected 1 but was 2");
 5384              		.loc 3 165 0
 5385 27b6 488B8578 		movq	-136(%rbp), %rax
 5385      FFFFFF
 5386 27bd 488D8860 		leaq	352(%rax), %rcx
 5386      010000
 5387 27c4 488D4590 		leaq	-112(%rbp), %rax
 5388 27c8 BA000000 		movl	$.LC36, %edx
 5388      00
 5389 27cd 4889C6   		movq	%rax, %rsi
 5390 27d0 4889CF   		movq	%rcx, %rdi
 5391 27d3 E8000000 		call	_ZN8UnitTest20DeferredTestReporter13ReportFailureERKNS_11TestDetailsEPKc
 5391      00
 166:TestXmlTestReporter.cpp ****     reporter.ReportFailure(failedDetails2, "expected one but was two");
 5392              		.loc 3 166 0
 5393 27d8 488B8578 		movq	-136(%rbp), %rax
 5393      FFFFFF
 5394 27df 488D8860 		leaq	352(%rax), %rcx
 5394      010000
 5395 27e6 488D45B0 		leaq	-80(%rbp), %rax
 5396 27ea BA000000 		movl	$.LC41, %edx
 5396      00
 5397 27ef 4889C6   		movq	%rax, %rsi
 5398 27f2 4889CF   		movq	%rcx, %rdi
 5399 27f5 E8000000 		call	_ZN8UnitTest20DeferredTestReporter13ReportFailureERKNS_11TestDetailsEPKc
 5399      00
 167:TestXmlTestReporter.cpp ****     reporter.ReportTestFinish(failedDetails1, 0.1f);
 5400              		.loc 3 167 0
 5401 27fa 488B8578 		movq	-136(%rbp), %rax
 5401      FFFFFF
 5402 2801 488D9060 		leaq	352(%rax), %rdx
 5402      010000
 5403 2808 488D4590 		leaq	-112(%rbp), %rax
 5404 280c F30F1005 		movss	.LC10(%rip), %xmm0
 5404      00000000 
 5405 2814 4889C6   		movq	%rax, %rsi
 5406 2817 4889D7   		movq	%rdx, %rdi
 5407 281a E8000000 		call	_ZN8UnitTest20DeferredTestReporter16ReportTestFinishERKNS_11TestDetailsEf
 5407      00
 168:TestXmlTestReporter.cpp **** 
 169:TestXmlTestReporter.cpp ****     reporter.ReportSummary(1, 1, 2, 1.1f);
 5408              		.loc 3 169 0
 5409 281f 488B8578 		movq	-136(%rbp), %rax
 5409      FFFFFF
 5410 2826 48056001 		addq	$352, %rax
 5410      0000
 5411 282c F30F1005 		movss	.LC38(%rip), %xmm0
 5411      00000000 
 5412 2834 B9020000 		movl	$2, %ecx
 5412      00
 5413 2839 BA010000 		movl	$1, %edx
 5413      00
 5414 283e BE010000 		movl	$1, %esi
 5414      00
 5415 2843 4889C7   		movq	%rax, %rdi
 5416 2846 E8000000 		call	_ZN8UnitTest15XmlTestReporter13ReportSummaryEiiif
 5416      00
 5417              	.LEHE162:
 170:TestXmlTestReporter.cpp **** 
 171:TestXmlTestReporter.cpp ****     char const* expected =
 172:TestXmlTestReporter.cpp ****         "<?xml version=\"1.0\"?>"
 173:TestXmlTestReporter.cpp ****         "<unittest-results tests=\"1\" failedtests=\"1\" failures=\"2\" time=\"1.1\">"
 174:TestXmlTestReporter.cpp ****         "<test suite=\"suite\" name=\"FailedTest\" time=\"0.1\">"
 175:TestXmlTestReporter.cpp ****         "<failure message=\"fail.h(1) : expected 1 but was 2\"/>"
 176:TestXmlTestReporter.cpp ****         "<failure message=\"fail.h(31) : expected one but was two\"/>"
 177:TestXmlTestReporter.cpp ****         "</test>"
 178:TestXmlTestReporter.cpp ****         "</unittest-results>";
 5418              		.loc 3 178 0
 5419 284b 48C74588 		movq	$.LC42, -120(%rbp)
 5419      00000000 
 5420              	.LEHB163:
 179:TestXmlTestReporter.cpp **** 
 180:TestXmlTestReporter.cpp ****     CHECK_EQUAL(expected, output.str());
 5421              		.loc 3 180 0
 5422 2853 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 5422      00
 5423 2858 488B08   		movq	(%rax), %rcx
 5424 285b 488D45D0 		leaq	-48(%rbp), %rax
 5425 285f BAB40000 		movl	$180, %edx
 5425      00
 5426 2864 4889CE   		movq	%rcx, %rsi
 5427 2867 4889C7   		movq	%rax, %rdi
 5428 286a E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 5428      00
 5429              		.loc 3 180 0 is_stmt 0 discriminator 1
 5430 286f 488B9578 		movq	-136(%rbp), %rdx
 5430      FFFFFF
 5431 2876 488D4580 		leaq	-128(%rbp), %rax
 5432 287a 4889D6   		movq	%rdx, %rsi
 5433 287d 4889C7   		movq	%rax, %rdi
 5434 2880 E8000000 		call	_ZNKSt19basic_ostringstreamIcSt11char_traitsIcESaIcEE3strEv
 5434      00
 5435              	.LEHE163:
 5436              	.LEHB164:
 5437              		.loc 3 180 0 discriminator 2
 5438 2885 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 5438      00
 5439 288a 488B00   		movq	(%rax), %rax
 5440 288d 488D4DD0 		leaq	-48(%rbp), %rcx
 5441 2891 488D5580 		leaq	-128(%rbp), %rdx
 5442 2895 488D7588 		leaq	-120(%rbp), %rsi
 5443 2899 4889C7   		movq	%rax, %rdi
 5444 289c E8000000 		call	_ZN8UnitTest10CheckEqualIPKcSsEEvRNS_11TestResultsERKT_RKT0_RKNS_11TestDetailsE
 5444      00
 5445              	.LEHE164:
 5446              		.loc 3 180 0 discriminator 1
 5447 28a1 488D4580 		leaq	-128(%rbp), %rax
 5448 28a5 4889C7   		movq	%rax, %rdi
 5449              	.LEHB165:
 5450 28a8 E8000000 		call	_ZNSsD1Ev
 5450      00
 5451              	.LEHE165:
 5452              	.LBE140:
 181:TestXmlTestReporter.cpp **** }
 5453              		.loc 3 181 0 is_stmt 1
 5454 28ad EB6C     		jmp	.L295
 5455              	.L293:
 5456 28af 4889C3   		movq	%rax, %rbx
 5457              	.LBB141:
 180:TestXmlTestReporter.cpp **** }
 5458              		.loc 3 180 0
 5459 28b2 488D4580 		leaq	-128(%rbp), %rax
 5460 28b6 4889C7   		movq	%rax, %rdi
 5461 28b9 E8000000 		call	_ZNSsD1Ev
 5461      00
 5462 28be 4889D8   		movq	%rbx, %rax
 5463 28c1 EB13     		jmp	.L289
 5464              	.L294:
 5465 28c3 4889C3   		movq	%rax, %rbx
 5466 28c6 E8000000 		call	__cxa_end_catch
 5466      00
 5467 28cb 4889D8   		movq	%rbx, %rax
 5468 28ce 4889C7   		movq	%rax, %rdi
 5469              	.LEHB166:
 5470 28d1 E8000000 		call	_Unwind_Resume
 5470      00
 5471              	.LEHE166:
 5472              	.L292:
 5473              	.L289:
 5474 28d6 4889C7   		movq	%rax, %rdi
 5475 28d9 E8000000 		call	__cxa_begin_catch
 5475      00
 5476              	.LEHB167:
 5477 28de E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 5477      00
 5478 28e3 488B08   		movq	(%rax), %rcx
 5479 28e6 488D45D0 		leaq	-48(%rbp), %rax
 5480 28ea BAB40000 		movl	$180, %edx
 5480      00
 5481 28ef 4889CE   		movq	%rcx, %rsi
 5482 28f2 4889C7   		movq	%rax, %rdi
 5483 28f5 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 5483      00
 180:TestXmlTestReporter.cpp **** }
 5484              		.loc 3 180 0 is_stmt 0 discriminator 1
 5485 28fa E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 5485      00
 5486 28ff 488B00   		movq	(%rax), %rax
 5487 2902 488D4DD0 		leaq	-48(%rbp), %rcx
 5488 2906 BA000000 		movl	$.LC12, %edx
 5488      00
 5489 290b 4889CE   		movq	%rcx, %rsi
 5490 290e 4889C7   		movq	%rax, %rdi
 5491 2911 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 5491      00
 5492              	.LEHE167:
 5493              	.LEHB168:
 5494 2916 E8000000 		call	__cxa_end_catch
 5494      00
 5495              	.LEHE168:
 5496              	.L295:
 5497              	.LBE141:
 5498              		.loc 3 181 0 is_stmt 1
 5499 291b 90       		nop
 5500 291c 4881C488 		addq	$136, %rsp
 5500      000000
 5501 2923 5B       		popq	%rbx
 5502 2924 5D       		popq	%rbp
 5503              		.cfi_def_cfa 7, 8
 5504 2925 C3       		ret
 5505              		.cfi_endproc
 5506              	.LFE1373:
 5507              		.section	.gcc_except_table
 5508              		.align 4
 5509              	.LLSDA1373:
 5510 0494 FF       		.byte	0xff
 5511 0495 03       		.byte	0x3
 5512 0496 31       		.uleb128 .LLSDATT1373-.LLSDATTD1373
 5513              	.LLSDATTD1373:
 5514 0497 01       		.byte	0x1
 5515 0498 27       		.uleb128 .LLSDACSE1373-.LLSDACSB1373
 5516              	.LLSDACSB1373:
 5517 0499 2F       		.uleb128 .LEHB162-.LFB1373
 5518 049a D801     		.uleb128 .LEHE162-.LEHB162
 5519 049c 00       		.uleb128 0
 5520 049d 00       		.uleb128 0
 5521 049e 8F02     		.uleb128 .LEHB163-.LFB1373
 5522 04a0 32       		.uleb128 .LEHE163-.LEHB163
 5523 04a1 9203     		.uleb128 .L292-.LFB1373
 5524 04a3 01       		.uleb128 0x1
 5525 04a4 C102     		.uleb128 .LEHB164-.LFB1373
 5526 04a6 1C       		.uleb128 .LEHE164-.LEHB164
 5527 04a7 EB02     		.uleb128 .L293-.LFB1373
 5528 04a9 03       		.uleb128 0x3
 5529 04aa E402     		.uleb128 .LEHB165-.LFB1373
 5530 04ac 05       		.uleb128 .LEHE165-.LEHB165
 5531 04ad 9203     		.uleb128 .L292-.LFB1373
 5532 04af 01       		.uleb128 0x1
 5533 04b0 8D03     		.uleb128 .LEHB166-.LFB1373
 5534 04b2 05       		.uleb128 .LEHE166-.LEHB166
 5535 04b3 00       		.uleb128 0
 5536 04b4 00       		.uleb128 0
 5537 04b5 9A03     		.uleb128 .LEHB167-.LFB1373
 5538 04b7 38       		.uleb128 .LEHE167-.LEHB167
 5539 04b8 FF02     		.uleb128 .L294-.LFB1373
 5540 04ba 00       		.uleb128 0
 5541 04bb D203     		.uleb128 .LEHB168-.LFB1373
 5542 04bd 05       		.uleb128 .LEHE168-.LEHB168
 5543 04be 00       		.uleb128 0
 5544 04bf 00       		.uleb128 0
 5545              	.LLSDACSE1373:
 5546 04c0 01       		.byte	0x1
 5547 04c1 00       		.byte	0
 5548 04c2 00       		.byte	0
 5549 04c3 7D       		.byte	0x7d
 5550              		.align 4
 5551 04c4 00000000 		.long	0
 5552              	
 5553              	.LLSDATT1373:
 5554              		.text
 5556              		.section	.rodata
 5557              	.LC43:
 5558 092c 556E6861 		.string	"Unhandled system exception"
 5558      6E646C65 
 5558      64207379 
 5558      7374656D 
 5558      20657863 
 5559              	.LC44:
 5560 0947 556E6861 		.string	"Unhandled exception: Crash!"
 5560      6E646C65 
 5560      64206578 
 5560      63657074 
 5560      696F6E3A 
 5561              		.text
 5563              	_ZN8UnitTest11ExecuteTestIN12_GLOBAL__N_156XmlTestReporterFixtureMultipleCharactersAreEscapedHelper
 5564              	.LFB1402:
 5565              		.file 4 "../ExecuteTest.h"
   1:../ExecuteTest.h **** #ifndef UNITTEST_EXECUTE_TEST_H
   2:../ExecuteTest.h **** #define UNITTEST_EXECUTE_TEST_H
   3:../ExecuteTest.h **** 
   4:../ExecuteTest.h **** #include "TestDetails.h"
   5:../ExecuteTest.h **** #include "MemoryOutStream.h"
   6:../ExecuteTest.h **** #include "AssertException.h"
   7:../ExecuteTest.h **** #include "CurrentTest.h"
   8:../ExecuteTest.h **** 
   9:../ExecuteTest.h **** #ifdef UNITTEST_POSIX
  10:../ExecuteTest.h **** 	#include "PosixUtils/SignalTranslator.h"
  11:../ExecuteTest.h **** #endif
  12:../ExecuteTest.h **** 
  13:../ExecuteTest.h **** namespace UnitTest {
  14:../ExecuteTest.h **** 
  15:../ExecuteTest.h **** template< typename T >
  16:../ExecuteTest.h **** void ExecuteTest(T& testObject, TestDetails const& details)
 5566              		.loc 4 16 0
 5567              		.cfi_startproc
 5568              		.cfi_personality 0x3,__gxx_personality_v0
 5569              		.cfi_lsda 0x3,.LLSDA1402
 5570 2926 55       		pushq	%rbp
 5571              		.cfi_def_cfa_offset 16
 5572              		.cfi_offset 6, -16
 5573 2927 4889E5   		movq	%rsp, %rbp
 5574              		.cfi_def_cfa_register 6
 5575 292a 4154     		pushq	%r12
 5576 292c 53       		pushq	%rbx
 5577 292d 4881EC80 		subq	$1152, %rsp
 5577      040000
 5578              		.cfi_offset 12, -24
 5579              		.cfi_offset 3, -32
 5580 2934 4889BD78 		movq	%rdi, -1160(%rbp)
 5580      FBFFFF
 5581 293b 4889B570 		movq	%rsi, -1168(%rbp)
 5581      FBFFFF
 5582              	.LEHB169:
 5583              	.LBB142:
  17:../ExecuteTest.h **** {
  18:../ExecuteTest.h **** 	CurrentTest::Details() = &details;
 5584              		.loc 4 18 0
 5585 2942 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 5585      00
 5586              	.LEHE169:
 5587 2947 488B9570 		movq	-1168(%rbp), %rdx
 5587      FBFFFF
 5588 294e 488910   		movq	%rdx, (%rax)
 5589              	.LBB143:
  19:../ExecuteTest.h **** 
  20:../ExecuteTest.h **** 	try
  21:../ExecuteTest.h **** 	{
  22:../ExecuteTest.h **** #ifdef UNITTEST_POSIX
  23:../ExecuteTest.h **** 		UNITTEST_THROW_SIGNALS
 5590              		.loc 4 23 0
 5591 2951 488D8590 		leaq	-1136(%rbp), %rax
 5591      FBFFFF
 5592 2958 4889C7   		movq	%rax, %rdi
 5593              	.LEHB170:
 5594 295b E8000000 		call	_ZN8UnitTest16SignalTranslatorC1Ev
 5594      00
 5595              	.LEHE170:
 5596              		.loc 4 23 0 is_stmt 0 discriminator 1
 5597 2960 488B0500 		movq	_ZN8UnitTest16SignalTranslator12s_jumpTargetE(%rip), %rax
 5597      000000
 5598 2967 BE010000 		movl	$1, %esi
 5598      00
 5599 296c 4889C7   		movq	%rax, %rdi
 5600 296f E8000000 		call	__sigsetjmp
 5600      00
 5601 2974 85C0     		testl	%eax, %eax
 5602 2976 0F95C0   		setne	%al
 5603 2979 84C0     		testb	%al, %al
 5604 297b 7423     		je	.L297
 5605 297d BF080000 		movl	$8, %edi
 5605      00
 5606 2982 E8000000 		call	__cxa_allocate_exception
 5606      00
 5607 2987 48C70000 		movq	$.LC43, (%rax)
 5607      000000
 5608 298e BA000000 		movl	$0, %edx
 5608      00
 5609 2993 BE000000 		movl	$_ZTIPKc, %esi
 5609      00
 5610 2998 4889C7   		movq	%rax, %rdi
 5611              	.LEHB171:
 5612 299b E8000000 		call	__cxa_throw
 5612      00
 5613              	.L297:
  24:../ExecuteTest.h **** #endif
  25:../ExecuteTest.h **** 		testObject.RunImpl();
 5614              		.loc 4 25 0 is_stmt 1
 5615 29a0 488B8578 		movq	-1160(%rbp), %rax
 5615      FBFFFF
 5616 29a7 4889C7   		movq	%rax, %rdi
 5617 29aa E863DAFF 		call	_ZN12_GLOBAL__N_156XmlTestReporterFixtureMultipleCharactersAreEscapedHelper7RunImplEv
 5617      FF
 5618              	.LEHE171:
 5619              		.loc 4 25 0 is_stmt 0 discriminator 1
 5620 29af 488D8590 		leaq	-1136(%rbp), %rax
 5620      FBFFFF
 5621 29b6 4889C7   		movq	%rax, %rdi
 5622              	.LEHB172:
 5623 29b9 E8000000 		call	_ZN8UnitTest16SignalTranslatorD1Ev
 5623      00
 5624              	.LEHE172:
 5625              	.LBE143:
 5626              	.LBE142:
  26:../ExecuteTest.h **** 	}
  27:../ExecuteTest.h **** 	catch (AssertException const& e)
  28:../ExecuteTest.h **** 	{
  29:../ExecuteTest.h **** 		CurrentTest::Results()->OnTestFailure(
  30:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
  31:../ExecuteTest.h **** 	}
  32:../ExecuteTest.h **** 	catch (std::exception const& e)
  33:../ExecuteTest.h **** 	{
  34:../ExecuteTest.h **** 		MemoryOutStream stream;
  35:../ExecuteTest.h **** 		stream << "Unhandled exception: " << e.what();
  36:../ExecuteTest.h **** 		CurrentTest::Results()->OnTestFailure(details, stream.GetText());
  37:../ExecuteTest.h **** 	}
  38:../ExecuteTest.h **** 	catch (...)
  39:../ExecuteTest.h **** 	{
  40:../ExecuteTest.h **** 		CurrentTest::Results()->OnTestFailure(details, "Unhandled exception: Crash!");
  41:../ExecuteTest.h **** 	}
  42:../ExecuteTest.h **** }
 5627              		.loc 4 42 0 is_stmt 1
 5628 29be E9EE0100 		jmp	.L315
 5628      00
 5629              	.L308:
 5630 29c3 4989C4   		movq	%rax, %r12
 5631 29c6 4889D3   		movq	%rdx, %rbx
 5632              	.LBB151:
 5633              	.LBB144:
  25:../ExecuteTest.h **** 	}
 5634              		.loc 4 25 0
 5635 29c9 488D8590 		leaq	-1136(%rbp), %rax
 5635      FBFFFF
 5636 29d0 4889C7   		movq	%rax, %rdi
 5637 29d3 E8000000 		call	_ZN8UnitTest16SignalTranslatorD1Ev
 5637      00
 5638 29d8 4C89E0   		movq	%r12, %rax
 5639 29db 4889DA   		movq	%rbx, %rdx
 5640 29de EB4D     		jmp	.L299
 5641              	.L310:
 5642 29e0 4889C3   		movq	%rax, %rbx
 5643              	.LBE144:
 5644              	.LBB145:
  27:../ExecuteTest.h **** 	{
 5645              		.loc 4 27 0
 5646 29e3 E8000000 		call	__cxa_end_catch
 5646      00
 5647 29e8 4889D8   		movq	%rbx, %rax
 5648 29eb 4889C7   		movq	%rax, %rdi
 5649              	.LEHB173:
 5650 29ee E8000000 		call	_Unwind_Resume
 5650      00
 5651              	.LEHE173:
 5652              	.L311:
 5653 29f3 4889C3   		movq	%rax, %rbx
 5654              	.LBE145:
 5655              	.LBB146:
 5656              	.LBB147:
  36:../ExecuteTest.h **** 	}
 5657              		.loc 4 36 0
 5658 29f6 488D8590 		leaq	-1136(%rbp), %rax
 5658      FBFFFF
 5659 29fd 4889C7   		movq	%rax, %rdi
 5660 2a00 E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 5660      00
 5661 2a05 EB03     		jmp	.L302
 5662              	.L312:
 5663 2a07 4889C3   		movq	%rax, %rbx
 5664              	.L302:
 5665              	.LBE147:
  32:../ExecuteTest.h **** 	{
 5666              		.loc 4 32 0
 5667 2a0a E8000000 		call	__cxa_end_catch
 5667      00
 5668 2a0f 4889D8   		movq	%rbx, %rax
 5669 2a12 4889C7   		movq	%rax, %rdi
 5670              	.LEHB174:
 5671 2a15 E8000000 		call	_Unwind_Resume
 5671      00
 5672              	.LEHE174:
 5673              	.L313:
 5674 2a1a 4889C3   		movq	%rax, %rbx
 5675              	.LBE146:
  38:../ExecuteTest.h **** 	{
 5676              		.loc 4 38 0
 5677 2a1d E8000000 		call	__cxa_end_catch
 5677      00
 5678 2a22 4889D8   		movq	%rbx, %rax
 5679 2a25 4889C7   		movq	%rax, %rdi
 5680              	.LEHB175:
 5681 2a28 E8000000 		call	_Unwind_Resume
 5681      00
 5682              	.LEHE175:
 5683              	.L309:
 5684              	.L299:
 5685 2a2d 4883FA01 		cmpq	$1, %rdx
 5686 2a31 740F     		je	.L305
 5687 2a33 4883FA02 		cmpq	$2, %rdx
 5688 2a37 0F84A600 		je	.L306
 5688      0000
 5689 2a3d E9430100 		jmp	.L314
 5689      00
 5690              	.L305:
 5691              	.LBB149:
  27:../ExecuteTest.h **** 	{
 5692              		.loc 4 27 0
 5693 2a42 4889C7   		movq	%rax, %rdi
 5694 2a45 E8000000 		call	__cxa_begin_catch
 5694      00
 5695 2a4a 48898580 		movq	%rax, -1152(%rbp)
 5695      FBFFFF
  30:../ExecuteTest.h **** 	}
 5696              		.loc 4 30 0
 5697 2a51 488B8580 		movq	-1152(%rbp), %rax
 5697      FBFFFF
 5698 2a58 488B00   		movq	(%rax), %rax
 5699 2a5b 4883C010 		addq	$16, %rax
 5700 2a5f 488B00   		movq	(%rax), %rax
 5701 2a62 488B9580 		movq	-1152(%rbp), %rdx
 5701      FBFFFF
 5702 2a69 4889D7   		movq	%rdx, %rdi
 5703 2a6c FFD0     		call	*%rax
 5704 2a6e 4889C3   		movq	%rax, %rbx
 5705 2a71 488B8580 		movq	-1152(%rbp), %rax
 5705      FBFFFF
 5706 2a78 4889C7   		movq	%rax, %rdi
 5707              	.LEHB176:
 5708 2a7b E8000000 		call	_ZNK8UnitTest15AssertException10LineNumberEv
 5708      00
 5709 2a80 4189C4   		movl	%eax, %r12d
 5710 2a83 488B8580 		movq	-1152(%rbp), %rax
 5710      FBFFFF
 5711 2a8a 4889C7   		movq	%rax, %rdi
 5712 2a8d E8000000 		call	_ZNK8UnitTest15AssertException8FilenameEv
 5712      00
  30:../ExecuteTest.h **** 	}
 5713              		.loc 4 30 0 is_stmt 0 discriminator 1
 5714 2a92 4889C1   		movq	%rax, %rcx
 5715 2a95 488B8570 		movq	-1168(%rbp), %rax
 5715      FBFFFF
 5716 2a9c 488B10   		movq	(%rax), %rdx
 5717 2a9f 488B8570 		movq	-1168(%rbp), %rax
 5717      FBFFFF
 5718 2aa6 488B7008 		movq	8(%rax), %rsi
 5719 2aaa 488D8590 		leaq	-1136(%rbp), %rax
 5719      FBFFFF
 5720 2ab1 4589E0   		movl	%r12d, %r8d
 5721 2ab4 4889C7   		movq	%rax, %rdi
 5722 2ab7 E8000000 		call	_ZN8UnitTest11TestDetailsC1EPKcS2_S2_i
 5722      00
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 5723              		.loc 4 29 0 is_stmt 1
 5724 2abc E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 5724      00
  30:../ExecuteTest.h **** 	}
 5725              		.loc 4 30 0
 5726 2ac1 488B00   		movq	(%rax), %rax
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 5727              		.loc 4 29 0
 5728 2ac4 488D8D90 		leaq	-1136(%rbp), %rcx
 5728      FBFFFF
 5729 2acb 4889DA   		movq	%rbx, %rdx
 5730 2ace 4889CE   		movq	%rcx, %rsi
 5731 2ad1 4889C7   		movq	%rax, %rdi
 5732 2ad4 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 5732      00
 5733              	.LEHE176:
  27:../ExecuteTest.h **** 	{
 5734              		.loc 4 27 0
 5735 2ad9 E8000000 		call	__cxa_end_catch
 5735      00
 5736              	.LBE149:
 5737              	.LBE151:
 5738              		.loc 4 42 0
 5739 2ade E9CE0000 		jmp	.L315
 5739      00
 5740              	.L306:
 5741              	.LBB152:
 5742              	.LBB150:
  32:../ExecuteTest.h **** 	{
 5743              		.loc 4 32 0
 5744 2ae3 4889C7   		movq	%rax, %rdi
 5745 2ae6 E8000000 		call	__cxa_begin_catch
 5745      00
 5746 2aeb 48898588 		movq	%rax, -1144(%rbp)
 5746      FBFFFF
 5747              	.LBB148:
  34:../ExecuteTest.h **** 		stream << "Unhandled exception: " << e.what();
 5748              		.loc 4 34 0
 5749 2af2 488D8590 		leaq	-1136(%rbp), %rax
 5749      FBFFFF
 5750 2af9 4889C7   		movq	%rax, %rdi
 5751              	.LEHB177:
 5752 2afc E8000000 		call	_ZN8UnitTest15MemoryOutStreamC1Ev
 5752      00
 5753              	.LEHE177:
  35:../ExecuteTest.h **** 		CurrentTest::Results()->OnTestFailure(details, stream.GetText());
 5754              		.loc 4 35 0
 5755 2b01 488B8588 		movq	-1144(%rbp), %rax
 5755      FBFFFF
 5756 2b08 488B00   		movq	(%rax), %rax
 5757 2b0b 4883C010 		addq	$16, %rax
 5758 2b0f 488B00   		movq	(%rax), %rax
 5759 2b12 488B9588 		movq	-1144(%rbp), %rdx
 5759      FBFFFF
 5760 2b19 4889D7   		movq	%rdx, %rdi
 5761 2b1c FFD0     		call	*%rax
 5762 2b1e 4889C3   		movq	%rax, %rbx
 5763 2b21 488D8590 		leaq	-1136(%rbp), %rax
 5763      FBFFFF
 5764 2b28 BE000000 		movl	$.LC3, %esi
 5764      00
 5765 2b2d 4889C7   		movq	%rax, %rdi
 5766              	.LEHB178:
 5767 2b30 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
 5767      00
 5768 2b35 4889DE   		movq	%rbx, %rsi
 5769 2b38 4889C7   		movq	%rax, %rdi
 5770 2b3b E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
 5770      00
  36:../ExecuteTest.h **** 	}
 5771              		.loc 4 36 0
 5772 2b40 488D8590 		leaq	-1136(%rbp), %rax
 5772      FBFFFF
 5773 2b47 4889C7   		movq	%rax, %rdi
 5774 2b4a E8000000 		call	_ZNK8UnitTest15MemoryOutStream7GetTextEv
 5774      00
 5775 2b4f 4889C3   		movq	%rax, %rbx
 5776 2b52 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 5776      00
  36:../ExecuteTest.h **** 	}
 5777              		.loc 4 36 0 is_stmt 0 discriminator 1
 5778 2b57 488B00   		movq	(%rax), %rax
 5779 2b5a 488B8D70 		movq	-1168(%rbp), %rcx
 5779      FBFFFF
 5780 2b61 4889DA   		movq	%rbx, %rdx
 5781 2b64 4889CE   		movq	%rcx, %rsi
 5782 2b67 4889C7   		movq	%rax, %rdi
 5783 2b6a E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 5783      00
 5784              	.LEHE178:
 5785 2b6f 488D8590 		leaq	-1136(%rbp), %rax
 5785      FBFFFF
 5786 2b76 4889C7   		movq	%rax, %rdi
 5787              	.LEHB179:
 5788 2b79 E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 5788      00
 5789              	.LEHE179:
 5790              	.LBE148:
  32:../ExecuteTest.h **** 	{
 5791              		.loc 4 32 0 is_stmt 1
 5792 2b7e E8000000 		call	__cxa_end_catch
 5792      00
 5793              	.LBE150:
 5794              	.LBE152:
 5795              		.loc 4 42 0
 5796 2b83 EB2C     		jmp	.L315
 5797              	.L314:
 5798              	.LBB153:
  38:../ExecuteTest.h **** 	{
 5799              		.loc 4 38 0
 5800 2b85 4889C7   		movq	%rax, %rdi
 5801 2b88 E8000000 		call	__cxa_begin_catch
 5801      00
 5802              	.LEHB180:
  40:../ExecuteTest.h **** 	}
 5803              		.loc 4 40 0
 5804 2b8d E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 5804      00
 5805 2b92 488B00   		movq	(%rax), %rax
 5806 2b95 488B8D70 		movq	-1168(%rbp), %rcx
 5806      FBFFFF
 5807 2b9c BA000000 		movl	$.LC44, %edx
 5807      00
 5808 2ba1 4889CE   		movq	%rcx, %rsi
 5809 2ba4 4889C7   		movq	%rax, %rdi
 5810 2ba7 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 5810      00
 5811              	.LEHE180:
 5812              	.LEHB181:
  38:../ExecuteTest.h **** 	{
 5813              		.loc 4 38 0
 5814 2bac E8000000 		call	__cxa_end_catch
 5814      00
 5815              	.LEHE181:
 5816              	.L315:
 5817              	.LBE153:
 5818              		.loc 4 42 0
 5819 2bb1 90       		nop
 5820 2bb2 4881C480 		addq	$1152, %rsp
 5820      040000
 5821 2bb9 5B       		popq	%rbx
 5822 2bba 415C     		popq	%r12
 5823 2bbc 5D       		popq	%rbp
 5824              		.cfi_def_cfa 7, 8
 5825 2bbd C3       		ret
 5826              		.cfi_endproc
 5827              	.LFE1402:
 5828              		.section	.gcc_except_table
 5829              		.align 4
 5830              	.LLSDA1402:
 5831 04c8 FF       		.byte	0xff
 5832 04c9 03       		.byte	0x3
 5833 04ca 5D       		.uleb128 .LLSDATT1402-.LLSDATTD1402
 5834              	.LLSDATTD1402:
 5835 04cb 01       		.byte	0x1
 5836 04cc 46       		.uleb128 .LLSDACSE1402-.LLSDACSB1402
 5837              	.LLSDACSB1402:
 5838 04cd 1C       		.uleb128 .LEHB169-.LFB1402
 5839 04ce 05       		.uleb128 .LEHE169-.LEHB169
 5840 04cf 00       		.uleb128 0
 5841 04d0 00       		.uleb128 0
 5842 04d1 35       		.uleb128 .LEHB170-.LFB1402
 5843 04d2 05       		.uleb128 .LEHE170-.LEHB170
 5844 04d3 8702     		.uleb128 .L309-.LFB1402
 5845 04d5 05       		.uleb128 0x5
 5846 04d6 75       		.uleb128 .LEHB171-.LFB1402
 5847 04d7 14       		.uleb128 .LEHE171-.LEHB171
 5848 04d8 9D01     		.uleb128 .L308-.LFB1402
 5849 04da 07       		.uleb128 0x7
 5850 04db 9301     		.uleb128 .LEHB172-.LFB1402
 5851 04dd 05       		.uleb128 .LEHE172-.LEHB172
 5852 04de 8702     		.uleb128 .L309-.LFB1402
 5853 04e0 05       		.uleb128 0x5
 5854 04e1 C801     		.uleb128 .LEHB173-.LFB1402
 5855 04e3 05       		.uleb128 .LEHE173-.LEHB173
 5856 04e4 00       		.uleb128 0
 5857 04e5 00       		.uleb128 0
 5858 04e6 EF01     		.uleb128 .LEHB174-.LFB1402
 5859 04e8 05       		.uleb128 .LEHE174-.LEHB174
 5860 04e9 00       		.uleb128 0
 5861 04ea 00       		.uleb128 0
 5862 04eb 8202     		.uleb128 .LEHB175-.LFB1402
 5863 04ed 05       		.uleb128 .LEHE175-.LEHB175
 5864 04ee 00       		.uleb128 0
 5865 04ef 00       		.uleb128 0
 5866 04f0 D502     		.uleb128 .LEHB176-.LFB1402
 5867 04f2 5E       		.uleb128 .LEHE176-.LEHB176
 5868 04f3 BA01     		.uleb128 .L310-.LFB1402
 5869 04f5 00       		.uleb128 0
 5870 04f6 D603     		.uleb128 .LEHB177-.LFB1402
 5871 04f8 05       		.uleb128 .LEHE177-.LEHB177
 5872 04f9 E101     		.uleb128 .L312-.LFB1402
 5873 04fb 00       		.uleb128 0
 5874 04fc 8A04     		.uleb128 .LEHB178-.LFB1402
 5875 04fe 3F       		.uleb128 .LEHE178-.LEHB178
 5876 04ff CD01     		.uleb128 .L311-.LFB1402
 5877 0501 00       		.uleb128 0
 5878 0502 D304     		.uleb128 .LEHB179-.LFB1402
 5879 0504 05       		.uleb128 .LEHE179-.LEHB179
 5880 0505 E101     		.uleb128 .L312-.LFB1402
 5881 0507 00       		.uleb128 0
 5882 0508 E704     		.uleb128 .LEHB180-.LFB1402
 5883 050a 1F       		.uleb128 .LEHE180-.LEHB180
 5884 050b F401     		.uleb128 .L313-.LFB1402
 5885 050d 00       		.uleb128 0
 5886 050e 8605     		.uleb128 .LEHB181-.LFB1402
 5887 0510 05       		.uleb128 .LEHE181-.LEHB181
 5888 0511 00       		.uleb128 0
 5889 0512 00       		.uleb128 0
 5890              	.LLSDACSE1402:
 5891 0513 03       		.byte	0x3
 5892 0514 00       		.byte	0
 5893 0515 02       		.byte	0x2
 5894 0516 7D       		.byte	0x7d
 5895 0517 01       		.byte	0x1
 5896 0518 7D       		.byte	0x7d
 5897 0519 00       		.byte	0
 5898 051a 7D       		.byte	0x7d
 5899 051b 00       		.align 4
 5900 051c 00000000 		.long	0
 5901              	
 5902 0520 00000000 		.long	_ZTISt9exception
 5903 0524 00000000 		.long	_ZTIN8UnitTest15AssertExceptionE
 5904              	.LLSDATT1402:
 5905              		.text
 5907              		.section	.rodata
 5908              	.LC45:
 5909 0963 45787065 		.string	"Expected "
 5909      63746564 
 5909      2000
 5910              	.LC46:
 5911 096d 20627574 		.string	" but was "
 5911      20776173 
 5911      2000
 5912              		.section	.text._ZN8UnitTest10CheckEqualIPKcSsEEvRNS_11TestResultsERKT_RKT0_RKNS_11TestDetailsE,"ax
 5913              		.weak	_ZN8UnitTest10CheckEqualIPKcSsEEvRNS_11TestResultsERKT_RKT0_RKNS_11TestDetailsE
 5915              	_ZN8UnitTest10CheckEqualIPKcSsEEvRNS_11TestResultsERKT_RKT0_RKNS_11TestDetailsE:
 5916              	.LFB1405:
 5917              		.file 5 "../Checks.h"
   1:../Checks.h   **** #ifndef UNITTEST_CHECKS_H
   2:../Checks.h   **** #define UNITTEST_CHECKS_H
   3:../Checks.h   **** 
   4:../Checks.h   **** #include "Config.h"
   5:../Checks.h   **** #include "TestResults.h"
   6:../Checks.h   **** #include "MemoryOutStream.h"
   7:../Checks.h   **** 
   8:../Checks.h   **** namespace UnitTest {
   9:../Checks.h   **** 
  10:../Checks.h   **** 
  11:../Checks.h   **** template< typename Value >
  12:../Checks.h   **** bool Check(Value const value)
  13:../Checks.h   **** {
  14:../Checks.h   ****     return !!value; // doing double negative to avoid silly VS warnings
  15:../Checks.h   **** }
  16:../Checks.h   **** 
  17:../Checks.h   **** 
  18:../Checks.h   **** template< typename Expected, typename Actual >
  19:../Checks.h   **** void CheckEqual(TestResults& results, Expected const& expected, Actual const& actual, TestDetails c
 5918              		.loc 5 19 0
 5919              		.cfi_startproc
 5920              		.cfi_personality 0x3,__gxx_personality_v0
 5921              		.cfi_lsda 0x3,.LLSDA1405
 5922 0000 55       		pushq	%rbp
 5923              		.cfi_def_cfa_offset 16
 5924              		.cfi_offset 6, -16
 5925 0001 4889E5   		movq	%rsp, %rbp
 5926              		.cfi_def_cfa_register 6
 5927 0004 53       		pushq	%rbx
 5928 0005 4881EC98 		subq	$408, %rsp
 5928      010000
 5929              		.cfi_offset 3, -24
 5930 000c 4889BD78 		movq	%rdi, -392(%rbp)
 5930      FEFFFF
 5931 0013 4889B570 		movq	%rsi, -400(%rbp)
 5931      FEFFFF
 5932 001a 48899568 		movq	%rdx, -408(%rbp)
 5932      FEFFFF
 5933 0021 48898D60 		movq	%rcx, -416(%rbp)
 5933      FEFFFF
 5934              	.LBB154:
 5935              	.LBB155:
  20:../Checks.h   **** {
  21:../Checks.h   ****     if (!(expected == actual))
 5936              		.loc 5 21 0
 5937 0028 488B8570 		movq	-400(%rbp), %rax
 5937      FEFFFF
 5938 002f 488B00   		movq	(%rax), %rax
 5939 0032 488B9568 		movq	-408(%rbp), %rdx
 5939      FEFFFF
 5940 0039 4889D6   		movq	%rdx, %rsi
 5941 003c 4889C7   		movq	%rax, %rdi
 5942              	.LEHB182:
 5943 003f E8000000 		call	_ZSteqIcSt11char_traitsIcESaIcEEbPKT_RKSbIS3_T0_T1_E
 5943      00
 5944 0044 83F001   		xorl	$1, %eax
 5945 0047 84C0     		testb	%al, %al
 5946 0049 0F84B000 		je	.L320
 5946      0000
 5947              	.LBB156:
  22:../Checks.h   ****     {
  23:../Checks.h   ****         UnitTest::MemoryOutStream stream;
 5948              		.loc 5 23 0
 5949 004f 488D8580 		leaq	-384(%rbp), %rax
 5949      FEFFFF
 5950 0056 4889C7   		movq	%rax, %rdi
 5951 0059 E8000000 		call	_ZN8UnitTest15MemoryOutStreamC1Ev
 5951      00
 5952              	.LEHE182:
  24:../Checks.h   ****         stream << "Expected " << expected << " but was " << actual;
 5953              		.loc 5 24 0
 5954 005e 488B8570 		movq	-400(%rbp), %rax
 5954      FEFFFF
 5955 0065 488B18   		movq	(%rax), %rbx
 5956 0068 488D8580 		leaq	-384(%rbp), %rax
 5956      FEFFFF
 5957 006f BE000000 		movl	$.LC45, %esi
 5957      00
 5958 0074 4889C7   		movq	%rax, %rdi
 5959              	.LEHB183:
 5960 0077 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
 5960      00
 5961 007c 4889DE   		movq	%rbx, %rsi
 5962 007f 4889C7   		movq	%rax, %rdi
 5963 0082 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
 5963      00
 5964              		.loc 5 24 0 is_stmt 0 discriminator 1
 5965 0087 BE000000 		movl	$.LC46, %esi
 5965      00
 5966 008c 4889C7   		movq	%rax, %rdi
 5967 008f E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
 5967      00
 5968 0094 488B9568 		movq	-408(%rbp), %rdx
 5968      FEFFFF
 5969 009b 4889D6   		movq	%rdx, %rsi
 5970 009e 4889C7   		movq	%rax, %rdi
 5971 00a1 E8000000 		call	_ZStlsIcSt11char_traitsIcESaIcEERSt13basic_ostreamIT_T0_ES7_RKSbIS4_S5_T1_E
 5971      00
  25:../Checks.h   **** 
  26:../Checks.h   ****         results.OnTestFailure(details, stream.GetText());
 5972              		.loc 5 26 0 is_stmt 1
 5973 00a6 488D8580 		leaq	-384(%rbp), %rax
 5973      FEFFFF
 5974 00ad 4889C7   		movq	%rax, %rdi
 5975 00b0 E8000000 		call	_ZNK8UnitTest15MemoryOutStream7GetTextEv
 5975      00
 5976 00b5 4889C2   		movq	%rax, %rdx
 5977 00b8 488B8D60 		movq	-416(%rbp), %rcx
 5977      FEFFFF
 5978 00bf 488B8578 		movq	-392(%rbp), %rax
 5978      FEFFFF
 5979 00c6 4889CE   		movq	%rcx, %rsi
 5980 00c9 4889C7   		movq	%rax, %rdi
 5981 00cc E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 5981      00
 5982              	.LEHE183:
 5983              		.loc 5 26 0 is_stmt 0 discriminator 1
 5984 00d1 488D8580 		leaq	-384(%rbp), %rax
 5984      FEFFFF
 5985 00d8 4889C7   		movq	%rax, %rdi
 5986              	.LEHB184:
 5987 00db E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 5987      00
 5988              	.LEHE184:
 5989              	.LBE156:
 5990 00e0 EB1D     		jmp	.L320
 5991              	.L319:
 5992 00e2 4889C3   		movq	%rax, %rbx
 5993              	.LBB157:
 5994              		.loc 5 26 0
 5995 00e5 488D8580 		leaq	-384(%rbp), %rax
 5995      FEFFFF
 5996 00ec 4889C7   		movq	%rax, %rdi
 5997 00ef E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 5997      00
 5998 00f4 4889D8   		movq	%rbx, %rax
 5999 00f7 4889C7   		movq	%rax, %rdi
 6000              	.LEHB185:
 6001 00fa E8000000 		call	_Unwind_Resume
 6001      00
 6002              	.LEHE185:
 6003              	.L320:
 6004              	.LBE157:
 6005              	.LBE155:
 6006              	.LBE154:
  27:../Checks.h   ****     }
  28:../Checks.h   **** }
 6007              		.loc 5 28 0 is_stmt 1
 6008 00ff 4881C498 		addq	$408, %rsp
 6008      010000
 6009 0106 5B       		popq	%rbx
 6010 0107 5D       		popq	%rbp
 6011              		.cfi_def_cfa 7, 8
 6012 0108 C3       		ret
 6013              		.cfi_endproc
 6014              	.LFE1405:
 6015              		.section	.gcc_except_table
 6016              	.LLSDA1405:
 6017 0528 FF       		.byte	0xff
 6018 0529 FF       		.byte	0xff
 6019 052a 01       		.byte	0x1
 6020 052b 13       		.uleb128 .LLSDACSE1405-.LLSDACSB1405
 6021              	.LLSDACSB1405:
 6022 052c 3F       		.uleb128 .LEHB182-.LFB1405
 6023 052d 1F       		.uleb128 .LEHE182-.LEHB182
 6024 052e 00       		.uleb128 0
 6025 052f 00       		.uleb128 0
 6026 0530 77       		.uleb128 .LEHB183-.LFB1405
 6027 0531 5A       		.uleb128 .LEHE183-.LEHB183
 6028 0532 E201     		.uleb128 .L319-.LFB1405
 6029 0534 00       		.uleb128 0
 6030 0535 DB01     		.uleb128 .LEHB184-.LFB1405
 6031 0537 05       		.uleb128 .LEHE184-.LEHB184
 6032 0538 00       		.uleb128 0
 6033 0539 00       		.uleb128 0
 6034 053a FA01     		.uleb128 .LEHB185-.LFB1405
 6035 053c 05       		.uleb128 .LEHE185-.LEHB185
 6036 053d 00       		.uleb128 0
 6037 053e 00       		.uleb128 0
 6038              	.LLSDACSE1405:
 6039              		.section	.text._ZN8UnitTest10CheckEqualIPKcSsEEvRNS_11TestResultsERKT_RKT0_RKNS_11TestDetailsE,"ax
 6041              		.text
 6043              	_ZN8UnitTest11ExecuteTestIN12_GLOBAL__N_168XmlTestReporterFixtureOutputIsCachedUntilReportSummaryIs
 6044              	.LFB1406:
  16:../ExecuteTest.h **** {
 6045              		.loc 4 16 0
 6046              		.cfi_startproc
 6047              		.cfi_personality 0x3,__gxx_personality_v0
 6048              		.cfi_lsda 0x3,.LLSDA1406
 6049 2bbe 55       		pushq	%rbp
 6050              		.cfi_def_cfa_offset 16
 6051              		.cfi_offset 6, -16
 6052 2bbf 4889E5   		movq	%rsp, %rbp
 6053              		.cfi_def_cfa_register 6
 6054 2bc2 4154     		pushq	%r12
 6055 2bc4 53       		pushq	%rbx
 6056 2bc5 4881EC80 		subq	$1152, %rsp
 6056      040000
 6057              		.cfi_offset 12, -24
 6058              		.cfi_offset 3, -32
 6059 2bcc 4889BD78 		movq	%rdi, -1160(%rbp)
 6059      FBFFFF
 6060 2bd3 4889B570 		movq	%rsi, -1168(%rbp)
 6060      FBFFFF
 6061              	.LEHB186:
 6062              	.LBB158:
  18:../ExecuteTest.h **** 
 6063              		.loc 4 18 0
 6064 2bda E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 6064      00
 6065              	.LEHE186:
 6066 2bdf 488B9570 		movq	-1168(%rbp), %rdx
 6066      FBFFFF
 6067 2be6 488910   		movq	%rdx, (%rax)
 6068              	.LBB159:
  23:../ExecuteTest.h **** #endif
 6069              		.loc 4 23 0
 6070 2be9 488D8590 		leaq	-1136(%rbp), %rax
 6070      FBFFFF
 6071 2bf0 4889C7   		movq	%rax, %rdi
 6072              	.LEHB187:
 6073 2bf3 E8000000 		call	_ZN8UnitTest16SignalTranslatorC1Ev
 6073      00
 6074              	.LEHE187:
  23:../ExecuteTest.h **** #endif
 6075              		.loc 4 23 0 is_stmt 0 discriminator 1
 6076 2bf8 488B0500 		movq	_ZN8UnitTest16SignalTranslator12s_jumpTargetE(%rip), %rax
 6076      000000
 6077 2bff BE010000 		movl	$1, %esi
 6077      00
 6078 2c04 4889C7   		movq	%rax, %rdi
 6079 2c07 E8000000 		call	__sigsetjmp
 6079      00
 6080 2c0c 85C0     		testl	%eax, %eax
 6081 2c0e 0F95C0   		setne	%al
 6082 2c11 84C0     		testb	%al, %al
 6083 2c13 7423     		je	.L322
 6084 2c15 BF080000 		movl	$8, %edi
 6084      00
 6085 2c1a E8000000 		call	__cxa_allocate_exception
 6085      00
 6086 2c1f 48C70000 		movq	$.LC43, (%rax)
 6086      000000
 6087 2c26 BA000000 		movl	$0, %edx
 6087      00
 6088 2c2b BE000000 		movl	$_ZTIPKc, %esi
 6088      00
 6089 2c30 4889C7   		movq	%rax, %rdi
 6090              	.LEHB188:
 6091 2c33 E8000000 		call	__cxa_throw
 6091      00
 6092              	.L322:
  25:../ExecuteTest.h **** 	}
 6093              		.loc 4 25 0 is_stmt 1
 6094 2c38 488B8578 		movq	-1160(%rbp), %rax
 6094      FBFFFF
 6095 2c3f 4889C7   		movq	%rax, %rdi
 6096 2c42 E8BBDCFF 		call	_ZN12_GLOBAL__N_168XmlTestReporterFixtureOutputIsCachedUntilReportSummaryIsCalledHelper7RunIm
 6096      FF
 6097              	.LEHE188:
  25:../ExecuteTest.h **** 	}
 6098              		.loc 4 25 0 is_stmt 0 discriminator 1
 6099 2c47 488D8590 		leaq	-1136(%rbp), %rax
 6099      FBFFFF
 6100 2c4e 4889C7   		movq	%rax, %rdi
 6101              	.LEHB189:
 6102 2c51 E8000000 		call	_ZN8UnitTest16SignalTranslatorD1Ev
 6102      00
 6103              	.LEHE189:
 6104              	.LBE159:
 6105              	.LBE158:
 6106              		.loc 4 42 0 is_stmt 1
 6107 2c56 E9EE0100 		jmp	.L340
 6107      00
 6108              	.L333:
 6109 2c5b 4989C4   		movq	%rax, %r12
 6110 2c5e 4889D3   		movq	%rdx, %rbx
 6111              	.LBB167:
 6112              	.LBB160:
  25:../ExecuteTest.h **** 	}
 6113              		.loc 4 25 0
 6114 2c61 488D8590 		leaq	-1136(%rbp), %rax
 6114      FBFFFF
 6115 2c68 4889C7   		movq	%rax, %rdi
 6116 2c6b E8000000 		call	_ZN8UnitTest16SignalTranslatorD1Ev
 6116      00
 6117 2c70 4C89E0   		movq	%r12, %rax
 6118 2c73 4889DA   		movq	%rbx, %rdx
 6119 2c76 EB4D     		jmp	.L324
 6120              	.L335:
 6121 2c78 4889C3   		movq	%rax, %rbx
 6122              	.LBE160:
 6123              	.LBB161:
  27:../ExecuteTest.h **** 	{
 6124              		.loc 4 27 0
 6125 2c7b E8000000 		call	__cxa_end_catch
 6125      00
 6126 2c80 4889D8   		movq	%rbx, %rax
 6127 2c83 4889C7   		movq	%rax, %rdi
 6128              	.LEHB190:
 6129 2c86 E8000000 		call	_Unwind_Resume
 6129      00
 6130              	.LEHE190:
 6131              	.L336:
 6132 2c8b 4889C3   		movq	%rax, %rbx
 6133              	.LBE161:
 6134              	.LBB162:
 6135              	.LBB163:
  36:../ExecuteTest.h **** 	}
 6136              		.loc 4 36 0
 6137 2c8e 488D8590 		leaq	-1136(%rbp), %rax
 6137      FBFFFF
 6138 2c95 4889C7   		movq	%rax, %rdi
 6139 2c98 E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 6139      00
 6140 2c9d EB03     		jmp	.L327
 6141              	.L337:
 6142 2c9f 4889C3   		movq	%rax, %rbx
 6143              	.L327:
 6144              	.LBE163:
  32:../ExecuteTest.h **** 	{
 6145              		.loc 4 32 0
 6146 2ca2 E8000000 		call	__cxa_end_catch
 6146      00
 6147 2ca7 4889D8   		movq	%rbx, %rax
 6148 2caa 4889C7   		movq	%rax, %rdi
 6149              	.LEHB191:
 6150 2cad E8000000 		call	_Unwind_Resume
 6150      00
 6151              	.LEHE191:
 6152              	.L338:
 6153 2cb2 4889C3   		movq	%rax, %rbx
 6154              	.LBE162:
  38:../ExecuteTest.h **** 	{
 6155              		.loc 4 38 0
 6156 2cb5 E8000000 		call	__cxa_end_catch
 6156      00
 6157 2cba 4889D8   		movq	%rbx, %rax
 6158 2cbd 4889C7   		movq	%rax, %rdi
 6159              	.LEHB192:
 6160 2cc0 E8000000 		call	_Unwind_Resume
 6160      00
 6161              	.LEHE192:
 6162              	.L334:
 6163              	.L324:
 6164 2cc5 4883FA01 		cmpq	$1, %rdx
 6165 2cc9 740F     		je	.L330
 6166 2ccb 4883FA02 		cmpq	$2, %rdx
 6167 2ccf 0F84A600 		je	.L331
 6167      0000
 6168 2cd5 E9430100 		jmp	.L339
 6168      00
 6169              	.L330:
 6170              	.LBB165:
  27:../ExecuteTest.h **** 	{
 6171              		.loc 4 27 0
 6172 2cda 4889C7   		movq	%rax, %rdi
 6173 2cdd E8000000 		call	__cxa_begin_catch
 6173      00
 6174 2ce2 48898580 		movq	%rax, -1152(%rbp)
 6174      FBFFFF
  30:../ExecuteTest.h **** 	}
 6175              		.loc 4 30 0
 6176 2ce9 488B8580 		movq	-1152(%rbp), %rax
 6176      FBFFFF
 6177 2cf0 488B00   		movq	(%rax), %rax
 6178 2cf3 4883C010 		addq	$16, %rax
 6179 2cf7 488B00   		movq	(%rax), %rax
 6180 2cfa 488B9580 		movq	-1152(%rbp), %rdx
 6180      FBFFFF
 6181 2d01 4889D7   		movq	%rdx, %rdi
 6182 2d04 FFD0     		call	*%rax
 6183 2d06 4889C3   		movq	%rax, %rbx
 6184 2d09 488B8580 		movq	-1152(%rbp), %rax
 6184      FBFFFF
 6185 2d10 4889C7   		movq	%rax, %rdi
 6186              	.LEHB193:
 6187 2d13 E8000000 		call	_ZNK8UnitTest15AssertException10LineNumberEv
 6187      00
 6188 2d18 4189C4   		movl	%eax, %r12d
 6189 2d1b 488B8580 		movq	-1152(%rbp), %rax
 6189      FBFFFF
 6190 2d22 4889C7   		movq	%rax, %rdi
 6191 2d25 E8000000 		call	_ZNK8UnitTest15AssertException8FilenameEv
 6191      00
  30:../ExecuteTest.h **** 	}
 6192              		.loc 4 30 0 is_stmt 0 discriminator 1
 6193 2d2a 4889C1   		movq	%rax, %rcx
 6194 2d2d 488B8570 		movq	-1168(%rbp), %rax
 6194      FBFFFF
 6195 2d34 488B10   		movq	(%rax), %rdx
 6196 2d37 488B8570 		movq	-1168(%rbp), %rax
 6196      FBFFFF
 6197 2d3e 488B7008 		movq	8(%rax), %rsi
 6198 2d42 488D8590 		leaq	-1136(%rbp), %rax
 6198      FBFFFF
 6199 2d49 4589E0   		movl	%r12d, %r8d
 6200 2d4c 4889C7   		movq	%rax, %rdi
 6201 2d4f E8000000 		call	_ZN8UnitTest11TestDetailsC1EPKcS2_S2_i
 6201      00
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 6202              		.loc 4 29 0 is_stmt 1
 6203 2d54 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 6203      00
  30:../ExecuteTest.h **** 	}
 6204              		.loc 4 30 0
 6205 2d59 488B00   		movq	(%rax), %rax
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 6206              		.loc 4 29 0
 6207 2d5c 488D8D90 		leaq	-1136(%rbp), %rcx
 6207      FBFFFF
 6208 2d63 4889DA   		movq	%rbx, %rdx
 6209 2d66 4889CE   		movq	%rcx, %rsi
 6210 2d69 4889C7   		movq	%rax, %rdi
 6211 2d6c E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 6211      00
 6212              	.LEHE193:
  27:../ExecuteTest.h **** 	{
 6213              		.loc 4 27 0
 6214 2d71 E8000000 		call	__cxa_end_catch
 6214      00
 6215              	.LBE165:
 6216              	.LBE167:
 6217              		.loc 4 42 0
 6218 2d76 E9CE0000 		jmp	.L340
 6218      00
 6219              	.L331:
 6220              	.LBB168:
 6221              	.LBB166:
  32:../ExecuteTest.h **** 	{
 6222              		.loc 4 32 0
 6223 2d7b 4889C7   		movq	%rax, %rdi
 6224 2d7e E8000000 		call	__cxa_begin_catch
 6224      00
 6225 2d83 48898588 		movq	%rax, -1144(%rbp)
 6225      FBFFFF
 6226              	.LBB164:
  34:../ExecuteTest.h **** 		stream << "Unhandled exception: " << e.what();
 6227              		.loc 4 34 0
 6228 2d8a 488D8590 		leaq	-1136(%rbp), %rax
 6228      FBFFFF
 6229 2d91 4889C7   		movq	%rax, %rdi
 6230              	.LEHB194:
 6231 2d94 E8000000 		call	_ZN8UnitTest15MemoryOutStreamC1Ev
 6231      00
 6232              	.LEHE194:
  35:../ExecuteTest.h **** 		CurrentTest::Results()->OnTestFailure(details, stream.GetText());
 6233              		.loc 4 35 0
 6234 2d99 488B8588 		movq	-1144(%rbp), %rax
 6234      FBFFFF
 6235 2da0 488B00   		movq	(%rax), %rax
 6236 2da3 4883C010 		addq	$16, %rax
 6237 2da7 488B00   		movq	(%rax), %rax
 6238 2daa 488B9588 		movq	-1144(%rbp), %rdx
 6238      FBFFFF
 6239 2db1 4889D7   		movq	%rdx, %rdi
 6240 2db4 FFD0     		call	*%rax
 6241 2db6 4889C3   		movq	%rax, %rbx
 6242 2db9 488D8590 		leaq	-1136(%rbp), %rax
 6242      FBFFFF
 6243 2dc0 BE000000 		movl	$.LC3, %esi
 6243      00
 6244 2dc5 4889C7   		movq	%rax, %rdi
 6245              	.LEHB195:
 6246 2dc8 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
 6246      00
 6247 2dcd 4889DE   		movq	%rbx, %rsi
 6248 2dd0 4889C7   		movq	%rax, %rdi
 6249 2dd3 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
 6249      00
  36:../ExecuteTest.h **** 	}
 6250              		.loc 4 36 0
 6251 2dd8 488D8590 		leaq	-1136(%rbp), %rax
 6251      FBFFFF
 6252 2ddf 4889C7   		movq	%rax, %rdi
 6253 2de2 E8000000 		call	_ZNK8UnitTest15MemoryOutStream7GetTextEv
 6253      00
 6254 2de7 4889C3   		movq	%rax, %rbx
 6255 2dea E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 6255      00
  36:../ExecuteTest.h **** 	}
 6256              		.loc 4 36 0 is_stmt 0 discriminator 1
 6257 2def 488B00   		movq	(%rax), %rax
 6258 2df2 488B8D70 		movq	-1168(%rbp), %rcx
 6258      FBFFFF
 6259 2df9 4889DA   		movq	%rbx, %rdx
 6260 2dfc 4889CE   		movq	%rcx, %rsi
 6261 2dff 4889C7   		movq	%rax, %rdi
 6262 2e02 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 6262      00
 6263              	.LEHE195:
 6264 2e07 488D8590 		leaq	-1136(%rbp), %rax
 6264      FBFFFF
 6265 2e0e 4889C7   		movq	%rax, %rdi
 6266              	.LEHB196:
 6267 2e11 E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 6267      00
 6268              	.LEHE196:
 6269              	.LBE164:
  32:../ExecuteTest.h **** 	{
 6270              		.loc 4 32 0 is_stmt 1
 6271 2e16 E8000000 		call	__cxa_end_catch
 6271      00
 6272              	.LBE166:
 6273              	.LBE168:
 6274              		.loc 4 42 0
 6275 2e1b EB2C     		jmp	.L340
 6276              	.L339:
 6277              	.LBB169:
  38:../ExecuteTest.h **** 	{
 6278              		.loc 4 38 0
 6279 2e1d 4889C7   		movq	%rax, %rdi
 6280 2e20 E8000000 		call	__cxa_begin_catch
 6280      00
 6281              	.LEHB197:
  40:../ExecuteTest.h **** 	}
 6282              		.loc 4 40 0
 6283 2e25 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 6283      00
 6284 2e2a 488B00   		movq	(%rax), %rax
 6285 2e2d 488B8D70 		movq	-1168(%rbp), %rcx
 6285      FBFFFF
 6286 2e34 BA000000 		movl	$.LC44, %edx
 6286      00
 6287 2e39 4889CE   		movq	%rcx, %rsi
 6288 2e3c 4889C7   		movq	%rax, %rdi
 6289 2e3f E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 6289      00
 6290              	.LEHE197:
 6291              	.LEHB198:
  38:../ExecuteTest.h **** 	{
 6292              		.loc 4 38 0
 6293 2e44 E8000000 		call	__cxa_end_catch
 6293      00
 6294              	.LEHE198:
 6295              	.L340:
 6296              	.LBE169:
 6297              		.loc 4 42 0
 6298 2e49 90       		nop
 6299 2e4a 4881C480 		addq	$1152, %rsp
 6299      040000
 6300 2e51 5B       		popq	%rbx
 6301 2e52 415C     		popq	%r12
 6302 2e54 5D       		popq	%rbp
 6303              		.cfi_def_cfa 7, 8
 6304 2e55 C3       		ret
 6305              		.cfi_endproc
 6306              	.LFE1406:
 6307              		.section	.gcc_except_table
 6308 053f 00       		.align 4
 6309              	.LLSDA1406:
 6310 0540 FF       		.byte	0xff
 6311 0541 03       		.byte	0x3
 6312 0542 5D       		.uleb128 .LLSDATT1406-.LLSDATTD1406
 6313              	.LLSDATTD1406:
 6314 0543 01       		.byte	0x1
 6315 0544 46       		.uleb128 .LLSDACSE1406-.LLSDACSB1406
 6316              	.LLSDACSB1406:
 6317 0545 1C       		.uleb128 .LEHB186-.LFB1406
 6318 0546 05       		.uleb128 .LEHE186-.LEHB186
 6319 0547 00       		.uleb128 0
 6320 0548 00       		.uleb128 0
 6321 0549 35       		.uleb128 .LEHB187-.LFB1406
 6322 054a 05       		.uleb128 .LEHE187-.LEHB187
 6323 054b 8702     		.uleb128 .L334-.LFB1406
 6324 054d 05       		.uleb128 0x5
 6325 054e 75       		.uleb128 .LEHB188-.LFB1406
 6326 054f 14       		.uleb128 .LEHE188-.LEHB188
 6327 0550 9D01     		.uleb128 .L333-.LFB1406
 6328 0552 07       		.uleb128 0x7
 6329 0553 9301     		.uleb128 .LEHB189-.LFB1406
 6330 0555 05       		.uleb128 .LEHE189-.LEHB189
 6331 0556 8702     		.uleb128 .L334-.LFB1406
 6332 0558 05       		.uleb128 0x5
 6333 0559 C801     		.uleb128 .LEHB190-.LFB1406
 6334 055b 05       		.uleb128 .LEHE190-.LEHB190
 6335 055c 00       		.uleb128 0
 6336 055d 00       		.uleb128 0
 6337 055e EF01     		.uleb128 .LEHB191-.LFB1406
 6338 0560 05       		.uleb128 .LEHE191-.LEHB191
 6339 0561 00       		.uleb128 0
 6340 0562 00       		.uleb128 0
 6341 0563 8202     		.uleb128 .LEHB192-.LFB1406
 6342 0565 05       		.uleb128 .LEHE192-.LEHB192
 6343 0566 00       		.uleb128 0
 6344 0567 00       		.uleb128 0
 6345 0568 D502     		.uleb128 .LEHB193-.LFB1406
 6346 056a 5E       		.uleb128 .LEHE193-.LEHB193
 6347 056b BA01     		.uleb128 .L335-.LFB1406
 6348 056d 00       		.uleb128 0
 6349 056e D603     		.uleb128 .LEHB194-.LFB1406
 6350 0570 05       		.uleb128 .LEHE194-.LEHB194
 6351 0571 E101     		.uleb128 .L337-.LFB1406
 6352 0573 00       		.uleb128 0
 6353 0574 8A04     		.uleb128 .LEHB195-.LFB1406
 6354 0576 3F       		.uleb128 .LEHE195-.LEHB195
 6355 0577 CD01     		.uleb128 .L336-.LFB1406
 6356 0579 00       		.uleb128 0
 6357 057a D304     		.uleb128 .LEHB196-.LFB1406
 6358 057c 05       		.uleb128 .LEHE196-.LEHB196
 6359 057d E101     		.uleb128 .L337-.LFB1406
 6360 057f 00       		.uleb128 0
 6361 0580 E704     		.uleb128 .LEHB197-.LFB1406
 6362 0582 1F       		.uleb128 .LEHE197-.LEHB197
 6363 0583 F401     		.uleb128 .L338-.LFB1406
 6364 0585 00       		.uleb128 0
 6365 0586 8605     		.uleb128 .LEHB198-.LFB1406
 6366 0588 05       		.uleb128 .LEHE198-.LEHB198
 6367 0589 00       		.uleb128 0
 6368 058a 00       		.uleb128 0
 6369              	.LLSDACSE1406:
 6370 058b 03       		.byte	0x3
 6371 058c 00       		.byte	0
 6372 058d 02       		.byte	0x2
 6373 058e 7D       		.byte	0x7d
 6374 058f 01       		.byte	0x1
 6375 0590 7D       		.byte	0x7d
 6376 0591 00       		.byte	0
 6377 0592 7D       		.byte	0x7d
 6378 0593 00       		.align 4
 6379 0594 00000000 		.long	0
 6380              	
 6381 0598 00000000 		.long	_ZTISt9exception
 6382 059c 00000000 		.long	_ZTIN8UnitTest15AssertExceptionE
 6383              	.LLSDATT1406:
 6384              		.text
 6386              		.section	.text._ZN8UnitTest5CheckIbEEbT_,"axG",@progbits,_ZN8UnitTest5CheckIbEEbT_,comdat
 6387              		.weak	_ZN8UnitTest5CheckIbEEbT_
 6389              	_ZN8UnitTest5CheckIbEEbT_:
 6390              	.LFB1408:
  12:../Checks.h   **** {
 6391              		.loc 5 12 0
 6392              		.cfi_startproc
 6393 0000 55       		pushq	%rbp
 6394              		.cfi_def_cfa_offset 16
 6395              		.cfi_offset 6, -16
 6396 0001 4889E5   		movq	%rsp, %rbp
 6397              		.cfi_def_cfa_register 6
 6398 0004 89F8     		movl	%edi, %eax
 6399 0006 8845FC   		movb	%al, -4(%rbp)
  14:../Checks.h   **** }
 6400              		.loc 5 14 0
 6401 0009 0FB645FC 		movzbl	-4(%rbp), %eax
  15:../Checks.h   **** 
 6402              		.loc 5 15 0
 6403 000d 5D       		popq	%rbp
 6404              		.cfi_def_cfa 7, 8
 6405 000e C3       		ret
 6406              		.cfi_endproc
 6407              	.LFE1408:
 6409              		.text
 6411              	_ZN8UnitTest11ExecuteTestIN12_GLOBAL__N_152XmlTestReporterFixtureEmptyReportSummaryFormatHelperEEEv
 6412              	.LFB1409:
  16:../ExecuteTest.h **** {
 6413              		.loc 4 16 0
 6414              		.cfi_startproc
 6415              		.cfi_personality 0x3,__gxx_personality_v0
 6416              		.cfi_lsda 0x3,.LLSDA1409
 6417 2e56 55       		pushq	%rbp
 6418              		.cfi_def_cfa_offset 16
 6419              		.cfi_offset 6, -16
 6420 2e57 4889E5   		movq	%rsp, %rbp
 6421              		.cfi_def_cfa_register 6
 6422 2e5a 4154     		pushq	%r12
 6423 2e5c 53       		pushq	%rbx
 6424 2e5d 4881EC80 		subq	$1152, %rsp
 6424      040000
 6425              		.cfi_offset 12, -24
 6426              		.cfi_offset 3, -32
 6427 2e64 4889BD78 		movq	%rdi, -1160(%rbp)
 6427      FBFFFF
 6428 2e6b 4889B570 		movq	%rsi, -1168(%rbp)
 6428      FBFFFF
 6429              	.LEHB199:
 6430              	.LBB170:
  18:../ExecuteTest.h **** 
 6431              		.loc 4 18 0
 6432 2e72 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 6432      00
 6433              	.LEHE199:
 6434 2e77 488B9570 		movq	-1168(%rbp), %rdx
 6434      FBFFFF
 6435 2e7e 488910   		movq	%rdx, (%rax)
 6436              	.LBB171:
  23:../ExecuteTest.h **** #endif
 6437              		.loc 4 23 0
 6438 2e81 488D8590 		leaq	-1136(%rbp), %rax
 6438      FBFFFF
 6439 2e88 4889C7   		movq	%rax, %rdi
 6440              	.LEHB200:
 6441 2e8b E8000000 		call	_ZN8UnitTest16SignalTranslatorC1Ev
 6441      00
 6442              	.LEHE200:
  23:../ExecuteTest.h **** #endif
 6443              		.loc 4 23 0 is_stmt 0 discriminator 1
 6444 2e90 488B0500 		movq	_ZN8UnitTest16SignalTranslator12s_jumpTargetE(%rip), %rax
 6444      000000
 6445 2e97 BE010000 		movl	$1, %esi
 6445      00
 6446 2e9c 4889C7   		movq	%rax, %rdi
 6447 2e9f E8000000 		call	__sigsetjmp
 6447      00
 6448 2ea4 85C0     		testl	%eax, %eax
 6449 2ea6 0F95C0   		setne	%al
 6450 2ea9 84C0     		testb	%al, %al
 6451 2eab 7423     		je	.L344
 6452 2ead BF080000 		movl	$8, %edi
 6452      00
 6453 2eb2 E8000000 		call	__cxa_allocate_exception
 6453      00
 6454 2eb7 48C70000 		movq	$.LC43, (%rax)
 6454      000000
 6455 2ebe BA000000 		movl	$0, %edx
 6455      00
 6456 2ec3 BE000000 		movl	$_ZTIPKc, %esi
 6456      00
 6457 2ec8 4889C7   		movq	%rax, %rdi
 6458              	.LEHB201:
 6459 2ecb E8000000 		call	__cxa_throw
 6459      00
 6460              	.L344:
  25:../ExecuteTest.h **** 	}
 6461              		.loc 4 25 0 is_stmt 1
 6462 2ed0 488B8578 		movq	-1160(%rbp), %rax
 6462      FBFFFF
 6463 2ed7 4889C7   		movq	%rax, %rdi
 6464 2eda E81BE0FF 		call	_ZN12_GLOBAL__N_152XmlTestReporterFixtureEmptyReportSummaryFormatHelper7RunImplEv
 6464      FF
 6465              	.LEHE201:
  25:../ExecuteTest.h **** 	}
 6466              		.loc 4 25 0 is_stmt 0 discriminator 1
 6467 2edf 488D8590 		leaq	-1136(%rbp), %rax
 6467      FBFFFF
 6468 2ee6 4889C7   		movq	%rax, %rdi
 6469              	.LEHB202:
 6470 2ee9 E8000000 		call	_ZN8UnitTest16SignalTranslatorD1Ev
 6470      00
 6471              	.LEHE202:
 6472              	.LBE171:
 6473              	.LBE170:
 6474              		.loc 4 42 0 is_stmt 1
 6475 2eee E9EE0100 		jmp	.L362
 6475      00
 6476              	.L355:
 6477 2ef3 4989C4   		movq	%rax, %r12
 6478 2ef6 4889D3   		movq	%rdx, %rbx
 6479              	.LBB179:
 6480              	.LBB172:
  25:../ExecuteTest.h **** 	}
 6481              		.loc 4 25 0
 6482 2ef9 488D8590 		leaq	-1136(%rbp), %rax
 6482      FBFFFF
 6483 2f00 4889C7   		movq	%rax, %rdi
 6484 2f03 E8000000 		call	_ZN8UnitTest16SignalTranslatorD1Ev
 6484      00
 6485 2f08 4C89E0   		movq	%r12, %rax
 6486 2f0b 4889DA   		movq	%rbx, %rdx
 6487 2f0e EB4D     		jmp	.L346
 6488              	.L357:
 6489 2f10 4889C3   		movq	%rax, %rbx
 6490              	.LBE172:
 6491              	.LBB173:
  27:../ExecuteTest.h **** 	{
 6492              		.loc 4 27 0
 6493 2f13 E8000000 		call	__cxa_end_catch
 6493      00
 6494 2f18 4889D8   		movq	%rbx, %rax
 6495 2f1b 4889C7   		movq	%rax, %rdi
 6496              	.LEHB203:
 6497 2f1e E8000000 		call	_Unwind_Resume
 6497      00
 6498              	.LEHE203:
 6499              	.L358:
 6500 2f23 4889C3   		movq	%rax, %rbx
 6501              	.LBE173:
 6502              	.LBB174:
 6503              	.LBB175:
  36:../ExecuteTest.h **** 	}
 6504              		.loc 4 36 0
 6505 2f26 488D8590 		leaq	-1136(%rbp), %rax
 6505      FBFFFF
 6506 2f2d 4889C7   		movq	%rax, %rdi
 6507 2f30 E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 6507      00
 6508 2f35 EB03     		jmp	.L349
 6509              	.L359:
 6510 2f37 4889C3   		movq	%rax, %rbx
 6511              	.L349:
 6512              	.LBE175:
  32:../ExecuteTest.h **** 	{
 6513              		.loc 4 32 0
 6514 2f3a E8000000 		call	__cxa_end_catch
 6514      00
 6515 2f3f 4889D8   		movq	%rbx, %rax
 6516 2f42 4889C7   		movq	%rax, %rdi
 6517              	.LEHB204:
 6518 2f45 E8000000 		call	_Unwind_Resume
 6518      00
 6519              	.LEHE204:
 6520              	.L360:
 6521 2f4a 4889C3   		movq	%rax, %rbx
 6522              	.LBE174:
  38:../ExecuteTest.h **** 	{
 6523              		.loc 4 38 0
 6524 2f4d E8000000 		call	__cxa_end_catch
 6524      00
 6525 2f52 4889D8   		movq	%rbx, %rax
 6526 2f55 4889C7   		movq	%rax, %rdi
 6527              	.LEHB205:
 6528 2f58 E8000000 		call	_Unwind_Resume
 6528      00
 6529              	.LEHE205:
 6530              	.L356:
 6531              	.L346:
 6532 2f5d 4883FA01 		cmpq	$1, %rdx
 6533 2f61 740F     		je	.L352
 6534 2f63 4883FA02 		cmpq	$2, %rdx
 6535 2f67 0F84A600 		je	.L353
 6535      0000
 6536 2f6d E9430100 		jmp	.L361
 6536      00
 6537              	.L352:
 6538              	.LBB177:
  27:../ExecuteTest.h **** 	{
 6539              		.loc 4 27 0
 6540 2f72 4889C7   		movq	%rax, %rdi
 6541 2f75 E8000000 		call	__cxa_begin_catch
 6541      00
 6542 2f7a 48898580 		movq	%rax, -1152(%rbp)
 6542      FBFFFF
  30:../ExecuteTest.h **** 	}
 6543              		.loc 4 30 0
 6544 2f81 488B8580 		movq	-1152(%rbp), %rax
 6544      FBFFFF
 6545 2f88 488B00   		movq	(%rax), %rax
 6546 2f8b 4883C010 		addq	$16, %rax
 6547 2f8f 488B00   		movq	(%rax), %rax
 6548 2f92 488B9580 		movq	-1152(%rbp), %rdx
 6548      FBFFFF
 6549 2f99 4889D7   		movq	%rdx, %rdi
 6550 2f9c FFD0     		call	*%rax
 6551 2f9e 4889C3   		movq	%rax, %rbx
 6552 2fa1 488B8580 		movq	-1152(%rbp), %rax
 6552      FBFFFF
 6553 2fa8 4889C7   		movq	%rax, %rdi
 6554              	.LEHB206:
 6555 2fab E8000000 		call	_ZNK8UnitTest15AssertException10LineNumberEv
 6555      00
 6556 2fb0 4189C4   		movl	%eax, %r12d
 6557 2fb3 488B8580 		movq	-1152(%rbp), %rax
 6557      FBFFFF
 6558 2fba 4889C7   		movq	%rax, %rdi
 6559 2fbd E8000000 		call	_ZNK8UnitTest15AssertException8FilenameEv
 6559      00
  30:../ExecuteTest.h **** 	}
 6560              		.loc 4 30 0 is_stmt 0 discriminator 1
 6561 2fc2 4889C1   		movq	%rax, %rcx
 6562 2fc5 488B8570 		movq	-1168(%rbp), %rax
 6562      FBFFFF
 6563 2fcc 488B10   		movq	(%rax), %rdx
 6564 2fcf 488B8570 		movq	-1168(%rbp), %rax
 6564      FBFFFF
 6565 2fd6 488B7008 		movq	8(%rax), %rsi
 6566 2fda 488D8590 		leaq	-1136(%rbp), %rax
 6566      FBFFFF
 6567 2fe1 4589E0   		movl	%r12d, %r8d
 6568 2fe4 4889C7   		movq	%rax, %rdi
 6569 2fe7 E8000000 		call	_ZN8UnitTest11TestDetailsC1EPKcS2_S2_i
 6569      00
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 6570              		.loc 4 29 0 is_stmt 1
 6571 2fec E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 6571      00
  30:../ExecuteTest.h **** 	}
 6572              		.loc 4 30 0
 6573 2ff1 488B00   		movq	(%rax), %rax
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 6574              		.loc 4 29 0
 6575 2ff4 488D8D90 		leaq	-1136(%rbp), %rcx
 6575      FBFFFF
 6576 2ffb 4889DA   		movq	%rbx, %rdx
 6577 2ffe 4889CE   		movq	%rcx, %rsi
 6578 3001 4889C7   		movq	%rax, %rdi
 6579 3004 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 6579      00
 6580              	.LEHE206:
  27:../ExecuteTest.h **** 	{
 6581              		.loc 4 27 0
 6582 3009 E8000000 		call	__cxa_end_catch
 6582      00
 6583              	.LBE177:
 6584              	.LBE179:
 6585              		.loc 4 42 0
 6586 300e E9CE0000 		jmp	.L362
 6586      00
 6587              	.L353:
 6588              	.LBB180:
 6589              	.LBB178:
  32:../ExecuteTest.h **** 	{
 6590              		.loc 4 32 0
 6591 3013 4889C7   		movq	%rax, %rdi
 6592 3016 E8000000 		call	__cxa_begin_catch
 6592      00
 6593 301b 48898588 		movq	%rax, -1144(%rbp)
 6593      FBFFFF
 6594              	.LBB176:
  34:../ExecuteTest.h **** 		stream << "Unhandled exception: " << e.what();
 6595              		.loc 4 34 0
 6596 3022 488D8590 		leaq	-1136(%rbp), %rax
 6596      FBFFFF
 6597 3029 4889C7   		movq	%rax, %rdi
 6598              	.LEHB207:
 6599 302c E8000000 		call	_ZN8UnitTest15MemoryOutStreamC1Ev
 6599      00
 6600              	.LEHE207:
  35:../ExecuteTest.h **** 		CurrentTest::Results()->OnTestFailure(details, stream.GetText());
 6601              		.loc 4 35 0
 6602 3031 488B8588 		movq	-1144(%rbp), %rax
 6602      FBFFFF
 6603 3038 488B00   		movq	(%rax), %rax
 6604 303b 4883C010 		addq	$16, %rax
 6605 303f 488B00   		movq	(%rax), %rax
 6606 3042 488B9588 		movq	-1144(%rbp), %rdx
 6606      FBFFFF
 6607 3049 4889D7   		movq	%rdx, %rdi
 6608 304c FFD0     		call	*%rax
 6609 304e 4889C3   		movq	%rax, %rbx
 6610 3051 488D8590 		leaq	-1136(%rbp), %rax
 6610      FBFFFF
 6611 3058 BE000000 		movl	$.LC3, %esi
 6611      00
 6612 305d 4889C7   		movq	%rax, %rdi
 6613              	.LEHB208:
 6614 3060 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
 6614      00
 6615 3065 4889DE   		movq	%rbx, %rsi
 6616 3068 4889C7   		movq	%rax, %rdi
 6617 306b E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
 6617      00
  36:../ExecuteTest.h **** 	}
 6618              		.loc 4 36 0
 6619 3070 488D8590 		leaq	-1136(%rbp), %rax
 6619      FBFFFF
 6620 3077 4889C7   		movq	%rax, %rdi
 6621 307a E8000000 		call	_ZNK8UnitTest15MemoryOutStream7GetTextEv
 6621      00
 6622 307f 4889C3   		movq	%rax, %rbx
 6623 3082 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 6623      00
  36:../ExecuteTest.h **** 	}
 6624              		.loc 4 36 0 is_stmt 0 discriminator 1
 6625 3087 488B00   		movq	(%rax), %rax
 6626 308a 488B8D70 		movq	-1168(%rbp), %rcx
 6626      FBFFFF
 6627 3091 4889DA   		movq	%rbx, %rdx
 6628 3094 4889CE   		movq	%rcx, %rsi
 6629 3097 4889C7   		movq	%rax, %rdi
 6630 309a E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 6630      00
 6631              	.LEHE208:
 6632 309f 488D8590 		leaq	-1136(%rbp), %rax
 6632      FBFFFF
 6633 30a6 4889C7   		movq	%rax, %rdi
 6634              	.LEHB209:
 6635 30a9 E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 6635      00
 6636              	.LEHE209:
 6637              	.LBE176:
  32:../ExecuteTest.h **** 	{
 6638              		.loc 4 32 0 is_stmt 1
 6639 30ae E8000000 		call	__cxa_end_catch
 6639      00
 6640              	.LBE178:
 6641              	.LBE180:
 6642              		.loc 4 42 0
 6643 30b3 EB2C     		jmp	.L362
 6644              	.L361:
 6645              	.LBB181:
  38:../ExecuteTest.h **** 	{
 6646              		.loc 4 38 0
 6647 30b5 4889C7   		movq	%rax, %rdi
 6648 30b8 E8000000 		call	__cxa_begin_catch
 6648      00
 6649              	.LEHB210:
  40:../ExecuteTest.h **** 	}
 6650              		.loc 4 40 0
 6651 30bd E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 6651      00
 6652 30c2 488B00   		movq	(%rax), %rax
 6653 30c5 488B8D70 		movq	-1168(%rbp), %rcx
 6653      FBFFFF
 6654 30cc BA000000 		movl	$.LC44, %edx
 6654      00
 6655 30d1 4889CE   		movq	%rcx, %rsi
 6656 30d4 4889C7   		movq	%rax, %rdi
 6657 30d7 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 6657      00
 6658              	.LEHE210:
 6659              	.LEHB211:
  38:../ExecuteTest.h **** 	{
 6660              		.loc 4 38 0
 6661 30dc E8000000 		call	__cxa_end_catch
 6661      00
 6662              	.LEHE211:
 6663              	.L362:
 6664              	.LBE181:
 6665              		.loc 4 42 0
 6666 30e1 90       		nop
 6667 30e2 4881C480 		addq	$1152, %rsp
 6667      040000
 6668 30e9 5B       		popq	%rbx
 6669 30ea 415C     		popq	%r12
 6670 30ec 5D       		popq	%rbp
 6671              		.cfi_def_cfa 7, 8
 6672 30ed C3       		ret
 6673              		.cfi_endproc
 6674              	.LFE1409:
 6675              		.section	.gcc_except_table
 6676              		.align 4
 6677              	.LLSDA1409:
 6678 05a0 FF       		.byte	0xff
 6679 05a1 03       		.byte	0x3
 6680 05a2 5D       		.uleb128 .LLSDATT1409-.LLSDATTD1409
 6681              	.LLSDATTD1409:
 6682 05a3 01       		.byte	0x1
 6683 05a4 46       		.uleb128 .LLSDACSE1409-.LLSDACSB1409
 6684              	.LLSDACSB1409:
 6685 05a5 1C       		.uleb128 .LEHB199-.LFB1409
 6686 05a6 05       		.uleb128 .LEHE199-.LEHB199
 6687 05a7 00       		.uleb128 0
 6688 05a8 00       		.uleb128 0
 6689 05a9 35       		.uleb128 .LEHB200-.LFB1409
 6690 05aa 05       		.uleb128 .LEHE200-.LEHB200
 6691 05ab 8702     		.uleb128 .L356-.LFB1409
 6692 05ad 05       		.uleb128 0x5
 6693 05ae 75       		.uleb128 .LEHB201-.LFB1409
 6694 05af 14       		.uleb128 .LEHE201-.LEHB201
 6695 05b0 9D01     		.uleb128 .L355-.LFB1409
 6696 05b2 07       		.uleb128 0x7
 6697 05b3 9301     		.uleb128 .LEHB202-.LFB1409
 6698 05b5 05       		.uleb128 .LEHE202-.LEHB202
 6699 05b6 8702     		.uleb128 .L356-.LFB1409
 6700 05b8 05       		.uleb128 0x5
 6701 05b9 C801     		.uleb128 .LEHB203-.LFB1409
 6702 05bb 05       		.uleb128 .LEHE203-.LEHB203
 6703 05bc 00       		.uleb128 0
 6704 05bd 00       		.uleb128 0
 6705 05be EF01     		.uleb128 .LEHB204-.LFB1409
 6706 05c0 05       		.uleb128 .LEHE204-.LEHB204
 6707 05c1 00       		.uleb128 0
 6708 05c2 00       		.uleb128 0
 6709 05c3 8202     		.uleb128 .LEHB205-.LFB1409
 6710 05c5 05       		.uleb128 .LEHE205-.LEHB205
 6711 05c6 00       		.uleb128 0
 6712 05c7 00       		.uleb128 0
 6713 05c8 D502     		.uleb128 .LEHB206-.LFB1409
 6714 05ca 5E       		.uleb128 .LEHE206-.LEHB206
 6715 05cb BA01     		.uleb128 .L357-.LFB1409
 6716 05cd 00       		.uleb128 0
 6717 05ce D603     		.uleb128 .LEHB207-.LFB1409
 6718 05d0 05       		.uleb128 .LEHE207-.LEHB207
 6719 05d1 E101     		.uleb128 .L359-.LFB1409
 6720 05d3 00       		.uleb128 0
 6721 05d4 8A04     		.uleb128 .LEHB208-.LFB1409
 6722 05d6 3F       		.uleb128 .LEHE208-.LEHB208
 6723 05d7 CD01     		.uleb128 .L358-.LFB1409
 6724 05d9 00       		.uleb128 0
 6725 05da D304     		.uleb128 .LEHB209-.LFB1409
 6726 05dc 05       		.uleb128 .LEHE209-.LEHB209
 6727 05dd E101     		.uleb128 .L359-.LFB1409
 6728 05df 00       		.uleb128 0
 6729 05e0 E704     		.uleb128 .LEHB210-.LFB1409
 6730 05e2 1F       		.uleb128 .LEHE210-.LEHB210
 6731 05e3 F401     		.uleb128 .L360-.LFB1409
 6732 05e5 00       		.uleb128 0
 6733 05e6 8605     		.uleb128 .LEHB211-.LFB1409
 6734 05e8 05       		.uleb128 .LEHE211-.LEHB211
 6735 05e9 00       		.uleb128 0
 6736 05ea 00       		.uleb128 0
 6737              	.LLSDACSE1409:
 6738 05eb 03       		.byte	0x3
 6739 05ec 00       		.byte	0
 6740 05ed 02       		.byte	0x2
 6741 05ee 7D       		.byte	0x7d
 6742 05ef 01       		.byte	0x1
 6743 05f0 7D       		.byte	0x7d
 6744 05f1 00       		.byte	0
 6745 05f2 7D       		.byte	0x7d
 6746 05f3 00       		.align 4
 6747 05f4 00000000 		.long	0
 6748              	
 6749 05f8 00000000 		.long	_ZTISt9exception
 6750 05fc 00000000 		.long	_ZTIN8UnitTest15AssertExceptionE
 6751              	.LLSDATT1409:
 6752              		.text
 6755              	_ZN8UnitTest11ExecuteTestIN12_GLOBAL__N_167XmlTestReporterFixtureSingleSuccessfulTestReportSummaryF
 6756              	.LFB1410:
  16:../ExecuteTest.h **** {
 6757              		.loc 4 16 0
 6758              		.cfi_startproc
 6759              		.cfi_personality 0x3,__gxx_personality_v0
 6760              		.cfi_lsda 0x3,.LLSDA1410
 6761 30ee 55       		pushq	%rbp
 6762              		.cfi_def_cfa_offset 16
 6763              		.cfi_offset 6, -16
 6764 30ef 4889E5   		movq	%rsp, %rbp
 6765              		.cfi_def_cfa_register 6
 6766 30f2 4154     		pushq	%r12
 6767 30f4 53       		pushq	%rbx
 6768 30f5 4881EC80 		subq	$1152, %rsp
 6768      040000
 6769              		.cfi_offset 12, -24
 6770              		.cfi_offset 3, -32
 6771 30fc 4889BD78 		movq	%rdi, -1160(%rbp)
 6771      FBFFFF
 6772 3103 4889B570 		movq	%rsi, -1168(%rbp)
 6772      FBFFFF
 6773              	.LEHB212:
 6774              	.LBB182:
  18:../ExecuteTest.h **** 
 6775              		.loc 4 18 0
 6776 310a E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 6776      00
 6777              	.LEHE212:
 6778 310f 488B9570 		movq	-1168(%rbp), %rdx
 6778      FBFFFF
 6779 3116 488910   		movq	%rdx, (%rax)
 6780              	.LBB183:
  23:../ExecuteTest.h **** #endif
 6781              		.loc 4 23 0
 6782 3119 488D8590 		leaq	-1136(%rbp), %rax
 6782      FBFFFF
 6783 3120 4889C7   		movq	%rax, %rdi
 6784              	.LEHB213:
 6785 3123 E8000000 		call	_ZN8UnitTest16SignalTranslatorC1Ev
 6785      00
 6786              	.LEHE213:
  23:../ExecuteTest.h **** #endif
 6787              		.loc 4 23 0 is_stmt 0 discriminator 1
 6788 3128 488B0500 		movq	_ZN8UnitTest16SignalTranslator12s_jumpTargetE(%rip), %rax
 6788      000000
 6789 312f BE010000 		movl	$1, %esi
 6789      00
 6790 3134 4889C7   		movq	%rax, %rdi
 6791 3137 E8000000 		call	__sigsetjmp
 6791      00
 6792 313c 85C0     		testl	%eax, %eax
 6793 313e 0F95C0   		setne	%al
 6794 3141 84C0     		testb	%al, %al
 6795 3143 7423     		je	.L364
 6796 3145 BF080000 		movl	$8, %edi
 6796      00
 6797 314a E8000000 		call	__cxa_allocate_exception
 6797      00
 6798 314f 48C70000 		movq	$.LC43, (%rax)
 6798      000000
 6799 3156 BA000000 		movl	$0, %edx
 6799      00
 6800 315b BE000000 		movl	$_ZTIPKc, %esi
 6800      00
 6801 3160 4889C7   		movq	%rax, %rdi
 6802              	.LEHB214:
 6803 3163 E8000000 		call	__cxa_throw
 6803      00
 6804              	.L364:
  25:../ExecuteTest.h **** 	}
 6805              		.loc 4 25 0 is_stmt 1
 6806 3168 488B8578 		movq	-1160(%rbp), %rax
 6806      FBFFFF
 6807 316f 4889C7   		movq	%rax, %rdi
 6808 3172 E8F7E1FF 		call	_ZN12_GLOBAL__N_167XmlTestReporterFixtureSingleSuccessfulTestReportSummaryFormatHelper7RunImp
 6808      FF
 6809              	.LEHE214:
  25:../ExecuteTest.h **** 	}
 6810              		.loc 4 25 0 is_stmt 0 discriminator 1
 6811 3177 488D8590 		leaq	-1136(%rbp), %rax
 6811      FBFFFF
 6812 317e 4889C7   		movq	%rax, %rdi
 6813              	.LEHB215:
 6814 3181 E8000000 		call	_ZN8UnitTest16SignalTranslatorD1Ev
 6814      00
 6815              	.LEHE215:
 6816              	.LBE183:
 6817              	.LBE182:
 6818              		.loc 4 42 0 is_stmt 1
 6819 3186 E9EE0100 		jmp	.L382
 6819      00
 6820              	.L375:
 6821 318b 4989C4   		movq	%rax, %r12
 6822 318e 4889D3   		movq	%rdx, %rbx
 6823              	.LBB191:
 6824              	.LBB184:
  25:../ExecuteTest.h **** 	}
 6825              		.loc 4 25 0
 6826 3191 488D8590 		leaq	-1136(%rbp), %rax
 6826      FBFFFF
 6827 3198 4889C7   		movq	%rax, %rdi
 6828 319b E8000000 		call	_ZN8UnitTest16SignalTranslatorD1Ev
 6828      00
 6829 31a0 4C89E0   		movq	%r12, %rax
 6830 31a3 4889DA   		movq	%rbx, %rdx
 6831 31a6 EB4D     		jmp	.L366
 6832              	.L377:
 6833 31a8 4889C3   		movq	%rax, %rbx
 6834              	.LBE184:
 6835              	.LBB185:
  27:../ExecuteTest.h **** 	{
 6836              		.loc 4 27 0
 6837 31ab E8000000 		call	__cxa_end_catch
 6837      00
 6838 31b0 4889D8   		movq	%rbx, %rax
 6839 31b3 4889C7   		movq	%rax, %rdi
 6840              	.LEHB216:
 6841 31b6 E8000000 		call	_Unwind_Resume
 6841      00
 6842              	.LEHE216:
 6843              	.L378:
 6844 31bb 4889C3   		movq	%rax, %rbx
 6845              	.LBE185:
 6846              	.LBB186:
 6847              	.LBB187:
  36:../ExecuteTest.h **** 	}
 6848              		.loc 4 36 0
 6849 31be 488D8590 		leaq	-1136(%rbp), %rax
 6849      FBFFFF
 6850 31c5 4889C7   		movq	%rax, %rdi
 6851 31c8 E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 6851      00
 6852 31cd EB03     		jmp	.L369
 6853              	.L379:
 6854 31cf 4889C3   		movq	%rax, %rbx
 6855              	.L369:
 6856              	.LBE187:
  32:../ExecuteTest.h **** 	{
 6857              		.loc 4 32 0
 6858 31d2 E8000000 		call	__cxa_end_catch
 6858      00
 6859 31d7 4889D8   		movq	%rbx, %rax
 6860 31da 4889C7   		movq	%rax, %rdi
 6861              	.LEHB217:
 6862 31dd E8000000 		call	_Unwind_Resume
 6862      00
 6863              	.LEHE217:
 6864              	.L380:
 6865 31e2 4889C3   		movq	%rax, %rbx
 6866              	.LBE186:
  38:../ExecuteTest.h **** 	{
 6867              		.loc 4 38 0
 6868 31e5 E8000000 		call	__cxa_end_catch
 6868      00
 6869 31ea 4889D8   		movq	%rbx, %rax
 6870 31ed 4889C7   		movq	%rax, %rdi
 6871              	.LEHB218:
 6872 31f0 E8000000 		call	_Unwind_Resume
 6872      00
 6873              	.LEHE218:
 6874              	.L376:
 6875              	.L366:
 6876 31f5 4883FA01 		cmpq	$1, %rdx
 6877 31f9 740F     		je	.L372
 6878 31fb 4883FA02 		cmpq	$2, %rdx
 6879 31ff 0F84A600 		je	.L373
 6879      0000
 6880 3205 E9430100 		jmp	.L381
 6880      00
 6881              	.L372:
 6882              	.LBB189:
  27:../ExecuteTest.h **** 	{
 6883              		.loc 4 27 0
 6884 320a 4889C7   		movq	%rax, %rdi
 6885 320d E8000000 		call	__cxa_begin_catch
 6885      00
 6886 3212 48898580 		movq	%rax, -1152(%rbp)
 6886      FBFFFF
  30:../ExecuteTest.h **** 	}
 6887              		.loc 4 30 0
 6888 3219 488B8580 		movq	-1152(%rbp), %rax
 6888      FBFFFF
 6889 3220 488B00   		movq	(%rax), %rax
 6890 3223 4883C010 		addq	$16, %rax
 6891 3227 488B00   		movq	(%rax), %rax
 6892 322a 488B9580 		movq	-1152(%rbp), %rdx
 6892      FBFFFF
 6893 3231 4889D7   		movq	%rdx, %rdi
 6894 3234 FFD0     		call	*%rax
 6895 3236 4889C3   		movq	%rax, %rbx
 6896 3239 488B8580 		movq	-1152(%rbp), %rax
 6896      FBFFFF
 6897 3240 4889C7   		movq	%rax, %rdi
 6898              	.LEHB219:
 6899 3243 E8000000 		call	_ZNK8UnitTest15AssertException10LineNumberEv
 6899      00
 6900 3248 4189C4   		movl	%eax, %r12d
 6901 324b 488B8580 		movq	-1152(%rbp), %rax
 6901      FBFFFF
 6902 3252 4889C7   		movq	%rax, %rdi
 6903 3255 E8000000 		call	_ZNK8UnitTest15AssertException8FilenameEv
 6903      00
  30:../ExecuteTest.h **** 	}
 6904              		.loc 4 30 0 is_stmt 0 discriminator 1
 6905 325a 4889C1   		movq	%rax, %rcx
 6906 325d 488B8570 		movq	-1168(%rbp), %rax
 6906      FBFFFF
 6907 3264 488B10   		movq	(%rax), %rdx
 6908 3267 488B8570 		movq	-1168(%rbp), %rax
 6908      FBFFFF
 6909 326e 488B7008 		movq	8(%rax), %rsi
 6910 3272 488D8590 		leaq	-1136(%rbp), %rax
 6910      FBFFFF
 6911 3279 4589E0   		movl	%r12d, %r8d
 6912 327c 4889C7   		movq	%rax, %rdi
 6913 327f E8000000 		call	_ZN8UnitTest11TestDetailsC1EPKcS2_S2_i
 6913      00
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 6914              		.loc 4 29 0 is_stmt 1
 6915 3284 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 6915      00
  30:../ExecuteTest.h **** 	}
 6916              		.loc 4 30 0
 6917 3289 488B00   		movq	(%rax), %rax
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 6918              		.loc 4 29 0
 6919 328c 488D8D90 		leaq	-1136(%rbp), %rcx
 6919      FBFFFF
 6920 3293 4889DA   		movq	%rbx, %rdx
 6921 3296 4889CE   		movq	%rcx, %rsi
 6922 3299 4889C7   		movq	%rax, %rdi
 6923 329c E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 6923      00
 6924              	.LEHE219:
  27:../ExecuteTest.h **** 	{
 6925              		.loc 4 27 0
 6926 32a1 E8000000 		call	__cxa_end_catch
 6926      00
 6927              	.LBE189:
 6928              	.LBE191:
 6929              		.loc 4 42 0
 6930 32a6 E9CE0000 		jmp	.L382
 6930      00
 6931              	.L373:
 6932              	.LBB192:
 6933              	.LBB190:
  32:../ExecuteTest.h **** 	{
 6934              		.loc 4 32 0
 6935 32ab 4889C7   		movq	%rax, %rdi
 6936 32ae E8000000 		call	__cxa_begin_catch
 6936      00
 6937 32b3 48898588 		movq	%rax, -1144(%rbp)
 6937      FBFFFF
 6938              	.LBB188:
  34:../ExecuteTest.h **** 		stream << "Unhandled exception: " << e.what();
 6939              		.loc 4 34 0
 6940 32ba 488D8590 		leaq	-1136(%rbp), %rax
 6940      FBFFFF
 6941 32c1 4889C7   		movq	%rax, %rdi
 6942              	.LEHB220:
 6943 32c4 E8000000 		call	_ZN8UnitTest15MemoryOutStreamC1Ev
 6943      00
 6944              	.LEHE220:
  35:../ExecuteTest.h **** 		CurrentTest::Results()->OnTestFailure(details, stream.GetText());
 6945              		.loc 4 35 0
 6946 32c9 488B8588 		movq	-1144(%rbp), %rax
 6946      FBFFFF
 6947 32d0 488B00   		movq	(%rax), %rax
 6948 32d3 4883C010 		addq	$16, %rax
 6949 32d7 488B00   		movq	(%rax), %rax
 6950 32da 488B9588 		movq	-1144(%rbp), %rdx
 6950      FBFFFF
 6951 32e1 4889D7   		movq	%rdx, %rdi
 6952 32e4 FFD0     		call	*%rax
 6953 32e6 4889C3   		movq	%rax, %rbx
 6954 32e9 488D8590 		leaq	-1136(%rbp), %rax
 6954      FBFFFF
 6955 32f0 BE000000 		movl	$.LC3, %esi
 6955      00
 6956 32f5 4889C7   		movq	%rax, %rdi
 6957              	.LEHB221:
 6958 32f8 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
 6958      00
 6959 32fd 4889DE   		movq	%rbx, %rsi
 6960 3300 4889C7   		movq	%rax, %rdi
 6961 3303 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
 6961      00
  36:../ExecuteTest.h **** 	}
 6962              		.loc 4 36 0
 6963 3308 488D8590 		leaq	-1136(%rbp), %rax
 6963      FBFFFF
 6964 330f 4889C7   		movq	%rax, %rdi
 6965 3312 E8000000 		call	_ZNK8UnitTest15MemoryOutStream7GetTextEv
 6965      00
 6966 3317 4889C3   		movq	%rax, %rbx
 6967 331a E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 6967      00
  36:../ExecuteTest.h **** 	}
 6968              		.loc 4 36 0 is_stmt 0 discriminator 1
 6969 331f 488B00   		movq	(%rax), %rax
 6970 3322 488B8D70 		movq	-1168(%rbp), %rcx
 6970      FBFFFF
 6971 3329 4889DA   		movq	%rbx, %rdx
 6972 332c 4889CE   		movq	%rcx, %rsi
 6973 332f 4889C7   		movq	%rax, %rdi
 6974 3332 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 6974      00
 6975              	.LEHE221:
 6976 3337 488D8590 		leaq	-1136(%rbp), %rax
 6976      FBFFFF
 6977 333e 4889C7   		movq	%rax, %rdi
 6978              	.LEHB222:
 6979 3341 E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 6979      00
 6980              	.LEHE222:
 6981              	.LBE188:
  32:../ExecuteTest.h **** 	{
 6982              		.loc 4 32 0 is_stmt 1
 6983 3346 E8000000 		call	__cxa_end_catch
 6983      00
 6984              	.LBE190:
 6985              	.LBE192:
 6986              		.loc 4 42 0
 6987 334b EB2C     		jmp	.L382
 6988              	.L381:
 6989              	.LBB193:
  38:../ExecuteTest.h **** 	{
 6990              		.loc 4 38 0
 6991 334d 4889C7   		movq	%rax, %rdi
 6992 3350 E8000000 		call	__cxa_begin_catch
 6992      00
 6993              	.LEHB223:
  40:../ExecuteTest.h **** 	}
 6994              		.loc 4 40 0
 6995 3355 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 6995      00
 6996 335a 488B00   		movq	(%rax), %rax
 6997 335d 488B8D70 		movq	-1168(%rbp), %rcx
 6997      FBFFFF
 6998 3364 BA000000 		movl	$.LC44, %edx
 6998      00
 6999 3369 4889CE   		movq	%rcx, %rsi
 7000 336c 4889C7   		movq	%rax, %rdi
 7001 336f E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 7001      00
 7002              	.LEHE223:
 7003              	.LEHB224:
  38:../ExecuteTest.h **** 	{
 7004              		.loc 4 38 0
 7005 3374 E8000000 		call	__cxa_end_catch
 7005      00
 7006              	.LEHE224:
 7007              	.L382:
 7008              	.LBE193:
 7009              		.loc 4 42 0
 7010 3379 90       		nop
 7011 337a 4881C480 		addq	$1152, %rsp
 7011      040000
 7012 3381 5B       		popq	%rbx
 7013 3382 415C     		popq	%r12
 7014 3384 5D       		popq	%rbp
 7015              		.cfi_def_cfa 7, 8
 7016 3385 C3       		ret
 7017              		.cfi_endproc
 7018              	.LFE1410:
 7019              		.section	.gcc_except_table
 7020              		.align 4
 7021              	.LLSDA1410:
 7022 0600 FF       		.byte	0xff
 7023 0601 03       		.byte	0x3
 7024 0602 5D       		.uleb128 .LLSDATT1410-.LLSDATTD1410
 7025              	.LLSDATTD1410:
 7026 0603 01       		.byte	0x1
 7027 0604 46       		.uleb128 .LLSDACSE1410-.LLSDACSB1410
 7028              	.LLSDACSB1410:
 7029 0605 1C       		.uleb128 .LEHB212-.LFB1410
 7030 0606 05       		.uleb128 .LEHE212-.LEHB212
 7031 0607 00       		.uleb128 0
 7032 0608 00       		.uleb128 0
 7033 0609 35       		.uleb128 .LEHB213-.LFB1410
 7034 060a 05       		.uleb128 .LEHE213-.LEHB213
 7035 060b 8702     		.uleb128 .L376-.LFB1410
 7036 060d 05       		.uleb128 0x5
 7037 060e 75       		.uleb128 .LEHB214-.LFB1410
 7038 060f 14       		.uleb128 .LEHE214-.LEHB214
 7039 0610 9D01     		.uleb128 .L375-.LFB1410
 7040 0612 07       		.uleb128 0x7
 7041 0613 9301     		.uleb128 .LEHB215-.LFB1410
 7042 0615 05       		.uleb128 .LEHE215-.LEHB215
 7043 0616 8702     		.uleb128 .L376-.LFB1410
 7044 0618 05       		.uleb128 0x5
 7045 0619 C801     		.uleb128 .LEHB216-.LFB1410
 7046 061b 05       		.uleb128 .LEHE216-.LEHB216
 7047 061c 00       		.uleb128 0
 7048 061d 00       		.uleb128 0
 7049 061e EF01     		.uleb128 .LEHB217-.LFB1410
 7050 0620 05       		.uleb128 .LEHE217-.LEHB217
 7051 0621 00       		.uleb128 0
 7052 0622 00       		.uleb128 0
 7053 0623 8202     		.uleb128 .LEHB218-.LFB1410
 7054 0625 05       		.uleb128 .LEHE218-.LEHB218
 7055 0626 00       		.uleb128 0
 7056 0627 00       		.uleb128 0
 7057 0628 D502     		.uleb128 .LEHB219-.LFB1410
 7058 062a 5E       		.uleb128 .LEHE219-.LEHB219
 7059 062b BA01     		.uleb128 .L377-.LFB1410
 7060 062d 00       		.uleb128 0
 7061 062e D603     		.uleb128 .LEHB220-.LFB1410
 7062 0630 05       		.uleb128 .LEHE220-.LEHB220
 7063 0631 E101     		.uleb128 .L379-.LFB1410
 7064 0633 00       		.uleb128 0
 7065 0634 8A04     		.uleb128 .LEHB221-.LFB1410
 7066 0636 3F       		.uleb128 .LEHE221-.LEHB221
 7067 0637 CD01     		.uleb128 .L378-.LFB1410
 7068 0639 00       		.uleb128 0
 7069 063a D304     		.uleb128 .LEHB222-.LFB1410
 7070 063c 05       		.uleb128 .LEHE222-.LEHB222
 7071 063d E101     		.uleb128 .L379-.LFB1410
 7072 063f 00       		.uleb128 0
 7073 0640 E704     		.uleb128 .LEHB223-.LFB1410
 7074 0642 1F       		.uleb128 .LEHE223-.LEHB223
 7075 0643 F401     		.uleb128 .L380-.LFB1410
 7076 0645 00       		.uleb128 0
 7077 0646 8605     		.uleb128 .LEHB224-.LFB1410
 7078 0648 05       		.uleb128 .LEHE224-.LEHB224
 7079 0649 00       		.uleb128 0
 7080 064a 00       		.uleb128 0
 7081              	.LLSDACSE1410:
 7082 064b 03       		.byte	0x3
 7083 064c 00       		.byte	0
 7084 064d 02       		.byte	0x2
 7085 064e 7D       		.byte	0x7d
 7086 064f 01       		.byte	0x1
 7087 0650 7D       		.byte	0x7d
 7088 0651 00       		.byte	0
 7089 0652 7D       		.byte	0x7d
 7090 0653 00       		.align 4
 7091 0654 00000000 		.long	0
 7092              	
 7093 0658 00000000 		.long	_ZTISt9exception
 7094 065c 00000000 		.long	_ZTIN8UnitTest15AssertExceptionE
 7095              	.LLSDATT1410:
 7096              		.text
 7099              	_ZN8UnitTest11ExecuteTestIN12_GLOBAL__N_163XmlTestReporterFixtureSingleFailedTestReportSummaryForma
 7100              	.LFB1411:
  16:../ExecuteTest.h **** {
 7101              		.loc 4 16 0
 7102              		.cfi_startproc
 7103              		.cfi_personality 0x3,__gxx_personality_v0
 7104              		.cfi_lsda 0x3,.LLSDA1411
 7105 3386 55       		pushq	%rbp
 7106              		.cfi_def_cfa_offset 16
 7107              		.cfi_offset 6, -16
 7108 3387 4889E5   		movq	%rsp, %rbp
 7109              		.cfi_def_cfa_register 6
 7110 338a 4154     		pushq	%r12
 7111 338c 53       		pushq	%rbx
 7112 338d 4881EC80 		subq	$1152, %rsp
 7112      040000
 7113              		.cfi_offset 12, -24
 7114              		.cfi_offset 3, -32
 7115 3394 4889BD78 		movq	%rdi, -1160(%rbp)
 7115      FBFFFF
 7116 339b 4889B570 		movq	%rsi, -1168(%rbp)
 7116      FBFFFF
 7117              	.LEHB225:
 7118              	.LBB194:
  18:../ExecuteTest.h **** 
 7119              		.loc 4 18 0
 7120 33a2 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 7120      00
 7121              	.LEHE225:
 7122 33a7 488B9570 		movq	-1168(%rbp), %rdx
 7122      FBFFFF
 7123 33ae 488910   		movq	%rdx, (%rax)
 7124              	.LBB195:
  23:../ExecuteTest.h **** #endif
 7125              		.loc 4 23 0
 7126 33b1 488D8590 		leaq	-1136(%rbp), %rax
 7126      FBFFFF
 7127 33b8 4889C7   		movq	%rax, %rdi
 7128              	.LEHB226:
 7129 33bb E8000000 		call	_ZN8UnitTest16SignalTranslatorC1Ev
 7129      00
 7130              	.LEHE226:
  23:../ExecuteTest.h **** #endif
 7131              		.loc 4 23 0 is_stmt 0 discriminator 1
 7132 33c0 488B0500 		movq	_ZN8UnitTest16SignalTranslator12s_jumpTargetE(%rip), %rax
 7132      000000
 7133 33c7 BE010000 		movl	$1, %esi
 7133      00
 7134 33cc 4889C7   		movq	%rax, %rdi
 7135 33cf E8000000 		call	__sigsetjmp
 7135      00
 7136 33d4 85C0     		testl	%eax, %eax
 7137 33d6 0F95C0   		setne	%al
 7138 33d9 84C0     		testb	%al, %al
 7139 33db 7423     		je	.L384
 7140 33dd BF080000 		movl	$8, %edi
 7140      00
 7141 33e2 E8000000 		call	__cxa_allocate_exception
 7141      00
 7142 33e7 48C70000 		movq	$.LC43, (%rax)
 7142      000000
 7143 33ee BA000000 		movl	$0, %edx
 7143      00
 7144 33f3 BE000000 		movl	$_ZTIPKc, %esi
 7144      00
 7145 33f8 4889C7   		movq	%rax, %rdi
 7146              	.LEHB227:
 7147 33fb E8000000 		call	__cxa_throw
 7147      00
 7148              	.L384:
  25:../ExecuteTest.h **** 	}
 7149              		.loc 4 25 0 is_stmt 1
 7150 3400 488B8578 		movq	-1160(%rbp), %rax
 7150      FBFFFF
 7151 3407 4889C7   		movq	%rax, %rdi
 7152 340a E80DE4FF 		call	_ZN12_GLOBAL__N_163XmlTestReporterFixtureSingleFailedTestReportSummaryFormatHelper7RunImplEv
 7152      FF
 7153              	.LEHE227:
  25:../ExecuteTest.h **** 	}
 7154              		.loc 4 25 0 is_stmt 0 discriminator 1
 7155 340f 488D8590 		leaq	-1136(%rbp), %rax
 7155      FBFFFF
 7156 3416 4889C7   		movq	%rax, %rdi
 7157              	.LEHB228:
 7158 3419 E8000000 		call	_ZN8UnitTest16SignalTranslatorD1Ev
 7158      00
 7159              	.LEHE228:
 7160              	.LBE195:
 7161              	.LBE194:
 7162              		.loc 4 42 0 is_stmt 1
 7163 341e E9EE0100 		jmp	.L402
 7163      00
 7164              	.L395:
 7165 3423 4989C4   		movq	%rax, %r12
 7166 3426 4889D3   		movq	%rdx, %rbx
 7167              	.LBB203:
 7168              	.LBB196:
  25:../ExecuteTest.h **** 	}
 7169              		.loc 4 25 0
 7170 3429 488D8590 		leaq	-1136(%rbp), %rax
 7170      FBFFFF
 7171 3430 4889C7   		movq	%rax, %rdi
 7172 3433 E8000000 		call	_ZN8UnitTest16SignalTranslatorD1Ev
 7172      00
 7173 3438 4C89E0   		movq	%r12, %rax
 7174 343b 4889DA   		movq	%rbx, %rdx
 7175 343e EB4D     		jmp	.L386
 7176              	.L397:
 7177 3440 4889C3   		movq	%rax, %rbx
 7178              	.LBE196:
 7179              	.LBB197:
  27:../ExecuteTest.h **** 	{
 7180              		.loc 4 27 0
 7181 3443 E8000000 		call	__cxa_end_catch
 7181      00
 7182 3448 4889D8   		movq	%rbx, %rax
 7183 344b 4889C7   		movq	%rax, %rdi
 7184              	.LEHB229:
 7185 344e E8000000 		call	_Unwind_Resume
 7185      00
 7186              	.LEHE229:
 7187              	.L398:
 7188 3453 4889C3   		movq	%rax, %rbx
 7189              	.LBE197:
 7190              	.LBB198:
 7191              	.LBB199:
  36:../ExecuteTest.h **** 	}
 7192              		.loc 4 36 0
 7193 3456 488D8590 		leaq	-1136(%rbp), %rax
 7193      FBFFFF
 7194 345d 4889C7   		movq	%rax, %rdi
 7195 3460 E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 7195      00
 7196 3465 EB03     		jmp	.L389
 7197              	.L399:
 7198 3467 4889C3   		movq	%rax, %rbx
 7199              	.L389:
 7200              	.LBE199:
  32:../ExecuteTest.h **** 	{
 7201              		.loc 4 32 0
 7202 346a E8000000 		call	__cxa_end_catch
 7202      00
 7203 346f 4889D8   		movq	%rbx, %rax
 7204 3472 4889C7   		movq	%rax, %rdi
 7205              	.LEHB230:
 7206 3475 E8000000 		call	_Unwind_Resume
 7206      00
 7207              	.LEHE230:
 7208              	.L400:
 7209 347a 4889C3   		movq	%rax, %rbx
 7210              	.LBE198:
  38:../ExecuteTest.h **** 	{
 7211              		.loc 4 38 0
 7212 347d E8000000 		call	__cxa_end_catch
 7212      00
 7213 3482 4889D8   		movq	%rbx, %rax
 7214 3485 4889C7   		movq	%rax, %rdi
 7215              	.LEHB231:
 7216 3488 E8000000 		call	_Unwind_Resume
 7216      00
 7217              	.LEHE231:
 7218              	.L396:
 7219              	.L386:
 7220 348d 4883FA01 		cmpq	$1, %rdx
 7221 3491 740F     		je	.L392
 7222 3493 4883FA02 		cmpq	$2, %rdx
 7223 3497 0F84A600 		je	.L393
 7223      0000
 7224 349d E9430100 		jmp	.L401
 7224      00
 7225              	.L392:
 7226              	.LBB201:
  27:../ExecuteTest.h **** 	{
 7227              		.loc 4 27 0
 7228 34a2 4889C7   		movq	%rax, %rdi
 7229 34a5 E8000000 		call	__cxa_begin_catch
 7229      00
 7230 34aa 48898580 		movq	%rax, -1152(%rbp)
 7230      FBFFFF
  30:../ExecuteTest.h **** 	}
 7231              		.loc 4 30 0
 7232 34b1 488B8580 		movq	-1152(%rbp), %rax
 7232      FBFFFF
 7233 34b8 488B00   		movq	(%rax), %rax
 7234 34bb 4883C010 		addq	$16, %rax
 7235 34bf 488B00   		movq	(%rax), %rax
 7236 34c2 488B9580 		movq	-1152(%rbp), %rdx
 7236      FBFFFF
 7237 34c9 4889D7   		movq	%rdx, %rdi
 7238 34cc FFD0     		call	*%rax
 7239 34ce 4889C3   		movq	%rax, %rbx
 7240 34d1 488B8580 		movq	-1152(%rbp), %rax
 7240      FBFFFF
 7241 34d8 4889C7   		movq	%rax, %rdi
 7242              	.LEHB232:
 7243 34db E8000000 		call	_ZNK8UnitTest15AssertException10LineNumberEv
 7243      00
 7244 34e0 4189C4   		movl	%eax, %r12d
 7245 34e3 488B8580 		movq	-1152(%rbp), %rax
 7245      FBFFFF
 7246 34ea 4889C7   		movq	%rax, %rdi
 7247 34ed E8000000 		call	_ZNK8UnitTest15AssertException8FilenameEv
 7247      00
  30:../ExecuteTest.h **** 	}
 7248              		.loc 4 30 0 is_stmt 0 discriminator 1
 7249 34f2 4889C1   		movq	%rax, %rcx
 7250 34f5 488B8570 		movq	-1168(%rbp), %rax
 7250      FBFFFF
 7251 34fc 488B10   		movq	(%rax), %rdx
 7252 34ff 488B8570 		movq	-1168(%rbp), %rax
 7252      FBFFFF
 7253 3506 488B7008 		movq	8(%rax), %rsi
 7254 350a 488D8590 		leaq	-1136(%rbp), %rax
 7254      FBFFFF
 7255 3511 4589E0   		movl	%r12d, %r8d
 7256 3514 4889C7   		movq	%rax, %rdi
 7257 3517 E8000000 		call	_ZN8UnitTest11TestDetailsC1EPKcS2_S2_i
 7257      00
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 7258              		.loc 4 29 0 is_stmt 1
 7259 351c E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 7259      00
  30:../ExecuteTest.h **** 	}
 7260              		.loc 4 30 0
 7261 3521 488B00   		movq	(%rax), %rax
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 7262              		.loc 4 29 0
 7263 3524 488D8D90 		leaq	-1136(%rbp), %rcx
 7263      FBFFFF
 7264 352b 4889DA   		movq	%rbx, %rdx
 7265 352e 4889CE   		movq	%rcx, %rsi
 7266 3531 4889C7   		movq	%rax, %rdi
 7267 3534 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 7267      00
 7268              	.LEHE232:
  27:../ExecuteTest.h **** 	{
 7269              		.loc 4 27 0
 7270 3539 E8000000 		call	__cxa_end_catch
 7270      00
 7271              	.LBE201:
 7272              	.LBE203:
 7273              		.loc 4 42 0
 7274 353e E9CE0000 		jmp	.L402
 7274      00
 7275              	.L393:
 7276              	.LBB204:
 7277              	.LBB202:
  32:../ExecuteTest.h **** 	{
 7278              		.loc 4 32 0
 7279 3543 4889C7   		movq	%rax, %rdi
 7280 3546 E8000000 		call	__cxa_begin_catch
 7280      00
 7281 354b 48898588 		movq	%rax, -1144(%rbp)
 7281      FBFFFF
 7282              	.LBB200:
  34:../ExecuteTest.h **** 		stream << "Unhandled exception: " << e.what();
 7283              		.loc 4 34 0
 7284 3552 488D8590 		leaq	-1136(%rbp), %rax
 7284      FBFFFF
 7285 3559 4889C7   		movq	%rax, %rdi
 7286              	.LEHB233:
 7287 355c E8000000 		call	_ZN8UnitTest15MemoryOutStreamC1Ev
 7287      00
 7288              	.LEHE233:
  35:../ExecuteTest.h **** 		CurrentTest::Results()->OnTestFailure(details, stream.GetText());
 7289              		.loc 4 35 0
 7290 3561 488B8588 		movq	-1144(%rbp), %rax
 7290      FBFFFF
 7291 3568 488B00   		movq	(%rax), %rax
 7292 356b 4883C010 		addq	$16, %rax
 7293 356f 488B00   		movq	(%rax), %rax
 7294 3572 488B9588 		movq	-1144(%rbp), %rdx
 7294      FBFFFF
 7295 3579 4889D7   		movq	%rdx, %rdi
 7296 357c FFD0     		call	*%rax
 7297 357e 4889C3   		movq	%rax, %rbx
 7298 3581 488D8590 		leaq	-1136(%rbp), %rax
 7298      FBFFFF
 7299 3588 BE000000 		movl	$.LC3, %esi
 7299      00
 7300 358d 4889C7   		movq	%rax, %rdi
 7301              	.LEHB234:
 7302 3590 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
 7302      00
 7303 3595 4889DE   		movq	%rbx, %rsi
 7304 3598 4889C7   		movq	%rax, %rdi
 7305 359b E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
 7305      00
  36:../ExecuteTest.h **** 	}
 7306              		.loc 4 36 0
 7307 35a0 488D8590 		leaq	-1136(%rbp), %rax
 7307      FBFFFF
 7308 35a7 4889C7   		movq	%rax, %rdi
 7309 35aa E8000000 		call	_ZNK8UnitTest15MemoryOutStream7GetTextEv
 7309      00
 7310 35af 4889C3   		movq	%rax, %rbx
 7311 35b2 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 7311      00
  36:../ExecuteTest.h **** 	}
 7312              		.loc 4 36 0 is_stmt 0 discriminator 1
 7313 35b7 488B00   		movq	(%rax), %rax
 7314 35ba 488B8D70 		movq	-1168(%rbp), %rcx
 7314      FBFFFF
 7315 35c1 4889DA   		movq	%rbx, %rdx
 7316 35c4 4889CE   		movq	%rcx, %rsi
 7317 35c7 4889C7   		movq	%rax, %rdi
 7318 35ca E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 7318      00
 7319              	.LEHE234:
 7320 35cf 488D8590 		leaq	-1136(%rbp), %rax
 7320      FBFFFF
 7321 35d6 4889C7   		movq	%rax, %rdi
 7322              	.LEHB235:
 7323 35d9 E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 7323      00
 7324              	.LEHE235:
 7325              	.LBE200:
  32:../ExecuteTest.h **** 	{
 7326              		.loc 4 32 0 is_stmt 1
 7327 35de E8000000 		call	__cxa_end_catch
 7327      00
 7328              	.LBE202:
 7329              	.LBE204:
 7330              		.loc 4 42 0
 7331 35e3 EB2C     		jmp	.L402
 7332              	.L401:
 7333              	.LBB205:
  38:../ExecuteTest.h **** 	{
 7334              		.loc 4 38 0
 7335 35e5 4889C7   		movq	%rax, %rdi
 7336 35e8 E8000000 		call	__cxa_begin_catch
 7336      00
 7337              	.LEHB236:
  40:../ExecuteTest.h **** 	}
 7338              		.loc 4 40 0
 7339 35ed E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 7339      00
 7340 35f2 488B00   		movq	(%rax), %rax
 7341 35f5 488B8D70 		movq	-1168(%rbp), %rcx
 7341      FBFFFF
 7342 35fc BA000000 		movl	$.LC44, %edx
 7342      00
 7343 3601 4889CE   		movq	%rcx, %rsi
 7344 3604 4889C7   		movq	%rax, %rdi
 7345 3607 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 7345      00
 7346              	.LEHE236:
 7347              	.LEHB237:
  38:../ExecuteTest.h **** 	{
 7348              		.loc 4 38 0
 7349 360c E8000000 		call	__cxa_end_catch
 7349      00
 7350              	.LEHE237:
 7351              	.L402:
 7352              	.LBE205:
 7353              		.loc 4 42 0
 7354 3611 90       		nop
 7355 3612 4881C480 		addq	$1152, %rsp
 7355      040000
 7356 3619 5B       		popq	%rbx
 7357 361a 415C     		popq	%r12
 7358 361c 5D       		popq	%rbp
 7359              		.cfi_def_cfa 7, 8
 7360 361d C3       		ret
 7361              		.cfi_endproc
 7362              	.LFE1411:
 7363              		.section	.gcc_except_table
 7364              		.align 4
 7365              	.LLSDA1411:
 7366 0660 FF       		.byte	0xff
 7367 0661 03       		.byte	0x3
 7368 0662 5D       		.uleb128 .LLSDATT1411-.LLSDATTD1411
 7369              	.LLSDATTD1411:
 7370 0663 01       		.byte	0x1
 7371 0664 46       		.uleb128 .LLSDACSE1411-.LLSDACSB1411
 7372              	.LLSDACSB1411:
 7373 0665 1C       		.uleb128 .LEHB225-.LFB1411
 7374 0666 05       		.uleb128 .LEHE225-.LEHB225
 7375 0667 00       		.uleb128 0
 7376 0668 00       		.uleb128 0
 7377 0669 35       		.uleb128 .LEHB226-.LFB1411
 7378 066a 05       		.uleb128 .LEHE226-.LEHB226
 7379 066b 8702     		.uleb128 .L396-.LFB1411
 7380 066d 05       		.uleb128 0x5
 7381 066e 75       		.uleb128 .LEHB227-.LFB1411
 7382 066f 14       		.uleb128 .LEHE227-.LEHB227
 7383 0670 9D01     		.uleb128 .L395-.LFB1411
 7384 0672 07       		.uleb128 0x7
 7385 0673 9301     		.uleb128 .LEHB228-.LFB1411
 7386 0675 05       		.uleb128 .LEHE228-.LEHB228
 7387 0676 8702     		.uleb128 .L396-.LFB1411
 7388 0678 05       		.uleb128 0x5
 7389 0679 C801     		.uleb128 .LEHB229-.LFB1411
 7390 067b 05       		.uleb128 .LEHE229-.LEHB229
 7391 067c 00       		.uleb128 0
 7392 067d 00       		.uleb128 0
 7393 067e EF01     		.uleb128 .LEHB230-.LFB1411
 7394 0680 05       		.uleb128 .LEHE230-.LEHB230
 7395 0681 00       		.uleb128 0
 7396 0682 00       		.uleb128 0
 7397 0683 8202     		.uleb128 .LEHB231-.LFB1411
 7398 0685 05       		.uleb128 .LEHE231-.LEHB231
 7399 0686 00       		.uleb128 0
 7400 0687 00       		.uleb128 0
 7401 0688 D502     		.uleb128 .LEHB232-.LFB1411
 7402 068a 5E       		.uleb128 .LEHE232-.LEHB232
 7403 068b BA01     		.uleb128 .L397-.LFB1411
 7404 068d 00       		.uleb128 0
 7405 068e D603     		.uleb128 .LEHB233-.LFB1411
 7406 0690 05       		.uleb128 .LEHE233-.LEHB233
 7407 0691 E101     		.uleb128 .L399-.LFB1411
 7408 0693 00       		.uleb128 0
 7409 0694 8A04     		.uleb128 .LEHB234-.LFB1411
 7410 0696 3F       		.uleb128 .LEHE234-.LEHB234
 7411 0697 CD01     		.uleb128 .L398-.LFB1411
 7412 0699 00       		.uleb128 0
 7413 069a D304     		.uleb128 .LEHB235-.LFB1411
 7414 069c 05       		.uleb128 .LEHE235-.LEHB235
 7415 069d E101     		.uleb128 .L399-.LFB1411
 7416 069f 00       		.uleb128 0
 7417 06a0 E704     		.uleb128 .LEHB236-.LFB1411
 7418 06a2 1F       		.uleb128 .LEHE236-.LEHB236
 7419 06a3 F401     		.uleb128 .L400-.LFB1411
 7420 06a5 00       		.uleb128 0
 7421 06a6 8605     		.uleb128 .LEHB237-.LFB1411
 7422 06a8 05       		.uleb128 .LEHE237-.LEHB237
 7423 06a9 00       		.uleb128 0
 7424 06aa 00       		.uleb128 0
 7425              	.LLSDACSE1411:
 7426 06ab 03       		.byte	0x3
 7427 06ac 00       		.byte	0
 7428 06ad 02       		.byte	0x2
 7429 06ae 7D       		.byte	0x7d
 7430 06af 01       		.byte	0x1
 7431 06b0 7D       		.byte	0x7d
 7432 06b1 00       		.byte	0
 7433 06b2 7D       		.byte	0x7d
 7434 06b3 00       		.align 4
 7435 06b4 00000000 		.long	0
 7436              	
 7437 06b8 00000000 		.long	_ZTISt9exception
 7438 06bc 00000000 		.long	_ZTIN8UnitTest15AssertExceptionE
 7439              	.LLSDATT1411:
 7440              		.text
 7443              	_ZN8UnitTest11ExecuteTestIN12_GLOBAL__N_154XmlTestReporterFixtureFailureMessageIsXMLEscapedHelperEE
 7444              	.LFB1412:
  16:../ExecuteTest.h **** {
 7445              		.loc 4 16 0
 7446              		.cfi_startproc
 7447              		.cfi_personality 0x3,__gxx_personality_v0
 7448              		.cfi_lsda 0x3,.LLSDA1412
 7449 361e 55       		pushq	%rbp
 7450              		.cfi_def_cfa_offset 16
 7451              		.cfi_offset 6, -16
 7452 361f 4889E5   		movq	%rsp, %rbp
 7453              		.cfi_def_cfa_register 6
 7454 3622 4154     		pushq	%r12
 7455 3624 53       		pushq	%rbx
 7456 3625 4881EC80 		subq	$1152, %rsp
 7456      040000
 7457              		.cfi_offset 12, -24
 7458              		.cfi_offset 3, -32
 7459 362c 4889BD78 		movq	%rdi, -1160(%rbp)
 7459      FBFFFF
 7460 3633 4889B570 		movq	%rsi, -1168(%rbp)
 7460      FBFFFF
 7461              	.LEHB238:
 7462              	.LBB206:
  18:../ExecuteTest.h **** 
 7463              		.loc 4 18 0
 7464 363a E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 7464      00
 7465              	.LEHE238:
 7466 363f 488B9570 		movq	-1168(%rbp), %rdx
 7466      FBFFFF
 7467 3646 488910   		movq	%rdx, (%rax)
 7468              	.LBB207:
  23:../ExecuteTest.h **** #endif
 7469              		.loc 4 23 0
 7470 3649 488D8590 		leaq	-1136(%rbp), %rax
 7470      FBFFFF
 7471 3650 4889C7   		movq	%rax, %rdi
 7472              	.LEHB239:
 7473 3653 E8000000 		call	_ZN8UnitTest16SignalTranslatorC1Ev
 7473      00
 7474              	.LEHE239:
  23:../ExecuteTest.h **** #endif
 7475              		.loc 4 23 0 is_stmt 0 discriminator 1
 7476 3658 488B0500 		movq	_ZN8UnitTest16SignalTranslator12s_jumpTargetE(%rip), %rax
 7476      000000
 7477 365f BE010000 		movl	$1, %esi
 7477      00
 7478 3664 4889C7   		movq	%rax, %rdi
 7479 3667 E8000000 		call	__sigsetjmp
 7479      00
 7480 366c 85C0     		testl	%eax, %eax
 7481 366e 0F95C0   		setne	%al
 7482 3671 84C0     		testb	%al, %al
 7483 3673 7423     		je	.L404
 7484 3675 BF080000 		movl	$8, %edi
 7484      00
 7485 367a E8000000 		call	__cxa_allocate_exception
 7485      00
 7486 367f 48C70000 		movq	$.LC43, (%rax)
 7486      000000
 7487 3686 BA000000 		movl	$0, %edx
 7487      00
 7488 368b BE000000 		movl	$_ZTIPKc, %esi
 7488      00
 7489 3690 4889C7   		movq	%rax, %rdi
 7490              	.LEHB240:
 7491 3693 E8000000 		call	__cxa_throw
 7491      00
 7492              	.L404:
  25:../ExecuteTest.h **** 	}
 7493              		.loc 4 25 0 is_stmt 1
 7494 3698 488B8578 		movq	-1160(%rbp), %rax
 7494      FBFFFF
 7495 369f 4889C7   		movq	%rax, %rdi
 7496 36a2 E843E6FF 		call	_ZN12_GLOBAL__N_154XmlTestReporterFixtureFailureMessageIsXMLEscapedHelper7RunImplEv
 7496      FF
 7497              	.LEHE240:
  25:../ExecuteTest.h **** 	}
 7498              		.loc 4 25 0 is_stmt 0 discriminator 1
 7499 36a7 488D8590 		leaq	-1136(%rbp), %rax
 7499      FBFFFF
 7500 36ae 4889C7   		movq	%rax, %rdi
 7501              	.LEHB241:
 7502 36b1 E8000000 		call	_ZN8UnitTest16SignalTranslatorD1Ev
 7502      00
 7503              	.LEHE241:
 7504              	.LBE207:
 7505              	.LBE206:
 7506              		.loc 4 42 0 is_stmt 1
 7507 36b6 E9EE0100 		jmp	.L422
 7507      00
 7508              	.L415:
 7509 36bb 4989C4   		movq	%rax, %r12
 7510 36be 4889D3   		movq	%rdx, %rbx
 7511              	.LBB215:
 7512              	.LBB208:
  25:../ExecuteTest.h **** 	}
 7513              		.loc 4 25 0
 7514 36c1 488D8590 		leaq	-1136(%rbp), %rax
 7514      FBFFFF
 7515 36c8 4889C7   		movq	%rax, %rdi
 7516 36cb E8000000 		call	_ZN8UnitTest16SignalTranslatorD1Ev
 7516      00
 7517 36d0 4C89E0   		movq	%r12, %rax
 7518 36d3 4889DA   		movq	%rbx, %rdx
 7519 36d6 EB4D     		jmp	.L406
 7520              	.L417:
 7521 36d8 4889C3   		movq	%rax, %rbx
 7522              	.LBE208:
 7523              	.LBB209:
  27:../ExecuteTest.h **** 	{
 7524              		.loc 4 27 0
 7525 36db E8000000 		call	__cxa_end_catch
 7525      00
 7526 36e0 4889D8   		movq	%rbx, %rax
 7527 36e3 4889C7   		movq	%rax, %rdi
 7528              	.LEHB242:
 7529 36e6 E8000000 		call	_Unwind_Resume
 7529      00
 7530              	.LEHE242:
 7531              	.L418:
 7532 36eb 4889C3   		movq	%rax, %rbx
 7533              	.LBE209:
 7534              	.LBB210:
 7535              	.LBB211:
  36:../ExecuteTest.h **** 	}
 7536              		.loc 4 36 0
 7537 36ee 488D8590 		leaq	-1136(%rbp), %rax
 7537      FBFFFF
 7538 36f5 4889C7   		movq	%rax, %rdi
 7539 36f8 E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 7539      00
 7540 36fd EB03     		jmp	.L409
 7541              	.L419:
 7542 36ff 4889C3   		movq	%rax, %rbx
 7543              	.L409:
 7544              	.LBE211:
  32:../ExecuteTest.h **** 	{
 7545              		.loc 4 32 0
 7546 3702 E8000000 		call	__cxa_end_catch
 7546      00
 7547 3707 4889D8   		movq	%rbx, %rax
 7548 370a 4889C7   		movq	%rax, %rdi
 7549              	.LEHB243:
 7550 370d E8000000 		call	_Unwind_Resume
 7550      00
 7551              	.LEHE243:
 7552              	.L420:
 7553 3712 4889C3   		movq	%rax, %rbx
 7554              	.LBE210:
  38:../ExecuteTest.h **** 	{
 7555              		.loc 4 38 0
 7556 3715 E8000000 		call	__cxa_end_catch
 7556      00
 7557 371a 4889D8   		movq	%rbx, %rax
 7558 371d 4889C7   		movq	%rax, %rdi
 7559              	.LEHB244:
 7560 3720 E8000000 		call	_Unwind_Resume
 7560      00
 7561              	.LEHE244:
 7562              	.L416:
 7563              	.L406:
 7564 3725 4883FA01 		cmpq	$1, %rdx
 7565 3729 740F     		je	.L412
 7566 372b 4883FA02 		cmpq	$2, %rdx
 7567 372f 0F84A600 		je	.L413
 7567      0000
 7568 3735 E9430100 		jmp	.L421
 7568      00
 7569              	.L412:
 7570              	.LBB213:
  27:../ExecuteTest.h **** 	{
 7571              		.loc 4 27 0
 7572 373a 4889C7   		movq	%rax, %rdi
 7573 373d E8000000 		call	__cxa_begin_catch
 7573      00
 7574 3742 48898580 		movq	%rax, -1152(%rbp)
 7574      FBFFFF
  30:../ExecuteTest.h **** 	}
 7575              		.loc 4 30 0
 7576 3749 488B8580 		movq	-1152(%rbp), %rax
 7576      FBFFFF
 7577 3750 488B00   		movq	(%rax), %rax
 7578 3753 4883C010 		addq	$16, %rax
 7579 3757 488B00   		movq	(%rax), %rax
 7580 375a 488B9580 		movq	-1152(%rbp), %rdx
 7580      FBFFFF
 7581 3761 4889D7   		movq	%rdx, %rdi
 7582 3764 FFD0     		call	*%rax
 7583 3766 4889C3   		movq	%rax, %rbx
 7584 3769 488B8580 		movq	-1152(%rbp), %rax
 7584      FBFFFF
 7585 3770 4889C7   		movq	%rax, %rdi
 7586              	.LEHB245:
 7587 3773 E8000000 		call	_ZNK8UnitTest15AssertException10LineNumberEv
 7587      00
 7588 3778 4189C4   		movl	%eax, %r12d
 7589 377b 488B8580 		movq	-1152(%rbp), %rax
 7589      FBFFFF
 7590 3782 4889C7   		movq	%rax, %rdi
 7591 3785 E8000000 		call	_ZNK8UnitTest15AssertException8FilenameEv
 7591      00
  30:../ExecuteTest.h **** 	}
 7592              		.loc 4 30 0 is_stmt 0 discriminator 1
 7593 378a 4889C1   		movq	%rax, %rcx
 7594 378d 488B8570 		movq	-1168(%rbp), %rax
 7594      FBFFFF
 7595 3794 488B10   		movq	(%rax), %rdx
 7596 3797 488B8570 		movq	-1168(%rbp), %rax
 7596      FBFFFF
 7597 379e 488B7008 		movq	8(%rax), %rsi
 7598 37a2 488D8590 		leaq	-1136(%rbp), %rax
 7598      FBFFFF
 7599 37a9 4589E0   		movl	%r12d, %r8d
 7600 37ac 4889C7   		movq	%rax, %rdi
 7601 37af E8000000 		call	_ZN8UnitTest11TestDetailsC1EPKcS2_S2_i
 7601      00
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 7602              		.loc 4 29 0 is_stmt 1
 7603 37b4 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 7603      00
  30:../ExecuteTest.h **** 	}
 7604              		.loc 4 30 0
 7605 37b9 488B00   		movq	(%rax), %rax
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 7606              		.loc 4 29 0
 7607 37bc 488D8D90 		leaq	-1136(%rbp), %rcx
 7607      FBFFFF
 7608 37c3 4889DA   		movq	%rbx, %rdx
 7609 37c6 4889CE   		movq	%rcx, %rsi
 7610 37c9 4889C7   		movq	%rax, %rdi
 7611 37cc E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 7611      00
 7612              	.LEHE245:
  27:../ExecuteTest.h **** 	{
 7613              		.loc 4 27 0
 7614 37d1 E8000000 		call	__cxa_end_catch
 7614      00
 7615              	.LBE213:
 7616              	.LBE215:
 7617              		.loc 4 42 0
 7618 37d6 E9CE0000 		jmp	.L422
 7618      00
 7619              	.L413:
 7620              	.LBB216:
 7621              	.LBB214:
  32:../ExecuteTest.h **** 	{
 7622              		.loc 4 32 0
 7623 37db 4889C7   		movq	%rax, %rdi
 7624 37de E8000000 		call	__cxa_begin_catch
 7624      00
 7625 37e3 48898588 		movq	%rax, -1144(%rbp)
 7625      FBFFFF
 7626              	.LBB212:
  34:../ExecuteTest.h **** 		stream << "Unhandled exception: " << e.what();
 7627              		.loc 4 34 0
 7628 37ea 488D8590 		leaq	-1136(%rbp), %rax
 7628      FBFFFF
 7629 37f1 4889C7   		movq	%rax, %rdi
 7630              	.LEHB246:
 7631 37f4 E8000000 		call	_ZN8UnitTest15MemoryOutStreamC1Ev
 7631      00
 7632              	.LEHE246:
  35:../ExecuteTest.h **** 		CurrentTest::Results()->OnTestFailure(details, stream.GetText());
 7633              		.loc 4 35 0
 7634 37f9 488B8588 		movq	-1144(%rbp), %rax
 7634      FBFFFF
 7635 3800 488B00   		movq	(%rax), %rax
 7636 3803 4883C010 		addq	$16, %rax
 7637 3807 488B00   		movq	(%rax), %rax
 7638 380a 488B9588 		movq	-1144(%rbp), %rdx
 7638      FBFFFF
 7639 3811 4889D7   		movq	%rdx, %rdi
 7640 3814 FFD0     		call	*%rax
 7641 3816 4889C3   		movq	%rax, %rbx
 7642 3819 488D8590 		leaq	-1136(%rbp), %rax
 7642      FBFFFF
 7643 3820 BE000000 		movl	$.LC3, %esi
 7643      00
 7644 3825 4889C7   		movq	%rax, %rdi
 7645              	.LEHB247:
 7646 3828 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
 7646      00
 7647 382d 4889DE   		movq	%rbx, %rsi
 7648 3830 4889C7   		movq	%rax, %rdi
 7649 3833 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
 7649      00
  36:../ExecuteTest.h **** 	}
 7650              		.loc 4 36 0
 7651 3838 488D8590 		leaq	-1136(%rbp), %rax
 7651      FBFFFF
 7652 383f 4889C7   		movq	%rax, %rdi
 7653 3842 E8000000 		call	_ZNK8UnitTest15MemoryOutStream7GetTextEv
 7653      00
 7654 3847 4889C3   		movq	%rax, %rbx
 7655 384a E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 7655      00
  36:../ExecuteTest.h **** 	}
 7656              		.loc 4 36 0 is_stmt 0 discriminator 1
 7657 384f 488B00   		movq	(%rax), %rax
 7658 3852 488B8D70 		movq	-1168(%rbp), %rcx
 7658      FBFFFF
 7659 3859 4889DA   		movq	%rbx, %rdx
 7660 385c 4889CE   		movq	%rcx, %rsi
 7661 385f 4889C7   		movq	%rax, %rdi
 7662 3862 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 7662      00
 7663              	.LEHE247:
 7664 3867 488D8590 		leaq	-1136(%rbp), %rax
 7664      FBFFFF
 7665 386e 4889C7   		movq	%rax, %rdi
 7666              	.LEHB248:
 7667 3871 E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 7667      00
 7668              	.LEHE248:
 7669              	.LBE212:
  32:../ExecuteTest.h **** 	{
 7670              		.loc 4 32 0 is_stmt 1
 7671 3876 E8000000 		call	__cxa_end_catch
 7671      00
 7672              	.LBE214:
 7673              	.LBE216:
 7674              		.loc 4 42 0
 7675 387b EB2C     		jmp	.L422
 7676              	.L421:
 7677              	.LBB217:
  38:../ExecuteTest.h **** 	{
 7678              		.loc 4 38 0
 7679 387d 4889C7   		movq	%rax, %rdi
 7680 3880 E8000000 		call	__cxa_begin_catch
 7680      00
 7681              	.LEHB249:
  40:../ExecuteTest.h **** 	}
 7682              		.loc 4 40 0
 7683 3885 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 7683      00
 7684 388a 488B00   		movq	(%rax), %rax
 7685 388d 488B8D70 		movq	-1168(%rbp), %rcx
 7685      FBFFFF
 7686 3894 BA000000 		movl	$.LC44, %edx
 7686      00
 7687 3899 4889CE   		movq	%rcx, %rsi
 7688 389c 4889C7   		movq	%rax, %rdi
 7689 389f E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 7689      00
 7690              	.LEHE249:
 7691              	.LEHB250:
  38:../ExecuteTest.h **** 	{
 7692              		.loc 4 38 0
 7693 38a4 E8000000 		call	__cxa_end_catch
 7693      00
 7694              	.LEHE250:
 7695              	.L422:
 7696              	.LBE217:
 7697              		.loc 4 42 0
 7698 38a9 90       		nop
 7699 38aa 4881C480 		addq	$1152, %rsp
 7699      040000
 7700 38b1 5B       		popq	%rbx
 7701 38b2 415C     		popq	%r12
 7702 38b4 5D       		popq	%rbp
 7703              		.cfi_def_cfa 7, 8
 7704 38b5 C3       		ret
 7705              		.cfi_endproc
 7706              	.LFE1412:
 7707              		.section	.gcc_except_table
 7708              		.align 4
 7709              	.LLSDA1412:
 7710 06c0 FF       		.byte	0xff
 7711 06c1 03       		.byte	0x3
 7712 06c2 5D       		.uleb128 .LLSDATT1412-.LLSDATTD1412
 7713              	.LLSDATTD1412:
 7714 06c3 01       		.byte	0x1
 7715 06c4 46       		.uleb128 .LLSDACSE1412-.LLSDACSB1412
 7716              	.LLSDACSB1412:
 7717 06c5 1C       		.uleb128 .LEHB238-.LFB1412
 7718 06c6 05       		.uleb128 .LEHE238-.LEHB238
 7719 06c7 00       		.uleb128 0
 7720 06c8 00       		.uleb128 0
 7721 06c9 35       		.uleb128 .LEHB239-.LFB1412
 7722 06ca 05       		.uleb128 .LEHE239-.LEHB239
 7723 06cb 8702     		.uleb128 .L416-.LFB1412
 7724 06cd 05       		.uleb128 0x5
 7725 06ce 75       		.uleb128 .LEHB240-.LFB1412
 7726 06cf 14       		.uleb128 .LEHE240-.LEHB240
 7727 06d0 9D01     		.uleb128 .L415-.LFB1412
 7728 06d2 07       		.uleb128 0x7
 7729 06d3 9301     		.uleb128 .LEHB241-.LFB1412
 7730 06d5 05       		.uleb128 .LEHE241-.LEHB241
 7731 06d6 8702     		.uleb128 .L416-.LFB1412
 7732 06d8 05       		.uleb128 0x5
 7733 06d9 C801     		.uleb128 .LEHB242-.LFB1412
 7734 06db 05       		.uleb128 .LEHE242-.LEHB242
 7735 06dc 00       		.uleb128 0
 7736 06dd 00       		.uleb128 0
 7737 06de EF01     		.uleb128 .LEHB243-.LFB1412
 7738 06e0 05       		.uleb128 .LEHE243-.LEHB243
 7739 06e1 00       		.uleb128 0
 7740 06e2 00       		.uleb128 0
 7741 06e3 8202     		.uleb128 .LEHB244-.LFB1412
 7742 06e5 05       		.uleb128 .LEHE244-.LEHB244
 7743 06e6 00       		.uleb128 0
 7744 06e7 00       		.uleb128 0
 7745 06e8 D502     		.uleb128 .LEHB245-.LFB1412
 7746 06ea 5E       		.uleb128 .LEHE245-.LEHB245
 7747 06eb BA01     		.uleb128 .L417-.LFB1412
 7748 06ed 00       		.uleb128 0
 7749 06ee D603     		.uleb128 .LEHB246-.LFB1412
 7750 06f0 05       		.uleb128 .LEHE246-.LEHB246
 7751 06f1 E101     		.uleb128 .L419-.LFB1412
 7752 06f3 00       		.uleb128 0
 7753 06f4 8A04     		.uleb128 .LEHB247-.LFB1412
 7754 06f6 3F       		.uleb128 .LEHE247-.LEHB247
 7755 06f7 CD01     		.uleb128 .L418-.LFB1412
 7756 06f9 00       		.uleb128 0
 7757 06fa D304     		.uleb128 .LEHB248-.LFB1412
 7758 06fc 05       		.uleb128 .LEHE248-.LEHB248
 7759 06fd E101     		.uleb128 .L419-.LFB1412
 7760 06ff 00       		.uleb128 0
 7761 0700 E704     		.uleb128 .LEHB249-.LFB1412
 7762 0702 1F       		.uleb128 .LEHE249-.LEHB249
 7763 0703 F401     		.uleb128 .L420-.LFB1412
 7764 0705 00       		.uleb128 0
 7765 0706 8605     		.uleb128 .LEHB250-.LFB1412
 7766 0708 05       		.uleb128 .LEHE250-.LEHB250
 7767 0709 00       		.uleb128 0
 7768 070a 00       		.uleb128 0
 7769              	.LLSDACSE1412:
 7770 070b 03       		.byte	0x3
 7771 070c 00       		.byte	0
 7772 070d 02       		.byte	0x2
 7773 070e 7D       		.byte	0x7d
 7774 070f 01       		.byte	0x1
 7775 0710 7D       		.byte	0x7d
 7776 0711 00       		.byte	0
 7777 0712 7D       		.byte	0x7d
 7778 0713 00       		.align 4
 7779 0714 00000000 		.long	0
 7780              	
 7781 0718 00000000 		.long	_ZTISt9exception
 7782 071c 00000000 		.long	_ZTIN8UnitTest15AssertExceptionE
 7783              	.LLSDATT1412:
 7784              		.text
 7787              	_ZN8UnitTest11ExecuteTestIN12_GLOBAL__N_151XmlTestReporterFixtureOneFailureAndOneSuccessHelperEEEvR
 7788              	.LFB1413:
  16:../ExecuteTest.h **** {
 7789              		.loc 4 16 0
 7790              		.cfi_startproc
 7791              		.cfi_personality 0x3,__gxx_personality_v0
 7792              		.cfi_lsda 0x3,.LLSDA1413
 7793 38b6 55       		pushq	%rbp
 7794              		.cfi_def_cfa_offset 16
 7795              		.cfi_offset 6, -16
 7796 38b7 4889E5   		movq	%rsp, %rbp
 7797              		.cfi_def_cfa_register 6
 7798 38ba 4154     		pushq	%r12
 7799 38bc 53       		pushq	%rbx
 7800 38bd 4881EC80 		subq	$1152, %rsp
 7800      040000
 7801              		.cfi_offset 12, -24
 7802              		.cfi_offset 3, -32
 7803 38c4 4889BD78 		movq	%rdi, -1160(%rbp)
 7803      FBFFFF
 7804 38cb 4889B570 		movq	%rsi, -1168(%rbp)
 7804      FBFFFF
 7805              	.LEHB251:
 7806              	.LBB218:
  18:../ExecuteTest.h **** 
 7807              		.loc 4 18 0
 7808 38d2 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 7808      00
 7809              	.LEHE251:
 7810 38d7 488B9570 		movq	-1168(%rbp), %rdx
 7810      FBFFFF
 7811 38de 488910   		movq	%rdx, (%rax)
 7812              	.LBB219:
  23:../ExecuteTest.h **** #endif
 7813              		.loc 4 23 0
 7814 38e1 488D8590 		leaq	-1136(%rbp), %rax
 7814      FBFFFF
 7815 38e8 4889C7   		movq	%rax, %rdi
 7816              	.LEHB252:
 7817 38eb E8000000 		call	_ZN8UnitTest16SignalTranslatorC1Ev
 7817      00
 7818              	.LEHE252:
  23:../ExecuteTest.h **** #endif
 7819              		.loc 4 23 0 is_stmt 0 discriminator 1
 7820 38f0 488B0500 		movq	_ZN8UnitTest16SignalTranslator12s_jumpTargetE(%rip), %rax
 7820      000000
 7821 38f7 BE010000 		movl	$1, %esi
 7821      00
 7822 38fc 4889C7   		movq	%rax, %rdi
 7823 38ff E8000000 		call	__sigsetjmp
 7823      00
 7824 3904 85C0     		testl	%eax, %eax
 7825 3906 0F95C0   		setne	%al
 7826 3909 84C0     		testb	%al, %al
 7827 390b 7423     		je	.L424
 7828 390d BF080000 		movl	$8, %edi
 7828      00
 7829 3912 E8000000 		call	__cxa_allocate_exception
 7829      00
 7830 3917 48C70000 		movq	$.LC43, (%rax)
 7830      000000
 7831 391e BA000000 		movl	$0, %edx
 7831      00
 7832 3923 BE000000 		movl	$_ZTIPKc, %esi
 7832      00
 7833 3928 4889C7   		movq	%rax, %rdi
 7834              	.LEHB253:
 7835 392b E8000000 		call	__cxa_throw
 7835      00
 7836              	.L424:
  25:../ExecuteTest.h **** 	}
 7837              		.loc 4 25 0 is_stmt 1
 7838 3930 488B8578 		movq	-1160(%rbp), %rax
 7838      FBFFFF
 7839 3937 4889C7   		movq	%rax, %rdi
 7840 393a E89BE8FF 		call	_ZN12_GLOBAL__N_151XmlTestReporterFixtureOneFailureAndOneSuccessHelper7RunImplEv
 7840      FF
 7841              	.LEHE253:
  25:../ExecuteTest.h **** 	}
 7842              		.loc 4 25 0 is_stmt 0 discriminator 1
 7843 393f 488D8590 		leaq	-1136(%rbp), %rax
 7843      FBFFFF
 7844 3946 4889C7   		movq	%rax, %rdi
 7845              	.LEHB254:
 7846 3949 E8000000 		call	_ZN8UnitTest16SignalTranslatorD1Ev
 7846      00
 7847              	.LEHE254:
 7848              	.LBE219:
 7849              	.LBE218:
 7850              		.loc 4 42 0 is_stmt 1
 7851 394e E9EE0100 		jmp	.L442
 7851      00
 7852              	.L435:
 7853 3953 4989C4   		movq	%rax, %r12
 7854 3956 4889D3   		movq	%rdx, %rbx
 7855              	.LBB227:
 7856              	.LBB220:
  25:../ExecuteTest.h **** 	}
 7857              		.loc 4 25 0
 7858 3959 488D8590 		leaq	-1136(%rbp), %rax
 7858      FBFFFF
 7859 3960 4889C7   		movq	%rax, %rdi
 7860 3963 E8000000 		call	_ZN8UnitTest16SignalTranslatorD1Ev
 7860      00
 7861 3968 4C89E0   		movq	%r12, %rax
 7862 396b 4889DA   		movq	%rbx, %rdx
 7863 396e EB4D     		jmp	.L426
 7864              	.L437:
 7865 3970 4889C3   		movq	%rax, %rbx
 7866              	.LBE220:
 7867              	.LBB221:
  27:../ExecuteTest.h **** 	{
 7868              		.loc 4 27 0
 7869 3973 E8000000 		call	__cxa_end_catch
 7869      00
 7870 3978 4889D8   		movq	%rbx, %rax
 7871 397b 4889C7   		movq	%rax, %rdi
 7872              	.LEHB255:
 7873 397e E8000000 		call	_Unwind_Resume
 7873      00
 7874              	.LEHE255:
 7875              	.L438:
 7876 3983 4889C3   		movq	%rax, %rbx
 7877              	.LBE221:
 7878              	.LBB222:
 7879              	.LBB223:
  36:../ExecuteTest.h **** 	}
 7880              		.loc 4 36 0
 7881 3986 488D8590 		leaq	-1136(%rbp), %rax
 7881      FBFFFF
 7882 398d 4889C7   		movq	%rax, %rdi
 7883 3990 E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 7883      00
 7884 3995 EB03     		jmp	.L429
 7885              	.L439:
 7886 3997 4889C3   		movq	%rax, %rbx
 7887              	.L429:
 7888              	.LBE223:
  32:../ExecuteTest.h **** 	{
 7889              		.loc 4 32 0
 7890 399a E8000000 		call	__cxa_end_catch
 7890      00
 7891 399f 4889D8   		movq	%rbx, %rax
 7892 39a2 4889C7   		movq	%rax, %rdi
 7893              	.LEHB256:
 7894 39a5 E8000000 		call	_Unwind_Resume
 7894      00
 7895              	.LEHE256:
 7896              	.L440:
 7897 39aa 4889C3   		movq	%rax, %rbx
 7898              	.LBE222:
  38:../ExecuteTest.h **** 	{
 7899              		.loc 4 38 0
 7900 39ad E8000000 		call	__cxa_end_catch
 7900      00
 7901 39b2 4889D8   		movq	%rbx, %rax
 7902 39b5 4889C7   		movq	%rax, %rdi
 7903              	.LEHB257:
 7904 39b8 E8000000 		call	_Unwind_Resume
 7904      00
 7905              	.LEHE257:
 7906              	.L436:
 7907              	.L426:
 7908 39bd 4883FA01 		cmpq	$1, %rdx
 7909 39c1 740F     		je	.L432
 7910 39c3 4883FA02 		cmpq	$2, %rdx
 7911 39c7 0F84A600 		je	.L433
 7911      0000
 7912 39cd E9430100 		jmp	.L441
 7912      00
 7913              	.L432:
 7914              	.LBB225:
  27:../ExecuteTest.h **** 	{
 7915              		.loc 4 27 0
 7916 39d2 4889C7   		movq	%rax, %rdi
 7917 39d5 E8000000 		call	__cxa_begin_catch
 7917      00
 7918 39da 48898580 		movq	%rax, -1152(%rbp)
 7918      FBFFFF
  30:../ExecuteTest.h **** 	}
 7919              		.loc 4 30 0
 7920 39e1 488B8580 		movq	-1152(%rbp), %rax
 7920      FBFFFF
 7921 39e8 488B00   		movq	(%rax), %rax
 7922 39eb 4883C010 		addq	$16, %rax
 7923 39ef 488B00   		movq	(%rax), %rax
 7924 39f2 488B9580 		movq	-1152(%rbp), %rdx
 7924      FBFFFF
 7925 39f9 4889D7   		movq	%rdx, %rdi
 7926 39fc FFD0     		call	*%rax
 7927 39fe 4889C3   		movq	%rax, %rbx
 7928 3a01 488B8580 		movq	-1152(%rbp), %rax
 7928      FBFFFF
 7929 3a08 4889C7   		movq	%rax, %rdi
 7930              	.LEHB258:
 7931 3a0b E8000000 		call	_ZNK8UnitTest15AssertException10LineNumberEv
 7931      00
 7932 3a10 4189C4   		movl	%eax, %r12d
 7933 3a13 488B8580 		movq	-1152(%rbp), %rax
 7933      FBFFFF
 7934 3a1a 4889C7   		movq	%rax, %rdi
 7935 3a1d E8000000 		call	_ZNK8UnitTest15AssertException8FilenameEv
 7935      00
  30:../ExecuteTest.h **** 	}
 7936              		.loc 4 30 0 is_stmt 0 discriminator 1
 7937 3a22 4889C1   		movq	%rax, %rcx
 7938 3a25 488B8570 		movq	-1168(%rbp), %rax
 7938      FBFFFF
 7939 3a2c 488B10   		movq	(%rax), %rdx
 7940 3a2f 488B8570 		movq	-1168(%rbp), %rax
 7940      FBFFFF
 7941 3a36 488B7008 		movq	8(%rax), %rsi
 7942 3a3a 488D8590 		leaq	-1136(%rbp), %rax
 7942      FBFFFF
 7943 3a41 4589E0   		movl	%r12d, %r8d
 7944 3a44 4889C7   		movq	%rax, %rdi
 7945 3a47 E8000000 		call	_ZN8UnitTest11TestDetailsC1EPKcS2_S2_i
 7945      00
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 7946              		.loc 4 29 0 is_stmt 1
 7947 3a4c E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 7947      00
  30:../ExecuteTest.h **** 	}
 7948              		.loc 4 30 0
 7949 3a51 488B00   		movq	(%rax), %rax
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 7950              		.loc 4 29 0
 7951 3a54 488D8D90 		leaq	-1136(%rbp), %rcx
 7951      FBFFFF
 7952 3a5b 4889DA   		movq	%rbx, %rdx
 7953 3a5e 4889CE   		movq	%rcx, %rsi
 7954 3a61 4889C7   		movq	%rax, %rdi
 7955 3a64 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 7955      00
 7956              	.LEHE258:
  27:../ExecuteTest.h **** 	{
 7957              		.loc 4 27 0
 7958 3a69 E8000000 		call	__cxa_end_catch
 7958      00
 7959              	.LBE225:
 7960              	.LBE227:
 7961              		.loc 4 42 0
 7962 3a6e E9CE0000 		jmp	.L442
 7962      00
 7963              	.L433:
 7964              	.LBB228:
 7965              	.LBB226:
  32:../ExecuteTest.h **** 	{
 7966              		.loc 4 32 0
 7967 3a73 4889C7   		movq	%rax, %rdi
 7968 3a76 E8000000 		call	__cxa_begin_catch
 7968      00
 7969 3a7b 48898588 		movq	%rax, -1144(%rbp)
 7969      FBFFFF
 7970              	.LBB224:
  34:../ExecuteTest.h **** 		stream << "Unhandled exception: " << e.what();
 7971              		.loc 4 34 0
 7972 3a82 488D8590 		leaq	-1136(%rbp), %rax
 7972      FBFFFF
 7973 3a89 4889C7   		movq	%rax, %rdi
 7974              	.LEHB259:
 7975 3a8c E8000000 		call	_ZN8UnitTest15MemoryOutStreamC1Ev
 7975      00
 7976              	.LEHE259:
  35:../ExecuteTest.h **** 		CurrentTest::Results()->OnTestFailure(details, stream.GetText());
 7977              		.loc 4 35 0
 7978 3a91 488B8588 		movq	-1144(%rbp), %rax
 7978      FBFFFF
 7979 3a98 488B00   		movq	(%rax), %rax
 7980 3a9b 4883C010 		addq	$16, %rax
 7981 3a9f 488B00   		movq	(%rax), %rax
 7982 3aa2 488B9588 		movq	-1144(%rbp), %rdx
 7982      FBFFFF
 7983 3aa9 4889D7   		movq	%rdx, %rdi
 7984 3aac FFD0     		call	*%rax
 7985 3aae 4889C3   		movq	%rax, %rbx
 7986 3ab1 488D8590 		leaq	-1136(%rbp), %rax
 7986      FBFFFF
 7987 3ab8 BE000000 		movl	$.LC3, %esi
 7987      00
 7988 3abd 4889C7   		movq	%rax, %rdi
 7989              	.LEHB260:
 7990 3ac0 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
 7990      00
 7991 3ac5 4889DE   		movq	%rbx, %rsi
 7992 3ac8 4889C7   		movq	%rax, %rdi
 7993 3acb E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
 7993      00
  36:../ExecuteTest.h **** 	}
 7994              		.loc 4 36 0
 7995 3ad0 488D8590 		leaq	-1136(%rbp), %rax
 7995      FBFFFF
 7996 3ad7 4889C7   		movq	%rax, %rdi
 7997 3ada E8000000 		call	_ZNK8UnitTest15MemoryOutStream7GetTextEv
 7997      00
 7998 3adf 4889C3   		movq	%rax, %rbx
 7999 3ae2 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 7999      00
  36:../ExecuteTest.h **** 	}
 8000              		.loc 4 36 0 is_stmt 0 discriminator 1
 8001 3ae7 488B00   		movq	(%rax), %rax
 8002 3aea 488B8D70 		movq	-1168(%rbp), %rcx
 8002      FBFFFF
 8003 3af1 4889DA   		movq	%rbx, %rdx
 8004 3af4 4889CE   		movq	%rcx, %rsi
 8005 3af7 4889C7   		movq	%rax, %rdi
 8006 3afa E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 8006      00
 8007              	.LEHE260:
 8008 3aff 488D8590 		leaq	-1136(%rbp), %rax
 8008      FBFFFF
 8009 3b06 4889C7   		movq	%rax, %rdi
 8010              	.LEHB261:
 8011 3b09 E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 8011      00
 8012              	.LEHE261:
 8013              	.LBE224:
  32:../ExecuteTest.h **** 	{
 8014              		.loc 4 32 0 is_stmt 1
 8015 3b0e E8000000 		call	__cxa_end_catch
 8015      00
 8016              	.LBE226:
 8017              	.LBE228:
 8018              		.loc 4 42 0
 8019 3b13 EB2C     		jmp	.L442
 8020              	.L441:
 8021              	.LBB229:
  38:../ExecuteTest.h **** 	{
 8022              		.loc 4 38 0
 8023 3b15 4889C7   		movq	%rax, %rdi
 8024 3b18 E8000000 		call	__cxa_begin_catch
 8024      00
 8025              	.LEHB262:
  40:../ExecuteTest.h **** 	}
 8026              		.loc 4 40 0
 8027 3b1d E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 8027      00
 8028 3b22 488B00   		movq	(%rax), %rax
 8029 3b25 488B8D70 		movq	-1168(%rbp), %rcx
 8029      FBFFFF
 8030 3b2c BA000000 		movl	$.LC44, %edx
 8030      00
 8031 3b31 4889CE   		movq	%rcx, %rsi
 8032 3b34 4889C7   		movq	%rax, %rdi
 8033 3b37 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 8033      00
 8034              	.LEHE262:
 8035              	.LEHB263:
  38:../ExecuteTest.h **** 	{
 8036              		.loc 4 38 0
 8037 3b3c E8000000 		call	__cxa_end_catch
 8037      00
 8038              	.LEHE263:
 8039              	.L442:
 8040              	.LBE229:
 8041              		.loc 4 42 0
 8042 3b41 90       		nop
 8043 3b42 4881C480 		addq	$1152, %rsp
 8043      040000
 8044 3b49 5B       		popq	%rbx
 8045 3b4a 415C     		popq	%r12
 8046 3b4c 5D       		popq	%rbp
 8047              		.cfi_def_cfa 7, 8
 8048 3b4d C3       		ret
 8049              		.cfi_endproc
 8050              	.LFE1413:
 8051              		.section	.gcc_except_table
 8052              		.align 4
 8053              	.LLSDA1413:
 8054 0720 FF       		.byte	0xff
 8055 0721 03       		.byte	0x3
 8056 0722 5D       		.uleb128 .LLSDATT1413-.LLSDATTD1413
 8057              	.LLSDATTD1413:
 8058 0723 01       		.byte	0x1
 8059 0724 46       		.uleb128 .LLSDACSE1413-.LLSDACSB1413
 8060              	.LLSDACSB1413:
 8061 0725 1C       		.uleb128 .LEHB251-.LFB1413
 8062 0726 05       		.uleb128 .LEHE251-.LEHB251
 8063 0727 00       		.uleb128 0
 8064 0728 00       		.uleb128 0
 8065 0729 35       		.uleb128 .LEHB252-.LFB1413
 8066 072a 05       		.uleb128 .LEHE252-.LEHB252
 8067 072b 8702     		.uleb128 .L436-.LFB1413
 8068 072d 05       		.uleb128 0x5
 8069 072e 75       		.uleb128 .LEHB253-.LFB1413
 8070 072f 14       		.uleb128 .LEHE253-.LEHB253
 8071 0730 9D01     		.uleb128 .L435-.LFB1413
 8072 0732 07       		.uleb128 0x7
 8073 0733 9301     		.uleb128 .LEHB254-.LFB1413
 8074 0735 05       		.uleb128 .LEHE254-.LEHB254
 8075 0736 8702     		.uleb128 .L436-.LFB1413
 8076 0738 05       		.uleb128 0x5
 8077 0739 C801     		.uleb128 .LEHB255-.LFB1413
 8078 073b 05       		.uleb128 .LEHE255-.LEHB255
 8079 073c 00       		.uleb128 0
 8080 073d 00       		.uleb128 0
 8081 073e EF01     		.uleb128 .LEHB256-.LFB1413
 8082 0740 05       		.uleb128 .LEHE256-.LEHB256
 8083 0741 00       		.uleb128 0
 8084 0742 00       		.uleb128 0
 8085 0743 8202     		.uleb128 .LEHB257-.LFB1413
 8086 0745 05       		.uleb128 .LEHE257-.LEHB257
 8087 0746 00       		.uleb128 0
 8088 0747 00       		.uleb128 0
 8089 0748 D502     		.uleb128 .LEHB258-.LFB1413
 8090 074a 5E       		.uleb128 .LEHE258-.LEHB258
 8091 074b BA01     		.uleb128 .L437-.LFB1413
 8092 074d 00       		.uleb128 0
 8093 074e D603     		.uleb128 .LEHB259-.LFB1413
 8094 0750 05       		.uleb128 .LEHE259-.LEHB259
 8095 0751 E101     		.uleb128 .L439-.LFB1413
 8096 0753 00       		.uleb128 0
 8097 0754 8A04     		.uleb128 .LEHB260-.LFB1413
 8098 0756 3F       		.uleb128 .LEHE260-.LEHB260
 8099 0757 CD01     		.uleb128 .L438-.LFB1413
 8100 0759 00       		.uleb128 0
 8101 075a D304     		.uleb128 .LEHB261-.LFB1413
 8102 075c 05       		.uleb128 .LEHE261-.LEHB261
 8103 075d E101     		.uleb128 .L439-.LFB1413
 8104 075f 00       		.uleb128 0
 8105 0760 E704     		.uleb128 .LEHB262-.LFB1413
 8106 0762 1F       		.uleb128 .LEHE262-.LEHB262
 8107 0763 F401     		.uleb128 .L440-.LFB1413
 8108 0765 00       		.uleb128 0
 8109 0766 8605     		.uleb128 .LEHB263-.LFB1413
 8110 0768 05       		.uleb128 .LEHE263-.LEHB263
 8111 0769 00       		.uleb128 0
 8112 076a 00       		.uleb128 0
 8113              	.LLSDACSE1413:
 8114 076b 03       		.byte	0x3
 8115 076c 00       		.byte	0
 8116 076d 02       		.byte	0x2
 8117 076e 7D       		.byte	0x7d
 8118 076f 01       		.byte	0x1
 8119 0770 7D       		.byte	0x7d
 8120 0771 00       		.byte	0
 8121 0772 7D       		.byte	0x7d
 8122 0773 00       		.align 4
 8123 0774 00000000 		.long	0
 8124              	
 8125 0778 00000000 		.long	_ZTISt9exception
 8126 077c 00000000 		.long	_ZTIN8UnitTest15AssertExceptionE
 8127              	.LLSDATT1413:
 8128              		.text
 8131              	_ZN8UnitTest11ExecuteTestIN12_GLOBAL__N_144XmlTestReporterFixtureMultipleFailuresHelperEEEvRT_RKNS_
 8132              	.LFB1414:
  16:../ExecuteTest.h **** {
 8133              		.loc 4 16 0
 8134              		.cfi_startproc
 8135              		.cfi_personality 0x3,__gxx_personality_v0
 8136              		.cfi_lsda 0x3,.LLSDA1414
 8137 3b4e 55       		pushq	%rbp
 8138              		.cfi_def_cfa_offset 16
 8139              		.cfi_offset 6, -16
 8140 3b4f 4889E5   		movq	%rsp, %rbp
 8141              		.cfi_def_cfa_register 6
 8142 3b52 4154     		pushq	%r12
 8143 3b54 53       		pushq	%rbx
 8144 3b55 4881EC80 		subq	$1152, %rsp
 8144      040000
 8145              		.cfi_offset 12, -24
 8146              		.cfi_offset 3, -32
 8147 3b5c 4889BD78 		movq	%rdi, -1160(%rbp)
 8147      FBFFFF
 8148 3b63 4889B570 		movq	%rsi, -1168(%rbp)
 8148      FBFFFF
 8149              	.LEHB264:
 8150              	.LBB230:
  18:../ExecuteTest.h **** 
 8151              		.loc 4 18 0
 8152 3b6a E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 8152      00
 8153              	.LEHE264:
 8154 3b6f 488B9570 		movq	-1168(%rbp), %rdx
 8154      FBFFFF
 8155 3b76 488910   		movq	%rdx, (%rax)
 8156              	.LBB231:
  23:../ExecuteTest.h **** #endif
 8157              		.loc 4 23 0
 8158 3b79 488D8590 		leaq	-1136(%rbp), %rax
 8158      FBFFFF
 8159 3b80 4889C7   		movq	%rax, %rdi
 8160              	.LEHB265:
 8161 3b83 E8000000 		call	_ZN8UnitTest16SignalTranslatorC1Ev
 8161      00
 8162              	.LEHE265:
  23:../ExecuteTest.h **** #endif
 8163              		.loc 4 23 0 is_stmt 0 discriminator 1
 8164 3b88 488B0500 		movq	_ZN8UnitTest16SignalTranslator12s_jumpTargetE(%rip), %rax
 8164      000000
 8165 3b8f BE010000 		movl	$1, %esi
 8165      00
 8166 3b94 4889C7   		movq	%rax, %rdi
 8167 3b97 E8000000 		call	__sigsetjmp
 8167      00
 8168 3b9c 85C0     		testl	%eax, %eax
 8169 3b9e 0F95C0   		setne	%al
 8170 3ba1 84C0     		testb	%al, %al
 8171 3ba3 7423     		je	.L444
 8172 3ba5 BF080000 		movl	$8, %edi
 8172      00
 8173 3baa E8000000 		call	__cxa_allocate_exception
 8173      00
 8174 3baf 48C70000 		movq	$.LC43, (%rax)
 8174      000000
 8175 3bb6 BA000000 		movl	$0, %edx
 8175      00
 8176 3bbb BE000000 		movl	$_ZTIPKc, %esi
 8176      00
 8177 3bc0 4889C7   		movq	%rax, %rdi
 8178              	.LEHB266:
 8179 3bc3 E8000000 		call	__cxa_throw
 8179      00
 8180              	.L444:
  25:../ExecuteTest.h **** 	}
 8181              		.loc 4 25 0 is_stmt 1
 8182 3bc8 488B8578 		movq	-1160(%rbp), %rax
 8182      FBFFFF
 8183 3bcf 4889C7   		movq	%rax, %rdi
 8184 3bd2 E86DEBFF 		call	_ZN12_GLOBAL__N_144XmlTestReporterFixtureMultipleFailuresHelper7RunImplEv
 8184      FF
 8185              	.LEHE266:
  25:../ExecuteTest.h **** 	}
 8186              		.loc 4 25 0 is_stmt 0 discriminator 1
 8187 3bd7 488D8590 		leaq	-1136(%rbp), %rax
 8187      FBFFFF
 8188 3bde 4889C7   		movq	%rax, %rdi
 8189              	.LEHB267:
 8190 3be1 E8000000 		call	_ZN8UnitTest16SignalTranslatorD1Ev
 8190      00
 8191              	.LEHE267:
 8192              	.LBE231:
 8193              	.LBE230:
 8194              		.loc 4 42 0 is_stmt 1
 8195 3be6 E9EE0100 		jmp	.L462
 8195      00
 8196              	.L455:
 8197 3beb 4989C4   		movq	%rax, %r12
 8198 3bee 4889D3   		movq	%rdx, %rbx
 8199              	.LBB239:
 8200              	.LBB232:
  25:../ExecuteTest.h **** 	}
 8201              		.loc 4 25 0
 8202 3bf1 488D8590 		leaq	-1136(%rbp), %rax
 8202      FBFFFF
 8203 3bf8 4889C7   		movq	%rax, %rdi
 8204 3bfb E8000000 		call	_ZN8UnitTest16SignalTranslatorD1Ev
 8204      00
 8205 3c00 4C89E0   		movq	%r12, %rax
 8206 3c03 4889DA   		movq	%rbx, %rdx
 8207 3c06 EB4D     		jmp	.L446
 8208              	.L457:
 8209 3c08 4889C3   		movq	%rax, %rbx
 8210              	.LBE232:
 8211              	.LBB233:
  27:../ExecuteTest.h **** 	{
 8212              		.loc 4 27 0
 8213 3c0b E8000000 		call	__cxa_end_catch
 8213      00
 8214 3c10 4889D8   		movq	%rbx, %rax
 8215 3c13 4889C7   		movq	%rax, %rdi
 8216              	.LEHB268:
 8217 3c16 E8000000 		call	_Unwind_Resume
 8217      00
 8218              	.LEHE268:
 8219              	.L458:
 8220 3c1b 4889C3   		movq	%rax, %rbx
 8221              	.LBE233:
 8222              	.LBB234:
 8223              	.LBB235:
  36:../ExecuteTest.h **** 	}
 8224              		.loc 4 36 0
 8225 3c1e 488D8590 		leaq	-1136(%rbp), %rax
 8225      FBFFFF
 8226 3c25 4889C7   		movq	%rax, %rdi
 8227 3c28 E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 8227      00
 8228 3c2d EB03     		jmp	.L449
 8229              	.L459:
 8230 3c2f 4889C3   		movq	%rax, %rbx
 8231              	.L449:
 8232              	.LBE235:
  32:../ExecuteTest.h **** 	{
 8233              		.loc 4 32 0
 8234 3c32 E8000000 		call	__cxa_end_catch
 8234      00
 8235 3c37 4889D8   		movq	%rbx, %rax
 8236 3c3a 4889C7   		movq	%rax, %rdi
 8237              	.LEHB269:
 8238 3c3d E8000000 		call	_Unwind_Resume
 8238      00
 8239              	.LEHE269:
 8240              	.L460:
 8241 3c42 4889C3   		movq	%rax, %rbx
 8242              	.LBE234:
  38:../ExecuteTest.h **** 	{
 8243              		.loc 4 38 0
 8244 3c45 E8000000 		call	__cxa_end_catch
 8244      00
 8245 3c4a 4889D8   		movq	%rbx, %rax
 8246 3c4d 4889C7   		movq	%rax, %rdi
 8247              	.LEHB270:
 8248 3c50 E8000000 		call	_Unwind_Resume
 8248      00
 8249              	.LEHE270:
 8250              	.L456:
 8251              	.L446:
 8252 3c55 4883FA01 		cmpq	$1, %rdx
 8253 3c59 740F     		je	.L452
 8254 3c5b 4883FA02 		cmpq	$2, %rdx
 8255 3c5f 0F84A600 		je	.L453
 8255      0000
 8256 3c65 E9430100 		jmp	.L461
 8256      00
 8257              	.L452:
 8258              	.LBB237:
  27:../ExecuteTest.h **** 	{
 8259              		.loc 4 27 0
 8260 3c6a 4889C7   		movq	%rax, %rdi
 8261 3c6d E8000000 		call	__cxa_begin_catch
 8261      00
 8262 3c72 48898580 		movq	%rax, -1152(%rbp)
 8262      FBFFFF
  30:../ExecuteTest.h **** 	}
 8263              		.loc 4 30 0
 8264 3c79 488B8580 		movq	-1152(%rbp), %rax
 8264      FBFFFF
 8265 3c80 488B00   		movq	(%rax), %rax
 8266 3c83 4883C010 		addq	$16, %rax
 8267 3c87 488B00   		movq	(%rax), %rax
 8268 3c8a 488B9580 		movq	-1152(%rbp), %rdx
 8268      FBFFFF
 8269 3c91 4889D7   		movq	%rdx, %rdi
 8270 3c94 FFD0     		call	*%rax
 8271 3c96 4889C3   		movq	%rax, %rbx
 8272 3c99 488B8580 		movq	-1152(%rbp), %rax
 8272      FBFFFF
 8273 3ca0 4889C7   		movq	%rax, %rdi
 8274              	.LEHB271:
 8275 3ca3 E8000000 		call	_ZNK8UnitTest15AssertException10LineNumberEv
 8275      00
 8276 3ca8 4189C4   		movl	%eax, %r12d
 8277 3cab 488B8580 		movq	-1152(%rbp), %rax
 8277      FBFFFF
 8278 3cb2 4889C7   		movq	%rax, %rdi
 8279 3cb5 E8000000 		call	_ZNK8UnitTest15AssertException8FilenameEv
 8279      00
  30:../ExecuteTest.h **** 	}
 8280              		.loc 4 30 0 is_stmt 0 discriminator 1
 8281 3cba 4889C1   		movq	%rax, %rcx
 8282 3cbd 488B8570 		movq	-1168(%rbp), %rax
 8282      FBFFFF
 8283 3cc4 488B10   		movq	(%rax), %rdx
 8284 3cc7 488B8570 		movq	-1168(%rbp), %rax
 8284      FBFFFF
 8285 3cce 488B7008 		movq	8(%rax), %rsi
 8286 3cd2 488D8590 		leaq	-1136(%rbp), %rax
 8286      FBFFFF
 8287 3cd9 4589E0   		movl	%r12d, %r8d
 8288 3cdc 4889C7   		movq	%rax, %rdi
 8289 3cdf E8000000 		call	_ZN8UnitTest11TestDetailsC1EPKcS2_S2_i
 8289      00
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 8290              		.loc 4 29 0 is_stmt 1
 8291 3ce4 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 8291      00
  30:../ExecuteTest.h **** 	}
 8292              		.loc 4 30 0
 8293 3ce9 488B00   		movq	(%rax), %rax
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 8294              		.loc 4 29 0
 8295 3cec 488D8D90 		leaq	-1136(%rbp), %rcx
 8295      FBFFFF
 8296 3cf3 4889DA   		movq	%rbx, %rdx
 8297 3cf6 4889CE   		movq	%rcx, %rsi
 8298 3cf9 4889C7   		movq	%rax, %rdi
 8299 3cfc E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 8299      00
 8300              	.LEHE271:
  27:../ExecuteTest.h **** 	{
 8301              		.loc 4 27 0
 8302 3d01 E8000000 		call	__cxa_end_catch
 8302      00
 8303              	.LBE237:
 8304              	.LBE239:
 8305              		.loc 4 42 0
 8306 3d06 E9CE0000 		jmp	.L462
 8306      00
 8307              	.L453:
 8308              	.LBB240:
 8309              	.LBB238:
  32:../ExecuteTest.h **** 	{
 8310              		.loc 4 32 0
 8311 3d0b 4889C7   		movq	%rax, %rdi
 8312 3d0e E8000000 		call	__cxa_begin_catch
 8312      00
 8313 3d13 48898588 		movq	%rax, -1144(%rbp)
 8313      FBFFFF
 8314              	.LBB236:
  34:../ExecuteTest.h **** 		stream << "Unhandled exception: " << e.what();
 8315              		.loc 4 34 0
 8316 3d1a 488D8590 		leaq	-1136(%rbp), %rax
 8316      FBFFFF
 8317 3d21 4889C7   		movq	%rax, %rdi
 8318              	.LEHB272:
 8319 3d24 E8000000 		call	_ZN8UnitTest15MemoryOutStreamC1Ev
 8319      00
 8320              	.LEHE272:
  35:../ExecuteTest.h **** 		CurrentTest::Results()->OnTestFailure(details, stream.GetText());
 8321              		.loc 4 35 0
 8322 3d29 488B8588 		movq	-1144(%rbp), %rax
 8322      FBFFFF
 8323 3d30 488B00   		movq	(%rax), %rax
 8324 3d33 4883C010 		addq	$16, %rax
 8325 3d37 488B00   		movq	(%rax), %rax
 8326 3d3a 488B9588 		movq	-1144(%rbp), %rdx
 8326      FBFFFF
 8327 3d41 4889D7   		movq	%rdx, %rdi
 8328 3d44 FFD0     		call	*%rax
 8329 3d46 4889C3   		movq	%rax, %rbx
 8330 3d49 488D8590 		leaq	-1136(%rbp), %rax
 8330      FBFFFF
 8331 3d50 BE000000 		movl	$.LC3, %esi
 8331      00
 8332 3d55 4889C7   		movq	%rax, %rdi
 8333              	.LEHB273:
 8334 3d58 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
 8334      00
 8335 3d5d 4889DE   		movq	%rbx, %rsi
 8336 3d60 4889C7   		movq	%rax, %rdi
 8337 3d63 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
 8337      00
  36:../ExecuteTest.h **** 	}
 8338              		.loc 4 36 0
 8339 3d68 488D8590 		leaq	-1136(%rbp), %rax
 8339      FBFFFF
 8340 3d6f 4889C7   		movq	%rax, %rdi
 8341 3d72 E8000000 		call	_ZNK8UnitTest15MemoryOutStream7GetTextEv
 8341      00
 8342 3d77 4889C3   		movq	%rax, %rbx
 8343 3d7a E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 8343      00
  36:../ExecuteTest.h **** 	}
 8344              		.loc 4 36 0 is_stmt 0 discriminator 1
 8345 3d7f 488B00   		movq	(%rax), %rax
 8346 3d82 488B8D70 		movq	-1168(%rbp), %rcx
 8346      FBFFFF
 8347 3d89 4889DA   		movq	%rbx, %rdx
 8348 3d8c 4889CE   		movq	%rcx, %rsi
 8349 3d8f 4889C7   		movq	%rax, %rdi
 8350 3d92 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 8350      00
 8351              	.LEHE273:
 8352 3d97 488D8590 		leaq	-1136(%rbp), %rax
 8352      FBFFFF
 8353 3d9e 4889C7   		movq	%rax, %rdi
 8354              	.LEHB274:
 8355 3da1 E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 8355      00
 8356              	.LEHE274:
 8357              	.LBE236:
  32:../ExecuteTest.h **** 	{
 8358              		.loc 4 32 0 is_stmt 1
 8359 3da6 E8000000 		call	__cxa_end_catch
 8359      00
 8360              	.LBE238:
 8361              	.LBE240:
 8362              		.loc 4 42 0
 8363 3dab EB2C     		jmp	.L462
 8364              	.L461:
 8365              	.LBB241:
  38:../ExecuteTest.h **** 	{
 8366              		.loc 4 38 0
 8367 3dad 4889C7   		movq	%rax, %rdi
 8368 3db0 E8000000 		call	__cxa_begin_catch
 8368      00
 8369              	.LEHB275:
  40:../ExecuteTest.h **** 	}
 8370              		.loc 4 40 0
 8371 3db5 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 8371      00
 8372 3dba 488B00   		movq	(%rax), %rax
 8373 3dbd 488B8D70 		movq	-1168(%rbp), %rcx
 8373      FBFFFF
 8374 3dc4 BA000000 		movl	$.LC44, %edx
 8374      00
 8375 3dc9 4889CE   		movq	%rcx, %rsi
 8376 3dcc 4889C7   		movq	%rax, %rdi
 8377 3dcf E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 8377      00
 8378              	.LEHE275:
 8379              	.LEHB276:
  38:../ExecuteTest.h **** 	{
 8380              		.loc 4 38 0
 8381 3dd4 E8000000 		call	__cxa_end_catch
 8381      00
 8382              	.LEHE276:
 8383              	.L462:
 8384              	.LBE241:
 8385              		.loc 4 42 0
 8386 3dd9 90       		nop
 8387 3dda 4881C480 		addq	$1152, %rsp
 8387      040000
 8388 3de1 5B       		popq	%rbx
 8389 3de2 415C     		popq	%r12
 8390 3de4 5D       		popq	%rbp
 8391              		.cfi_def_cfa 7, 8
 8392 3de5 C3       		ret
 8393              		.cfi_endproc
 8394              	.LFE1414:
 8395              		.section	.gcc_except_table
 8396              		.align 4
 8397              	.LLSDA1414:
 8398 0780 FF       		.byte	0xff
 8399 0781 03       		.byte	0x3
 8400 0782 5D       		.uleb128 .LLSDATT1414-.LLSDATTD1414
 8401              	.LLSDATTD1414:
 8402 0783 01       		.byte	0x1
 8403 0784 46       		.uleb128 .LLSDACSE1414-.LLSDACSB1414
 8404              	.LLSDACSB1414:
 8405 0785 1C       		.uleb128 .LEHB264-.LFB1414
 8406 0786 05       		.uleb128 .LEHE264-.LEHB264
 8407 0787 00       		.uleb128 0
 8408 0788 00       		.uleb128 0
 8409 0789 35       		.uleb128 .LEHB265-.LFB1414
 8410 078a 05       		.uleb128 .LEHE265-.LEHB265
 8411 078b 8702     		.uleb128 .L456-.LFB1414
 8412 078d 05       		.uleb128 0x5
 8413 078e 75       		.uleb128 .LEHB266-.LFB1414
 8414 078f 14       		.uleb128 .LEHE266-.LEHB266
 8415 0790 9D01     		.uleb128 .L455-.LFB1414
 8416 0792 07       		.uleb128 0x7
 8417 0793 9301     		.uleb128 .LEHB267-.LFB1414
 8418 0795 05       		.uleb128 .LEHE267-.LEHB267
 8419 0796 8702     		.uleb128 .L456-.LFB1414
 8420 0798 05       		.uleb128 0x5
 8421 0799 C801     		.uleb128 .LEHB268-.LFB1414
 8422 079b 05       		.uleb128 .LEHE268-.LEHB268
 8423 079c 00       		.uleb128 0
 8424 079d 00       		.uleb128 0
 8425 079e EF01     		.uleb128 .LEHB269-.LFB1414
 8426 07a0 05       		.uleb128 .LEHE269-.LEHB269
 8427 07a1 00       		.uleb128 0
 8428 07a2 00       		.uleb128 0
 8429 07a3 8202     		.uleb128 .LEHB270-.LFB1414
 8430 07a5 05       		.uleb128 .LEHE270-.LEHB270
 8431 07a6 00       		.uleb128 0
 8432 07a7 00       		.uleb128 0
 8433 07a8 D502     		.uleb128 .LEHB271-.LFB1414
 8434 07aa 5E       		.uleb128 .LEHE271-.LEHB271
 8435 07ab BA01     		.uleb128 .L457-.LFB1414
 8436 07ad 00       		.uleb128 0
 8437 07ae D603     		.uleb128 .LEHB272-.LFB1414
 8438 07b0 05       		.uleb128 .LEHE272-.LEHB272
 8439 07b1 E101     		.uleb128 .L459-.LFB1414
 8440 07b3 00       		.uleb128 0
 8441 07b4 8A04     		.uleb128 .LEHB273-.LFB1414
 8442 07b6 3F       		.uleb128 .LEHE273-.LEHB273
 8443 07b7 CD01     		.uleb128 .L458-.LFB1414
 8444 07b9 00       		.uleb128 0
 8445 07ba D304     		.uleb128 .LEHB274-.LFB1414
 8446 07bc 05       		.uleb128 .LEHE274-.LEHB274
 8447 07bd E101     		.uleb128 .L459-.LFB1414
 8448 07bf 00       		.uleb128 0
 8449 07c0 E704     		.uleb128 .LEHB275-.LFB1414
 8450 07c2 1F       		.uleb128 .LEHE275-.LEHB275
 8451 07c3 F401     		.uleb128 .L460-.LFB1414
 8452 07c5 00       		.uleb128 0
 8453 07c6 8605     		.uleb128 .LEHB276-.LFB1414
 8454 07c8 05       		.uleb128 .LEHE276-.LEHB276
 8455 07c9 00       		.uleb128 0
 8456 07ca 00       		.uleb128 0
 8457              	.LLSDACSE1414:
 8458 07cb 03       		.byte	0x3
 8459 07cc 00       		.byte	0
 8460 07cd 02       		.byte	0x2
 8461 07ce 7D       		.byte	0x7d
 8462 07cf 01       		.byte	0x1
 8463 07d0 7D       		.byte	0x7d
 8464 07d1 00       		.byte	0
 8465 07d2 7D       		.byte	0x7d
 8466 07d3 00       		.align 4
 8467 07d4 00000000 		.long	0
 8468              	
 8469 07d8 00000000 		.long	_ZTISt9exception
 8470 07dc 00000000 		.long	_ZTIN8UnitTest15AssertExceptionE
 8471              	.LLSDATT1414:
 8472              		.text
 8474              		.section	.text._ZSteqIcSt11char_traitsIcESaIcEEbPKT_RKSbIS3_T0_T1_E,"axG",@progbits,_ZSteqIcSt11ch
 8475              		.weak	_ZSteqIcSt11char_traitsIcESaIcEEbPKT_RKSbIS3_T0_T1_E
 8477              	_ZSteqIcSt11char_traitsIcESaIcEEbPKT_RKSbIS3_T0_T1_E:
 8478              	.LFB1447:
 8479              		.file 6 "/usr/include/c++/4.8/bits/basic_string.h"
   1:/usr/include/c++/4.8/bits/basic_string.h **** // Components for manipulating sequences of characters -*- C++ -*-
   2:/usr/include/c++/4.8/bits/basic_string.h **** 
   3:/usr/include/c++/4.8/bits/basic_string.h **** // Copyright (C) 1997-2013 Free Software Foundation, Inc.
   4:/usr/include/c++/4.8/bits/basic_string.h **** //
   5:/usr/include/c++/4.8/bits/basic_string.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/c++/4.8/bits/basic_string.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/4.8/bits/basic_string.h **** // terms of the GNU General Public License as published by the
   8:/usr/include/c++/4.8/bits/basic_string.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/4.8/bits/basic_string.h **** // any later version.
  10:/usr/include/c++/4.8/bits/basic_string.h **** 
  11:/usr/include/c++/4.8/bits/basic_string.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/c++/4.8/bits/basic_string.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/c++/4.8/bits/basic_string.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/4.8/bits/basic_string.h **** // GNU General Public License for more details.
  15:/usr/include/c++/4.8/bits/basic_string.h **** 
  16:/usr/include/c++/4.8/bits/basic_string.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/c++/4.8/bits/basic_string.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/4.8/bits/basic_string.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/4.8/bits/basic_string.h **** 
  20:/usr/include/c++/4.8/bits/basic_string.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/c++/4.8/bits/basic_string.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/c++/4.8/bits/basic_string.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/4.8/bits/basic_string.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/c++/4.8/bits/basic_string.h **** 
  25:/usr/include/c++/4.8/bits/basic_string.h **** /** @file bits/basic_string.h
  26:/usr/include/c++/4.8/bits/basic_string.h ****  *  This is an internal header file, included by other library headers.
  27:/usr/include/c++/4.8/bits/basic_string.h ****  *  Do not attempt to use it directly. @headername{string}
  28:/usr/include/c++/4.8/bits/basic_string.h ****  */
  29:/usr/include/c++/4.8/bits/basic_string.h **** 
  30:/usr/include/c++/4.8/bits/basic_string.h **** //
  31:/usr/include/c++/4.8/bits/basic_string.h **** // ISO C++ 14882: 21 Strings library
  32:/usr/include/c++/4.8/bits/basic_string.h **** //
  33:/usr/include/c++/4.8/bits/basic_string.h **** 
  34:/usr/include/c++/4.8/bits/basic_string.h **** #ifndef _BASIC_STRING_H
  35:/usr/include/c++/4.8/bits/basic_string.h **** #define _BASIC_STRING_H 1
  36:/usr/include/c++/4.8/bits/basic_string.h **** 
  37:/usr/include/c++/4.8/bits/basic_string.h **** #pragma GCC system_header
  38:/usr/include/c++/4.8/bits/basic_string.h **** 
  39:/usr/include/c++/4.8/bits/basic_string.h **** #include <ext/atomicity.h>
  40:/usr/include/c++/4.8/bits/basic_string.h **** #include <debug/debug.h>
  41:/usr/include/c++/4.8/bits/basic_string.h **** #if __cplusplus >= 201103L
  42:/usr/include/c++/4.8/bits/basic_string.h **** #include <initializer_list>
  43:/usr/include/c++/4.8/bits/basic_string.h **** #endif
  44:/usr/include/c++/4.8/bits/basic_string.h **** 
  45:/usr/include/c++/4.8/bits/basic_string.h **** namespace std _GLIBCXX_VISIBILITY(default)
  46:/usr/include/c++/4.8/bits/basic_string.h **** {
  47:/usr/include/c++/4.8/bits/basic_string.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  48:/usr/include/c++/4.8/bits/basic_string.h **** 
  49:/usr/include/c++/4.8/bits/basic_string.h ****   /**
  50:/usr/include/c++/4.8/bits/basic_string.h ****    *  @class basic_string basic_string.h <string>
  51:/usr/include/c++/4.8/bits/basic_string.h ****    *  @brief  Managing sequences of characters and character-like objects.
  52:/usr/include/c++/4.8/bits/basic_string.h ****    *
  53:/usr/include/c++/4.8/bits/basic_string.h ****    *  @ingroup strings
  54:/usr/include/c++/4.8/bits/basic_string.h ****    *  @ingroup sequences
  55:/usr/include/c++/4.8/bits/basic_string.h ****    *
  56:/usr/include/c++/4.8/bits/basic_string.h ****    *  @tparam _CharT  Type of character
  57:/usr/include/c++/4.8/bits/basic_string.h ****    *  @tparam _Traits  Traits for character type, defaults to
  58:/usr/include/c++/4.8/bits/basic_string.h ****    *                   char_traits<_CharT>.
  59:/usr/include/c++/4.8/bits/basic_string.h ****    *  @tparam _Alloc  Allocator type, defaults to allocator<_CharT>.
  60:/usr/include/c++/4.8/bits/basic_string.h ****    *
  61:/usr/include/c++/4.8/bits/basic_string.h ****    *  Meets the requirements of a <a href="tables.html#65">container</a>, a
  62:/usr/include/c++/4.8/bits/basic_string.h ****    *  <a href="tables.html#66">reversible container</a>, and a
  63:/usr/include/c++/4.8/bits/basic_string.h ****    *  <a href="tables.html#67">sequence</a>.  Of the
  64:/usr/include/c++/4.8/bits/basic_string.h ****    *  <a href="tables.html#68">optional sequence requirements</a>, only
  65:/usr/include/c++/4.8/bits/basic_string.h ****    *  @c push_back, @c at, and @c %array access are supported.
  66:/usr/include/c++/4.8/bits/basic_string.h ****    *
  67:/usr/include/c++/4.8/bits/basic_string.h ****    *  @doctodo
  68:/usr/include/c++/4.8/bits/basic_string.h ****    *
  69:/usr/include/c++/4.8/bits/basic_string.h ****    *
  70:/usr/include/c++/4.8/bits/basic_string.h ****    *  Documentation?  What's that?
  71:/usr/include/c++/4.8/bits/basic_string.h ****    *  Nathan Myers <ncm@cantrip.org>.
  72:/usr/include/c++/4.8/bits/basic_string.h ****    *
  73:/usr/include/c++/4.8/bits/basic_string.h ****    *  A string looks like this:
  74:/usr/include/c++/4.8/bits/basic_string.h ****    *
  75:/usr/include/c++/4.8/bits/basic_string.h ****    *  @code
  76:/usr/include/c++/4.8/bits/basic_string.h ****    *                                        [_Rep]
  77:/usr/include/c++/4.8/bits/basic_string.h ****    *                                        _M_length
  78:/usr/include/c++/4.8/bits/basic_string.h ****    *   [basic_string<char_type>]            _M_capacity
  79:/usr/include/c++/4.8/bits/basic_string.h ****    *   _M_dataplus                          _M_refcount
  80:/usr/include/c++/4.8/bits/basic_string.h ****    *   _M_p ---------------->               unnamed array of char_type
  81:/usr/include/c++/4.8/bits/basic_string.h ****    *  @endcode
  82:/usr/include/c++/4.8/bits/basic_string.h ****    *
  83:/usr/include/c++/4.8/bits/basic_string.h ****    *  Where the _M_p points to the first character in the string, and
  84:/usr/include/c++/4.8/bits/basic_string.h ****    *  you cast it to a pointer-to-_Rep and subtract 1 to get a
  85:/usr/include/c++/4.8/bits/basic_string.h ****    *  pointer to the header.
  86:/usr/include/c++/4.8/bits/basic_string.h ****    *
  87:/usr/include/c++/4.8/bits/basic_string.h ****    *  This approach has the enormous advantage that a string object
  88:/usr/include/c++/4.8/bits/basic_string.h ****    *  requires only one allocation.  All the ugliness is confined
  89:/usr/include/c++/4.8/bits/basic_string.h ****    *  within a single %pair of inline functions, which each compile to
  90:/usr/include/c++/4.8/bits/basic_string.h ****    *  a single @a add instruction: _Rep::_M_data(), and
  91:/usr/include/c++/4.8/bits/basic_string.h ****    *  string::_M_rep(); and the allocation function which gets a
  92:/usr/include/c++/4.8/bits/basic_string.h ****    *  block of raw bytes and with room enough and constructs a _Rep
  93:/usr/include/c++/4.8/bits/basic_string.h ****    *  object at the front.
  94:/usr/include/c++/4.8/bits/basic_string.h ****    *
  95:/usr/include/c++/4.8/bits/basic_string.h ****    *  The reason you want _M_data pointing to the character %array and
  96:/usr/include/c++/4.8/bits/basic_string.h ****    *  not the _Rep is so that the debugger can see the string
  97:/usr/include/c++/4.8/bits/basic_string.h ****    *  contents. (Probably we should add a non-inline member to get
  98:/usr/include/c++/4.8/bits/basic_string.h ****    *  the _Rep for the debugger to use, so users can check the actual
  99:/usr/include/c++/4.8/bits/basic_string.h ****    *  string length.)
 100:/usr/include/c++/4.8/bits/basic_string.h ****    *
 101:/usr/include/c++/4.8/bits/basic_string.h ****    *  Note that the _Rep object is a POD so that you can have a
 102:/usr/include/c++/4.8/bits/basic_string.h ****    *  static <em>empty string</em> _Rep object already @a constructed before
 103:/usr/include/c++/4.8/bits/basic_string.h ****    *  static constructors have run.  The reference-count encoding is
 104:/usr/include/c++/4.8/bits/basic_string.h ****    *  chosen so that a 0 indicates one reference, so you never try to
 105:/usr/include/c++/4.8/bits/basic_string.h ****    *  destroy the empty-string _Rep object.
 106:/usr/include/c++/4.8/bits/basic_string.h ****    *
 107:/usr/include/c++/4.8/bits/basic_string.h ****    *  All but the last paragraph is considered pretty conventional
 108:/usr/include/c++/4.8/bits/basic_string.h ****    *  for a C++ string implementation.
 109:/usr/include/c++/4.8/bits/basic_string.h ****   */
 110:/usr/include/c++/4.8/bits/basic_string.h ****   // 21.3  Template class basic_string
 111:/usr/include/c++/4.8/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
 112:/usr/include/c++/4.8/bits/basic_string.h ****     class basic_string
 113:/usr/include/c++/4.8/bits/basic_string.h ****     {
 114:/usr/include/c++/4.8/bits/basic_string.h ****       typedef typename _Alloc::template rebind<_CharT>::other _CharT_alloc_type;
 115:/usr/include/c++/4.8/bits/basic_string.h **** 
 116:/usr/include/c++/4.8/bits/basic_string.h ****       // Types:
 117:/usr/include/c++/4.8/bits/basic_string.h ****     public:
 118:/usr/include/c++/4.8/bits/basic_string.h ****       typedef _Traits					    traits_type;
 119:/usr/include/c++/4.8/bits/basic_string.h ****       typedef typename _Traits::char_type		    value_type;
 120:/usr/include/c++/4.8/bits/basic_string.h ****       typedef _Alloc					    allocator_type;
 121:/usr/include/c++/4.8/bits/basic_string.h ****       typedef typename _CharT_alloc_type::size_type	    size_type;
 122:/usr/include/c++/4.8/bits/basic_string.h ****       typedef typename _CharT_alloc_type::difference_type   difference_type;
 123:/usr/include/c++/4.8/bits/basic_string.h ****       typedef typename _CharT_alloc_type::reference	    reference;
 124:/usr/include/c++/4.8/bits/basic_string.h ****       typedef typename _CharT_alloc_type::const_reference   const_reference;
 125:/usr/include/c++/4.8/bits/basic_string.h ****       typedef typename _CharT_alloc_type::pointer	    pointer;
 126:/usr/include/c++/4.8/bits/basic_string.h ****       typedef typename _CharT_alloc_type::const_pointer	    const_pointer;
 127:/usr/include/c++/4.8/bits/basic_string.h ****       typedef __gnu_cxx::__normal_iterator<pointer, basic_string>  iterator;
 128:/usr/include/c++/4.8/bits/basic_string.h ****       typedef __gnu_cxx::__normal_iterator<const_pointer, basic_string>
 129:/usr/include/c++/4.8/bits/basic_string.h ****                                                             const_iterator;
 130:/usr/include/c++/4.8/bits/basic_string.h ****       typedef std::reverse_iterator<const_iterator>	const_reverse_iterator;
 131:/usr/include/c++/4.8/bits/basic_string.h ****       typedef std::reverse_iterator<iterator>		    reverse_iterator;
 132:/usr/include/c++/4.8/bits/basic_string.h **** 
 133:/usr/include/c++/4.8/bits/basic_string.h ****     private:
 134:/usr/include/c++/4.8/bits/basic_string.h ****       // _Rep: string representation
 135:/usr/include/c++/4.8/bits/basic_string.h ****       //   Invariants:
 136:/usr/include/c++/4.8/bits/basic_string.h ****       //   1. String really contains _M_length + 1 characters: due to 21.3.4
 137:/usr/include/c++/4.8/bits/basic_string.h ****       //      must be kept null-terminated.
 138:/usr/include/c++/4.8/bits/basic_string.h ****       //   2. _M_capacity >= _M_length
 139:/usr/include/c++/4.8/bits/basic_string.h ****       //      Allocated memory is always (_M_capacity + 1) * sizeof(_CharT).
 140:/usr/include/c++/4.8/bits/basic_string.h ****       //   3. _M_refcount has three states:
 141:/usr/include/c++/4.8/bits/basic_string.h ****       //      -1: leaked, one reference, no ref-copies allowed, non-const.
 142:/usr/include/c++/4.8/bits/basic_string.h ****       //       0: one reference, non-const.
 143:/usr/include/c++/4.8/bits/basic_string.h ****       //     n>0: n + 1 references, operations require a lock, const.
 144:/usr/include/c++/4.8/bits/basic_string.h ****       //   4. All fields==0 is an empty string, given the extra storage
 145:/usr/include/c++/4.8/bits/basic_string.h ****       //      beyond-the-end for a null terminator; thus, the shared
 146:/usr/include/c++/4.8/bits/basic_string.h ****       //      empty string representation needs no constructor.
 147:/usr/include/c++/4.8/bits/basic_string.h **** 
 148:/usr/include/c++/4.8/bits/basic_string.h ****       struct _Rep_base
 149:/usr/include/c++/4.8/bits/basic_string.h ****       {
 150:/usr/include/c++/4.8/bits/basic_string.h **** 	size_type		_M_length;
 151:/usr/include/c++/4.8/bits/basic_string.h **** 	size_type		_M_capacity;
 152:/usr/include/c++/4.8/bits/basic_string.h **** 	_Atomic_word		_M_refcount;
 153:/usr/include/c++/4.8/bits/basic_string.h ****       };
 154:/usr/include/c++/4.8/bits/basic_string.h **** 
 155:/usr/include/c++/4.8/bits/basic_string.h ****       struct _Rep : _Rep_base
 156:/usr/include/c++/4.8/bits/basic_string.h ****       {
 157:/usr/include/c++/4.8/bits/basic_string.h **** 	// Types:
 158:/usr/include/c++/4.8/bits/basic_string.h **** 	typedef typename _Alloc::template rebind<char>::other _Raw_bytes_alloc;
 159:/usr/include/c++/4.8/bits/basic_string.h **** 
 160:/usr/include/c++/4.8/bits/basic_string.h **** 	// (Public) Data members:
 161:/usr/include/c++/4.8/bits/basic_string.h **** 
 162:/usr/include/c++/4.8/bits/basic_string.h **** 	// The maximum number of individual char_type elements of an
 163:/usr/include/c++/4.8/bits/basic_string.h **** 	// individual string is determined by _S_max_size. This is the
 164:/usr/include/c++/4.8/bits/basic_string.h **** 	// value that will be returned by max_size().  (Whereas npos
 165:/usr/include/c++/4.8/bits/basic_string.h **** 	// is the maximum number of bytes the allocator can allocate.)
 166:/usr/include/c++/4.8/bits/basic_string.h **** 	// If one was to divvy up the theoretical largest size string,
 167:/usr/include/c++/4.8/bits/basic_string.h **** 	// with a terminating character and m _CharT elements, it'd
 168:/usr/include/c++/4.8/bits/basic_string.h **** 	// look like this:
 169:/usr/include/c++/4.8/bits/basic_string.h **** 	// npos = sizeof(_Rep) + (m * sizeof(_CharT)) + sizeof(_CharT)
 170:/usr/include/c++/4.8/bits/basic_string.h **** 	// Solving for m:
 171:/usr/include/c++/4.8/bits/basic_string.h **** 	// m = ((npos - sizeof(_Rep))/sizeof(CharT)) - 1
 172:/usr/include/c++/4.8/bits/basic_string.h **** 	// In addition, this implementation quarters this amount.
 173:/usr/include/c++/4.8/bits/basic_string.h **** 	static const size_type	_S_max_size;
 174:/usr/include/c++/4.8/bits/basic_string.h **** 	static const _CharT	_S_terminal;
 175:/usr/include/c++/4.8/bits/basic_string.h **** 
 176:/usr/include/c++/4.8/bits/basic_string.h **** 	// The following storage is init'd to 0 by the linker, resulting
 177:/usr/include/c++/4.8/bits/basic_string.h ****         // (carefully) in an empty string with one reference.
 178:/usr/include/c++/4.8/bits/basic_string.h ****         static size_type _S_empty_rep_storage[];
 179:/usr/include/c++/4.8/bits/basic_string.h **** 
 180:/usr/include/c++/4.8/bits/basic_string.h ****         static _Rep&
 181:/usr/include/c++/4.8/bits/basic_string.h ****         _S_empty_rep()
 182:/usr/include/c++/4.8/bits/basic_string.h ****         { 
 183:/usr/include/c++/4.8/bits/basic_string.h **** 	  // NB: Mild hack to avoid strict-aliasing warnings.  Note that
 184:/usr/include/c++/4.8/bits/basic_string.h **** 	  // _S_empty_rep_storage is never modified and the punning should
 185:/usr/include/c++/4.8/bits/basic_string.h **** 	  // be reasonably safe in this case.
 186:/usr/include/c++/4.8/bits/basic_string.h **** 	  void* __p = reinterpret_cast<void*>(&_S_empty_rep_storage);
 187:/usr/include/c++/4.8/bits/basic_string.h **** 	  return *reinterpret_cast<_Rep*>(__p);
 188:/usr/include/c++/4.8/bits/basic_string.h **** 	}
 189:/usr/include/c++/4.8/bits/basic_string.h **** 
 190:/usr/include/c++/4.8/bits/basic_string.h ****         bool
 191:/usr/include/c++/4.8/bits/basic_string.h **** 	_M_is_leaked() const
 192:/usr/include/c++/4.8/bits/basic_string.h ****         { return this->_M_refcount < 0; }
 193:/usr/include/c++/4.8/bits/basic_string.h **** 
 194:/usr/include/c++/4.8/bits/basic_string.h ****         bool
 195:/usr/include/c++/4.8/bits/basic_string.h **** 	_M_is_shared() const
 196:/usr/include/c++/4.8/bits/basic_string.h ****         { return this->_M_refcount > 0; }
 197:/usr/include/c++/4.8/bits/basic_string.h **** 
 198:/usr/include/c++/4.8/bits/basic_string.h ****         void
 199:/usr/include/c++/4.8/bits/basic_string.h **** 	_M_set_leaked()
 200:/usr/include/c++/4.8/bits/basic_string.h ****         { this->_M_refcount = -1; }
 201:/usr/include/c++/4.8/bits/basic_string.h **** 
 202:/usr/include/c++/4.8/bits/basic_string.h ****         void
 203:/usr/include/c++/4.8/bits/basic_string.h **** 	_M_set_sharable()
 204:/usr/include/c++/4.8/bits/basic_string.h ****         { this->_M_refcount = 0; }
 205:/usr/include/c++/4.8/bits/basic_string.h **** 
 206:/usr/include/c++/4.8/bits/basic_string.h **** 	void
 207:/usr/include/c++/4.8/bits/basic_string.h **** 	_M_set_length_and_sharable(size_type __n)
 208:/usr/include/c++/4.8/bits/basic_string.h **** 	{
 209:/usr/include/c++/4.8/bits/basic_string.h **** #if _GLIBCXX_FULLY_DYNAMIC_STRING == 0
 210:/usr/include/c++/4.8/bits/basic_string.h **** 	  if (__builtin_expect(this != &_S_empty_rep(), false))
 211:/usr/include/c++/4.8/bits/basic_string.h **** #endif
 212:/usr/include/c++/4.8/bits/basic_string.h **** 	    {
 213:/usr/include/c++/4.8/bits/basic_string.h **** 	      this->_M_set_sharable();  // One reference.
 214:/usr/include/c++/4.8/bits/basic_string.h **** 	      this->_M_length = __n;
 215:/usr/include/c++/4.8/bits/basic_string.h **** 	      traits_type::assign(this->_M_refdata()[__n], _S_terminal);
 216:/usr/include/c++/4.8/bits/basic_string.h **** 	      // grrr. (per 21.3.4)
 217:/usr/include/c++/4.8/bits/basic_string.h **** 	      // You cannot leave those LWG people alone for a second.
 218:/usr/include/c++/4.8/bits/basic_string.h **** 	    }
 219:/usr/include/c++/4.8/bits/basic_string.h **** 	}
 220:/usr/include/c++/4.8/bits/basic_string.h **** 
 221:/usr/include/c++/4.8/bits/basic_string.h **** 	_CharT*
 222:/usr/include/c++/4.8/bits/basic_string.h **** 	_M_refdata() throw()
 223:/usr/include/c++/4.8/bits/basic_string.h **** 	{ return reinterpret_cast<_CharT*>(this + 1); }
 224:/usr/include/c++/4.8/bits/basic_string.h **** 
 225:/usr/include/c++/4.8/bits/basic_string.h **** 	_CharT*
 226:/usr/include/c++/4.8/bits/basic_string.h **** 	_M_grab(const _Alloc& __alloc1, const _Alloc& __alloc2)
 227:/usr/include/c++/4.8/bits/basic_string.h **** 	{
 228:/usr/include/c++/4.8/bits/basic_string.h **** 	  return (!_M_is_leaked() && __alloc1 == __alloc2)
 229:/usr/include/c++/4.8/bits/basic_string.h **** 	          ? _M_refcopy() : _M_clone(__alloc1);
 230:/usr/include/c++/4.8/bits/basic_string.h **** 	}
 231:/usr/include/c++/4.8/bits/basic_string.h **** 
 232:/usr/include/c++/4.8/bits/basic_string.h **** 	// Create & Destroy
 233:/usr/include/c++/4.8/bits/basic_string.h **** 	static _Rep*
 234:/usr/include/c++/4.8/bits/basic_string.h **** 	_S_create(size_type, size_type, const _Alloc&);
 235:/usr/include/c++/4.8/bits/basic_string.h **** 
 236:/usr/include/c++/4.8/bits/basic_string.h **** 	void
 237:/usr/include/c++/4.8/bits/basic_string.h **** 	_M_dispose(const _Alloc& __a)
 238:/usr/include/c++/4.8/bits/basic_string.h **** 	{
 239:/usr/include/c++/4.8/bits/basic_string.h **** #if _GLIBCXX_FULLY_DYNAMIC_STRING == 0
 240:/usr/include/c++/4.8/bits/basic_string.h **** 	  if (__builtin_expect(this != &_S_empty_rep(), false))
 241:/usr/include/c++/4.8/bits/basic_string.h **** #endif
 242:/usr/include/c++/4.8/bits/basic_string.h **** 	    {
 243:/usr/include/c++/4.8/bits/basic_string.h **** 	      // Be race-detector-friendly.  For more info see bits/c++config.
 244:/usr/include/c++/4.8/bits/basic_string.h **** 	      _GLIBCXX_SYNCHRONIZATION_HAPPENS_BEFORE(&this->_M_refcount);
 245:/usr/include/c++/4.8/bits/basic_string.h **** 	      if (__gnu_cxx::__exchange_and_add_dispatch(&this->_M_refcount,
 246:/usr/include/c++/4.8/bits/basic_string.h **** 							 -1) <= 0)
 247:/usr/include/c++/4.8/bits/basic_string.h **** 		{
 248:/usr/include/c++/4.8/bits/basic_string.h **** 		  _GLIBCXX_SYNCHRONIZATION_HAPPENS_AFTER(&this->_M_refcount);
 249:/usr/include/c++/4.8/bits/basic_string.h **** 		  _M_destroy(__a);
 250:/usr/include/c++/4.8/bits/basic_string.h **** 		}
 251:/usr/include/c++/4.8/bits/basic_string.h **** 	    }
 252:/usr/include/c++/4.8/bits/basic_string.h **** 	}  // XXX MT
 253:/usr/include/c++/4.8/bits/basic_string.h **** 
 254:/usr/include/c++/4.8/bits/basic_string.h **** 	void
 255:/usr/include/c++/4.8/bits/basic_string.h **** 	_M_destroy(const _Alloc&) throw();
 256:/usr/include/c++/4.8/bits/basic_string.h **** 
 257:/usr/include/c++/4.8/bits/basic_string.h **** 	_CharT*
 258:/usr/include/c++/4.8/bits/basic_string.h **** 	_M_refcopy() throw()
 259:/usr/include/c++/4.8/bits/basic_string.h **** 	{
 260:/usr/include/c++/4.8/bits/basic_string.h **** #if _GLIBCXX_FULLY_DYNAMIC_STRING == 0
 261:/usr/include/c++/4.8/bits/basic_string.h **** 	  if (__builtin_expect(this != &_S_empty_rep(), false))
 262:/usr/include/c++/4.8/bits/basic_string.h **** #endif
 263:/usr/include/c++/4.8/bits/basic_string.h ****             __gnu_cxx::__atomic_add_dispatch(&this->_M_refcount, 1);
 264:/usr/include/c++/4.8/bits/basic_string.h **** 	  return _M_refdata();
 265:/usr/include/c++/4.8/bits/basic_string.h **** 	}  // XXX MT
 266:/usr/include/c++/4.8/bits/basic_string.h **** 
 267:/usr/include/c++/4.8/bits/basic_string.h **** 	_CharT*
 268:/usr/include/c++/4.8/bits/basic_string.h **** 	_M_clone(const _Alloc&, size_type __res = 0);
 269:/usr/include/c++/4.8/bits/basic_string.h ****       };
 270:/usr/include/c++/4.8/bits/basic_string.h **** 
 271:/usr/include/c++/4.8/bits/basic_string.h ****       // Use empty-base optimization: http://www.cantrip.org/emptyopt.html
 272:/usr/include/c++/4.8/bits/basic_string.h ****       struct _Alloc_hider : _Alloc
 273:/usr/include/c++/4.8/bits/basic_string.h ****       {
 274:/usr/include/c++/4.8/bits/basic_string.h **** 	_Alloc_hider(_CharT* __dat, const _Alloc& __a)
 275:/usr/include/c++/4.8/bits/basic_string.h **** 	: _Alloc(__a), _M_p(__dat) { }
 276:/usr/include/c++/4.8/bits/basic_string.h **** 
 277:/usr/include/c++/4.8/bits/basic_string.h **** 	_CharT* _M_p; // The actual data.
 278:/usr/include/c++/4.8/bits/basic_string.h ****       };
 279:/usr/include/c++/4.8/bits/basic_string.h **** 
 280:/usr/include/c++/4.8/bits/basic_string.h ****     public:
 281:/usr/include/c++/4.8/bits/basic_string.h ****       // Data Members (public):
 282:/usr/include/c++/4.8/bits/basic_string.h ****       // NB: This is an unsigned type, and thus represents the maximum
 283:/usr/include/c++/4.8/bits/basic_string.h ****       // size that the allocator can hold.
 284:/usr/include/c++/4.8/bits/basic_string.h ****       ///  Value returned by various member functions when they fail.
 285:/usr/include/c++/4.8/bits/basic_string.h ****       static const size_type	npos = static_cast<size_type>(-1);
 286:/usr/include/c++/4.8/bits/basic_string.h **** 
 287:/usr/include/c++/4.8/bits/basic_string.h ****     private:
 288:/usr/include/c++/4.8/bits/basic_string.h ****       // Data Members (private):
 289:/usr/include/c++/4.8/bits/basic_string.h ****       mutable _Alloc_hider	_M_dataplus;
 290:/usr/include/c++/4.8/bits/basic_string.h **** 
 291:/usr/include/c++/4.8/bits/basic_string.h ****       _CharT*
 292:/usr/include/c++/4.8/bits/basic_string.h ****       _M_data() const
 293:/usr/include/c++/4.8/bits/basic_string.h ****       { return  _M_dataplus._M_p; }
 294:/usr/include/c++/4.8/bits/basic_string.h **** 
 295:/usr/include/c++/4.8/bits/basic_string.h ****       _CharT*
 296:/usr/include/c++/4.8/bits/basic_string.h ****       _M_data(_CharT* __p)
 297:/usr/include/c++/4.8/bits/basic_string.h ****       { return (_M_dataplus._M_p = __p); }
 298:/usr/include/c++/4.8/bits/basic_string.h **** 
 299:/usr/include/c++/4.8/bits/basic_string.h ****       _Rep*
 300:/usr/include/c++/4.8/bits/basic_string.h ****       _M_rep() const
 301:/usr/include/c++/4.8/bits/basic_string.h ****       { return &((reinterpret_cast<_Rep*> (_M_data()))[-1]); }
 302:/usr/include/c++/4.8/bits/basic_string.h **** 
 303:/usr/include/c++/4.8/bits/basic_string.h ****       // For the internal use we have functions similar to `begin'/`end'
 304:/usr/include/c++/4.8/bits/basic_string.h ****       // but they do not call _M_leak.
 305:/usr/include/c++/4.8/bits/basic_string.h ****       iterator
 306:/usr/include/c++/4.8/bits/basic_string.h ****       _M_ibegin() const
 307:/usr/include/c++/4.8/bits/basic_string.h ****       { return iterator(_M_data()); }
 308:/usr/include/c++/4.8/bits/basic_string.h **** 
 309:/usr/include/c++/4.8/bits/basic_string.h ****       iterator
 310:/usr/include/c++/4.8/bits/basic_string.h ****       _M_iend() const
 311:/usr/include/c++/4.8/bits/basic_string.h ****       { return iterator(_M_data() + this->size()); }
 312:/usr/include/c++/4.8/bits/basic_string.h **** 
 313:/usr/include/c++/4.8/bits/basic_string.h ****       void
 314:/usr/include/c++/4.8/bits/basic_string.h ****       _M_leak()    // for use in begin() & non-const op[]
 315:/usr/include/c++/4.8/bits/basic_string.h ****       {
 316:/usr/include/c++/4.8/bits/basic_string.h **** 	if (!_M_rep()->_M_is_leaked())
 317:/usr/include/c++/4.8/bits/basic_string.h **** 	  _M_leak_hard();
 318:/usr/include/c++/4.8/bits/basic_string.h ****       }
 319:/usr/include/c++/4.8/bits/basic_string.h **** 
 320:/usr/include/c++/4.8/bits/basic_string.h ****       size_type
 321:/usr/include/c++/4.8/bits/basic_string.h ****       _M_check(size_type __pos, const char* __s) const
 322:/usr/include/c++/4.8/bits/basic_string.h ****       {
 323:/usr/include/c++/4.8/bits/basic_string.h **** 	if (__pos > this->size())
 324:/usr/include/c++/4.8/bits/basic_string.h **** 	  __throw_out_of_range(__N(__s));
 325:/usr/include/c++/4.8/bits/basic_string.h **** 	return __pos;
 326:/usr/include/c++/4.8/bits/basic_string.h ****       }
 327:/usr/include/c++/4.8/bits/basic_string.h **** 
 328:/usr/include/c++/4.8/bits/basic_string.h ****       void
 329:/usr/include/c++/4.8/bits/basic_string.h ****       _M_check_length(size_type __n1, size_type __n2, const char* __s) const
 330:/usr/include/c++/4.8/bits/basic_string.h ****       {
 331:/usr/include/c++/4.8/bits/basic_string.h **** 	if (this->max_size() - (this->size() - __n1) < __n2)
 332:/usr/include/c++/4.8/bits/basic_string.h **** 	  __throw_length_error(__N(__s));
 333:/usr/include/c++/4.8/bits/basic_string.h ****       }
 334:/usr/include/c++/4.8/bits/basic_string.h **** 
 335:/usr/include/c++/4.8/bits/basic_string.h ****       // NB: _M_limit doesn't check for a bad __pos value.
 336:/usr/include/c++/4.8/bits/basic_string.h ****       size_type
 337:/usr/include/c++/4.8/bits/basic_string.h ****       _M_limit(size_type __pos, size_type __off) const
 338:/usr/include/c++/4.8/bits/basic_string.h ****       {
 339:/usr/include/c++/4.8/bits/basic_string.h **** 	const bool __testoff =  __off < this->size() - __pos;
 340:/usr/include/c++/4.8/bits/basic_string.h **** 	return __testoff ? __off : this->size() - __pos;
 341:/usr/include/c++/4.8/bits/basic_string.h ****       }
 342:/usr/include/c++/4.8/bits/basic_string.h **** 
 343:/usr/include/c++/4.8/bits/basic_string.h ****       // True if _Rep and source do not overlap.
 344:/usr/include/c++/4.8/bits/basic_string.h ****       bool
 345:/usr/include/c++/4.8/bits/basic_string.h ****       _M_disjunct(const _CharT* __s) const
 346:/usr/include/c++/4.8/bits/basic_string.h ****       {
 347:/usr/include/c++/4.8/bits/basic_string.h **** 	return (less<const _CharT*>()(__s, _M_data())
 348:/usr/include/c++/4.8/bits/basic_string.h **** 		|| less<const _CharT*>()(_M_data() + this->size(), __s));
 349:/usr/include/c++/4.8/bits/basic_string.h ****       }
 350:/usr/include/c++/4.8/bits/basic_string.h **** 
 351:/usr/include/c++/4.8/bits/basic_string.h ****       // When __n = 1 way faster than the general multichar
 352:/usr/include/c++/4.8/bits/basic_string.h ****       // traits_type::copy/move/assign.
 353:/usr/include/c++/4.8/bits/basic_string.h ****       static void
 354:/usr/include/c++/4.8/bits/basic_string.h ****       _M_copy(_CharT* __d, const _CharT* __s, size_type __n)
 355:/usr/include/c++/4.8/bits/basic_string.h ****       {
 356:/usr/include/c++/4.8/bits/basic_string.h **** 	if (__n == 1)
 357:/usr/include/c++/4.8/bits/basic_string.h **** 	  traits_type::assign(*__d, *__s);
 358:/usr/include/c++/4.8/bits/basic_string.h **** 	else
 359:/usr/include/c++/4.8/bits/basic_string.h **** 	  traits_type::copy(__d, __s, __n);
 360:/usr/include/c++/4.8/bits/basic_string.h ****       }
 361:/usr/include/c++/4.8/bits/basic_string.h **** 
 362:/usr/include/c++/4.8/bits/basic_string.h ****       static void
 363:/usr/include/c++/4.8/bits/basic_string.h ****       _M_move(_CharT* __d, const _CharT* __s, size_type __n)
 364:/usr/include/c++/4.8/bits/basic_string.h ****       {
 365:/usr/include/c++/4.8/bits/basic_string.h **** 	if (__n == 1)
 366:/usr/include/c++/4.8/bits/basic_string.h **** 	  traits_type::assign(*__d, *__s);
 367:/usr/include/c++/4.8/bits/basic_string.h **** 	else
 368:/usr/include/c++/4.8/bits/basic_string.h **** 	  traits_type::move(__d, __s, __n);	  
 369:/usr/include/c++/4.8/bits/basic_string.h ****       }
 370:/usr/include/c++/4.8/bits/basic_string.h **** 
 371:/usr/include/c++/4.8/bits/basic_string.h ****       static void
 372:/usr/include/c++/4.8/bits/basic_string.h ****       _M_assign(_CharT* __d, size_type __n, _CharT __c)
 373:/usr/include/c++/4.8/bits/basic_string.h ****       {
 374:/usr/include/c++/4.8/bits/basic_string.h **** 	if (__n == 1)
 375:/usr/include/c++/4.8/bits/basic_string.h **** 	  traits_type::assign(*__d, __c);
 376:/usr/include/c++/4.8/bits/basic_string.h **** 	else
 377:/usr/include/c++/4.8/bits/basic_string.h **** 	  traits_type::assign(__d, __n, __c);	  
 378:/usr/include/c++/4.8/bits/basic_string.h ****       }
 379:/usr/include/c++/4.8/bits/basic_string.h **** 
 380:/usr/include/c++/4.8/bits/basic_string.h ****       // _S_copy_chars is a separate template to permit specialization
 381:/usr/include/c++/4.8/bits/basic_string.h ****       // to optimize for the common case of pointers as iterators.
 382:/usr/include/c++/4.8/bits/basic_string.h ****       template<class _Iterator>
 383:/usr/include/c++/4.8/bits/basic_string.h ****         static void
 384:/usr/include/c++/4.8/bits/basic_string.h ****         _S_copy_chars(_CharT* __p, _Iterator __k1, _Iterator __k2)
 385:/usr/include/c++/4.8/bits/basic_string.h ****         {
 386:/usr/include/c++/4.8/bits/basic_string.h **** 	  for (; __k1 != __k2; ++__k1, ++__p)
 387:/usr/include/c++/4.8/bits/basic_string.h **** 	    traits_type::assign(*__p, *__k1); // These types are off.
 388:/usr/include/c++/4.8/bits/basic_string.h **** 	}
 389:/usr/include/c++/4.8/bits/basic_string.h **** 
 390:/usr/include/c++/4.8/bits/basic_string.h ****       static void
 391:/usr/include/c++/4.8/bits/basic_string.h ****       _S_copy_chars(_CharT* __p, iterator __k1, iterator __k2)
 392:/usr/include/c++/4.8/bits/basic_string.h ****       { _S_copy_chars(__p, __k1.base(), __k2.base()); }
 393:/usr/include/c++/4.8/bits/basic_string.h **** 
 394:/usr/include/c++/4.8/bits/basic_string.h ****       static void
 395:/usr/include/c++/4.8/bits/basic_string.h ****       _S_copy_chars(_CharT* __p, const_iterator __k1, const_iterator __k2)
 396:/usr/include/c++/4.8/bits/basic_string.h ****       { _S_copy_chars(__p, __k1.base(), __k2.base()); }
 397:/usr/include/c++/4.8/bits/basic_string.h **** 
 398:/usr/include/c++/4.8/bits/basic_string.h ****       static void
 399:/usr/include/c++/4.8/bits/basic_string.h ****       _S_copy_chars(_CharT* __p, _CharT* __k1, _CharT* __k2)
 400:/usr/include/c++/4.8/bits/basic_string.h ****       { _M_copy(__p, __k1, __k2 - __k1); }
 401:/usr/include/c++/4.8/bits/basic_string.h **** 
 402:/usr/include/c++/4.8/bits/basic_string.h ****       static void
 403:/usr/include/c++/4.8/bits/basic_string.h ****       _S_copy_chars(_CharT* __p, const _CharT* __k1, const _CharT* __k2)
 404:/usr/include/c++/4.8/bits/basic_string.h ****       { _M_copy(__p, __k1, __k2 - __k1); }
 405:/usr/include/c++/4.8/bits/basic_string.h **** 
 406:/usr/include/c++/4.8/bits/basic_string.h ****       static int
 407:/usr/include/c++/4.8/bits/basic_string.h ****       _S_compare(size_type __n1, size_type __n2)
 408:/usr/include/c++/4.8/bits/basic_string.h ****       {
 409:/usr/include/c++/4.8/bits/basic_string.h **** 	const difference_type __d = difference_type(__n1 - __n2);
 410:/usr/include/c++/4.8/bits/basic_string.h **** 
 411:/usr/include/c++/4.8/bits/basic_string.h **** 	if (__d > __gnu_cxx::__numeric_traits<int>::__max)
 412:/usr/include/c++/4.8/bits/basic_string.h **** 	  return __gnu_cxx::__numeric_traits<int>::__max;
 413:/usr/include/c++/4.8/bits/basic_string.h **** 	else if (__d < __gnu_cxx::__numeric_traits<int>::__min)
 414:/usr/include/c++/4.8/bits/basic_string.h **** 	  return __gnu_cxx::__numeric_traits<int>::__min;
 415:/usr/include/c++/4.8/bits/basic_string.h **** 	else
 416:/usr/include/c++/4.8/bits/basic_string.h **** 	  return int(__d);
 417:/usr/include/c++/4.8/bits/basic_string.h ****       }
 418:/usr/include/c++/4.8/bits/basic_string.h **** 
 419:/usr/include/c++/4.8/bits/basic_string.h ****       void
 420:/usr/include/c++/4.8/bits/basic_string.h ****       _M_mutate(size_type __pos, size_type __len1, size_type __len2);
 421:/usr/include/c++/4.8/bits/basic_string.h **** 
 422:/usr/include/c++/4.8/bits/basic_string.h ****       void
 423:/usr/include/c++/4.8/bits/basic_string.h ****       _M_leak_hard();
 424:/usr/include/c++/4.8/bits/basic_string.h **** 
 425:/usr/include/c++/4.8/bits/basic_string.h ****       static _Rep&
 426:/usr/include/c++/4.8/bits/basic_string.h ****       _S_empty_rep()
 427:/usr/include/c++/4.8/bits/basic_string.h ****       { return _Rep::_S_empty_rep(); }
 428:/usr/include/c++/4.8/bits/basic_string.h **** 
 429:/usr/include/c++/4.8/bits/basic_string.h ****     public:
 430:/usr/include/c++/4.8/bits/basic_string.h ****       // Construct/copy/destroy:
 431:/usr/include/c++/4.8/bits/basic_string.h ****       // NB: We overload ctors in some cases instead of using default
 432:/usr/include/c++/4.8/bits/basic_string.h ****       // arguments, per 17.4.4.4 para. 2 item 2.
 433:/usr/include/c++/4.8/bits/basic_string.h **** 
 434:/usr/include/c++/4.8/bits/basic_string.h ****       /**
 435:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Default constructor creates an empty string.
 436:/usr/include/c++/4.8/bits/basic_string.h ****        */
 437:/usr/include/c++/4.8/bits/basic_string.h ****       basic_string()
 438:/usr/include/c++/4.8/bits/basic_string.h **** #if _GLIBCXX_FULLY_DYNAMIC_STRING == 0
 439:/usr/include/c++/4.8/bits/basic_string.h ****       : _M_dataplus(_S_empty_rep()._M_refdata(), _Alloc()) { }
 440:/usr/include/c++/4.8/bits/basic_string.h **** #else
 441:/usr/include/c++/4.8/bits/basic_string.h ****       : _M_dataplus(_S_construct(size_type(), _CharT(), _Alloc()), _Alloc()){ }
 442:/usr/include/c++/4.8/bits/basic_string.h **** #endif
 443:/usr/include/c++/4.8/bits/basic_string.h **** 
 444:/usr/include/c++/4.8/bits/basic_string.h ****       /**
 445:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Construct an empty string using allocator @a a.
 446:/usr/include/c++/4.8/bits/basic_string.h ****        */
 447:/usr/include/c++/4.8/bits/basic_string.h ****       explicit
 448:/usr/include/c++/4.8/bits/basic_string.h ****       basic_string(const _Alloc& __a);
 449:/usr/include/c++/4.8/bits/basic_string.h **** 
 450:/usr/include/c++/4.8/bits/basic_string.h ****       // NB: per LWG issue 42, semantics different from IS:
 451:/usr/include/c++/4.8/bits/basic_string.h ****       /**
 452:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Construct string with copy of value of @a str.
 453:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param  __str  Source string.
 454:/usr/include/c++/4.8/bits/basic_string.h ****        */
 455:/usr/include/c++/4.8/bits/basic_string.h ****       basic_string(const basic_string& __str);
 456:/usr/include/c++/4.8/bits/basic_string.h ****       /**
 457:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Construct string as copy of a substring.
 458:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param  __str  Source string.
 459:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param  __pos  Index of first character to copy from.
 460:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param  __n  Number of characters to copy (default remainder).
 461:/usr/include/c++/4.8/bits/basic_string.h ****        */
 462:/usr/include/c++/4.8/bits/basic_string.h ****       basic_string(const basic_string& __str, size_type __pos,
 463:/usr/include/c++/4.8/bits/basic_string.h **** 		   size_type __n = npos);
 464:/usr/include/c++/4.8/bits/basic_string.h ****       /**
 465:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Construct string as copy of a substring.
 466:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param  __str  Source string.
 467:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param  __pos  Index of first character to copy from.
 468:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param  __n  Number of characters to copy.
 469:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param  __a  Allocator to use.
 470:/usr/include/c++/4.8/bits/basic_string.h ****        */
 471:/usr/include/c++/4.8/bits/basic_string.h ****       basic_string(const basic_string& __str, size_type __pos,
 472:/usr/include/c++/4.8/bits/basic_string.h **** 		   size_type __n, const _Alloc& __a);
 473:/usr/include/c++/4.8/bits/basic_string.h **** 
 474:/usr/include/c++/4.8/bits/basic_string.h ****       /**
 475:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Construct string initialized by a character %array.
 476:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param  __s  Source character %array.
 477:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param  __n  Number of characters to copy.
 478:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
 479:/usr/include/c++/4.8/bits/basic_string.h ****        *
 480:/usr/include/c++/4.8/bits/basic_string.h ****        *  NB: @a __s must have at least @a __n characters, &apos;\\0&apos;
 481:/usr/include/c++/4.8/bits/basic_string.h ****        *  has no special meaning.
 482:/usr/include/c++/4.8/bits/basic_string.h ****        */
 483:/usr/include/c++/4.8/bits/basic_string.h ****       basic_string(const _CharT* __s, size_type __n,
 484:/usr/include/c++/4.8/bits/basic_string.h **** 		   const _Alloc& __a = _Alloc());
 485:/usr/include/c++/4.8/bits/basic_string.h ****       /**
 486:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Construct string as copy of a C string.
 487:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param  __s  Source C string.
 488:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
 489:/usr/include/c++/4.8/bits/basic_string.h ****        */
 490:/usr/include/c++/4.8/bits/basic_string.h ****       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc());
 491:/usr/include/c++/4.8/bits/basic_string.h ****       /**
 492:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Construct string as multiple characters.
 493:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param  __n  Number of characters.
 494:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param  __c  Character to use.
 495:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
 496:/usr/include/c++/4.8/bits/basic_string.h ****        */
 497:/usr/include/c++/4.8/bits/basic_string.h ****       basic_string(size_type __n, _CharT __c, const _Alloc& __a = _Alloc());
 498:/usr/include/c++/4.8/bits/basic_string.h **** 
 499:/usr/include/c++/4.8/bits/basic_string.h **** #if __cplusplus >= 201103L
 500:/usr/include/c++/4.8/bits/basic_string.h ****       /**
 501:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Move construct string.
 502:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param  __str  Source string.
 503:/usr/include/c++/4.8/bits/basic_string.h ****        *
 504:/usr/include/c++/4.8/bits/basic_string.h ****        *  The newly-created string contains the exact contents of @a __str.
 505:/usr/include/c++/4.8/bits/basic_string.h ****        *  @a __str is a valid, but unspecified string.
 506:/usr/include/c++/4.8/bits/basic_string.h ****        **/
 507:/usr/include/c++/4.8/bits/basic_string.h ****       basic_string(basic_string&& __str) noexcept
 508:/usr/include/c++/4.8/bits/basic_string.h ****       : _M_dataplus(__str._M_dataplus)
 509:/usr/include/c++/4.8/bits/basic_string.h ****       {
 510:/usr/include/c++/4.8/bits/basic_string.h **** #if _GLIBCXX_FULLY_DYNAMIC_STRING == 0
 511:/usr/include/c++/4.8/bits/basic_string.h **** 	__str._M_data(_S_empty_rep()._M_refdata());
 512:/usr/include/c++/4.8/bits/basic_string.h **** #else
 513:/usr/include/c++/4.8/bits/basic_string.h **** 	__str._M_data(_S_construct(size_type(), _CharT(), get_allocator()));
 514:/usr/include/c++/4.8/bits/basic_string.h **** #endif
 515:/usr/include/c++/4.8/bits/basic_string.h ****       }
 516:/usr/include/c++/4.8/bits/basic_string.h **** 
 517:/usr/include/c++/4.8/bits/basic_string.h ****       /**
 518:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Construct string from an initializer %list.
 519:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param  __l  std::initializer_list of characters.
 520:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
 521:/usr/include/c++/4.8/bits/basic_string.h ****        */
 522:/usr/include/c++/4.8/bits/basic_string.h ****       basic_string(initializer_list<_CharT> __l, const _Alloc& __a = _Alloc());
 523:/usr/include/c++/4.8/bits/basic_string.h **** #endif // C++11
 524:/usr/include/c++/4.8/bits/basic_string.h **** 
 525:/usr/include/c++/4.8/bits/basic_string.h ****       /**
 526:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Construct string as copy of a range.
 527:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param  __beg  Start of range.
 528:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param  __end  End of range.
 529:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
 530:/usr/include/c++/4.8/bits/basic_string.h ****        */
 531:/usr/include/c++/4.8/bits/basic_string.h ****       template<class _InputIterator>
 532:/usr/include/c++/4.8/bits/basic_string.h ****         basic_string(_InputIterator __beg, _InputIterator __end,
 533:/usr/include/c++/4.8/bits/basic_string.h **** 		     const _Alloc& __a = _Alloc());
 534:/usr/include/c++/4.8/bits/basic_string.h **** 
 535:/usr/include/c++/4.8/bits/basic_string.h ****       /**
 536:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Destroy the string instance.
 537:/usr/include/c++/4.8/bits/basic_string.h ****        */
 538:/usr/include/c++/4.8/bits/basic_string.h ****       ~basic_string() _GLIBCXX_NOEXCEPT
 539:/usr/include/c++/4.8/bits/basic_string.h ****       { _M_rep()->_M_dispose(this->get_allocator()); }
 540:/usr/include/c++/4.8/bits/basic_string.h **** 
 541:/usr/include/c++/4.8/bits/basic_string.h ****       /**
 542:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Assign the value of @a str to this string.
 543:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param  __str  Source string.
 544:/usr/include/c++/4.8/bits/basic_string.h ****        */
 545:/usr/include/c++/4.8/bits/basic_string.h ****       basic_string&
 546:/usr/include/c++/4.8/bits/basic_string.h ****       operator=(const basic_string& __str) 
 547:/usr/include/c++/4.8/bits/basic_string.h ****       { return this->assign(__str); }
 548:/usr/include/c++/4.8/bits/basic_string.h **** 
 549:/usr/include/c++/4.8/bits/basic_string.h ****       /**
 550:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Copy contents of @a s into this string.
 551:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param  __s  Source null-terminated string.
 552:/usr/include/c++/4.8/bits/basic_string.h ****        */
 553:/usr/include/c++/4.8/bits/basic_string.h ****       basic_string&
 554:/usr/include/c++/4.8/bits/basic_string.h ****       operator=(const _CharT* __s) 
 555:/usr/include/c++/4.8/bits/basic_string.h ****       { return this->assign(__s); }
 556:/usr/include/c++/4.8/bits/basic_string.h **** 
 557:/usr/include/c++/4.8/bits/basic_string.h ****       /**
 558:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Set value to string of length 1.
 559:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param  __c  Source character.
 560:/usr/include/c++/4.8/bits/basic_string.h ****        *
 561:/usr/include/c++/4.8/bits/basic_string.h ****        *  Assigning to a character makes this string length 1 and
 562:/usr/include/c++/4.8/bits/basic_string.h ****        *  (*this)[0] == @a c.
 563:/usr/include/c++/4.8/bits/basic_string.h ****        */
 564:/usr/include/c++/4.8/bits/basic_string.h ****       basic_string&
 565:/usr/include/c++/4.8/bits/basic_string.h ****       operator=(_CharT __c) 
 566:/usr/include/c++/4.8/bits/basic_string.h ****       { 
 567:/usr/include/c++/4.8/bits/basic_string.h **** 	this->assign(1, __c); 
 568:/usr/include/c++/4.8/bits/basic_string.h **** 	return *this;
 569:/usr/include/c++/4.8/bits/basic_string.h ****       }
 570:/usr/include/c++/4.8/bits/basic_string.h **** 
 571:/usr/include/c++/4.8/bits/basic_string.h **** #if __cplusplus >= 201103L
 572:/usr/include/c++/4.8/bits/basic_string.h ****       /**
 573:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Move assign the value of @a str to this string.
 574:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param  __str  Source string.
 575:/usr/include/c++/4.8/bits/basic_string.h ****        *
 576:/usr/include/c++/4.8/bits/basic_string.h ****        *  The contents of @a str are moved into this string (without copying).
 577:/usr/include/c++/4.8/bits/basic_string.h ****        *  @a str is a valid, but unspecified string.
 578:/usr/include/c++/4.8/bits/basic_string.h ****        **/
 579:/usr/include/c++/4.8/bits/basic_string.h ****       basic_string&
 580:/usr/include/c++/4.8/bits/basic_string.h ****       operator=(basic_string&& __str)
 581:/usr/include/c++/4.8/bits/basic_string.h ****       {
 582:/usr/include/c++/4.8/bits/basic_string.h **** 	// NB: DR 1204.
 583:/usr/include/c++/4.8/bits/basic_string.h **** 	this->swap(__str);
 584:/usr/include/c++/4.8/bits/basic_string.h **** 	return *this;
 585:/usr/include/c++/4.8/bits/basic_string.h ****       }
 586:/usr/include/c++/4.8/bits/basic_string.h **** 
 587:/usr/include/c++/4.8/bits/basic_string.h ****       /**
 588:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Set value to string constructed from initializer %list.
 589:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param  __l  std::initializer_list.
 590:/usr/include/c++/4.8/bits/basic_string.h ****        */
 591:/usr/include/c++/4.8/bits/basic_string.h ****       basic_string&
 592:/usr/include/c++/4.8/bits/basic_string.h ****       operator=(initializer_list<_CharT> __l)
 593:/usr/include/c++/4.8/bits/basic_string.h ****       {
 594:/usr/include/c++/4.8/bits/basic_string.h **** 	this->assign(__l.begin(), __l.size());
 595:/usr/include/c++/4.8/bits/basic_string.h **** 	return *this;
 596:/usr/include/c++/4.8/bits/basic_string.h ****       }
 597:/usr/include/c++/4.8/bits/basic_string.h **** #endif // C++11
 598:/usr/include/c++/4.8/bits/basic_string.h **** 
 599:/usr/include/c++/4.8/bits/basic_string.h ****       // Iterators:
 600:/usr/include/c++/4.8/bits/basic_string.h ****       /**
 601:/usr/include/c++/4.8/bits/basic_string.h ****        *  Returns a read/write iterator that points to the first character in
 602:/usr/include/c++/4.8/bits/basic_string.h ****        *  the %string.  Unshares the string.
 603:/usr/include/c++/4.8/bits/basic_string.h ****        */
 604:/usr/include/c++/4.8/bits/basic_string.h ****       iterator
 605:/usr/include/c++/4.8/bits/basic_string.h ****       begin() _GLIBCXX_NOEXCEPT
 606:/usr/include/c++/4.8/bits/basic_string.h ****       {
 607:/usr/include/c++/4.8/bits/basic_string.h **** 	_M_leak();
 608:/usr/include/c++/4.8/bits/basic_string.h **** 	return iterator(_M_data());
 609:/usr/include/c++/4.8/bits/basic_string.h ****       }
 610:/usr/include/c++/4.8/bits/basic_string.h **** 
 611:/usr/include/c++/4.8/bits/basic_string.h ****       /**
 612:/usr/include/c++/4.8/bits/basic_string.h ****        *  Returns a read-only (constant) iterator that points to the first
 613:/usr/include/c++/4.8/bits/basic_string.h ****        *  character in the %string.
 614:/usr/include/c++/4.8/bits/basic_string.h ****        */
 615:/usr/include/c++/4.8/bits/basic_string.h ****       const_iterator
 616:/usr/include/c++/4.8/bits/basic_string.h ****       begin() const _GLIBCXX_NOEXCEPT
 617:/usr/include/c++/4.8/bits/basic_string.h ****       { return const_iterator(_M_data()); }
 618:/usr/include/c++/4.8/bits/basic_string.h **** 
 619:/usr/include/c++/4.8/bits/basic_string.h ****       /**
 620:/usr/include/c++/4.8/bits/basic_string.h ****        *  Returns a read/write iterator that points one past the last
 621:/usr/include/c++/4.8/bits/basic_string.h ****        *  character in the %string.  Unshares the string.
 622:/usr/include/c++/4.8/bits/basic_string.h ****        */
 623:/usr/include/c++/4.8/bits/basic_string.h ****       iterator
 624:/usr/include/c++/4.8/bits/basic_string.h ****       end() _GLIBCXX_NOEXCEPT
 625:/usr/include/c++/4.8/bits/basic_string.h ****       {
 626:/usr/include/c++/4.8/bits/basic_string.h **** 	_M_leak();
 627:/usr/include/c++/4.8/bits/basic_string.h **** 	return iterator(_M_data() + this->size());
 628:/usr/include/c++/4.8/bits/basic_string.h ****       }
 629:/usr/include/c++/4.8/bits/basic_string.h **** 
 630:/usr/include/c++/4.8/bits/basic_string.h ****       /**
 631:/usr/include/c++/4.8/bits/basic_string.h ****        *  Returns a read-only (constant) iterator that points one past the
 632:/usr/include/c++/4.8/bits/basic_string.h ****        *  last character in the %string.
 633:/usr/include/c++/4.8/bits/basic_string.h ****        */
 634:/usr/include/c++/4.8/bits/basic_string.h ****       const_iterator
 635:/usr/include/c++/4.8/bits/basic_string.h ****       end() const _GLIBCXX_NOEXCEPT
 636:/usr/include/c++/4.8/bits/basic_string.h ****       { return const_iterator(_M_data() + this->size()); }
 637:/usr/include/c++/4.8/bits/basic_string.h **** 
 638:/usr/include/c++/4.8/bits/basic_string.h ****       /**
 639:/usr/include/c++/4.8/bits/basic_string.h ****        *  Returns a read/write reverse iterator that points to the last
 640:/usr/include/c++/4.8/bits/basic_string.h ****        *  character in the %string.  Iteration is done in reverse element
 641:/usr/include/c++/4.8/bits/basic_string.h ****        *  order.  Unshares the string.
 642:/usr/include/c++/4.8/bits/basic_string.h ****        */
 643:/usr/include/c++/4.8/bits/basic_string.h ****       reverse_iterator
 644:/usr/include/c++/4.8/bits/basic_string.h ****       rbegin() _GLIBCXX_NOEXCEPT
 645:/usr/include/c++/4.8/bits/basic_string.h ****       { return reverse_iterator(this->end()); }
 646:/usr/include/c++/4.8/bits/basic_string.h **** 
 647:/usr/include/c++/4.8/bits/basic_string.h ****       /**
 648:/usr/include/c++/4.8/bits/basic_string.h ****        *  Returns a read-only (constant) reverse iterator that points
 649:/usr/include/c++/4.8/bits/basic_string.h ****        *  to the last character in the %string.  Iteration is done in
 650:/usr/include/c++/4.8/bits/basic_string.h ****        *  reverse element order.
 651:/usr/include/c++/4.8/bits/basic_string.h ****        */
 652:/usr/include/c++/4.8/bits/basic_string.h ****       const_reverse_iterator
 653:/usr/include/c++/4.8/bits/basic_string.h ****       rbegin() const _GLIBCXX_NOEXCEPT
 654:/usr/include/c++/4.8/bits/basic_string.h ****       { return const_reverse_iterator(this->end()); }
 655:/usr/include/c++/4.8/bits/basic_string.h **** 
 656:/usr/include/c++/4.8/bits/basic_string.h ****       /**
 657:/usr/include/c++/4.8/bits/basic_string.h ****        *  Returns a read/write reverse iterator that points to one before the
 658:/usr/include/c++/4.8/bits/basic_string.h ****        *  first character in the %string.  Iteration is done in reverse
 659:/usr/include/c++/4.8/bits/basic_string.h ****        *  element order.  Unshares the string.
 660:/usr/include/c++/4.8/bits/basic_string.h ****        */
 661:/usr/include/c++/4.8/bits/basic_string.h ****       reverse_iterator
 662:/usr/include/c++/4.8/bits/basic_string.h ****       rend() _GLIBCXX_NOEXCEPT
 663:/usr/include/c++/4.8/bits/basic_string.h ****       { return reverse_iterator(this->begin()); }
 664:/usr/include/c++/4.8/bits/basic_string.h **** 
 665:/usr/include/c++/4.8/bits/basic_string.h ****       /**
 666:/usr/include/c++/4.8/bits/basic_string.h ****        *  Returns a read-only (constant) reverse iterator that points
 667:/usr/include/c++/4.8/bits/basic_string.h ****        *  to one before the first character in the %string.  Iteration
 668:/usr/include/c++/4.8/bits/basic_string.h ****        *  is done in reverse element order.
 669:/usr/include/c++/4.8/bits/basic_string.h ****        */
 670:/usr/include/c++/4.8/bits/basic_string.h ****       const_reverse_iterator
 671:/usr/include/c++/4.8/bits/basic_string.h ****       rend() const _GLIBCXX_NOEXCEPT
 672:/usr/include/c++/4.8/bits/basic_string.h ****       { return const_reverse_iterator(this->begin()); }
 673:/usr/include/c++/4.8/bits/basic_string.h **** 
 674:/usr/include/c++/4.8/bits/basic_string.h **** #if __cplusplus >= 201103L
 675:/usr/include/c++/4.8/bits/basic_string.h ****       /**
 676:/usr/include/c++/4.8/bits/basic_string.h ****        *  Returns a read-only (constant) iterator that points to the first
 677:/usr/include/c++/4.8/bits/basic_string.h ****        *  character in the %string.
 678:/usr/include/c++/4.8/bits/basic_string.h ****        */
 679:/usr/include/c++/4.8/bits/basic_string.h ****       const_iterator
 680:/usr/include/c++/4.8/bits/basic_string.h ****       cbegin() const noexcept
 681:/usr/include/c++/4.8/bits/basic_string.h ****       { return const_iterator(this->_M_data()); }
 682:/usr/include/c++/4.8/bits/basic_string.h **** 
 683:/usr/include/c++/4.8/bits/basic_string.h ****       /**
 684:/usr/include/c++/4.8/bits/basic_string.h ****        *  Returns a read-only (constant) iterator that points one past the
 685:/usr/include/c++/4.8/bits/basic_string.h ****        *  last character in the %string.
 686:/usr/include/c++/4.8/bits/basic_string.h ****        */
 687:/usr/include/c++/4.8/bits/basic_string.h ****       const_iterator
 688:/usr/include/c++/4.8/bits/basic_string.h ****       cend() const noexcept
 689:/usr/include/c++/4.8/bits/basic_string.h ****       { return const_iterator(this->_M_data() + this->size()); }
 690:/usr/include/c++/4.8/bits/basic_string.h **** 
 691:/usr/include/c++/4.8/bits/basic_string.h ****       /**
 692:/usr/include/c++/4.8/bits/basic_string.h ****        *  Returns a read-only (constant) reverse iterator that points
 693:/usr/include/c++/4.8/bits/basic_string.h ****        *  to the last character in the %string.  Iteration is done in
 694:/usr/include/c++/4.8/bits/basic_string.h ****        *  reverse element order.
 695:/usr/include/c++/4.8/bits/basic_string.h ****        */
 696:/usr/include/c++/4.8/bits/basic_string.h ****       const_reverse_iterator
 697:/usr/include/c++/4.8/bits/basic_string.h ****       crbegin() const noexcept
 698:/usr/include/c++/4.8/bits/basic_string.h ****       { return const_reverse_iterator(this->end()); }
 699:/usr/include/c++/4.8/bits/basic_string.h **** 
 700:/usr/include/c++/4.8/bits/basic_string.h ****       /**
 701:/usr/include/c++/4.8/bits/basic_string.h ****        *  Returns a read-only (constant) reverse iterator that points
 702:/usr/include/c++/4.8/bits/basic_string.h ****        *  to one before the first character in the %string.  Iteration
 703:/usr/include/c++/4.8/bits/basic_string.h ****        *  is done in reverse element order.
 704:/usr/include/c++/4.8/bits/basic_string.h ****        */
 705:/usr/include/c++/4.8/bits/basic_string.h ****       const_reverse_iterator
 706:/usr/include/c++/4.8/bits/basic_string.h ****       crend() const noexcept
 707:/usr/include/c++/4.8/bits/basic_string.h ****       { return const_reverse_iterator(this->begin()); }
 708:/usr/include/c++/4.8/bits/basic_string.h **** #endif
 709:/usr/include/c++/4.8/bits/basic_string.h **** 
 710:/usr/include/c++/4.8/bits/basic_string.h ****     public:
 711:/usr/include/c++/4.8/bits/basic_string.h ****       // Capacity:
 712:/usr/include/c++/4.8/bits/basic_string.h ****       ///  Returns the number of characters in the string, not including any
 713:/usr/include/c++/4.8/bits/basic_string.h ****       ///  null-termination.
 714:/usr/include/c++/4.8/bits/basic_string.h ****       size_type
 715:/usr/include/c++/4.8/bits/basic_string.h ****       size() const _GLIBCXX_NOEXCEPT
 716:/usr/include/c++/4.8/bits/basic_string.h ****       { return _M_rep()->_M_length; }
 717:/usr/include/c++/4.8/bits/basic_string.h **** 
 718:/usr/include/c++/4.8/bits/basic_string.h ****       ///  Returns the number of characters in the string, not including any
 719:/usr/include/c++/4.8/bits/basic_string.h ****       ///  null-termination.
 720:/usr/include/c++/4.8/bits/basic_string.h ****       size_type
 721:/usr/include/c++/4.8/bits/basic_string.h ****       length() const _GLIBCXX_NOEXCEPT
 722:/usr/include/c++/4.8/bits/basic_string.h ****       { return _M_rep()->_M_length; }
 723:/usr/include/c++/4.8/bits/basic_string.h **** 
 724:/usr/include/c++/4.8/bits/basic_string.h ****       ///  Returns the size() of the largest possible %string.
 725:/usr/include/c++/4.8/bits/basic_string.h ****       size_type
 726:/usr/include/c++/4.8/bits/basic_string.h ****       max_size() const _GLIBCXX_NOEXCEPT
 727:/usr/include/c++/4.8/bits/basic_string.h ****       { return _Rep::_S_max_size; }
 728:/usr/include/c++/4.8/bits/basic_string.h **** 
 729:/usr/include/c++/4.8/bits/basic_string.h ****       /**
 730:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Resizes the %string to the specified number of characters.
 731:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param  __n  Number of characters the %string should contain.
 732:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param  __c  Character to fill any new elements.
 733:/usr/include/c++/4.8/bits/basic_string.h ****        *
 734:/usr/include/c++/4.8/bits/basic_string.h ****        *  This function will %resize the %string to the specified
 735:/usr/include/c++/4.8/bits/basic_string.h ****        *  number of characters.  If the number is smaller than the
 736:/usr/include/c++/4.8/bits/basic_string.h ****        *  %string's current size the %string is truncated, otherwise
 737:/usr/include/c++/4.8/bits/basic_string.h ****        *  the %string is extended and new elements are %set to @a __c.
 738:/usr/include/c++/4.8/bits/basic_string.h ****        */
 739:/usr/include/c++/4.8/bits/basic_string.h ****       void
 740:/usr/include/c++/4.8/bits/basic_string.h ****       resize(size_type __n, _CharT __c);
 741:/usr/include/c++/4.8/bits/basic_string.h **** 
 742:/usr/include/c++/4.8/bits/basic_string.h ****       /**
 743:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Resizes the %string to the specified number of characters.
 744:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param  __n  Number of characters the %string should contain.
 745:/usr/include/c++/4.8/bits/basic_string.h ****        *
 746:/usr/include/c++/4.8/bits/basic_string.h ****        *  This function will resize the %string to the specified length.  If
 747:/usr/include/c++/4.8/bits/basic_string.h ****        *  the new size is smaller than the %string's current size the %string
 748:/usr/include/c++/4.8/bits/basic_string.h ****        *  is truncated, otherwise the %string is extended and new characters
 749:/usr/include/c++/4.8/bits/basic_string.h ****        *  are default-constructed.  For basic types such as char, this means
 750:/usr/include/c++/4.8/bits/basic_string.h ****        *  setting them to 0.
 751:/usr/include/c++/4.8/bits/basic_string.h ****        */
 752:/usr/include/c++/4.8/bits/basic_string.h ****       void
 753:/usr/include/c++/4.8/bits/basic_string.h ****       resize(size_type __n)
 754:/usr/include/c++/4.8/bits/basic_string.h ****       { this->resize(__n, _CharT()); }
 755:/usr/include/c++/4.8/bits/basic_string.h **** 
 756:/usr/include/c++/4.8/bits/basic_string.h **** #if __cplusplus >= 201103L
 757:/usr/include/c++/4.8/bits/basic_string.h ****       ///  A non-binding request to reduce capacity() to size().
 758:/usr/include/c++/4.8/bits/basic_string.h ****       void
 759:/usr/include/c++/4.8/bits/basic_string.h ****       shrink_to_fit()
 760:/usr/include/c++/4.8/bits/basic_string.h ****       {
 761:/usr/include/c++/4.8/bits/basic_string.h **** 	if (capacity() > size())
 762:/usr/include/c++/4.8/bits/basic_string.h **** 	  {
 763:/usr/include/c++/4.8/bits/basic_string.h **** 	    __try
 764:/usr/include/c++/4.8/bits/basic_string.h **** 	      { reserve(0); }
 765:/usr/include/c++/4.8/bits/basic_string.h **** 	    __catch(...)
 766:/usr/include/c++/4.8/bits/basic_string.h **** 	      { }
 767:/usr/include/c++/4.8/bits/basic_string.h **** 	  }
 768:/usr/include/c++/4.8/bits/basic_string.h ****       }
 769:/usr/include/c++/4.8/bits/basic_string.h **** #endif
 770:/usr/include/c++/4.8/bits/basic_string.h **** 
 771:/usr/include/c++/4.8/bits/basic_string.h ****       /**
 772:/usr/include/c++/4.8/bits/basic_string.h ****        *  Returns the total number of characters that the %string can hold
 773:/usr/include/c++/4.8/bits/basic_string.h ****        *  before needing to allocate more memory.
 774:/usr/include/c++/4.8/bits/basic_string.h ****        */
 775:/usr/include/c++/4.8/bits/basic_string.h ****       size_type
 776:/usr/include/c++/4.8/bits/basic_string.h ****       capacity() const _GLIBCXX_NOEXCEPT
 777:/usr/include/c++/4.8/bits/basic_string.h ****       { return _M_rep()->_M_capacity; }
 778:/usr/include/c++/4.8/bits/basic_string.h **** 
 779:/usr/include/c++/4.8/bits/basic_string.h ****       /**
 780:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Attempt to preallocate enough memory for specified number of
 781:/usr/include/c++/4.8/bits/basic_string.h ****        *          characters.
 782:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param  __res_arg  Number of characters required.
 783:/usr/include/c++/4.8/bits/basic_string.h ****        *  @throw  std::length_error  If @a __res_arg exceeds @c max_size().
 784:/usr/include/c++/4.8/bits/basic_string.h ****        *
 785:/usr/include/c++/4.8/bits/basic_string.h ****        *  This function attempts to reserve enough memory for the
 786:/usr/include/c++/4.8/bits/basic_string.h ****        *  %string to hold the specified number of characters.  If the
 787:/usr/include/c++/4.8/bits/basic_string.h ****        *  number requested is more than max_size(), length_error is
 788:/usr/include/c++/4.8/bits/basic_string.h ****        *  thrown.
 789:/usr/include/c++/4.8/bits/basic_string.h ****        *
 790:/usr/include/c++/4.8/bits/basic_string.h ****        *  The advantage of this function is that if optimal code is a
 791:/usr/include/c++/4.8/bits/basic_string.h ****        *  necessity and the user can determine the string length that will be
 792:/usr/include/c++/4.8/bits/basic_string.h ****        *  required, the user can reserve the memory in %advance, and thus
 793:/usr/include/c++/4.8/bits/basic_string.h ****        *  prevent a possible reallocation of memory and copying of %string
 794:/usr/include/c++/4.8/bits/basic_string.h ****        *  data.
 795:/usr/include/c++/4.8/bits/basic_string.h ****        */
 796:/usr/include/c++/4.8/bits/basic_string.h ****       void
 797:/usr/include/c++/4.8/bits/basic_string.h ****       reserve(size_type __res_arg = 0);
 798:/usr/include/c++/4.8/bits/basic_string.h **** 
 799:/usr/include/c++/4.8/bits/basic_string.h ****       /**
 800:/usr/include/c++/4.8/bits/basic_string.h ****        *  Erases the string, making it empty.
 801:/usr/include/c++/4.8/bits/basic_string.h ****        */
 802:/usr/include/c++/4.8/bits/basic_string.h ****       void
 803:/usr/include/c++/4.8/bits/basic_string.h ****       clear() _GLIBCXX_NOEXCEPT
 804:/usr/include/c++/4.8/bits/basic_string.h ****       { _M_mutate(0, this->size(), 0); }
 805:/usr/include/c++/4.8/bits/basic_string.h **** 
 806:/usr/include/c++/4.8/bits/basic_string.h ****       /**
 807:/usr/include/c++/4.8/bits/basic_string.h ****        *  Returns true if the %string is empty.  Equivalent to 
 808:/usr/include/c++/4.8/bits/basic_string.h ****        *  <code>*this == ""</code>.
 809:/usr/include/c++/4.8/bits/basic_string.h ****        */
 810:/usr/include/c++/4.8/bits/basic_string.h ****       bool
 811:/usr/include/c++/4.8/bits/basic_string.h ****       empty() const _GLIBCXX_NOEXCEPT
 812:/usr/include/c++/4.8/bits/basic_string.h ****       { return this->size() == 0; }
 813:/usr/include/c++/4.8/bits/basic_string.h **** 
 814:/usr/include/c++/4.8/bits/basic_string.h ****       // Element access:
 815:/usr/include/c++/4.8/bits/basic_string.h ****       /**
 816:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Subscript access to the data contained in the %string.
 817:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param  __pos  The index of the character to access.
 818:/usr/include/c++/4.8/bits/basic_string.h ****        *  @return  Read-only (constant) reference to the character.
 819:/usr/include/c++/4.8/bits/basic_string.h ****        *
 820:/usr/include/c++/4.8/bits/basic_string.h ****        *  This operator allows for easy, array-style, data access.
 821:/usr/include/c++/4.8/bits/basic_string.h ****        *  Note that data access with this operator is unchecked and
 822:/usr/include/c++/4.8/bits/basic_string.h ****        *  out_of_range lookups are not defined. (For checked lookups
 823:/usr/include/c++/4.8/bits/basic_string.h ****        *  see at().)
 824:/usr/include/c++/4.8/bits/basic_string.h ****        */
 825:/usr/include/c++/4.8/bits/basic_string.h ****       const_reference
 826:/usr/include/c++/4.8/bits/basic_string.h ****       operator[] (size_type __pos) const
 827:/usr/include/c++/4.8/bits/basic_string.h ****       {
 828:/usr/include/c++/4.8/bits/basic_string.h **** 	_GLIBCXX_DEBUG_ASSERT(__pos <= size());
 829:/usr/include/c++/4.8/bits/basic_string.h **** 	return _M_data()[__pos];
 830:/usr/include/c++/4.8/bits/basic_string.h ****       }
 831:/usr/include/c++/4.8/bits/basic_string.h **** 
 832:/usr/include/c++/4.8/bits/basic_string.h ****       /**
 833:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Subscript access to the data contained in the %string.
 834:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param  __pos  The index of the character to access.
 835:/usr/include/c++/4.8/bits/basic_string.h ****        *  @return  Read/write reference to the character.
 836:/usr/include/c++/4.8/bits/basic_string.h ****        *
 837:/usr/include/c++/4.8/bits/basic_string.h ****        *  This operator allows for easy, array-style, data access.
 838:/usr/include/c++/4.8/bits/basic_string.h ****        *  Note that data access with this operator is unchecked and
 839:/usr/include/c++/4.8/bits/basic_string.h ****        *  out_of_range lookups are not defined. (For checked lookups
 840:/usr/include/c++/4.8/bits/basic_string.h ****        *  see at().)  Unshares the string.
 841:/usr/include/c++/4.8/bits/basic_string.h ****        */
 842:/usr/include/c++/4.8/bits/basic_string.h ****       reference
 843:/usr/include/c++/4.8/bits/basic_string.h ****       operator[](size_type __pos)
 844:/usr/include/c++/4.8/bits/basic_string.h ****       {
 845:/usr/include/c++/4.8/bits/basic_string.h ****         // allow pos == size() as v3 extension:
 846:/usr/include/c++/4.8/bits/basic_string.h **** 	_GLIBCXX_DEBUG_ASSERT(__pos <= size());
 847:/usr/include/c++/4.8/bits/basic_string.h ****         // but be strict in pedantic mode:
 848:/usr/include/c++/4.8/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(__pos < size());
 849:/usr/include/c++/4.8/bits/basic_string.h **** 	_M_leak();
 850:/usr/include/c++/4.8/bits/basic_string.h **** 	return _M_data()[__pos];
 851:/usr/include/c++/4.8/bits/basic_string.h ****       }
 852:/usr/include/c++/4.8/bits/basic_string.h **** 
 853:/usr/include/c++/4.8/bits/basic_string.h ****       /**
 854:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Provides access to the data contained in the %string.
 855:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __n The index of the character to access.
 856:/usr/include/c++/4.8/bits/basic_string.h ****        *  @return  Read-only (const) reference to the character.
 857:/usr/include/c++/4.8/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a n is an invalid index.
 858:/usr/include/c++/4.8/bits/basic_string.h ****        *
 859:/usr/include/c++/4.8/bits/basic_string.h ****        *  This function provides for safer data access.  The parameter is
 860:/usr/include/c++/4.8/bits/basic_string.h ****        *  first checked that it is in the range of the string.  The function
 861:/usr/include/c++/4.8/bits/basic_string.h ****        *  throws out_of_range if the check fails.
 862:/usr/include/c++/4.8/bits/basic_string.h ****        */
 863:/usr/include/c++/4.8/bits/basic_string.h ****       const_reference
 864:/usr/include/c++/4.8/bits/basic_string.h ****       at(size_type __n) const
 865:/usr/include/c++/4.8/bits/basic_string.h ****       {
 866:/usr/include/c++/4.8/bits/basic_string.h **** 	if (__n >= this->size())
 867:/usr/include/c++/4.8/bits/basic_string.h **** 	  __throw_out_of_range(__N("basic_string::at"));
 868:/usr/include/c++/4.8/bits/basic_string.h **** 	return _M_data()[__n];
 869:/usr/include/c++/4.8/bits/basic_string.h ****       }
 870:/usr/include/c++/4.8/bits/basic_string.h **** 
 871:/usr/include/c++/4.8/bits/basic_string.h ****       /**
 872:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Provides access to the data contained in the %string.
 873:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __n The index of the character to access.
 874:/usr/include/c++/4.8/bits/basic_string.h ****        *  @return  Read/write reference to the character.
 875:/usr/include/c++/4.8/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a n is an invalid index.
 876:/usr/include/c++/4.8/bits/basic_string.h ****        *
 877:/usr/include/c++/4.8/bits/basic_string.h ****        *  This function provides for safer data access.  The parameter is
 878:/usr/include/c++/4.8/bits/basic_string.h ****        *  first checked that it is in the range of the string.  The function
 879:/usr/include/c++/4.8/bits/basic_string.h ****        *  throws out_of_range if the check fails.  Success results in
 880:/usr/include/c++/4.8/bits/basic_string.h ****        *  unsharing the string.
 881:/usr/include/c++/4.8/bits/basic_string.h ****        */
 882:/usr/include/c++/4.8/bits/basic_string.h ****       reference
 883:/usr/include/c++/4.8/bits/basic_string.h ****       at(size_type __n)
 884:/usr/include/c++/4.8/bits/basic_string.h ****       {
 885:/usr/include/c++/4.8/bits/basic_string.h **** 	if (__n >= size())
 886:/usr/include/c++/4.8/bits/basic_string.h **** 	  __throw_out_of_range(__N("basic_string::at"));
 887:/usr/include/c++/4.8/bits/basic_string.h **** 	_M_leak();
 888:/usr/include/c++/4.8/bits/basic_string.h **** 	return _M_data()[__n];
 889:/usr/include/c++/4.8/bits/basic_string.h ****       }
 890:/usr/include/c++/4.8/bits/basic_string.h **** 
 891:/usr/include/c++/4.8/bits/basic_string.h **** #if __cplusplus >= 201103L
 892:/usr/include/c++/4.8/bits/basic_string.h ****       /**
 893:/usr/include/c++/4.8/bits/basic_string.h ****        *  Returns a read/write reference to the data at the first
 894:/usr/include/c++/4.8/bits/basic_string.h ****        *  element of the %string.
 895:/usr/include/c++/4.8/bits/basic_string.h ****        */
 896:/usr/include/c++/4.8/bits/basic_string.h ****       reference
 897:/usr/include/c++/4.8/bits/basic_string.h ****       front()
 898:/usr/include/c++/4.8/bits/basic_string.h ****       { return operator[](0); }
 899:/usr/include/c++/4.8/bits/basic_string.h **** 
 900:/usr/include/c++/4.8/bits/basic_string.h ****       /**
 901:/usr/include/c++/4.8/bits/basic_string.h ****        *  Returns a read-only (constant) reference to the data at the first
 902:/usr/include/c++/4.8/bits/basic_string.h ****        *  element of the %string.
 903:/usr/include/c++/4.8/bits/basic_string.h ****        */
 904:/usr/include/c++/4.8/bits/basic_string.h ****       const_reference
 905:/usr/include/c++/4.8/bits/basic_string.h ****       front() const
 906:/usr/include/c++/4.8/bits/basic_string.h ****       { return operator[](0); }
 907:/usr/include/c++/4.8/bits/basic_string.h **** 
 908:/usr/include/c++/4.8/bits/basic_string.h ****       /**
 909:/usr/include/c++/4.8/bits/basic_string.h ****        *  Returns a read/write reference to the data at the last
 910:/usr/include/c++/4.8/bits/basic_string.h ****        *  element of the %string.
 911:/usr/include/c++/4.8/bits/basic_string.h ****        */
 912:/usr/include/c++/4.8/bits/basic_string.h ****       reference
 913:/usr/include/c++/4.8/bits/basic_string.h ****       back()
 914:/usr/include/c++/4.8/bits/basic_string.h ****       { return operator[](this->size() - 1); }
 915:/usr/include/c++/4.8/bits/basic_string.h **** 
 916:/usr/include/c++/4.8/bits/basic_string.h ****       /**
 917:/usr/include/c++/4.8/bits/basic_string.h ****        *  Returns a read-only (constant) reference to the data at the
 918:/usr/include/c++/4.8/bits/basic_string.h ****        *  last element of the %string.
 919:/usr/include/c++/4.8/bits/basic_string.h ****        */
 920:/usr/include/c++/4.8/bits/basic_string.h ****       const_reference
 921:/usr/include/c++/4.8/bits/basic_string.h ****       back() const
 922:/usr/include/c++/4.8/bits/basic_string.h ****       { return operator[](this->size() - 1); }
 923:/usr/include/c++/4.8/bits/basic_string.h **** #endif
 924:/usr/include/c++/4.8/bits/basic_string.h **** 
 925:/usr/include/c++/4.8/bits/basic_string.h ****       // Modifiers:
 926:/usr/include/c++/4.8/bits/basic_string.h ****       /**
 927:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Append a string to this string.
 928:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __str  The string to append.
 929:/usr/include/c++/4.8/bits/basic_string.h ****        *  @return  Reference to this string.
 930:/usr/include/c++/4.8/bits/basic_string.h ****        */
 931:/usr/include/c++/4.8/bits/basic_string.h ****       basic_string&
 932:/usr/include/c++/4.8/bits/basic_string.h ****       operator+=(const basic_string& __str)
 933:/usr/include/c++/4.8/bits/basic_string.h ****       { return this->append(__str); }
 934:/usr/include/c++/4.8/bits/basic_string.h **** 
 935:/usr/include/c++/4.8/bits/basic_string.h ****       /**
 936:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Append a C string.
 937:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __s  The C string to append.
 938:/usr/include/c++/4.8/bits/basic_string.h ****        *  @return  Reference to this string.
 939:/usr/include/c++/4.8/bits/basic_string.h ****        */
 940:/usr/include/c++/4.8/bits/basic_string.h ****       basic_string&
 941:/usr/include/c++/4.8/bits/basic_string.h ****       operator+=(const _CharT* __s)
 942:/usr/include/c++/4.8/bits/basic_string.h ****       { return this->append(__s); }
 943:/usr/include/c++/4.8/bits/basic_string.h **** 
 944:/usr/include/c++/4.8/bits/basic_string.h ****       /**
 945:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Append a character.
 946:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __c  The character to append.
 947:/usr/include/c++/4.8/bits/basic_string.h ****        *  @return  Reference to this string.
 948:/usr/include/c++/4.8/bits/basic_string.h ****        */
 949:/usr/include/c++/4.8/bits/basic_string.h ****       basic_string&
 950:/usr/include/c++/4.8/bits/basic_string.h ****       operator+=(_CharT __c)
 951:/usr/include/c++/4.8/bits/basic_string.h ****       { 
 952:/usr/include/c++/4.8/bits/basic_string.h **** 	this->push_back(__c);
 953:/usr/include/c++/4.8/bits/basic_string.h **** 	return *this;
 954:/usr/include/c++/4.8/bits/basic_string.h ****       }
 955:/usr/include/c++/4.8/bits/basic_string.h **** 
 956:/usr/include/c++/4.8/bits/basic_string.h **** #if __cplusplus >= 201103L
 957:/usr/include/c++/4.8/bits/basic_string.h ****       /**
 958:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Append an initializer_list of characters.
 959:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __l  The initializer_list of characters to be appended.
 960:/usr/include/c++/4.8/bits/basic_string.h ****        *  @return  Reference to this string.
 961:/usr/include/c++/4.8/bits/basic_string.h ****        */
 962:/usr/include/c++/4.8/bits/basic_string.h ****       basic_string&
 963:/usr/include/c++/4.8/bits/basic_string.h ****       operator+=(initializer_list<_CharT> __l)
 964:/usr/include/c++/4.8/bits/basic_string.h ****       { return this->append(__l.begin(), __l.size()); }
 965:/usr/include/c++/4.8/bits/basic_string.h **** #endif // C++11
 966:/usr/include/c++/4.8/bits/basic_string.h **** 
 967:/usr/include/c++/4.8/bits/basic_string.h ****       /**
 968:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Append a string to this string.
 969:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __str  The string to append.
 970:/usr/include/c++/4.8/bits/basic_string.h ****        *  @return  Reference to this string.
 971:/usr/include/c++/4.8/bits/basic_string.h ****        */
 972:/usr/include/c++/4.8/bits/basic_string.h ****       basic_string&
 973:/usr/include/c++/4.8/bits/basic_string.h ****       append(const basic_string& __str);
 974:/usr/include/c++/4.8/bits/basic_string.h **** 
 975:/usr/include/c++/4.8/bits/basic_string.h ****       /**
 976:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Append a substring.
 977:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __str  The string to append.
 978:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __pos  Index of the first character of str to append.
 979:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __n  The number of characters to append.
 980:/usr/include/c++/4.8/bits/basic_string.h ****        *  @return  Reference to this string.
 981:/usr/include/c++/4.8/bits/basic_string.h ****        *  @throw  std::out_of_range if @a __pos is not a valid index.
 982:/usr/include/c++/4.8/bits/basic_string.h ****        *
 983:/usr/include/c++/4.8/bits/basic_string.h ****        *  This function appends @a __n characters from @a __str
 984:/usr/include/c++/4.8/bits/basic_string.h ****        *  starting at @a __pos to this string.  If @a __n is is larger
 985:/usr/include/c++/4.8/bits/basic_string.h ****        *  than the number of available characters in @a __str, the
 986:/usr/include/c++/4.8/bits/basic_string.h ****        *  remainder of @a __str is appended.
 987:/usr/include/c++/4.8/bits/basic_string.h ****        */
 988:/usr/include/c++/4.8/bits/basic_string.h ****       basic_string&
 989:/usr/include/c++/4.8/bits/basic_string.h ****       append(const basic_string& __str, size_type __pos, size_type __n);
 990:/usr/include/c++/4.8/bits/basic_string.h **** 
 991:/usr/include/c++/4.8/bits/basic_string.h ****       /**
 992:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Append a C substring.
 993:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __s  The C string to append.
 994:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __n  The number of characters to append.
 995:/usr/include/c++/4.8/bits/basic_string.h ****        *  @return  Reference to this string.
 996:/usr/include/c++/4.8/bits/basic_string.h ****        */
 997:/usr/include/c++/4.8/bits/basic_string.h ****       basic_string&
 998:/usr/include/c++/4.8/bits/basic_string.h ****       append(const _CharT* __s, size_type __n);
 999:/usr/include/c++/4.8/bits/basic_string.h **** 
1000:/usr/include/c++/4.8/bits/basic_string.h ****       /**
1001:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Append a C string.
1002:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __s  The C string to append.
1003:/usr/include/c++/4.8/bits/basic_string.h ****        *  @return  Reference to this string.
1004:/usr/include/c++/4.8/bits/basic_string.h ****        */
1005:/usr/include/c++/4.8/bits/basic_string.h ****       basic_string&
1006:/usr/include/c++/4.8/bits/basic_string.h ****       append(const _CharT* __s)
1007:/usr/include/c++/4.8/bits/basic_string.h ****       {
1008:/usr/include/c++/4.8/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
1009:/usr/include/c++/4.8/bits/basic_string.h **** 	return this->append(__s, traits_type::length(__s));
1010:/usr/include/c++/4.8/bits/basic_string.h ****       }
1011:/usr/include/c++/4.8/bits/basic_string.h **** 
1012:/usr/include/c++/4.8/bits/basic_string.h ****       /**
1013:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Append multiple characters.
1014:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __n  The number of characters to append.
1015:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __c  The character to use.
1016:/usr/include/c++/4.8/bits/basic_string.h ****        *  @return  Reference to this string.
1017:/usr/include/c++/4.8/bits/basic_string.h ****        *
1018:/usr/include/c++/4.8/bits/basic_string.h ****        *  Appends __n copies of __c to this string.
1019:/usr/include/c++/4.8/bits/basic_string.h ****        */
1020:/usr/include/c++/4.8/bits/basic_string.h ****       basic_string&
1021:/usr/include/c++/4.8/bits/basic_string.h ****       append(size_type __n, _CharT __c);
1022:/usr/include/c++/4.8/bits/basic_string.h **** 
1023:/usr/include/c++/4.8/bits/basic_string.h **** #if __cplusplus >= 201103L
1024:/usr/include/c++/4.8/bits/basic_string.h ****       /**
1025:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Append an initializer_list of characters.
1026:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __l  The initializer_list of characters to append.
1027:/usr/include/c++/4.8/bits/basic_string.h ****        *  @return  Reference to this string.
1028:/usr/include/c++/4.8/bits/basic_string.h ****        */
1029:/usr/include/c++/4.8/bits/basic_string.h ****       basic_string&
1030:/usr/include/c++/4.8/bits/basic_string.h ****       append(initializer_list<_CharT> __l)
1031:/usr/include/c++/4.8/bits/basic_string.h ****       { return this->append(__l.begin(), __l.size()); }
1032:/usr/include/c++/4.8/bits/basic_string.h **** #endif // C++11
1033:/usr/include/c++/4.8/bits/basic_string.h **** 
1034:/usr/include/c++/4.8/bits/basic_string.h ****       /**
1035:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Append a range of characters.
1036:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __first  Iterator referencing the first character to append.
1037:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __last  Iterator marking the end of the range.
1038:/usr/include/c++/4.8/bits/basic_string.h ****        *  @return  Reference to this string.
1039:/usr/include/c++/4.8/bits/basic_string.h ****        *
1040:/usr/include/c++/4.8/bits/basic_string.h ****        *  Appends characters in the range [__first,__last) to this string.
1041:/usr/include/c++/4.8/bits/basic_string.h ****        */
1042:/usr/include/c++/4.8/bits/basic_string.h ****       template<class _InputIterator>
1043:/usr/include/c++/4.8/bits/basic_string.h ****         basic_string&
1044:/usr/include/c++/4.8/bits/basic_string.h ****         append(_InputIterator __first, _InputIterator __last)
1045:/usr/include/c++/4.8/bits/basic_string.h ****         { return this->replace(_M_iend(), _M_iend(), __first, __last); }
1046:/usr/include/c++/4.8/bits/basic_string.h **** 
1047:/usr/include/c++/4.8/bits/basic_string.h ****       /**
1048:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Append a single character.
1049:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __c  Character to append.
1050:/usr/include/c++/4.8/bits/basic_string.h ****        */
1051:/usr/include/c++/4.8/bits/basic_string.h ****       void
1052:/usr/include/c++/4.8/bits/basic_string.h ****       push_back(_CharT __c)
1053:/usr/include/c++/4.8/bits/basic_string.h ****       { 
1054:/usr/include/c++/4.8/bits/basic_string.h **** 	const size_type __len = 1 + this->size();
1055:/usr/include/c++/4.8/bits/basic_string.h **** 	if (__len > this->capacity() || _M_rep()->_M_is_shared())
1056:/usr/include/c++/4.8/bits/basic_string.h **** 	  this->reserve(__len);
1057:/usr/include/c++/4.8/bits/basic_string.h **** 	traits_type::assign(_M_data()[this->size()], __c);
1058:/usr/include/c++/4.8/bits/basic_string.h **** 	_M_rep()->_M_set_length_and_sharable(__len);
1059:/usr/include/c++/4.8/bits/basic_string.h ****       }
1060:/usr/include/c++/4.8/bits/basic_string.h **** 
1061:/usr/include/c++/4.8/bits/basic_string.h ****       /**
1062:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Set value to contents of another string.
1063:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param  __str  Source string to use.
1064:/usr/include/c++/4.8/bits/basic_string.h ****        *  @return  Reference to this string.
1065:/usr/include/c++/4.8/bits/basic_string.h ****        */
1066:/usr/include/c++/4.8/bits/basic_string.h ****       basic_string&
1067:/usr/include/c++/4.8/bits/basic_string.h ****       assign(const basic_string& __str);
1068:/usr/include/c++/4.8/bits/basic_string.h **** 
1069:/usr/include/c++/4.8/bits/basic_string.h **** #if __cplusplus >= 201103L
1070:/usr/include/c++/4.8/bits/basic_string.h ****       /**
1071:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Set value to contents of another string.
1072:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param  __str  Source string to use.
1073:/usr/include/c++/4.8/bits/basic_string.h ****        *  @return  Reference to this string.
1074:/usr/include/c++/4.8/bits/basic_string.h ****        *
1075:/usr/include/c++/4.8/bits/basic_string.h ****        *  This function sets this string to the exact contents of @a __str.
1076:/usr/include/c++/4.8/bits/basic_string.h ****        *  @a __str is a valid, but unspecified string.
1077:/usr/include/c++/4.8/bits/basic_string.h ****        */
1078:/usr/include/c++/4.8/bits/basic_string.h ****       basic_string&
1079:/usr/include/c++/4.8/bits/basic_string.h ****       assign(basic_string&& __str)
1080:/usr/include/c++/4.8/bits/basic_string.h ****       {
1081:/usr/include/c++/4.8/bits/basic_string.h **** 	this->swap(__str);
1082:/usr/include/c++/4.8/bits/basic_string.h **** 	return *this;
1083:/usr/include/c++/4.8/bits/basic_string.h ****       }
1084:/usr/include/c++/4.8/bits/basic_string.h **** #endif // C++11
1085:/usr/include/c++/4.8/bits/basic_string.h **** 
1086:/usr/include/c++/4.8/bits/basic_string.h ****       /**
1087:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Set value to a substring of a string.
1088:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __str  The string to use.
1089:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __pos  Index of the first character of str.
1090:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __n  Number of characters to use.
1091:/usr/include/c++/4.8/bits/basic_string.h ****        *  @return  Reference to this string.
1092:/usr/include/c++/4.8/bits/basic_string.h ****        *  @throw  std::out_of_range if @a pos is not a valid index.
1093:/usr/include/c++/4.8/bits/basic_string.h ****        *
1094:/usr/include/c++/4.8/bits/basic_string.h ****        *  This function sets this string to the substring of @a __str
1095:/usr/include/c++/4.8/bits/basic_string.h ****        *  consisting of @a __n characters at @a __pos.  If @a __n is
1096:/usr/include/c++/4.8/bits/basic_string.h ****        *  is larger than the number of available characters in @a
1097:/usr/include/c++/4.8/bits/basic_string.h ****        *  __str, the remainder of @a __str is used.
1098:/usr/include/c++/4.8/bits/basic_string.h ****        */
1099:/usr/include/c++/4.8/bits/basic_string.h ****       basic_string&
1100:/usr/include/c++/4.8/bits/basic_string.h ****       assign(const basic_string& __str, size_type __pos, size_type __n)
1101:/usr/include/c++/4.8/bits/basic_string.h ****       { return this->assign(__str._M_data()
1102:/usr/include/c++/4.8/bits/basic_string.h **** 			    + __str._M_check(__pos, "basic_string::assign"),
1103:/usr/include/c++/4.8/bits/basic_string.h **** 			    __str._M_limit(__pos, __n)); }
1104:/usr/include/c++/4.8/bits/basic_string.h **** 
1105:/usr/include/c++/4.8/bits/basic_string.h ****       /**
1106:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Set value to a C substring.
1107:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __s  The C string to use.
1108:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __n  Number of characters to use.
1109:/usr/include/c++/4.8/bits/basic_string.h ****        *  @return  Reference to this string.
1110:/usr/include/c++/4.8/bits/basic_string.h ****        *
1111:/usr/include/c++/4.8/bits/basic_string.h ****        *  This function sets the value of this string to the first @a __n
1112:/usr/include/c++/4.8/bits/basic_string.h ****        *  characters of @a __s.  If @a __n is is larger than the number of
1113:/usr/include/c++/4.8/bits/basic_string.h ****        *  available characters in @a __s, the remainder of @a __s is used.
1114:/usr/include/c++/4.8/bits/basic_string.h ****        */
1115:/usr/include/c++/4.8/bits/basic_string.h ****       basic_string&
1116:/usr/include/c++/4.8/bits/basic_string.h ****       assign(const _CharT* __s, size_type __n);
1117:/usr/include/c++/4.8/bits/basic_string.h **** 
1118:/usr/include/c++/4.8/bits/basic_string.h ****       /**
1119:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Set value to contents of a C string.
1120:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __s  The C string to use.
1121:/usr/include/c++/4.8/bits/basic_string.h ****        *  @return  Reference to this string.
1122:/usr/include/c++/4.8/bits/basic_string.h ****        *
1123:/usr/include/c++/4.8/bits/basic_string.h ****        *  This function sets the value of this string to the value of @a __s.
1124:/usr/include/c++/4.8/bits/basic_string.h ****        *  The data is copied, so there is no dependence on @a __s once the
1125:/usr/include/c++/4.8/bits/basic_string.h ****        *  function returns.
1126:/usr/include/c++/4.8/bits/basic_string.h ****        */
1127:/usr/include/c++/4.8/bits/basic_string.h ****       basic_string&
1128:/usr/include/c++/4.8/bits/basic_string.h ****       assign(const _CharT* __s)
1129:/usr/include/c++/4.8/bits/basic_string.h ****       {
1130:/usr/include/c++/4.8/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
1131:/usr/include/c++/4.8/bits/basic_string.h **** 	return this->assign(__s, traits_type::length(__s));
1132:/usr/include/c++/4.8/bits/basic_string.h ****       }
1133:/usr/include/c++/4.8/bits/basic_string.h **** 
1134:/usr/include/c++/4.8/bits/basic_string.h ****       /**
1135:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Set value to multiple characters.
1136:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __n  Length of the resulting string.
1137:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __c  The character to use.
1138:/usr/include/c++/4.8/bits/basic_string.h ****        *  @return  Reference to this string.
1139:/usr/include/c++/4.8/bits/basic_string.h ****        *
1140:/usr/include/c++/4.8/bits/basic_string.h ****        *  This function sets the value of this string to @a __n copies of
1141:/usr/include/c++/4.8/bits/basic_string.h ****        *  character @a __c.
1142:/usr/include/c++/4.8/bits/basic_string.h ****        */
1143:/usr/include/c++/4.8/bits/basic_string.h ****       basic_string&
1144:/usr/include/c++/4.8/bits/basic_string.h ****       assign(size_type __n, _CharT __c)
1145:/usr/include/c++/4.8/bits/basic_string.h ****       { return _M_replace_aux(size_type(0), this->size(), __n, __c); }
1146:/usr/include/c++/4.8/bits/basic_string.h **** 
1147:/usr/include/c++/4.8/bits/basic_string.h ****       /**
1148:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Set value to a range of characters.
1149:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __first  Iterator referencing the first character to append.
1150:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __last  Iterator marking the end of the range.
1151:/usr/include/c++/4.8/bits/basic_string.h ****        *  @return  Reference to this string.
1152:/usr/include/c++/4.8/bits/basic_string.h ****        *
1153:/usr/include/c++/4.8/bits/basic_string.h ****        *  Sets value of string to characters in the range [__first,__last).
1154:/usr/include/c++/4.8/bits/basic_string.h ****       */
1155:/usr/include/c++/4.8/bits/basic_string.h ****       template<class _InputIterator>
1156:/usr/include/c++/4.8/bits/basic_string.h ****         basic_string&
1157:/usr/include/c++/4.8/bits/basic_string.h ****         assign(_InputIterator __first, _InputIterator __last)
1158:/usr/include/c++/4.8/bits/basic_string.h ****         { return this->replace(_M_ibegin(), _M_iend(), __first, __last); }
1159:/usr/include/c++/4.8/bits/basic_string.h **** 
1160:/usr/include/c++/4.8/bits/basic_string.h **** #if __cplusplus >= 201103L
1161:/usr/include/c++/4.8/bits/basic_string.h ****       /**
1162:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Set value to an initializer_list of characters.
1163:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __l  The initializer_list of characters to assign.
1164:/usr/include/c++/4.8/bits/basic_string.h ****        *  @return  Reference to this string.
1165:/usr/include/c++/4.8/bits/basic_string.h ****        */
1166:/usr/include/c++/4.8/bits/basic_string.h ****       basic_string&
1167:/usr/include/c++/4.8/bits/basic_string.h ****       assign(initializer_list<_CharT> __l)
1168:/usr/include/c++/4.8/bits/basic_string.h ****       { return this->assign(__l.begin(), __l.size()); }
1169:/usr/include/c++/4.8/bits/basic_string.h **** #endif // C++11
1170:/usr/include/c++/4.8/bits/basic_string.h **** 
1171:/usr/include/c++/4.8/bits/basic_string.h ****       /**
1172:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Insert multiple characters.
1173:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __p  Iterator referencing location in string to insert at.
1174:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __n  Number of characters to insert
1175:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __c  The character to insert.
1176:/usr/include/c++/4.8/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1177:/usr/include/c++/4.8/bits/basic_string.h ****        *
1178:/usr/include/c++/4.8/bits/basic_string.h ****        *  Inserts @a __n copies of character @a __c starting at the
1179:/usr/include/c++/4.8/bits/basic_string.h ****        *  position referenced by iterator @a __p.  If adding
1180:/usr/include/c++/4.8/bits/basic_string.h ****        *  characters causes the length to exceed max_size(),
1181:/usr/include/c++/4.8/bits/basic_string.h ****        *  length_error is thrown.  The value of the string doesn't
1182:/usr/include/c++/4.8/bits/basic_string.h ****        *  change if an error is thrown.
1183:/usr/include/c++/4.8/bits/basic_string.h ****       */
1184:/usr/include/c++/4.8/bits/basic_string.h ****       void
1185:/usr/include/c++/4.8/bits/basic_string.h ****       insert(iterator __p, size_type __n, _CharT __c)
1186:/usr/include/c++/4.8/bits/basic_string.h ****       {	this->replace(__p, __p, __n, __c);  }
1187:/usr/include/c++/4.8/bits/basic_string.h **** 
1188:/usr/include/c++/4.8/bits/basic_string.h ****       /**
1189:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Insert a range of characters.
1190:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __p  Iterator referencing location in string to insert at.
1191:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __beg  Start of range.
1192:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __end  End of range.
1193:/usr/include/c++/4.8/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1194:/usr/include/c++/4.8/bits/basic_string.h ****        *
1195:/usr/include/c++/4.8/bits/basic_string.h ****        *  Inserts characters in range [__beg,__end).  If adding
1196:/usr/include/c++/4.8/bits/basic_string.h ****        *  characters causes the length to exceed max_size(),
1197:/usr/include/c++/4.8/bits/basic_string.h ****        *  length_error is thrown.  The value of the string doesn't
1198:/usr/include/c++/4.8/bits/basic_string.h ****        *  change if an error is thrown.
1199:/usr/include/c++/4.8/bits/basic_string.h ****       */
1200:/usr/include/c++/4.8/bits/basic_string.h ****       template<class _InputIterator>
1201:/usr/include/c++/4.8/bits/basic_string.h ****         void
1202:/usr/include/c++/4.8/bits/basic_string.h ****         insert(iterator __p, _InputIterator __beg, _InputIterator __end)
1203:/usr/include/c++/4.8/bits/basic_string.h ****         { this->replace(__p, __p, __beg, __end); }
1204:/usr/include/c++/4.8/bits/basic_string.h **** 
1205:/usr/include/c++/4.8/bits/basic_string.h **** #if __cplusplus >= 201103L
1206:/usr/include/c++/4.8/bits/basic_string.h ****       /**
1207:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Insert an initializer_list of characters.
1208:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __p  Iterator referencing location in string to insert at.
1209:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __l  The initializer_list of characters to insert.
1210:/usr/include/c++/4.8/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1211:/usr/include/c++/4.8/bits/basic_string.h ****        */
1212:/usr/include/c++/4.8/bits/basic_string.h ****       void
1213:/usr/include/c++/4.8/bits/basic_string.h ****       insert(iterator __p, initializer_list<_CharT> __l)
1214:/usr/include/c++/4.8/bits/basic_string.h ****       {
1215:/usr/include/c++/4.8/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(__p >= _M_ibegin() && __p <= _M_iend());
1216:/usr/include/c++/4.8/bits/basic_string.h **** 	this->insert(__p - _M_ibegin(), __l.begin(), __l.size());
1217:/usr/include/c++/4.8/bits/basic_string.h ****       }
1218:/usr/include/c++/4.8/bits/basic_string.h **** #endif // C++11
1219:/usr/include/c++/4.8/bits/basic_string.h **** 
1220:/usr/include/c++/4.8/bits/basic_string.h ****       /**
1221:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Insert value of a string.
1222:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __pos1  Iterator referencing location in string to insert at.
1223:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __str  The string to insert.
1224:/usr/include/c++/4.8/bits/basic_string.h ****        *  @return  Reference to this string.
1225:/usr/include/c++/4.8/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1226:/usr/include/c++/4.8/bits/basic_string.h ****        *
1227:/usr/include/c++/4.8/bits/basic_string.h ****        *  Inserts value of @a __str starting at @a __pos1.  If adding
1228:/usr/include/c++/4.8/bits/basic_string.h ****        *  characters causes the length to exceed max_size(),
1229:/usr/include/c++/4.8/bits/basic_string.h ****        *  length_error is thrown.  The value of the string doesn't
1230:/usr/include/c++/4.8/bits/basic_string.h ****        *  change if an error is thrown.
1231:/usr/include/c++/4.8/bits/basic_string.h ****       */
1232:/usr/include/c++/4.8/bits/basic_string.h ****       basic_string&
1233:/usr/include/c++/4.8/bits/basic_string.h ****       insert(size_type __pos1, const basic_string& __str)
1234:/usr/include/c++/4.8/bits/basic_string.h ****       { return this->insert(__pos1, __str, size_type(0), __str.size()); }
1235:/usr/include/c++/4.8/bits/basic_string.h **** 
1236:/usr/include/c++/4.8/bits/basic_string.h ****       /**
1237:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Insert a substring.
1238:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __pos1  Iterator referencing location in string to insert at.
1239:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __str  The string to insert.
1240:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __pos2  Start of characters in str to insert.
1241:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __n  Number of characters to insert.
1242:/usr/include/c++/4.8/bits/basic_string.h ****        *  @return  Reference to this string.
1243:/usr/include/c++/4.8/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1244:/usr/include/c++/4.8/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a pos1 > size() or
1245:/usr/include/c++/4.8/bits/basic_string.h ****        *  @a __pos2 > @a str.size().
1246:/usr/include/c++/4.8/bits/basic_string.h ****        *
1247:/usr/include/c++/4.8/bits/basic_string.h ****        *  Starting at @a pos1, insert @a __n character of @a __str
1248:/usr/include/c++/4.8/bits/basic_string.h ****        *  beginning with @a __pos2.  If adding characters causes the
1249:/usr/include/c++/4.8/bits/basic_string.h ****        *  length to exceed max_size(), length_error is thrown.  If @a
1250:/usr/include/c++/4.8/bits/basic_string.h ****        *  __pos1 is beyond the end of this string or @a __pos2 is
1251:/usr/include/c++/4.8/bits/basic_string.h ****        *  beyond the end of @a __str, out_of_range is thrown.  The
1252:/usr/include/c++/4.8/bits/basic_string.h ****        *  value of the string doesn't change if an error is thrown.
1253:/usr/include/c++/4.8/bits/basic_string.h ****       */
1254:/usr/include/c++/4.8/bits/basic_string.h ****       basic_string&
1255:/usr/include/c++/4.8/bits/basic_string.h ****       insert(size_type __pos1, const basic_string& __str,
1256:/usr/include/c++/4.8/bits/basic_string.h **** 	     size_type __pos2, size_type __n)
1257:/usr/include/c++/4.8/bits/basic_string.h ****       { return this->insert(__pos1, __str._M_data()
1258:/usr/include/c++/4.8/bits/basic_string.h **** 			    + __str._M_check(__pos2, "basic_string::insert"),
1259:/usr/include/c++/4.8/bits/basic_string.h **** 			    __str._M_limit(__pos2, __n)); }
1260:/usr/include/c++/4.8/bits/basic_string.h **** 
1261:/usr/include/c++/4.8/bits/basic_string.h ****       /**
1262:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Insert a C substring.
1263:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __pos  Iterator referencing location in string to insert at.
1264:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __s  The C string to insert.
1265:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __n  The number of characters to insert.
1266:/usr/include/c++/4.8/bits/basic_string.h ****        *  @return  Reference to this string.
1267:/usr/include/c++/4.8/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1268:/usr/include/c++/4.8/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a __pos is beyond the end of this
1269:/usr/include/c++/4.8/bits/basic_string.h ****        *  string.
1270:/usr/include/c++/4.8/bits/basic_string.h ****        *
1271:/usr/include/c++/4.8/bits/basic_string.h ****        *  Inserts the first @a __n characters of @a __s starting at @a
1272:/usr/include/c++/4.8/bits/basic_string.h ****        *  __pos.  If adding characters causes the length to exceed
1273:/usr/include/c++/4.8/bits/basic_string.h ****        *  max_size(), length_error is thrown.  If @a __pos is beyond
1274:/usr/include/c++/4.8/bits/basic_string.h ****        *  end(), out_of_range is thrown.  The value of the string
1275:/usr/include/c++/4.8/bits/basic_string.h ****        *  doesn't change if an error is thrown.
1276:/usr/include/c++/4.8/bits/basic_string.h ****       */
1277:/usr/include/c++/4.8/bits/basic_string.h ****       basic_string&
1278:/usr/include/c++/4.8/bits/basic_string.h ****       insert(size_type __pos, const _CharT* __s, size_type __n);
1279:/usr/include/c++/4.8/bits/basic_string.h **** 
1280:/usr/include/c++/4.8/bits/basic_string.h ****       /**
1281:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Insert a C string.
1282:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __pos  Iterator referencing location in string to insert at.
1283:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __s  The C string to insert.
1284:/usr/include/c++/4.8/bits/basic_string.h ****        *  @return  Reference to this string.
1285:/usr/include/c++/4.8/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1286:/usr/include/c++/4.8/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a pos is beyond the end of this
1287:/usr/include/c++/4.8/bits/basic_string.h ****        *  string.
1288:/usr/include/c++/4.8/bits/basic_string.h ****        *
1289:/usr/include/c++/4.8/bits/basic_string.h ****        *  Inserts the first @a n characters of @a __s starting at @a __pos.  If
1290:/usr/include/c++/4.8/bits/basic_string.h ****        *  adding characters causes the length to exceed max_size(),
1291:/usr/include/c++/4.8/bits/basic_string.h ****        *  length_error is thrown.  If @a __pos is beyond end(), out_of_range is
1292:/usr/include/c++/4.8/bits/basic_string.h ****        *  thrown.  The value of the string doesn't change if an error is
1293:/usr/include/c++/4.8/bits/basic_string.h ****        *  thrown.
1294:/usr/include/c++/4.8/bits/basic_string.h ****       */
1295:/usr/include/c++/4.8/bits/basic_string.h ****       basic_string&
1296:/usr/include/c++/4.8/bits/basic_string.h ****       insert(size_type __pos, const _CharT* __s)
1297:/usr/include/c++/4.8/bits/basic_string.h ****       {
1298:/usr/include/c++/4.8/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
1299:/usr/include/c++/4.8/bits/basic_string.h **** 	return this->insert(__pos, __s, traits_type::length(__s));
1300:/usr/include/c++/4.8/bits/basic_string.h ****       }
1301:/usr/include/c++/4.8/bits/basic_string.h **** 
1302:/usr/include/c++/4.8/bits/basic_string.h ****       /**
1303:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Insert multiple characters.
1304:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __pos  Index in string to insert at.
1305:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __n  Number of characters to insert
1306:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __c  The character to insert.
1307:/usr/include/c++/4.8/bits/basic_string.h ****        *  @return  Reference to this string.
1308:/usr/include/c++/4.8/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1309:/usr/include/c++/4.8/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a __pos is beyond the end of this
1310:/usr/include/c++/4.8/bits/basic_string.h ****        *  string.
1311:/usr/include/c++/4.8/bits/basic_string.h ****        *
1312:/usr/include/c++/4.8/bits/basic_string.h ****        *  Inserts @a __n copies of character @a __c starting at index
1313:/usr/include/c++/4.8/bits/basic_string.h ****        *  @a __pos.  If adding characters causes the length to exceed
1314:/usr/include/c++/4.8/bits/basic_string.h ****        *  max_size(), length_error is thrown.  If @a __pos > length(),
1315:/usr/include/c++/4.8/bits/basic_string.h ****        *  out_of_range is thrown.  The value of the string doesn't
1316:/usr/include/c++/4.8/bits/basic_string.h ****        *  change if an error is thrown.
1317:/usr/include/c++/4.8/bits/basic_string.h ****       */
1318:/usr/include/c++/4.8/bits/basic_string.h ****       basic_string&
1319:/usr/include/c++/4.8/bits/basic_string.h ****       insert(size_type __pos, size_type __n, _CharT __c)
1320:/usr/include/c++/4.8/bits/basic_string.h ****       { return _M_replace_aux(_M_check(__pos, "basic_string::insert"),
1321:/usr/include/c++/4.8/bits/basic_string.h **** 			      size_type(0), __n, __c); }
1322:/usr/include/c++/4.8/bits/basic_string.h **** 
1323:/usr/include/c++/4.8/bits/basic_string.h ****       /**
1324:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Insert one character.
1325:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __p  Iterator referencing position in string to insert at.
1326:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __c  The character to insert.
1327:/usr/include/c++/4.8/bits/basic_string.h ****        *  @return  Iterator referencing newly inserted char.
1328:/usr/include/c++/4.8/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1329:/usr/include/c++/4.8/bits/basic_string.h ****        *
1330:/usr/include/c++/4.8/bits/basic_string.h ****        *  Inserts character @a __c at position referenced by @a __p.
1331:/usr/include/c++/4.8/bits/basic_string.h ****        *  If adding character causes the length to exceed max_size(),
1332:/usr/include/c++/4.8/bits/basic_string.h ****        *  length_error is thrown.  If @a __p is beyond end of string,
1333:/usr/include/c++/4.8/bits/basic_string.h ****        *  out_of_range is thrown.  The value of the string doesn't
1334:/usr/include/c++/4.8/bits/basic_string.h ****        *  change if an error is thrown.
1335:/usr/include/c++/4.8/bits/basic_string.h ****       */
1336:/usr/include/c++/4.8/bits/basic_string.h ****       iterator
1337:/usr/include/c++/4.8/bits/basic_string.h ****       insert(iterator __p, _CharT __c)
1338:/usr/include/c++/4.8/bits/basic_string.h ****       {
1339:/usr/include/c++/4.8/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(__p >= _M_ibegin() && __p <= _M_iend());
1340:/usr/include/c++/4.8/bits/basic_string.h **** 	const size_type __pos = __p - _M_ibegin();
1341:/usr/include/c++/4.8/bits/basic_string.h **** 	_M_replace_aux(__pos, size_type(0), size_type(1), __c);
1342:/usr/include/c++/4.8/bits/basic_string.h **** 	_M_rep()->_M_set_leaked();
1343:/usr/include/c++/4.8/bits/basic_string.h **** 	return iterator(_M_data() + __pos);
1344:/usr/include/c++/4.8/bits/basic_string.h ****       }
1345:/usr/include/c++/4.8/bits/basic_string.h **** 
1346:/usr/include/c++/4.8/bits/basic_string.h ****       /**
1347:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Remove characters.
1348:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __pos  Index of first character to remove (default 0).
1349:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __n  Number of characters to remove (default remainder).
1350:/usr/include/c++/4.8/bits/basic_string.h ****        *  @return  Reference to this string.
1351:/usr/include/c++/4.8/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a pos is beyond the end of this
1352:/usr/include/c++/4.8/bits/basic_string.h ****        *  string.
1353:/usr/include/c++/4.8/bits/basic_string.h ****        *
1354:/usr/include/c++/4.8/bits/basic_string.h ****        *  Removes @a __n characters from this string starting at @a
1355:/usr/include/c++/4.8/bits/basic_string.h ****        *  __pos.  The length of the string is reduced by @a __n.  If
1356:/usr/include/c++/4.8/bits/basic_string.h ****        *  there are < @a __n characters to remove, the remainder of
1357:/usr/include/c++/4.8/bits/basic_string.h ****        *  the string is truncated.  If @a __p is beyond end of string,
1358:/usr/include/c++/4.8/bits/basic_string.h ****        *  out_of_range is thrown.  The value of the string doesn't
1359:/usr/include/c++/4.8/bits/basic_string.h ****        *  change if an error is thrown.
1360:/usr/include/c++/4.8/bits/basic_string.h ****       */
1361:/usr/include/c++/4.8/bits/basic_string.h ****       basic_string&
1362:/usr/include/c++/4.8/bits/basic_string.h ****       erase(size_type __pos = 0, size_type __n = npos)
1363:/usr/include/c++/4.8/bits/basic_string.h ****       { 
1364:/usr/include/c++/4.8/bits/basic_string.h **** 	_M_mutate(_M_check(__pos, "basic_string::erase"),
1365:/usr/include/c++/4.8/bits/basic_string.h **** 		  _M_limit(__pos, __n), size_type(0));
1366:/usr/include/c++/4.8/bits/basic_string.h **** 	return *this;
1367:/usr/include/c++/4.8/bits/basic_string.h ****       }
1368:/usr/include/c++/4.8/bits/basic_string.h **** 
1369:/usr/include/c++/4.8/bits/basic_string.h ****       /**
1370:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Remove one character.
1371:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __position  Iterator referencing the character to remove.
1372:/usr/include/c++/4.8/bits/basic_string.h ****        *  @return  iterator referencing same location after removal.
1373:/usr/include/c++/4.8/bits/basic_string.h ****        *
1374:/usr/include/c++/4.8/bits/basic_string.h ****        *  Removes the character at @a __position from this string. The value
1375:/usr/include/c++/4.8/bits/basic_string.h ****        *  of the string doesn't change if an error is thrown.
1376:/usr/include/c++/4.8/bits/basic_string.h ****       */
1377:/usr/include/c++/4.8/bits/basic_string.h ****       iterator
1378:/usr/include/c++/4.8/bits/basic_string.h ****       erase(iterator __position)
1379:/usr/include/c++/4.8/bits/basic_string.h ****       {
1380:/usr/include/c++/4.8/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(__position >= _M_ibegin()
1381:/usr/include/c++/4.8/bits/basic_string.h **** 				 && __position < _M_iend());
1382:/usr/include/c++/4.8/bits/basic_string.h **** 	const size_type __pos = __position - _M_ibegin();
1383:/usr/include/c++/4.8/bits/basic_string.h **** 	_M_mutate(__pos, size_type(1), size_type(0));
1384:/usr/include/c++/4.8/bits/basic_string.h **** 	_M_rep()->_M_set_leaked();
1385:/usr/include/c++/4.8/bits/basic_string.h **** 	return iterator(_M_data() + __pos);
1386:/usr/include/c++/4.8/bits/basic_string.h ****       }
1387:/usr/include/c++/4.8/bits/basic_string.h **** 
1388:/usr/include/c++/4.8/bits/basic_string.h ****       /**
1389:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Remove a range of characters.
1390:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __first  Iterator referencing the first character to remove.
1391:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __last  Iterator referencing the end of the range.
1392:/usr/include/c++/4.8/bits/basic_string.h ****        *  @return  Iterator referencing location of first after removal.
1393:/usr/include/c++/4.8/bits/basic_string.h ****        *
1394:/usr/include/c++/4.8/bits/basic_string.h ****        *  Removes the characters in the range [first,last) from this string.
1395:/usr/include/c++/4.8/bits/basic_string.h ****        *  The value of the string doesn't change if an error is thrown.
1396:/usr/include/c++/4.8/bits/basic_string.h ****       */
1397:/usr/include/c++/4.8/bits/basic_string.h ****       iterator
1398:/usr/include/c++/4.8/bits/basic_string.h ****       erase(iterator __first, iterator __last);
1399:/usr/include/c++/4.8/bits/basic_string.h ****  
1400:/usr/include/c++/4.8/bits/basic_string.h **** #if __cplusplus >= 201103L
1401:/usr/include/c++/4.8/bits/basic_string.h ****       /**
1402:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Remove the last character.
1403:/usr/include/c++/4.8/bits/basic_string.h ****        *
1404:/usr/include/c++/4.8/bits/basic_string.h ****        *  The string must be non-empty.
1405:/usr/include/c++/4.8/bits/basic_string.h ****        */
1406:/usr/include/c++/4.8/bits/basic_string.h ****       void
1407:/usr/include/c++/4.8/bits/basic_string.h ****       pop_back()
1408:/usr/include/c++/4.8/bits/basic_string.h ****       { erase(size()-1, 1); }
1409:/usr/include/c++/4.8/bits/basic_string.h **** #endif // C++11
1410:/usr/include/c++/4.8/bits/basic_string.h **** 
1411:/usr/include/c++/4.8/bits/basic_string.h ****       /**
1412:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Replace characters with value from another string.
1413:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __pos  Index of first character to replace.
1414:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __n  Number of characters to be replaced.
1415:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __str  String to insert.
1416:/usr/include/c++/4.8/bits/basic_string.h ****        *  @return  Reference to this string.
1417:/usr/include/c++/4.8/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a pos is beyond the end of this
1418:/usr/include/c++/4.8/bits/basic_string.h ****        *  string.
1419:/usr/include/c++/4.8/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1420:/usr/include/c++/4.8/bits/basic_string.h ****        *
1421:/usr/include/c++/4.8/bits/basic_string.h ****        *  Removes the characters in the range [__pos,__pos+__n) from
1422:/usr/include/c++/4.8/bits/basic_string.h ****        *  this string.  In place, the value of @a __str is inserted.
1423:/usr/include/c++/4.8/bits/basic_string.h ****        *  If @a __pos is beyond end of string, out_of_range is thrown.
1424:/usr/include/c++/4.8/bits/basic_string.h ****        *  If the length of the result exceeds max_size(), length_error
1425:/usr/include/c++/4.8/bits/basic_string.h ****        *  is thrown.  The value of the string doesn't change if an
1426:/usr/include/c++/4.8/bits/basic_string.h ****        *  error is thrown.
1427:/usr/include/c++/4.8/bits/basic_string.h ****       */
1428:/usr/include/c++/4.8/bits/basic_string.h ****       basic_string&
1429:/usr/include/c++/4.8/bits/basic_string.h ****       replace(size_type __pos, size_type __n, const basic_string& __str)
1430:/usr/include/c++/4.8/bits/basic_string.h ****       { return this->replace(__pos, __n, __str._M_data(), __str.size()); }
1431:/usr/include/c++/4.8/bits/basic_string.h **** 
1432:/usr/include/c++/4.8/bits/basic_string.h ****       /**
1433:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Replace characters with value from another string.
1434:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __pos1  Index of first character to replace.
1435:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __n1  Number of characters to be replaced.
1436:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __str  String to insert.
1437:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __pos2  Index of first character of str to use.
1438:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __n2  Number of characters from str to use.
1439:/usr/include/c++/4.8/bits/basic_string.h ****        *  @return  Reference to this string.
1440:/usr/include/c++/4.8/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a __pos1 > size() or @a __pos2 >
1441:/usr/include/c++/4.8/bits/basic_string.h ****        *  __str.size().
1442:/usr/include/c++/4.8/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1443:/usr/include/c++/4.8/bits/basic_string.h ****        *
1444:/usr/include/c++/4.8/bits/basic_string.h ****        *  Removes the characters in the range [__pos1,__pos1 + n) from this
1445:/usr/include/c++/4.8/bits/basic_string.h ****        *  string.  In place, the value of @a __str is inserted.  If @a __pos is
1446:/usr/include/c++/4.8/bits/basic_string.h ****        *  beyond end of string, out_of_range is thrown.  If the length of the
1447:/usr/include/c++/4.8/bits/basic_string.h ****        *  result exceeds max_size(), length_error is thrown.  The value of the
1448:/usr/include/c++/4.8/bits/basic_string.h ****        *  string doesn't change if an error is thrown.
1449:/usr/include/c++/4.8/bits/basic_string.h ****       */
1450:/usr/include/c++/4.8/bits/basic_string.h ****       basic_string&
1451:/usr/include/c++/4.8/bits/basic_string.h ****       replace(size_type __pos1, size_type __n1, const basic_string& __str,
1452:/usr/include/c++/4.8/bits/basic_string.h **** 	      size_type __pos2, size_type __n2)
1453:/usr/include/c++/4.8/bits/basic_string.h ****       { return this->replace(__pos1, __n1, __str._M_data()
1454:/usr/include/c++/4.8/bits/basic_string.h **** 			     + __str._M_check(__pos2, "basic_string::replace"),
1455:/usr/include/c++/4.8/bits/basic_string.h **** 			     __str._M_limit(__pos2, __n2)); }
1456:/usr/include/c++/4.8/bits/basic_string.h **** 
1457:/usr/include/c++/4.8/bits/basic_string.h ****       /**
1458:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Replace characters with value of a C substring.
1459:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __pos  Index of first character to replace.
1460:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __n1  Number of characters to be replaced.
1461:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __s  C string to insert.
1462:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __n2  Number of characters from @a s to use.
1463:/usr/include/c++/4.8/bits/basic_string.h ****        *  @return  Reference to this string.
1464:/usr/include/c++/4.8/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a pos1 > size().
1465:/usr/include/c++/4.8/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1466:/usr/include/c++/4.8/bits/basic_string.h ****        *
1467:/usr/include/c++/4.8/bits/basic_string.h ****        *  Removes the characters in the range [__pos,__pos + __n1)
1468:/usr/include/c++/4.8/bits/basic_string.h ****        *  from this string.  In place, the first @a __n2 characters of
1469:/usr/include/c++/4.8/bits/basic_string.h ****        *  @a __s are inserted, or all of @a __s if @a __n2 is too large.  If
1470:/usr/include/c++/4.8/bits/basic_string.h ****        *  @a __pos is beyond end of string, out_of_range is thrown.  If
1471:/usr/include/c++/4.8/bits/basic_string.h ****        *  the length of result exceeds max_size(), length_error is
1472:/usr/include/c++/4.8/bits/basic_string.h ****        *  thrown.  The value of the string doesn't change if an error
1473:/usr/include/c++/4.8/bits/basic_string.h ****        *  is thrown.
1474:/usr/include/c++/4.8/bits/basic_string.h ****       */
1475:/usr/include/c++/4.8/bits/basic_string.h ****       basic_string&
1476:/usr/include/c++/4.8/bits/basic_string.h ****       replace(size_type __pos, size_type __n1, const _CharT* __s,
1477:/usr/include/c++/4.8/bits/basic_string.h **** 	      size_type __n2);
1478:/usr/include/c++/4.8/bits/basic_string.h **** 
1479:/usr/include/c++/4.8/bits/basic_string.h ****       /**
1480:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Replace characters with value of a C string.
1481:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __pos  Index of first character to replace.
1482:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __n1  Number of characters to be replaced.
1483:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __s  C string to insert.
1484:/usr/include/c++/4.8/bits/basic_string.h ****        *  @return  Reference to this string.
1485:/usr/include/c++/4.8/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a pos > size().
1486:/usr/include/c++/4.8/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1487:/usr/include/c++/4.8/bits/basic_string.h ****        *
1488:/usr/include/c++/4.8/bits/basic_string.h ****        *  Removes the characters in the range [__pos,__pos + __n1)
1489:/usr/include/c++/4.8/bits/basic_string.h ****        *  from this string.  In place, the characters of @a __s are
1490:/usr/include/c++/4.8/bits/basic_string.h ****        *  inserted.  If @a __pos is beyond end of string, out_of_range
1491:/usr/include/c++/4.8/bits/basic_string.h ****        *  is thrown.  If the length of result exceeds max_size(),
1492:/usr/include/c++/4.8/bits/basic_string.h ****        *  length_error is thrown.  The value of the string doesn't
1493:/usr/include/c++/4.8/bits/basic_string.h ****        *  change if an error is thrown.
1494:/usr/include/c++/4.8/bits/basic_string.h ****       */
1495:/usr/include/c++/4.8/bits/basic_string.h ****       basic_string&
1496:/usr/include/c++/4.8/bits/basic_string.h ****       replace(size_type __pos, size_type __n1, const _CharT* __s)
1497:/usr/include/c++/4.8/bits/basic_string.h ****       {
1498:/usr/include/c++/4.8/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
1499:/usr/include/c++/4.8/bits/basic_string.h **** 	return this->replace(__pos, __n1, __s, traits_type::length(__s));
1500:/usr/include/c++/4.8/bits/basic_string.h ****       }
1501:/usr/include/c++/4.8/bits/basic_string.h **** 
1502:/usr/include/c++/4.8/bits/basic_string.h ****       /**
1503:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Replace characters with multiple characters.
1504:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __pos  Index of first character to replace.
1505:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __n1  Number of characters to be replaced.
1506:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __n2  Number of characters to insert.
1507:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __c  Character to insert.
1508:/usr/include/c++/4.8/bits/basic_string.h ****        *  @return  Reference to this string.
1509:/usr/include/c++/4.8/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a __pos > size().
1510:/usr/include/c++/4.8/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1511:/usr/include/c++/4.8/bits/basic_string.h ****        *
1512:/usr/include/c++/4.8/bits/basic_string.h ****        *  Removes the characters in the range [pos,pos + n1) from this
1513:/usr/include/c++/4.8/bits/basic_string.h ****        *  string.  In place, @a __n2 copies of @a __c are inserted.
1514:/usr/include/c++/4.8/bits/basic_string.h ****        *  If @a __pos is beyond end of string, out_of_range is thrown.
1515:/usr/include/c++/4.8/bits/basic_string.h ****        *  If the length of result exceeds max_size(), length_error is
1516:/usr/include/c++/4.8/bits/basic_string.h ****        *  thrown.  The value of the string doesn't change if an error
1517:/usr/include/c++/4.8/bits/basic_string.h ****        *  is thrown.
1518:/usr/include/c++/4.8/bits/basic_string.h ****       */
1519:/usr/include/c++/4.8/bits/basic_string.h ****       basic_string&
1520:/usr/include/c++/4.8/bits/basic_string.h ****       replace(size_type __pos, size_type __n1, size_type __n2, _CharT __c)
1521:/usr/include/c++/4.8/bits/basic_string.h ****       { return _M_replace_aux(_M_check(__pos, "basic_string::replace"),
1522:/usr/include/c++/4.8/bits/basic_string.h **** 			      _M_limit(__pos, __n1), __n2, __c); }
1523:/usr/include/c++/4.8/bits/basic_string.h **** 
1524:/usr/include/c++/4.8/bits/basic_string.h ****       /**
1525:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Replace range of characters with string.
1526:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
1527:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
1528:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __str  String value to insert.
1529:/usr/include/c++/4.8/bits/basic_string.h ****        *  @return  Reference to this string.
1530:/usr/include/c++/4.8/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1531:/usr/include/c++/4.8/bits/basic_string.h ****        *
1532:/usr/include/c++/4.8/bits/basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
1533:/usr/include/c++/4.8/bits/basic_string.h ****        *  the value of @a __str is inserted.  If the length of result
1534:/usr/include/c++/4.8/bits/basic_string.h ****        *  exceeds max_size(), length_error is thrown.  The value of
1535:/usr/include/c++/4.8/bits/basic_string.h ****        *  the string doesn't change if an error is thrown.
1536:/usr/include/c++/4.8/bits/basic_string.h ****       */
1537:/usr/include/c++/4.8/bits/basic_string.h ****       basic_string&
1538:/usr/include/c++/4.8/bits/basic_string.h ****       replace(iterator __i1, iterator __i2, const basic_string& __str)
1539:/usr/include/c++/4.8/bits/basic_string.h ****       { return this->replace(__i1, __i2, __str._M_data(), __str.size()); }
1540:/usr/include/c++/4.8/bits/basic_string.h **** 
1541:/usr/include/c++/4.8/bits/basic_string.h ****       /**
1542:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Replace range of characters with C substring.
1543:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
1544:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
1545:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __s  C string value to insert.
1546:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __n  Number of characters from s to insert.
1547:/usr/include/c++/4.8/bits/basic_string.h ****        *  @return  Reference to this string.
1548:/usr/include/c++/4.8/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1549:/usr/include/c++/4.8/bits/basic_string.h ****        *
1550:/usr/include/c++/4.8/bits/basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
1551:/usr/include/c++/4.8/bits/basic_string.h ****        *  the first @a __n characters of @a __s are inserted.  If the
1552:/usr/include/c++/4.8/bits/basic_string.h ****        *  length of result exceeds max_size(), length_error is thrown.
1553:/usr/include/c++/4.8/bits/basic_string.h ****        *  The value of the string doesn't change if an error is
1554:/usr/include/c++/4.8/bits/basic_string.h ****        *  thrown.
1555:/usr/include/c++/4.8/bits/basic_string.h ****       */
1556:/usr/include/c++/4.8/bits/basic_string.h ****       basic_string&
1557:/usr/include/c++/4.8/bits/basic_string.h ****       replace(iterator __i1, iterator __i2, const _CharT* __s, size_type __n)
1558:/usr/include/c++/4.8/bits/basic_string.h ****       {
1559:/usr/include/c++/4.8/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(_M_ibegin() <= __i1 && __i1 <= __i2
1560:/usr/include/c++/4.8/bits/basic_string.h **** 				 && __i2 <= _M_iend());
1561:/usr/include/c++/4.8/bits/basic_string.h **** 	return this->replace(__i1 - _M_ibegin(), __i2 - __i1, __s, __n);
1562:/usr/include/c++/4.8/bits/basic_string.h ****       }
1563:/usr/include/c++/4.8/bits/basic_string.h **** 
1564:/usr/include/c++/4.8/bits/basic_string.h ****       /**
1565:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Replace range of characters with C string.
1566:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
1567:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
1568:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __s  C string value to insert.
1569:/usr/include/c++/4.8/bits/basic_string.h ****        *  @return  Reference to this string.
1570:/usr/include/c++/4.8/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1571:/usr/include/c++/4.8/bits/basic_string.h ****        *
1572:/usr/include/c++/4.8/bits/basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
1573:/usr/include/c++/4.8/bits/basic_string.h ****        *  the characters of @a __s are inserted.  If the length of
1574:/usr/include/c++/4.8/bits/basic_string.h ****        *  result exceeds max_size(), length_error is thrown.  The
1575:/usr/include/c++/4.8/bits/basic_string.h ****        *  value of the string doesn't change if an error is thrown.
1576:/usr/include/c++/4.8/bits/basic_string.h ****       */
1577:/usr/include/c++/4.8/bits/basic_string.h ****       basic_string&
1578:/usr/include/c++/4.8/bits/basic_string.h ****       replace(iterator __i1, iterator __i2, const _CharT* __s)
1579:/usr/include/c++/4.8/bits/basic_string.h ****       {
1580:/usr/include/c++/4.8/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
1581:/usr/include/c++/4.8/bits/basic_string.h **** 	return this->replace(__i1, __i2, __s, traits_type::length(__s));
1582:/usr/include/c++/4.8/bits/basic_string.h ****       }
1583:/usr/include/c++/4.8/bits/basic_string.h **** 
1584:/usr/include/c++/4.8/bits/basic_string.h ****       /**
1585:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Replace range of characters with multiple characters
1586:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
1587:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
1588:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __n  Number of characters to insert.
1589:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __c  Character to insert.
1590:/usr/include/c++/4.8/bits/basic_string.h ****        *  @return  Reference to this string.
1591:/usr/include/c++/4.8/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1592:/usr/include/c++/4.8/bits/basic_string.h ****        *
1593:/usr/include/c++/4.8/bits/basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
1594:/usr/include/c++/4.8/bits/basic_string.h ****        *  @a __n copies of @a __c are inserted.  If the length of
1595:/usr/include/c++/4.8/bits/basic_string.h ****        *  result exceeds max_size(), length_error is thrown.  The
1596:/usr/include/c++/4.8/bits/basic_string.h ****        *  value of the string doesn't change if an error is thrown.
1597:/usr/include/c++/4.8/bits/basic_string.h ****       */
1598:/usr/include/c++/4.8/bits/basic_string.h ****       basic_string&
1599:/usr/include/c++/4.8/bits/basic_string.h ****       replace(iterator __i1, iterator __i2, size_type __n, _CharT __c)
1600:/usr/include/c++/4.8/bits/basic_string.h ****       {
1601:/usr/include/c++/4.8/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(_M_ibegin() <= __i1 && __i1 <= __i2
1602:/usr/include/c++/4.8/bits/basic_string.h **** 				 && __i2 <= _M_iend());
1603:/usr/include/c++/4.8/bits/basic_string.h **** 	return _M_replace_aux(__i1 - _M_ibegin(), __i2 - __i1, __n, __c);
1604:/usr/include/c++/4.8/bits/basic_string.h ****       }
1605:/usr/include/c++/4.8/bits/basic_string.h **** 
1606:/usr/include/c++/4.8/bits/basic_string.h ****       /**
1607:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Replace range of characters with range.
1608:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
1609:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
1610:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __k1  Iterator referencing start of range to insert.
1611:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __k2  Iterator referencing end of range to insert.
1612:/usr/include/c++/4.8/bits/basic_string.h ****        *  @return  Reference to this string.
1613:/usr/include/c++/4.8/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1614:/usr/include/c++/4.8/bits/basic_string.h ****        *
1615:/usr/include/c++/4.8/bits/basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
1616:/usr/include/c++/4.8/bits/basic_string.h ****        *  characters in the range [__k1,__k2) are inserted.  If the
1617:/usr/include/c++/4.8/bits/basic_string.h ****        *  length of result exceeds max_size(), length_error is thrown.
1618:/usr/include/c++/4.8/bits/basic_string.h ****        *  The value of the string doesn't change if an error is
1619:/usr/include/c++/4.8/bits/basic_string.h ****        *  thrown.
1620:/usr/include/c++/4.8/bits/basic_string.h ****       */
1621:/usr/include/c++/4.8/bits/basic_string.h ****       template<class _InputIterator>
1622:/usr/include/c++/4.8/bits/basic_string.h ****         basic_string&
1623:/usr/include/c++/4.8/bits/basic_string.h ****         replace(iterator __i1, iterator __i2,
1624:/usr/include/c++/4.8/bits/basic_string.h **** 		_InputIterator __k1, _InputIterator __k2)
1625:/usr/include/c++/4.8/bits/basic_string.h ****         {
1626:/usr/include/c++/4.8/bits/basic_string.h **** 	  _GLIBCXX_DEBUG_PEDASSERT(_M_ibegin() <= __i1 && __i1 <= __i2
1627:/usr/include/c++/4.8/bits/basic_string.h **** 				   && __i2 <= _M_iend());
1628:/usr/include/c++/4.8/bits/basic_string.h **** 	  __glibcxx_requires_valid_range(__k1, __k2);
1629:/usr/include/c++/4.8/bits/basic_string.h **** 	  typedef typename std::__is_integer<_InputIterator>::__type _Integral;
1630:/usr/include/c++/4.8/bits/basic_string.h **** 	  return _M_replace_dispatch(__i1, __i2, __k1, __k2, _Integral());
1631:/usr/include/c++/4.8/bits/basic_string.h **** 	}
1632:/usr/include/c++/4.8/bits/basic_string.h **** 
1633:/usr/include/c++/4.8/bits/basic_string.h ****       // Specializations for the common case of pointer and iterator:
1634:/usr/include/c++/4.8/bits/basic_string.h ****       // useful to avoid the overhead of temporary buffering in _M_replace.
1635:/usr/include/c++/4.8/bits/basic_string.h ****       basic_string&
1636:/usr/include/c++/4.8/bits/basic_string.h ****       replace(iterator __i1, iterator __i2, _CharT* __k1, _CharT* __k2)
1637:/usr/include/c++/4.8/bits/basic_string.h ****       {
1638:/usr/include/c++/4.8/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(_M_ibegin() <= __i1 && __i1 <= __i2
1639:/usr/include/c++/4.8/bits/basic_string.h **** 				 && __i2 <= _M_iend());
1640:/usr/include/c++/4.8/bits/basic_string.h **** 	__glibcxx_requires_valid_range(__k1, __k2);
1641:/usr/include/c++/4.8/bits/basic_string.h **** 	return this->replace(__i1 - _M_ibegin(), __i2 - __i1,
1642:/usr/include/c++/4.8/bits/basic_string.h **** 			     __k1, __k2 - __k1);
1643:/usr/include/c++/4.8/bits/basic_string.h ****       }
1644:/usr/include/c++/4.8/bits/basic_string.h **** 
1645:/usr/include/c++/4.8/bits/basic_string.h ****       basic_string&
1646:/usr/include/c++/4.8/bits/basic_string.h ****       replace(iterator __i1, iterator __i2,
1647:/usr/include/c++/4.8/bits/basic_string.h **** 	      const _CharT* __k1, const _CharT* __k2)
1648:/usr/include/c++/4.8/bits/basic_string.h ****       {
1649:/usr/include/c++/4.8/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(_M_ibegin() <= __i1 && __i1 <= __i2
1650:/usr/include/c++/4.8/bits/basic_string.h **** 				 && __i2 <= _M_iend());
1651:/usr/include/c++/4.8/bits/basic_string.h **** 	__glibcxx_requires_valid_range(__k1, __k2);
1652:/usr/include/c++/4.8/bits/basic_string.h **** 	return this->replace(__i1 - _M_ibegin(), __i2 - __i1,
1653:/usr/include/c++/4.8/bits/basic_string.h **** 			     __k1, __k2 - __k1);
1654:/usr/include/c++/4.8/bits/basic_string.h ****       }
1655:/usr/include/c++/4.8/bits/basic_string.h **** 
1656:/usr/include/c++/4.8/bits/basic_string.h ****       basic_string&
1657:/usr/include/c++/4.8/bits/basic_string.h ****       replace(iterator __i1, iterator __i2, iterator __k1, iterator __k2)
1658:/usr/include/c++/4.8/bits/basic_string.h ****       {
1659:/usr/include/c++/4.8/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(_M_ibegin() <= __i1 && __i1 <= __i2
1660:/usr/include/c++/4.8/bits/basic_string.h **** 				 && __i2 <= _M_iend());
1661:/usr/include/c++/4.8/bits/basic_string.h **** 	__glibcxx_requires_valid_range(__k1, __k2);
1662:/usr/include/c++/4.8/bits/basic_string.h **** 	return this->replace(__i1 - _M_ibegin(), __i2 - __i1,
1663:/usr/include/c++/4.8/bits/basic_string.h **** 			     __k1.base(), __k2 - __k1);
1664:/usr/include/c++/4.8/bits/basic_string.h ****       }
1665:/usr/include/c++/4.8/bits/basic_string.h **** 
1666:/usr/include/c++/4.8/bits/basic_string.h ****       basic_string&
1667:/usr/include/c++/4.8/bits/basic_string.h ****       replace(iterator __i1, iterator __i2,
1668:/usr/include/c++/4.8/bits/basic_string.h **** 	      const_iterator __k1, const_iterator __k2)
1669:/usr/include/c++/4.8/bits/basic_string.h ****       {
1670:/usr/include/c++/4.8/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(_M_ibegin() <= __i1 && __i1 <= __i2
1671:/usr/include/c++/4.8/bits/basic_string.h **** 				 && __i2 <= _M_iend());
1672:/usr/include/c++/4.8/bits/basic_string.h **** 	__glibcxx_requires_valid_range(__k1, __k2);
1673:/usr/include/c++/4.8/bits/basic_string.h **** 	return this->replace(__i1 - _M_ibegin(), __i2 - __i1,
1674:/usr/include/c++/4.8/bits/basic_string.h **** 			     __k1.base(), __k2 - __k1);
1675:/usr/include/c++/4.8/bits/basic_string.h ****       }
1676:/usr/include/c++/4.8/bits/basic_string.h ****       
1677:/usr/include/c++/4.8/bits/basic_string.h **** #if __cplusplus >= 201103L
1678:/usr/include/c++/4.8/bits/basic_string.h ****       /**
1679:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Replace range of characters with initializer_list.
1680:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
1681:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
1682:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __l  The initializer_list of characters to insert.
1683:/usr/include/c++/4.8/bits/basic_string.h ****        *  @return  Reference to this string.
1684:/usr/include/c++/4.8/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1685:/usr/include/c++/4.8/bits/basic_string.h ****        *
1686:/usr/include/c++/4.8/bits/basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
1687:/usr/include/c++/4.8/bits/basic_string.h ****        *  characters in the range [__k1,__k2) are inserted.  If the
1688:/usr/include/c++/4.8/bits/basic_string.h ****        *  length of result exceeds max_size(), length_error is thrown.
1689:/usr/include/c++/4.8/bits/basic_string.h ****        *  The value of the string doesn't change if an error is
1690:/usr/include/c++/4.8/bits/basic_string.h ****        *  thrown.
1691:/usr/include/c++/4.8/bits/basic_string.h ****       */
1692:/usr/include/c++/4.8/bits/basic_string.h ****       basic_string& replace(iterator __i1, iterator __i2,
1693:/usr/include/c++/4.8/bits/basic_string.h **** 			    initializer_list<_CharT> __l)
1694:/usr/include/c++/4.8/bits/basic_string.h ****       { return this->replace(__i1, __i2, __l.begin(), __l.end()); }
1695:/usr/include/c++/4.8/bits/basic_string.h **** #endif // C++11
1696:/usr/include/c++/4.8/bits/basic_string.h **** 
1697:/usr/include/c++/4.8/bits/basic_string.h ****     private:
1698:/usr/include/c++/4.8/bits/basic_string.h ****       template<class _Integer>
1699:/usr/include/c++/4.8/bits/basic_string.h **** 	basic_string&
1700:/usr/include/c++/4.8/bits/basic_string.h **** 	_M_replace_dispatch(iterator __i1, iterator __i2, _Integer __n,
1701:/usr/include/c++/4.8/bits/basic_string.h **** 			    _Integer __val, __true_type)
1702:/usr/include/c++/4.8/bits/basic_string.h ****         { return _M_replace_aux(__i1 - _M_ibegin(), __i2 - __i1, __n, __val); }
1703:/usr/include/c++/4.8/bits/basic_string.h **** 
1704:/usr/include/c++/4.8/bits/basic_string.h ****       template<class _InputIterator>
1705:/usr/include/c++/4.8/bits/basic_string.h **** 	basic_string&
1706:/usr/include/c++/4.8/bits/basic_string.h **** 	_M_replace_dispatch(iterator __i1, iterator __i2, _InputIterator __k1,
1707:/usr/include/c++/4.8/bits/basic_string.h **** 			    _InputIterator __k2, __false_type);
1708:/usr/include/c++/4.8/bits/basic_string.h **** 
1709:/usr/include/c++/4.8/bits/basic_string.h ****       basic_string&
1710:/usr/include/c++/4.8/bits/basic_string.h ****       _M_replace_aux(size_type __pos1, size_type __n1, size_type __n2,
1711:/usr/include/c++/4.8/bits/basic_string.h **** 		     _CharT __c);
1712:/usr/include/c++/4.8/bits/basic_string.h **** 
1713:/usr/include/c++/4.8/bits/basic_string.h ****       basic_string&
1714:/usr/include/c++/4.8/bits/basic_string.h ****       _M_replace_safe(size_type __pos1, size_type __n1, const _CharT* __s,
1715:/usr/include/c++/4.8/bits/basic_string.h **** 		      size_type __n2);
1716:/usr/include/c++/4.8/bits/basic_string.h **** 
1717:/usr/include/c++/4.8/bits/basic_string.h ****       // _S_construct_aux is used to implement the 21.3.1 para 15 which
1718:/usr/include/c++/4.8/bits/basic_string.h ****       // requires special behaviour if _InIter is an integral type
1719:/usr/include/c++/4.8/bits/basic_string.h ****       template<class _InIterator>
1720:/usr/include/c++/4.8/bits/basic_string.h ****         static _CharT*
1721:/usr/include/c++/4.8/bits/basic_string.h ****         _S_construct_aux(_InIterator __beg, _InIterator __end,
1722:/usr/include/c++/4.8/bits/basic_string.h **** 			 const _Alloc& __a, __false_type)
1723:/usr/include/c++/4.8/bits/basic_string.h **** 	{
1724:/usr/include/c++/4.8/bits/basic_string.h ****           typedef typename iterator_traits<_InIterator>::iterator_category _Tag;
1725:/usr/include/c++/4.8/bits/basic_string.h ****           return _S_construct(__beg, __end, __a, _Tag());
1726:/usr/include/c++/4.8/bits/basic_string.h **** 	}
1727:/usr/include/c++/4.8/bits/basic_string.h **** 
1728:/usr/include/c++/4.8/bits/basic_string.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
1729:/usr/include/c++/4.8/bits/basic_string.h ****       // 438. Ambiguity in the "do the right thing" clause
1730:/usr/include/c++/4.8/bits/basic_string.h ****       template<class _Integer>
1731:/usr/include/c++/4.8/bits/basic_string.h ****         static _CharT*
1732:/usr/include/c++/4.8/bits/basic_string.h ****         _S_construct_aux(_Integer __beg, _Integer __end,
1733:/usr/include/c++/4.8/bits/basic_string.h **** 			 const _Alloc& __a, __true_type)
1734:/usr/include/c++/4.8/bits/basic_string.h ****         { return _S_construct_aux_2(static_cast<size_type>(__beg),
1735:/usr/include/c++/4.8/bits/basic_string.h **** 				    __end, __a); }
1736:/usr/include/c++/4.8/bits/basic_string.h **** 
1737:/usr/include/c++/4.8/bits/basic_string.h ****       static _CharT*
1738:/usr/include/c++/4.8/bits/basic_string.h ****       _S_construct_aux_2(size_type __req, _CharT __c, const _Alloc& __a)
1739:/usr/include/c++/4.8/bits/basic_string.h ****       { return _S_construct(__req, __c, __a); }
1740:/usr/include/c++/4.8/bits/basic_string.h **** 
1741:/usr/include/c++/4.8/bits/basic_string.h ****       template<class _InIterator>
1742:/usr/include/c++/4.8/bits/basic_string.h ****         static _CharT*
1743:/usr/include/c++/4.8/bits/basic_string.h ****         _S_construct(_InIterator __beg, _InIterator __end, const _Alloc& __a)
1744:/usr/include/c++/4.8/bits/basic_string.h **** 	{
1745:/usr/include/c++/4.8/bits/basic_string.h **** 	  typedef typename std::__is_integer<_InIterator>::__type _Integral;
1746:/usr/include/c++/4.8/bits/basic_string.h **** 	  return _S_construct_aux(__beg, __end, __a, _Integral());
1747:/usr/include/c++/4.8/bits/basic_string.h ****         }
1748:/usr/include/c++/4.8/bits/basic_string.h **** 
1749:/usr/include/c++/4.8/bits/basic_string.h ****       // For Input Iterators, used in istreambuf_iterators, etc.
1750:/usr/include/c++/4.8/bits/basic_string.h ****       template<class _InIterator>
1751:/usr/include/c++/4.8/bits/basic_string.h ****         static _CharT*
1752:/usr/include/c++/4.8/bits/basic_string.h ****          _S_construct(_InIterator __beg, _InIterator __end, const _Alloc& __a,
1753:/usr/include/c++/4.8/bits/basic_string.h **** 		      input_iterator_tag);
1754:/usr/include/c++/4.8/bits/basic_string.h **** 
1755:/usr/include/c++/4.8/bits/basic_string.h ****       // For forward_iterators up to random_access_iterators, used for
1756:/usr/include/c++/4.8/bits/basic_string.h ****       // string::iterator, _CharT*, etc.
1757:/usr/include/c++/4.8/bits/basic_string.h ****       template<class _FwdIterator>
1758:/usr/include/c++/4.8/bits/basic_string.h ****         static _CharT*
1759:/usr/include/c++/4.8/bits/basic_string.h ****         _S_construct(_FwdIterator __beg, _FwdIterator __end, const _Alloc& __a,
1760:/usr/include/c++/4.8/bits/basic_string.h **** 		     forward_iterator_tag);
1761:/usr/include/c++/4.8/bits/basic_string.h **** 
1762:/usr/include/c++/4.8/bits/basic_string.h ****       static _CharT*
1763:/usr/include/c++/4.8/bits/basic_string.h ****       _S_construct(size_type __req, _CharT __c, const _Alloc& __a);
1764:/usr/include/c++/4.8/bits/basic_string.h **** 
1765:/usr/include/c++/4.8/bits/basic_string.h ****     public:
1766:/usr/include/c++/4.8/bits/basic_string.h **** 
1767:/usr/include/c++/4.8/bits/basic_string.h ****       /**
1768:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Copy substring into C string.
1769:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __s  C string to copy value into.
1770:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __n  Number of characters to copy.
1771:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __pos  Index of first character to copy.
1772:/usr/include/c++/4.8/bits/basic_string.h ****        *  @return  Number of characters actually copied
1773:/usr/include/c++/4.8/bits/basic_string.h ****        *  @throw  std::out_of_range  If __pos > size().
1774:/usr/include/c++/4.8/bits/basic_string.h ****        *
1775:/usr/include/c++/4.8/bits/basic_string.h ****        *  Copies up to @a __n characters starting at @a __pos into the
1776:/usr/include/c++/4.8/bits/basic_string.h ****        *  C string @a __s.  If @a __pos is %greater than size(),
1777:/usr/include/c++/4.8/bits/basic_string.h ****        *  out_of_range is thrown.
1778:/usr/include/c++/4.8/bits/basic_string.h ****       */
1779:/usr/include/c++/4.8/bits/basic_string.h ****       size_type
1780:/usr/include/c++/4.8/bits/basic_string.h ****       copy(_CharT* __s, size_type __n, size_type __pos = 0) const;
1781:/usr/include/c++/4.8/bits/basic_string.h **** 
1782:/usr/include/c++/4.8/bits/basic_string.h ****       /**
1783:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Swap contents with another string.
1784:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __s  String to swap with.
1785:/usr/include/c++/4.8/bits/basic_string.h ****        *
1786:/usr/include/c++/4.8/bits/basic_string.h ****        *  Exchanges the contents of this string with that of @a __s in constant
1787:/usr/include/c++/4.8/bits/basic_string.h ****        *  time.
1788:/usr/include/c++/4.8/bits/basic_string.h ****       */
1789:/usr/include/c++/4.8/bits/basic_string.h ****       void
1790:/usr/include/c++/4.8/bits/basic_string.h ****       swap(basic_string& __s);
1791:/usr/include/c++/4.8/bits/basic_string.h **** 
1792:/usr/include/c++/4.8/bits/basic_string.h ****       // String operations:
1793:/usr/include/c++/4.8/bits/basic_string.h ****       /**
1794:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Return const pointer to null-terminated contents.
1795:/usr/include/c++/4.8/bits/basic_string.h ****        *
1796:/usr/include/c++/4.8/bits/basic_string.h ****        *  This is a handle to internal data.  Do not modify or dire things may
1797:/usr/include/c++/4.8/bits/basic_string.h ****        *  happen.
1798:/usr/include/c++/4.8/bits/basic_string.h ****       */
1799:/usr/include/c++/4.8/bits/basic_string.h ****       const _CharT*
1800:/usr/include/c++/4.8/bits/basic_string.h ****       c_str() const _GLIBCXX_NOEXCEPT
1801:/usr/include/c++/4.8/bits/basic_string.h ****       { return _M_data(); }
1802:/usr/include/c++/4.8/bits/basic_string.h **** 
1803:/usr/include/c++/4.8/bits/basic_string.h ****       /**
1804:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Return const pointer to contents.
1805:/usr/include/c++/4.8/bits/basic_string.h ****        *
1806:/usr/include/c++/4.8/bits/basic_string.h ****        *  This is a handle to internal data.  Do not modify or dire things may
1807:/usr/include/c++/4.8/bits/basic_string.h ****        *  happen.
1808:/usr/include/c++/4.8/bits/basic_string.h ****       */
1809:/usr/include/c++/4.8/bits/basic_string.h ****       const _CharT*
1810:/usr/include/c++/4.8/bits/basic_string.h ****       data() const _GLIBCXX_NOEXCEPT
1811:/usr/include/c++/4.8/bits/basic_string.h ****       { return _M_data(); }
1812:/usr/include/c++/4.8/bits/basic_string.h **** 
1813:/usr/include/c++/4.8/bits/basic_string.h ****       /**
1814:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Return copy of allocator used to construct this string.
1815:/usr/include/c++/4.8/bits/basic_string.h ****       */
1816:/usr/include/c++/4.8/bits/basic_string.h ****       allocator_type
1817:/usr/include/c++/4.8/bits/basic_string.h ****       get_allocator() const _GLIBCXX_NOEXCEPT
1818:/usr/include/c++/4.8/bits/basic_string.h ****       { return _M_dataplus; }
1819:/usr/include/c++/4.8/bits/basic_string.h **** 
1820:/usr/include/c++/4.8/bits/basic_string.h ****       /**
1821:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Find position of a C substring.
1822:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __s  C string to locate.
1823:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __pos  Index of character to search from.
1824:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __n  Number of characters from @a s to search for.
1825:/usr/include/c++/4.8/bits/basic_string.h ****        *  @return  Index of start of first occurrence.
1826:/usr/include/c++/4.8/bits/basic_string.h ****        *
1827:/usr/include/c++/4.8/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for the first @a
1828:/usr/include/c++/4.8/bits/basic_string.h ****        *  __n characters in @a __s within this string.  If found,
1829:/usr/include/c++/4.8/bits/basic_string.h ****        *  returns the index where it begins.  If not found, returns
1830:/usr/include/c++/4.8/bits/basic_string.h ****        *  npos.
1831:/usr/include/c++/4.8/bits/basic_string.h ****       */
1832:/usr/include/c++/4.8/bits/basic_string.h ****       size_type
1833:/usr/include/c++/4.8/bits/basic_string.h ****       find(const _CharT* __s, size_type __pos, size_type __n) const;
1834:/usr/include/c++/4.8/bits/basic_string.h **** 
1835:/usr/include/c++/4.8/bits/basic_string.h ****       /**
1836:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Find position of a string.
1837:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __str  String to locate.
1838:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
1839:/usr/include/c++/4.8/bits/basic_string.h ****        *  @return  Index of start of first occurrence.
1840:/usr/include/c++/4.8/bits/basic_string.h ****        *
1841:/usr/include/c++/4.8/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for value of @a __str within
1842:/usr/include/c++/4.8/bits/basic_string.h ****        *  this string.  If found, returns the index where it begins.  If not
1843:/usr/include/c++/4.8/bits/basic_string.h ****        *  found, returns npos.
1844:/usr/include/c++/4.8/bits/basic_string.h ****       */
1845:/usr/include/c++/4.8/bits/basic_string.h ****       size_type
1846:/usr/include/c++/4.8/bits/basic_string.h ****       find(const basic_string& __str, size_type __pos = 0) const
1847:/usr/include/c++/4.8/bits/basic_string.h **** 	_GLIBCXX_NOEXCEPT
1848:/usr/include/c++/4.8/bits/basic_string.h ****       { return this->find(__str.data(), __pos, __str.size()); }
1849:/usr/include/c++/4.8/bits/basic_string.h **** 
1850:/usr/include/c++/4.8/bits/basic_string.h ****       /**
1851:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Find position of a C string.
1852:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __s  C string to locate.
1853:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
1854:/usr/include/c++/4.8/bits/basic_string.h ****        *  @return  Index of start of first occurrence.
1855:/usr/include/c++/4.8/bits/basic_string.h ****        *
1856:/usr/include/c++/4.8/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for the value of @a
1857:/usr/include/c++/4.8/bits/basic_string.h ****        *  __s within this string.  If found, returns the index where
1858:/usr/include/c++/4.8/bits/basic_string.h ****        *  it begins.  If not found, returns npos.
1859:/usr/include/c++/4.8/bits/basic_string.h ****       */
1860:/usr/include/c++/4.8/bits/basic_string.h ****       size_type
1861:/usr/include/c++/4.8/bits/basic_string.h ****       find(const _CharT* __s, size_type __pos = 0) const
1862:/usr/include/c++/4.8/bits/basic_string.h ****       {
1863:/usr/include/c++/4.8/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
1864:/usr/include/c++/4.8/bits/basic_string.h **** 	return this->find(__s, __pos, traits_type::length(__s));
1865:/usr/include/c++/4.8/bits/basic_string.h ****       }
1866:/usr/include/c++/4.8/bits/basic_string.h **** 
1867:/usr/include/c++/4.8/bits/basic_string.h ****       /**
1868:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Find position of a character.
1869:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __c  Character to locate.
1870:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
1871:/usr/include/c++/4.8/bits/basic_string.h ****        *  @return  Index of first occurrence.
1872:/usr/include/c++/4.8/bits/basic_string.h ****        *
1873:/usr/include/c++/4.8/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for @a __c within
1874:/usr/include/c++/4.8/bits/basic_string.h ****        *  this string.  If found, returns the index where it was
1875:/usr/include/c++/4.8/bits/basic_string.h ****        *  found.  If not found, returns npos.
1876:/usr/include/c++/4.8/bits/basic_string.h ****       */
1877:/usr/include/c++/4.8/bits/basic_string.h ****       size_type
1878:/usr/include/c++/4.8/bits/basic_string.h ****       find(_CharT __c, size_type __pos = 0) const _GLIBCXX_NOEXCEPT;
1879:/usr/include/c++/4.8/bits/basic_string.h **** 
1880:/usr/include/c++/4.8/bits/basic_string.h ****       /**
1881:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Find last position of a string.
1882:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __str  String to locate.
1883:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
1884:/usr/include/c++/4.8/bits/basic_string.h ****        *  @return  Index of start of last occurrence.
1885:/usr/include/c++/4.8/bits/basic_string.h ****        *
1886:/usr/include/c++/4.8/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for value of @a
1887:/usr/include/c++/4.8/bits/basic_string.h ****        *  __str within this string.  If found, returns the index where
1888:/usr/include/c++/4.8/bits/basic_string.h ****        *  it begins.  If not found, returns npos.
1889:/usr/include/c++/4.8/bits/basic_string.h ****       */
1890:/usr/include/c++/4.8/bits/basic_string.h ****       size_type
1891:/usr/include/c++/4.8/bits/basic_string.h ****       rfind(const basic_string& __str, size_type __pos = npos) const
1892:/usr/include/c++/4.8/bits/basic_string.h **** 	_GLIBCXX_NOEXCEPT
1893:/usr/include/c++/4.8/bits/basic_string.h ****       { return this->rfind(__str.data(), __pos, __str.size()); }
1894:/usr/include/c++/4.8/bits/basic_string.h **** 
1895:/usr/include/c++/4.8/bits/basic_string.h ****       /**
1896:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Find last position of a C substring.
1897:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __s  C string to locate.
1898:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __pos  Index of character to search back from.
1899:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __n  Number of characters from s to search for.
1900:/usr/include/c++/4.8/bits/basic_string.h ****        *  @return  Index of start of last occurrence.
1901:/usr/include/c++/4.8/bits/basic_string.h ****        *
1902:/usr/include/c++/4.8/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for the first @a
1903:/usr/include/c++/4.8/bits/basic_string.h ****        *  __n characters in @a __s within this string.  If found,
1904:/usr/include/c++/4.8/bits/basic_string.h ****        *  returns the index where it begins.  If not found, returns
1905:/usr/include/c++/4.8/bits/basic_string.h ****        *  npos.
1906:/usr/include/c++/4.8/bits/basic_string.h ****       */
1907:/usr/include/c++/4.8/bits/basic_string.h ****       size_type
1908:/usr/include/c++/4.8/bits/basic_string.h ****       rfind(const _CharT* __s, size_type __pos, size_type __n) const;
1909:/usr/include/c++/4.8/bits/basic_string.h **** 
1910:/usr/include/c++/4.8/bits/basic_string.h ****       /**
1911:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Find last position of a C string.
1912:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __s  C string to locate.
1913:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __pos  Index of character to start search at (default end).
1914:/usr/include/c++/4.8/bits/basic_string.h ****        *  @return  Index of start of  last occurrence.
1915:/usr/include/c++/4.8/bits/basic_string.h ****        *
1916:/usr/include/c++/4.8/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for the value of
1917:/usr/include/c++/4.8/bits/basic_string.h ****        *  @a __s within this string.  If found, returns the index
1918:/usr/include/c++/4.8/bits/basic_string.h ****        *  where it begins.  If not found, returns npos.
1919:/usr/include/c++/4.8/bits/basic_string.h ****       */
1920:/usr/include/c++/4.8/bits/basic_string.h ****       size_type
1921:/usr/include/c++/4.8/bits/basic_string.h ****       rfind(const _CharT* __s, size_type __pos = npos) const
1922:/usr/include/c++/4.8/bits/basic_string.h ****       {
1923:/usr/include/c++/4.8/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
1924:/usr/include/c++/4.8/bits/basic_string.h **** 	return this->rfind(__s, __pos, traits_type::length(__s));
1925:/usr/include/c++/4.8/bits/basic_string.h ****       }
1926:/usr/include/c++/4.8/bits/basic_string.h **** 
1927:/usr/include/c++/4.8/bits/basic_string.h ****       /**
1928:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Find last position of a character.
1929:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __c  Character to locate.
1930:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
1931:/usr/include/c++/4.8/bits/basic_string.h ****        *  @return  Index of last occurrence.
1932:/usr/include/c++/4.8/bits/basic_string.h ****        *
1933:/usr/include/c++/4.8/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for @a __c within
1934:/usr/include/c++/4.8/bits/basic_string.h ****        *  this string.  If found, returns the index where it was
1935:/usr/include/c++/4.8/bits/basic_string.h ****        *  found.  If not found, returns npos.
1936:/usr/include/c++/4.8/bits/basic_string.h ****       */
1937:/usr/include/c++/4.8/bits/basic_string.h ****       size_type
1938:/usr/include/c++/4.8/bits/basic_string.h ****       rfind(_CharT __c, size_type __pos = npos) const _GLIBCXX_NOEXCEPT;
1939:/usr/include/c++/4.8/bits/basic_string.h **** 
1940:/usr/include/c++/4.8/bits/basic_string.h ****       /**
1941:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Find position of a character of string.
1942:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __str  String containing characters to locate.
1943:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
1944:/usr/include/c++/4.8/bits/basic_string.h ****        *  @return  Index of first occurrence.
1945:/usr/include/c++/4.8/bits/basic_string.h ****        *
1946:/usr/include/c++/4.8/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for one of the
1947:/usr/include/c++/4.8/bits/basic_string.h ****        *  characters of @a __str within this string.  If found,
1948:/usr/include/c++/4.8/bits/basic_string.h ****        *  returns the index where it was found.  If not found, returns
1949:/usr/include/c++/4.8/bits/basic_string.h ****        *  npos.
1950:/usr/include/c++/4.8/bits/basic_string.h ****       */
1951:/usr/include/c++/4.8/bits/basic_string.h ****       size_type
1952:/usr/include/c++/4.8/bits/basic_string.h ****       find_first_of(const basic_string& __str, size_type __pos = 0) const
1953:/usr/include/c++/4.8/bits/basic_string.h **** 	_GLIBCXX_NOEXCEPT
1954:/usr/include/c++/4.8/bits/basic_string.h ****       { return this->find_first_of(__str.data(), __pos, __str.size()); }
1955:/usr/include/c++/4.8/bits/basic_string.h **** 
1956:/usr/include/c++/4.8/bits/basic_string.h ****       /**
1957:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Find position of a character of C substring.
1958:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __s  String containing characters to locate.
1959:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __pos  Index of character to search from.
1960:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __n  Number of characters from s to search for.
1961:/usr/include/c++/4.8/bits/basic_string.h ****        *  @return  Index of first occurrence.
1962:/usr/include/c++/4.8/bits/basic_string.h ****        *
1963:/usr/include/c++/4.8/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for one of the
1964:/usr/include/c++/4.8/bits/basic_string.h ****        *  first @a __n characters of @a __s within this string.  If
1965:/usr/include/c++/4.8/bits/basic_string.h ****        *  found, returns the index where it was found.  If not found,
1966:/usr/include/c++/4.8/bits/basic_string.h ****        *  returns npos.
1967:/usr/include/c++/4.8/bits/basic_string.h ****       */
1968:/usr/include/c++/4.8/bits/basic_string.h ****       size_type
1969:/usr/include/c++/4.8/bits/basic_string.h ****       find_first_of(const _CharT* __s, size_type __pos, size_type __n) const;
1970:/usr/include/c++/4.8/bits/basic_string.h **** 
1971:/usr/include/c++/4.8/bits/basic_string.h ****       /**
1972:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Find position of a character of C string.
1973:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __s  String containing characters to locate.
1974:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
1975:/usr/include/c++/4.8/bits/basic_string.h ****        *  @return  Index of first occurrence.
1976:/usr/include/c++/4.8/bits/basic_string.h ****        *
1977:/usr/include/c++/4.8/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for one of the
1978:/usr/include/c++/4.8/bits/basic_string.h ****        *  characters of @a __s within this string.  If found, returns
1979:/usr/include/c++/4.8/bits/basic_string.h ****        *  the index where it was found.  If not found, returns npos.
1980:/usr/include/c++/4.8/bits/basic_string.h ****       */
1981:/usr/include/c++/4.8/bits/basic_string.h ****       size_type
1982:/usr/include/c++/4.8/bits/basic_string.h ****       find_first_of(const _CharT* __s, size_type __pos = 0) const
1983:/usr/include/c++/4.8/bits/basic_string.h ****       {
1984:/usr/include/c++/4.8/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
1985:/usr/include/c++/4.8/bits/basic_string.h **** 	return this->find_first_of(__s, __pos, traits_type::length(__s));
1986:/usr/include/c++/4.8/bits/basic_string.h ****       }
1987:/usr/include/c++/4.8/bits/basic_string.h **** 
1988:/usr/include/c++/4.8/bits/basic_string.h ****       /**
1989:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Find position of a character.
1990:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __c  Character to locate.
1991:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
1992:/usr/include/c++/4.8/bits/basic_string.h ****        *  @return  Index of first occurrence.
1993:/usr/include/c++/4.8/bits/basic_string.h ****        *
1994:/usr/include/c++/4.8/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for the character
1995:/usr/include/c++/4.8/bits/basic_string.h ****        *  @a __c within this string.  If found, returns the index
1996:/usr/include/c++/4.8/bits/basic_string.h ****        *  where it was found.  If not found, returns npos.
1997:/usr/include/c++/4.8/bits/basic_string.h ****        *
1998:/usr/include/c++/4.8/bits/basic_string.h ****        *  Note: equivalent to find(__c, __pos).
1999:/usr/include/c++/4.8/bits/basic_string.h ****       */
2000:/usr/include/c++/4.8/bits/basic_string.h ****       size_type
2001:/usr/include/c++/4.8/bits/basic_string.h ****       find_first_of(_CharT __c, size_type __pos = 0) const _GLIBCXX_NOEXCEPT
2002:/usr/include/c++/4.8/bits/basic_string.h ****       { return this->find(__c, __pos); }
2003:/usr/include/c++/4.8/bits/basic_string.h **** 
2004:/usr/include/c++/4.8/bits/basic_string.h ****       /**
2005:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Find last position of a character of string.
2006:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __str  String containing characters to locate.
2007:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
2008:/usr/include/c++/4.8/bits/basic_string.h ****        *  @return  Index of last occurrence.
2009:/usr/include/c++/4.8/bits/basic_string.h ****        *
2010:/usr/include/c++/4.8/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for one of the
2011:/usr/include/c++/4.8/bits/basic_string.h ****        *  characters of @a __str within this string.  If found,
2012:/usr/include/c++/4.8/bits/basic_string.h ****        *  returns the index where it was found.  If not found, returns
2013:/usr/include/c++/4.8/bits/basic_string.h ****        *  npos.
2014:/usr/include/c++/4.8/bits/basic_string.h ****       */
2015:/usr/include/c++/4.8/bits/basic_string.h ****       size_type
2016:/usr/include/c++/4.8/bits/basic_string.h ****       find_last_of(const basic_string& __str, size_type __pos = npos) const
2017:/usr/include/c++/4.8/bits/basic_string.h **** 	_GLIBCXX_NOEXCEPT
2018:/usr/include/c++/4.8/bits/basic_string.h ****       { return this->find_last_of(__str.data(), __pos, __str.size()); }
2019:/usr/include/c++/4.8/bits/basic_string.h **** 
2020:/usr/include/c++/4.8/bits/basic_string.h ****       /**
2021:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Find last position of a character of C substring.
2022:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __s  C string containing characters to locate.
2023:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __pos  Index of character to search back from.
2024:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __n  Number of characters from s to search for.
2025:/usr/include/c++/4.8/bits/basic_string.h ****        *  @return  Index of last occurrence.
2026:/usr/include/c++/4.8/bits/basic_string.h ****        *
2027:/usr/include/c++/4.8/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for one of the
2028:/usr/include/c++/4.8/bits/basic_string.h ****        *  first @a __n characters of @a __s within this string.  If
2029:/usr/include/c++/4.8/bits/basic_string.h ****        *  found, returns the index where it was found.  If not found,
2030:/usr/include/c++/4.8/bits/basic_string.h ****        *  returns npos.
2031:/usr/include/c++/4.8/bits/basic_string.h ****       */
2032:/usr/include/c++/4.8/bits/basic_string.h ****       size_type
2033:/usr/include/c++/4.8/bits/basic_string.h ****       find_last_of(const _CharT* __s, size_type __pos, size_type __n) const;
2034:/usr/include/c++/4.8/bits/basic_string.h **** 
2035:/usr/include/c++/4.8/bits/basic_string.h ****       /**
2036:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Find last position of a character of C string.
2037:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __s  C string containing characters to locate.
2038:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
2039:/usr/include/c++/4.8/bits/basic_string.h ****        *  @return  Index of last occurrence.
2040:/usr/include/c++/4.8/bits/basic_string.h ****        *
2041:/usr/include/c++/4.8/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for one of the
2042:/usr/include/c++/4.8/bits/basic_string.h ****        *  characters of @a __s within this string.  If found, returns
2043:/usr/include/c++/4.8/bits/basic_string.h ****        *  the index where it was found.  If not found, returns npos.
2044:/usr/include/c++/4.8/bits/basic_string.h ****       */
2045:/usr/include/c++/4.8/bits/basic_string.h ****       size_type
2046:/usr/include/c++/4.8/bits/basic_string.h ****       find_last_of(const _CharT* __s, size_type __pos = npos) const
2047:/usr/include/c++/4.8/bits/basic_string.h ****       {
2048:/usr/include/c++/4.8/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
2049:/usr/include/c++/4.8/bits/basic_string.h **** 	return this->find_last_of(__s, __pos, traits_type::length(__s));
2050:/usr/include/c++/4.8/bits/basic_string.h ****       }
2051:/usr/include/c++/4.8/bits/basic_string.h **** 
2052:/usr/include/c++/4.8/bits/basic_string.h ****       /**
2053:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Find last position of a character.
2054:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __c  Character to locate.
2055:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
2056:/usr/include/c++/4.8/bits/basic_string.h ****        *  @return  Index of last occurrence.
2057:/usr/include/c++/4.8/bits/basic_string.h ****        *
2058:/usr/include/c++/4.8/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for @a __c within
2059:/usr/include/c++/4.8/bits/basic_string.h ****        *  this string.  If found, returns the index where it was
2060:/usr/include/c++/4.8/bits/basic_string.h ****        *  found.  If not found, returns npos.
2061:/usr/include/c++/4.8/bits/basic_string.h ****        *
2062:/usr/include/c++/4.8/bits/basic_string.h ****        *  Note: equivalent to rfind(__c, __pos).
2063:/usr/include/c++/4.8/bits/basic_string.h ****       */
2064:/usr/include/c++/4.8/bits/basic_string.h ****       size_type
2065:/usr/include/c++/4.8/bits/basic_string.h ****       find_last_of(_CharT __c, size_type __pos = npos) const _GLIBCXX_NOEXCEPT
2066:/usr/include/c++/4.8/bits/basic_string.h ****       { return this->rfind(__c, __pos); }
2067:/usr/include/c++/4.8/bits/basic_string.h **** 
2068:/usr/include/c++/4.8/bits/basic_string.h ****       /**
2069:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Find position of a character not in string.
2070:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __str  String containing characters to avoid.
2071:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2072:/usr/include/c++/4.8/bits/basic_string.h ****        *  @return  Index of first occurrence.
2073:/usr/include/c++/4.8/bits/basic_string.h ****        *
2074:/usr/include/c++/4.8/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for a character not contained
2075:/usr/include/c++/4.8/bits/basic_string.h ****        *  in @a __str within this string.  If found, returns the index where it
2076:/usr/include/c++/4.8/bits/basic_string.h ****        *  was found.  If not found, returns npos.
2077:/usr/include/c++/4.8/bits/basic_string.h ****       */
2078:/usr/include/c++/4.8/bits/basic_string.h ****       size_type
2079:/usr/include/c++/4.8/bits/basic_string.h ****       find_first_not_of(const basic_string& __str, size_type __pos = 0) const
2080:/usr/include/c++/4.8/bits/basic_string.h **** 	_GLIBCXX_NOEXCEPT
2081:/usr/include/c++/4.8/bits/basic_string.h ****       { return this->find_first_not_of(__str.data(), __pos, __str.size()); }
2082:/usr/include/c++/4.8/bits/basic_string.h **** 
2083:/usr/include/c++/4.8/bits/basic_string.h ****       /**
2084:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Find position of a character not in C substring.
2085:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __s  C string containing characters to avoid.
2086:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __pos  Index of character to search from.
2087:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __n  Number of characters from __s to consider.
2088:/usr/include/c++/4.8/bits/basic_string.h ****        *  @return  Index of first occurrence.
2089:/usr/include/c++/4.8/bits/basic_string.h ****        *
2090:/usr/include/c++/4.8/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for a character not
2091:/usr/include/c++/4.8/bits/basic_string.h ****        *  contained in the first @a __n characters of @a __s within
2092:/usr/include/c++/4.8/bits/basic_string.h ****        *  this string.  If found, returns the index where it was
2093:/usr/include/c++/4.8/bits/basic_string.h ****        *  found.  If not found, returns npos.
2094:/usr/include/c++/4.8/bits/basic_string.h ****       */
2095:/usr/include/c++/4.8/bits/basic_string.h ****       size_type
2096:/usr/include/c++/4.8/bits/basic_string.h ****       find_first_not_of(const _CharT* __s, size_type __pos,
2097:/usr/include/c++/4.8/bits/basic_string.h **** 			size_type __n) const;
2098:/usr/include/c++/4.8/bits/basic_string.h **** 
2099:/usr/include/c++/4.8/bits/basic_string.h ****       /**
2100:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Find position of a character not in C string.
2101:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __s  C string containing characters to avoid.
2102:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2103:/usr/include/c++/4.8/bits/basic_string.h ****        *  @return  Index of first occurrence.
2104:/usr/include/c++/4.8/bits/basic_string.h ****        *
2105:/usr/include/c++/4.8/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for a character not
2106:/usr/include/c++/4.8/bits/basic_string.h ****        *  contained in @a __s within this string.  If found, returns
2107:/usr/include/c++/4.8/bits/basic_string.h ****        *  the index where it was found.  If not found, returns npos.
2108:/usr/include/c++/4.8/bits/basic_string.h ****       */
2109:/usr/include/c++/4.8/bits/basic_string.h ****       size_type
2110:/usr/include/c++/4.8/bits/basic_string.h ****       find_first_not_of(const _CharT* __s, size_type __pos = 0) const
2111:/usr/include/c++/4.8/bits/basic_string.h ****       {
2112:/usr/include/c++/4.8/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
2113:/usr/include/c++/4.8/bits/basic_string.h **** 	return this->find_first_not_of(__s, __pos, traits_type::length(__s));
2114:/usr/include/c++/4.8/bits/basic_string.h ****       }
2115:/usr/include/c++/4.8/bits/basic_string.h **** 
2116:/usr/include/c++/4.8/bits/basic_string.h ****       /**
2117:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Find position of a different character.
2118:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __c  Character to avoid.
2119:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2120:/usr/include/c++/4.8/bits/basic_string.h ****        *  @return  Index of first occurrence.
2121:/usr/include/c++/4.8/bits/basic_string.h ****        *
2122:/usr/include/c++/4.8/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for a character
2123:/usr/include/c++/4.8/bits/basic_string.h ****        *  other than @a __c within this string.  If found, returns the
2124:/usr/include/c++/4.8/bits/basic_string.h ****        *  index where it was found.  If not found, returns npos.
2125:/usr/include/c++/4.8/bits/basic_string.h ****       */
2126:/usr/include/c++/4.8/bits/basic_string.h ****       size_type
2127:/usr/include/c++/4.8/bits/basic_string.h ****       find_first_not_of(_CharT __c, size_type __pos = 0) const
2128:/usr/include/c++/4.8/bits/basic_string.h **** 	_GLIBCXX_NOEXCEPT;
2129:/usr/include/c++/4.8/bits/basic_string.h **** 
2130:/usr/include/c++/4.8/bits/basic_string.h ****       /**
2131:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Find last position of a character not in string.
2132:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __str  String containing characters to avoid.
2133:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
2134:/usr/include/c++/4.8/bits/basic_string.h ****        *  @return  Index of last occurrence.
2135:/usr/include/c++/4.8/bits/basic_string.h ****        *
2136:/usr/include/c++/4.8/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for a character
2137:/usr/include/c++/4.8/bits/basic_string.h ****        *  not contained in @a __str within this string.  If found,
2138:/usr/include/c++/4.8/bits/basic_string.h ****        *  returns the index where it was found.  If not found, returns
2139:/usr/include/c++/4.8/bits/basic_string.h ****        *  npos.
2140:/usr/include/c++/4.8/bits/basic_string.h ****       */
2141:/usr/include/c++/4.8/bits/basic_string.h ****       size_type
2142:/usr/include/c++/4.8/bits/basic_string.h ****       find_last_not_of(const basic_string& __str, size_type __pos = npos) const
2143:/usr/include/c++/4.8/bits/basic_string.h **** 	_GLIBCXX_NOEXCEPT
2144:/usr/include/c++/4.8/bits/basic_string.h ****       { return this->find_last_not_of(__str.data(), __pos, __str.size()); }
2145:/usr/include/c++/4.8/bits/basic_string.h **** 
2146:/usr/include/c++/4.8/bits/basic_string.h ****       /**
2147:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Find last position of a character not in C substring.
2148:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __s  C string containing characters to avoid.
2149:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __pos  Index of character to search back from.
2150:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __n  Number of characters from s to consider.
2151:/usr/include/c++/4.8/bits/basic_string.h ****        *  @return  Index of last occurrence.
2152:/usr/include/c++/4.8/bits/basic_string.h ****        *
2153:/usr/include/c++/4.8/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for a character not
2154:/usr/include/c++/4.8/bits/basic_string.h ****        *  contained in the first @a __n characters of @a __s within this string.
2155:/usr/include/c++/4.8/bits/basic_string.h ****        *  If found, returns the index where it was found.  If not found,
2156:/usr/include/c++/4.8/bits/basic_string.h ****        *  returns npos.
2157:/usr/include/c++/4.8/bits/basic_string.h ****       */
2158:/usr/include/c++/4.8/bits/basic_string.h ****       size_type
2159:/usr/include/c++/4.8/bits/basic_string.h ****       find_last_not_of(const _CharT* __s, size_type __pos,
2160:/usr/include/c++/4.8/bits/basic_string.h **** 		       size_type __n) const;
2161:/usr/include/c++/4.8/bits/basic_string.h ****       /**
2162:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Find last position of a character not in C string.
2163:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __s  C string containing characters to avoid.
2164:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
2165:/usr/include/c++/4.8/bits/basic_string.h ****        *  @return  Index of last occurrence.
2166:/usr/include/c++/4.8/bits/basic_string.h ****        *
2167:/usr/include/c++/4.8/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for a character
2168:/usr/include/c++/4.8/bits/basic_string.h ****        *  not contained in @a __s within this string.  If found,
2169:/usr/include/c++/4.8/bits/basic_string.h ****        *  returns the index where it was found.  If not found, returns
2170:/usr/include/c++/4.8/bits/basic_string.h ****        *  npos.
2171:/usr/include/c++/4.8/bits/basic_string.h ****       */
2172:/usr/include/c++/4.8/bits/basic_string.h ****       size_type
2173:/usr/include/c++/4.8/bits/basic_string.h ****       find_last_not_of(const _CharT* __s, size_type __pos = npos) const
2174:/usr/include/c++/4.8/bits/basic_string.h ****       {
2175:/usr/include/c++/4.8/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
2176:/usr/include/c++/4.8/bits/basic_string.h **** 	return this->find_last_not_of(__s, __pos, traits_type::length(__s));
2177:/usr/include/c++/4.8/bits/basic_string.h ****       }
2178:/usr/include/c++/4.8/bits/basic_string.h **** 
2179:/usr/include/c++/4.8/bits/basic_string.h ****       /**
2180:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Find last position of a different character.
2181:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __c  Character to avoid.
2182:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
2183:/usr/include/c++/4.8/bits/basic_string.h ****        *  @return  Index of last occurrence.
2184:/usr/include/c++/4.8/bits/basic_string.h ****        *
2185:/usr/include/c++/4.8/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for a character other than
2186:/usr/include/c++/4.8/bits/basic_string.h ****        *  @a __c within this string.  If found, returns the index where it was
2187:/usr/include/c++/4.8/bits/basic_string.h ****        *  found.  If not found, returns npos.
2188:/usr/include/c++/4.8/bits/basic_string.h ****       */
2189:/usr/include/c++/4.8/bits/basic_string.h ****       size_type
2190:/usr/include/c++/4.8/bits/basic_string.h ****       find_last_not_of(_CharT __c, size_type __pos = npos) const
2191:/usr/include/c++/4.8/bits/basic_string.h **** 	_GLIBCXX_NOEXCEPT;
2192:/usr/include/c++/4.8/bits/basic_string.h **** 
2193:/usr/include/c++/4.8/bits/basic_string.h ****       /**
2194:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Get a substring.
2195:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __pos  Index of first character (default 0).
2196:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __n  Number of characters in substring (default remainder).
2197:/usr/include/c++/4.8/bits/basic_string.h ****        *  @return  The new string.
2198:/usr/include/c++/4.8/bits/basic_string.h ****        *  @throw  std::out_of_range  If __pos > size().
2199:/usr/include/c++/4.8/bits/basic_string.h ****        *
2200:/usr/include/c++/4.8/bits/basic_string.h ****        *  Construct and return a new string using the @a __n
2201:/usr/include/c++/4.8/bits/basic_string.h ****        *  characters starting at @a __pos.  If the string is too
2202:/usr/include/c++/4.8/bits/basic_string.h ****        *  short, use the remainder of the characters.  If @a __pos is
2203:/usr/include/c++/4.8/bits/basic_string.h ****        *  beyond the end of the string, out_of_range is thrown.
2204:/usr/include/c++/4.8/bits/basic_string.h ****       */
2205:/usr/include/c++/4.8/bits/basic_string.h ****       basic_string
2206:/usr/include/c++/4.8/bits/basic_string.h ****       substr(size_type __pos = 0, size_type __n = npos) const
2207:/usr/include/c++/4.8/bits/basic_string.h ****       { return basic_string(*this,
2208:/usr/include/c++/4.8/bits/basic_string.h **** 			    _M_check(__pos, "basic_string::substr"), __n); }
2209:/usr/include/c++/4.8/bits/basic_string.h **** 
2210:/usr/include/c++/4.8/bits/basic_string.h ****       /**
2211:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Compare to a string.
2212:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __str  String to compare against.
2213:/usr/include/c++/4.8/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
2214:/usr/include/c++/4.8/bits/basic_string.h ****        *
2215:/usr/include/c++/4.8/bits/basic_string.h ****        *  Returns an integer < 0 if this string is ordered before @a
2216:/usr/include/c++/4.8/bits/basic_string.h ****        *  __str, 0 if their values are equivalent, or > 0 if this
2217:/usr/include/c++/4.8/bits/basic_string.h ****        *  string is ordered after @a __str.  Determines the effective
2218:/usr/include/c++/4.8/bits/basic_string.h ****        *  length rlen of the strings to compare as the smallest of
2219:/usr/include/c++/4.8/bits/basic_string.h ****        *  size() and str.size().  The function then compares the two
2220:/usr/include/c++/4.8/bits/basic_string.h ****        *  strings by calling traits::compare(data(), str.data(),rlen).
2221:/usr/include/c++/4.8/bits/basic_string.h ****        *  If the result of the comparison is nonzero returns it,
2222:/usr/include/c++/4.8/bits/basic_string.h ****        *  otherwise the shorter one is ordered first.
2223:/usr/include/c++/4.8/bits/basic_string.h ****       */
2224:/usr/include/c++/4.8/bits/basic_string.h ****       int
2225:/usr/include/c++/4.8/bits/basic_string.h ****       compare(const basic_string& __str) const
2226:/usr/include/c++/4.8/bits/basic_string.h ****       {
2227:/usr/include/c++/4.8/bits/basic_string.h **** 	const size_type __size = this->size();
2228:/usr/include/c++/4.8/bits/basic_string.h **** 	const size_type __osize = __str.size();
2229:/usr/include/c++/4.8/bits/basic_string.h **** 	const size_type __len = std::min(__size, __osize);
2230:/usr/include/c++/4.8/bits/basic_string.h **** 
2231:/usr/include/c++/4.8/bits/basic_string.h **** 	int __r = traits_type::compare(_M_data(), __str.data(), __len);
2232:/usr/include/c++/4.8/bits/basic_string.h **** 	if (!__r)
2233:/usr/include/c++/4.8/bits/basic_string.h **** 	  __r = _S_compare(__size, __osize);
2234:/usr/include/c++/4.8/bits/basic_string.h **** 	return __r;
2235:/usr/include/c++/4.8/bits/basic_string.h ****       }
2236:/usr/include/c++/4.8/bits/basic_string.h **** 
2237:/usr/include/c++/4.8/bits/basic_string.h ****       /**
2238:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Compare substring to a string.
2239:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __pos  Index of first character of substring.
2240:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __n  Number of characters in substring.
2241:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __str  String to compare against.
2242:/usr/include/c++/4.8/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
2243:/usr/include/c++/4.8/bits/basic_string.h ****        *
2244:/usr/include/c++/4.8/bits/basic_string.h ****        *  Form the substring of this string from the @a __n characters
2245:/usr/include/c++/4.8/bits/basic_string.h ****        *  starting at @a __pos.  Returns an integer < 0 if the
2246:/usr/include/c++/4.8/bits/basic_string.h ****        *  substring is ordered before @a __str, 0 if their values are
2247:/usr/include/c++/4.8/bits/basic_string.h ****        *  equivalent, or > 0 if the substring is ordered after @a
2248:/usr/include/c++/4.8/bits/basic_string.h ****        *  __str.  Determines the effective length rlen of the strings
2249:/usr/include/c++/4.8/bits/basic_string.h ****        *  to compare as the smallest of the length of the substring
2250:/usr/include/c++/4.8/bits/basic_string.h ****        *  and @a __str.size().  The function then compares the two
2251:/usr/include/c++/4.8/bits/basic_string.h ****        *  strings by calling
2252:/usr/include/c++/4.8/bits/basic_string.h ****        *  traits::compare(substring.data(),str.data(),rlen).  If the
2253:/usr/include/c++/4.8/bits/basic_string.h ****        *  result of the comparison is nonzero returns it, otherwise
2254:/usr/include/c++/4.8/bits/basic_string.h ****        *  the shorter one is ordered first.
2255:/usr/include/c++/4.8/bits/basic_string.h ****       */
2256:/usr/include/c++/4.8/bits/basic_string.h ****       int
2257:/usr/include/c++/4.8/bits/basic_string.h ****       compare(size_type __pos, size_type __n, const basic_string& __str) const;
2258:/usr/include/c++/4.8/bits/basic_string.h **** 
2259:/usr/include/c++/4.8/bits/basic_string.h ****       /**
2260:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Compare substring to a substring.
2261:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __pos1  Index of first character of substring.
2262:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __n1  Number of characters in substring.
2263:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __str  String to compare against.
2264:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __pos2  Index of first character of substring of str.
2265:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __n2  Number of characters in substring of str.
2266:/usr/include/c++/4.8/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
2267:/usr/include/c++/4.8/bits/basic_string.h ****        *
2268:/usr/include/c++/4.8/bits/basic_string.h ****        *  Form the substring of this string from the @a __n1
2269:/usr/include/c++/4.8/bits/basic_string.h ****        *  characters starting at @a __pos1.  Form the substring of @a
2270:/usr/include/c++/4.8/bits/basic_string.h ****        *  __str from the @a __n2 characters starting at @a __pos2.
2271:/usr/include/c++/4.8/bits/basic_string.h ****        *  Returns an integer < 0 if this substring is ordered before
2272:/usr/include/c++/4.8/bits/basic_string.h ****        *  the substring of @a __str, 0 if their values are equivalent,
2273:/usr/include/c++/4.8/bits/basic_string.h ****        *  or > 0 if this substring is ordered after the substring of
2274:/usr/include/c++/4.8/bits/basic_string.h ****        *  @a __str.  Determines the effective length rlen of the
2275:/usr/include/c++/4.8/bits/basic_string.h ****        *  strings to compare as the smallest of the lengths of the
2276:/usr/include/c++/4.8/bits/basic_string.h ****        *  substrings.  The function then compares the two strings by
2277:/usr/include/c++/4.8/bits/basic_string.h ****        *  calling
2278:/usr/include/c++/4.8/bits/basic_string.h ****        *  traits::compare(substring.data(),str.substr(pos2,n2).data(),rlen).
2279:/usr/include/c++/4.8/bits/basic_string.h ****        *  If the result of the comparison is nonzero returns it,
2280:/usr/include/c++/4.8/bits/basic_string.h ****        *  otherwise the shorter one is ordered first.
2281:/usr/include/c++/4.8/bits/basic_string.h ****       */
2282:/usr/include/c++/4.8/bits/basic_string.h ****       int
2283:/usr/include/c++/4.8/bits/basic_string.h ****       compare(size_type __pos1, size_type __n1, const basic_string& __str,
2284:/usr/include/c++/4.8/bits/basic_string.h **** 	      size_type __pos2, size_type __n2) const;
2285:/usr/include/c++/4.8/bits/basic_string.h **** 
2286:/usr/include/c++/4.8/bits/basic_string.h ****       /**
2287:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Compare to a C string.
2288:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __s  C string to compare against.
2289:/usr/include/c++/4.8/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
2290:/usr/include/c++/4.8/bits/basic_string.h ****        *
2291:/usr/include/c++/4.8/bits/basic_string.h ****        *  Returns an integer < 0 if this string is ordered before @a __s, 0 if
2292:/usr/include/c++/4.8/bits/basic_string.h ****        *  their values are equivalent, or > 0 if this string is ordered after
2293:/usr/include/c++/4.8/bits/basic_string.h ****        *  @a __s.  Determines the effective length rlen of the strings to
2294:/usr/include/c++/4.8/bits/basic_string.h ****        *  compare as the smallest of size() and the length of a string
2295:/usr/include/c++/4.8/bits/basic_string.h ****        *  constructed from @a __s.  The function then compares the two strings
2296:/usr/include/c++/4.8/bits/basic_string.h ****        *  by calling traits::compare(data(),s,rlen).  If the result of the
2297:/usr/include/c++/4.8/bits/basic_string.h ****        *  comparison is nonzero returns it, otherwise the shorter one is
2298:/usr/include/c++/4.8/bits/basic_string.h ****        *  ordered first.
2299:/usr/include/c++/4.8/bits/basic_string.h ****       */
2300:/usr/include/c++/4.8/bits/basic_string.h ****       int
2301:/usr/include/c++/4.8/bits/basic_string.h ****       compare(const _CharT* __s) const;
2302:/usr/include/c++/4.8/bits/basic_string.h **** 
2303:/usr/include/c++/4.8/bits/basic_string.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
2304:/usr/include/c++/4.8/bits/basic_string.h ****       // 5 String::compare specification questionable
2305:/usr/include/c++/4.8/bits/basic_string.h ****       /**
2306:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Compare substring to a C string.
2307:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __pos  Index of first character of substring.
2308:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __n1  Number of characters in substring.
2309:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __s  C string to compare against.
2310:/usr/include/c++/4.8/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
2311:/usr/include/c++/4.8/bits/basic_string.h ****        *
2312:/usr/include/c++/4.8/bits/basic_string.h ****        *  Form the substring of this string from the @a __n1
2313:/usr/include/c++/4.8/bits/basic_string.h ****        *  characters starting at @a pos.  Returns an integer < 0 if
2314:/usr/include/c++/4.8/bits/basic_string.h ****        *  the substring is ordered before @a __s, 0 if their values
2315:/usr/include/c++/4.8/bits/basic_string.h ****        *  are equivalent, or > 0 if the substring is ordered after @a
2316:/usr/include/c++/4.8/bits/basic_string.h ****        *  __s.  Determines the effective length rlen of the strings to
2317:/usr/include/c++/4.8/bits/basic_string.h ****        *  compare as the smallest of the length of the substring and
2318:/usr/include/c++/4.8/bits/basic_string.h ****        *  the length of a string constructed from @a __s.  The
2319:/usr/include/c++/4.8/bits/basic_string.h ****        *  function then compares the two string by calling
2320:/usr/include/c++/4.8/bits/basic_string.h ****        *  traits::compare(substring.data(),__s,rlen).  If the result of
2321:/usr/include/c++/4.8/bits/basic_string.h ****        *  the comparison is nonzero returns it, otherwise the shorter
2322:/usr/include/c++/4.8/bits/basic_string.h ****        *  one is ordered first.
2323:/usr/include/c++/4.8/bits/basic_string.h ****       */
2324:/usr/include/c++/4.8/bits/basic_string.h ****       int
2325:/usr/include/c++/4.8/bits/basic_string.h ****       compare(size_type __pos, size_type __n1, const _CharT* __s) const;
2326:/usr/include/c++/4.8/bits/basic_string.h **** 
2327:/usr/include/c++/4.8/bits/basic_string.h ****       /**
2328:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Compare substring against a character %array.
2329:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __pos  Index of first character of substring.
2330:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __n1  Number of characters in substring.
2331:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __s  character %array to compare against.
2332:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __n2  Number of characters of s.
2333:/usr/include/c++/4.8/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
2334:/usr/include/c++/4.8/bits/basic_string.h ****        *
2335:/usr/include/c++/4.8/bits/basic_string.h ****        *  Form the substring of this string from the @a __n1
2336:/usr/include/c++/4.8/bits/basic_string.h ****        *  characters starting at @a __pos.  Form a string from the
2337:/usr/include/c++/4.8/bits/basic_string.h ****        *  first @a __n2 characters of @a __s.  Returns an integer < 0
2338:/usr/include/c++/4.8/bits/basic_string.h ****        *  if this substring is ordered before the string from @a __s,
2339:/usr/include/c++/4.8/bits/basic_string.h ****        *  0 if their values are equivalent, or > 0 if this substring
2340:/usr/include/c++/4.8/bits/basic_string.h ****        *  is ordered after the string from @a __s.  Determines the
2341:/usr/include/c++/4.8/bits/basic_string.h ****        *  effective length rlen of the strings to compare as the
2342:/usr/include/c++/4.8/bits/basic_string.h ****        *  smallest of the length of the substring and @a __n2.  The
2343:/usr/include/c++/4.8/bits/basic_string.h ****        *  function then compares the two strings by calling
2344:/usr/include/c++/4.8/bits/basic_string.h ****        *  traits::compare(substring.data(),s,rlen).  If the result of
2345:/usr/include/c++/4.8/bits/basic_string.h ****        *  the comparison is nonzero returns it, otherwise the shorter
2346:/usr/include/c++/4.8/bits/basic_string.h ****        *  one is ordered first.
2347:/usr/include/c++/4.8/bits/basic_string.h ****        *
2348:/usr/include/c++/4.8/bits/basic_string.h ****        *  NB: s must have at least n2 characters, &apos;\\0&apos; has
2349:/usr/include/c++/4.8/bits/basic_string.h ****        *  no special meaning.
2350:/usr/include/c++/4.8/bits/basic_string.h ****       */
2351:/usr/include/c++/4.8/bits/basic_string.h ****       int
2352:/usr/include/c++/4.8/bits/basic_string.h ****       compare(size_type __pos, size_type __n1, const _CharT* __s,
2353:/usr/include/c++/4.8/bits/basic_string.h **** 	      size_type __n2) const;
2354:/usr/include/c++/4.8/bits/basic_string.h ****   };
2355:/usr/include/c++/4.8/bits/basic_string.h **** 
2356:/usr/include/c++/4.8/bits/basic_string.h ****   // operator+
2357:/usr/include/c++/4.8/bits/basic_string.h ****   /**
2358:/usr/include/c++/4.8/bits/basic_string.h ****    *  @brief  Concatenate two strings.
2359:/usr/include/c++/4.8/bits/basic_string.h ****    *  @param __lhs  First string.
2360:/usr/include/c++/4.8/bits/basic_string.h ****    *  @param __rhs  Last string.
2361:/usr/include/c++/4.8/bits/basic_string.h ****    *  @return  New string with value of @a __lhs followed by @a __rhs.
2362:/usr/include/c++/4.8/bits/basic_string.h ****    */
2363:/usr/include/c++/4.8/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
2364:/usr/include/c++/4.8/bits/basic_string.h ****     basic_string<_CharT, _Traits, _Alloc>
2365:/usr/include/c++/4.8/bits/basic_string.h ****     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
2366:/usr/include/c++/4.8/bits/basic_string.h **** 	      const basic_string<_CharT, _Traits, _Alloc>& __rhs)
2367:/usr/include/c++/4.8/bits/basic_string.h ****     {
2368:/usr/include/c++/4.8/bits/basic_string.h ****       basic_string<_CharT, _Traits, _Alloc> __str(__lhs);
2369:/usr/include/c++/4.8/bits/basic_string.h ****       __str.append(__rhs);
2370:/usr/include/c++/4.8/bits/basic_string.h ****       return __str;
2371:/usr/include/c++/4.8/bits/basic_string.h ****     }
2372:/usr/include/c++/4.8/bits/basic_string.h **** 
2373:/usr/include/c++/4.8/bits/basic_string.h ****   /**
2374:/usr/include/c++/4.8/bits/basic_string.h ****    *  @brief  Concatenate C string and string.
2375:/usr/include/c++/4.8/bits/basic_string.h ****    *  @param __lhs  First string.
2376:/usr/include/c++/4.8/bits/basic_string.h ****    *  @param __rhs  Last string.
2377:/usr/include/c++/4.8/bits/basic_string.h ****    *  @return  New string with value of @a __lhs followed by @a __rhs.
2378:/usr/include/c++/4.8/bits/basic_string.h ****    */
2379:/usr/include/c++/4.8/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
2380:/usr/include/c++/4.8/bits/basic_string.h ****     basic_string<_CharT,_Traits,_Alloc>
2381:/usr/include/c++/4.8/bits/basic_string.h ****     operator+(const _CharT* __lhs,
2382:/usr/include/c++/4.8/bits/basic_string.h **** 	      const basic_string<_CharT,_Traits,_Alloc>& __rhs);
2383:/usr/include/c++/4.8/bits/basic_string.h **** 
2384:/usr/include/c++/4.8/bits/basic_string.h ****   /**
2385:/usr/include/c++/4.8/bits/basic_string.h ****    *  @brief  Concatenate character and string.
2386:/usr/include/c++/4.8/bits/basic_string.h ****    *  @param __lhs  First string.
2387:/usr/include/c++/4.8/bits/basic_string.h ****    *  @param __rhs  Last string.
2388:/usr/include/c++/4.8/bits/basic_string.h ****    *  @return  New string with @a __lhs followed by @a __rhs.
2389:/usr/include/c++/4.8/bits/basic_string.h ****    */
2390:/usr/include/c++/4.8/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
2391:/usr/include/c++/4.8/bits/basic_string.h ****     basic_string<_CharT,_Traits,_Alloc>
2392:/usr/include/c++/4.8/bits/basic_string.h ****     operator+(_CharT __lhs, const basic_string<_CharT,_Traits,_Alloc>& __rhs);
2393:/usr/include/c++/4.8/bits/basic_string.h **** 
2394:/usr/include/c++/4.8/bits/basic_string.h ****   /**
2395:/usr/include/c++/4.8/bits/basic_string.h ****    *  @brief  Concatenate string and C string.
2396:/usr/include/c++/4.8/bits/basic_string.h ****    *  @param __lhs  First string.
2397:/usr/include/c++/4.8/bits/basic_string.h ****    *  @param __rhs  Last string.
2398:/usr/include/c++/4.8/bits/basic_string.h ****    *  @return  New string with @a __lhs followed by @a __rhs.
2399:/usr/include/c++/4.8/bits/basic_string.h ****    */
2400:/usr/include/c++/4.8/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
2401:/usr/include/c++/4.8/bits/basic_string.h ****     inline basic_string<_CharT, _Traits, _Alloc>
2402:/usr/include/c++/4.8/bits/basic_string.h ****     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
2403:/usr/include/c++/4.8/bits/basic_string.h **** 	     const _CharT* __rhs)
2404:/usr/include/c++/4.8/bits/basic_string.h ****     {
2405:/usr/include/c++/4.8/bits/basic_string.h ****       basic_string<_CharT, _Traits, _Alloc> __str(__lhs);
2406:/usr/include/c++/4.8/bits/basic_string.h ****       __str.append(__rhs);
2407:/usr/include/c++/4.8/bits/basic_string.h ****       return __str;
2408:/usr/include/c++/4.8/bits/basic_string.h ****     }
2409:/usr/include/c++/4.8/bits/basic_string.h **** 
2410:/usr/include/c++/4.8/bits/basic_string.h ****   /**
2411:/usr/include/c++/4.8/bits/basic_string.h ****    *  @brief  Concatenate string and character.
2412:/usr/include/c++/4.8/bits/basic_string.h ****    *  @param __lhs  First string.
2413:/usr/include/c++/4.8/bits/basic_string.h ****    *  @param __rhs  Last string.
2414:/usr/include/c++/4.8/bits/basic_string.h ****    *  @return  New string with @a __lhs followed by @a __rhs.
2415:/usr/include/c++/4.8/bits/basic_string.h ****    */
2416:/usr/include/c++/4.8/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
2417:/usr/include/c++/4.8/bits/basic_string.h ****     inline basic_string<_CharT, _Traits, _Alloc>
2418:/usr/include/c++/4.8/bits/basic_string.h ****     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs, _CharT __rhs)
2419:/usr/include/c++/4.8/bits/basic_string.h ****     {
2420:/usr/include/c++/4.8/bits/basic_string.h ****       typedef basic_string<_CharT, _Traits, _Alloc>	__string_type;
2421:/usr/include/c++/4.8/bits/basic_string.h ****       typedef typename __string_type::size_type		__size_type;
2422:/usr/include/c++/4.8/bits/basic_string.h ****       __string_type __str(__lhs);
2423:/usr/include/c++/4.8/bits/basic_string.h ****       __str.append(__size_type(1), __rhs);
2424:/usr/include/c++/4.8/bits/basic_string.h ****       return __str;
2425:/usr/include/c++/4.8/bits/basic_string.h ****     }
2426:/usr/include/c++/4.8/bits/basic_string.h **** 
2427:/usr/include/c++/4.8/bits/basic_string.h **** #if __cplusplus >= 201103L
2428:/usr/include/c++/4.8/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
2429:/usr/include/c++/4.8/bits/basic_string.h ****     inline basic_string<_CharT, _Traits, _Alloc>
2430:/usr/include/c++/4.8/bits/basic_string.h ****     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
2431:/usr/include/c++/4.8/bits/basic_string.h **** 	      const basic_string<_CharT, _Traits, _Alloc>& __rhs)
2432:/usr/include/c++/4.8/bits/basic_string.h ****     { return std::move(__lhs.append(__rhs)); }
2433:/usr/include/c++/4.8/bits/basic_string.h **** 
2434:/usr/include/c++/4.8/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
2435:/usr/include/c++/4.8/bits/basic_string.h ****     inline basic_string<_CharT, _Traits, _Alloc>
2436:/usr/include/c++/4.8/bits/basic_string.h ****     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
2437:/usr/include/c++/4.8/bits/basic_string.h **** 	      basic_string<_CharT, _Traits, _Alloc>&& __rhs)
2438:/usr/include/c++/4.8/bits/basic_string.h ****     { return std::move(__rhs.insert(0, __lhs)); }
2439:/usr/include/c++/4.8/bits/basic_string.h **** 
2440:/usr/include/c++/4.8/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
2441:/usr/include/c++/4.8/bits/basic_string.h ****     inline basic_string<_CharT, _Traits, _Alloc>
2442:/usr/include/c++/4.8/bits/basic_string.h ****     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
2443:/usr/include/c++/4.8/bits/basic_string.h **** 	      basic_string<_CharT, _Traits, _Alloc>&& __rhs)
2444:/usr/include/c++/4.8/bits/basic_string.h ****     {
2445:/usr/include/c++/4.8/bits/basic_string.h ****       const auto __size = __lhs.size() + __rhs.size();
2446:/usr/include/c++/4.8/bits/basic_string.h ****       const bool __cond = (__size > __lhs.capacity()
2447:/usr/include/c++/4.8/bits/basic_string.h **** 			   && __size <= __rhs.capacity());
2448:/usr/include/c++/4.8/bits/basic_string.h ****       return __cond ? std::move(__rhs.insert(0, __lhs))
2449:/usr/include/c++/4.8/bits/basic_string.h **** 	            : std::move(__lhs.append(__rhs));
2450:/usr/include/c++/4.8/bits/basic_string.h ****     }
2451:/usr/include/c++/4.8/bits/basic_string.h **** 
2452:/usr/include/c++/4.8/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
2453:/usr/include/c++/4.8/bits/basic_string.h ****     inline basic_string<_CharT, _Traits, _Alloc>
2454:/usr/include/c++/4.8/bits/basic_string.h ****     operator+(const _CharT* __lhs,
2455:/usr/include/c++/4.8/bits/basic_string.h **** 	      basic_string<_CharT, _Traits, _Alloc>&& __rhs)
2456:/usr/include/c++/4.8/bits/basic_string.h ****     { return std::move(__rhs.insert(0, __lhs)); }
2457:/usr/include/c++/4.8/bits/basic_string.h **** 
2458:/usr/include/c++/4.8/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
2459:/usr/include/c++/4.8/bits/basic_string.h ****     inline basic_string<_CharT, _Traits, _Alloc>
2460:/usr/include/c++/4.8/bits/basic_string.h ****     operator+(_CharT __lhs,
2461:/usr/include/c++/4.8/bits/basic_string.h **** 	      basic_string<_CharT, _Traits, _Alloc>&& __rhs)
2462:/usr/include/c++/4.8/bits/basic_string.h ****     { return std::move(__rhs.insert(0, 1, __lhs)); }
2463:/usr/include/c++/4.8/bits/basic_string.h **** 
2464:/usr/include/c++/4.8/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
2465:/usr/include/c++/4.8/bits/basic_string.h ****     inline basic_string<_CharT, _Traits, _Alloc>
2466:/usr/include/c++/4.8/bits/basic_string.h ****     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
2467:/usr/include/c++/4.8/bits/basic_string.h **** 	      const _CharT* __rhs)
2468:/usr/include/c++/4.8/bits/basic_string.h ****     { return std::move(__lhs.append(__rhs)); }
2469:/usr/include/c++/4.8/bits/basic_string.h **** 
2470:/usr/include/c++/4.8/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
2471:/usr/include/c++/4.8/bits/basic_string.h ****     inline basic_string<_CharT, _Traits, _Alloc>
2472:/usr/include/c++/4.8/bits/basic_string.h ****     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
2473:/usr/include/c++/4.8/bits/basic_string.h **** 	      _CharT __rhs)
2474:/usr/include/c++/4.8/bits/basic_string.h ****     { return std::move(__lhs.append(1, __rhs)); }
2475:/usr/include/c++/4.8/bits/basic_string.h **** #endif
2476:/usr/include/c++/4.8/bits/basic_string.h **** 
2477:/usr/include/c++/4.8/bits/basic_string.h ****   // operator ==
2478:/usr/include/c++/4.8/bits/basic_string.h ****   /**
2479:/usr/include/c++/4.8/bits/basic_string.h ****    *  @brief  Test equivalence of two strings.
2480:/usr/include/c++/4.8/bits/basic_string.h ****    *  @param __lhs  First string.
2481:/usr/include/c++/4.8/bits/basic_string.h ****    *  @param __rhs  Second string.
2482:/usr/include/c++/4.8/bits/basic_string.h ****    *  @return  True if @a __lhs.compare(@a __rhs) == 0.  False otherwise.
2483:/usr/include/c++/4.8/bits/basic_string.h ****    */
2484:/usr/include/c++/4.8/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
2485:/usr/include/c++/4.8/bits/basic_string.h ****     inline bool
2486:/usr/include/c++/4.8/bits/basic_string.h ****     operator==(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
2487:/usr/include/c++/4.8/bits/basic_string.h **** 	       const basic_string<_CharT, _Traits, _Alloc>& __rhs)
2488:/usr/include/c++/4.8/bits/basic_string.h ****     { return __lhs.compare(__rhs) == 0; }
2489:/usr/include/c++/4.8/bits/basic_string.h **** 
2490:/usr/include/c++/4.8/bits/basic_string.h ****   template<typename _CharT>
2491:/usr/include/c++/4.8/bits/basic_string.h ****     inline
2492:/usr/include/c++/4.8/bits/basic_string.h ****     typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value, bool>::__type
2493:/usr/include/c++/4.8/bits/basic_string.h ****     operator==(const basic_string<_CharT>& __lhs,
2494:/usr/include/c++/4.8/bits/basic_string.h **** 	       const basic_string<_CharT>& __rhs)
2495:/usr/include/c++/4.8/bits/basic_string.h ****     { return (__lhs.size() == __rhs.size()
2496:/usr/include/c++/4.8/bits/basic_string.h **** 	      && !std::char_traits<_CharT>::compare(__lhs.data(), __rhs.data(),
2497:/usr/include/c++/4.8/bits/basic_string.h **** 						    __lhs.size())); }
2498:/usr/include/c++/4.8/bits/basic_string.h **** 
2499:/usr/include/c++/4.8/bits/basic_string.h ****   /**
2500:/usr/include/c++/4.8/bits/basic_string.h ****    *  @brief  Test equivalence of C string and string.
2501:/usr/include/c++/4.8/bits/basic_string.h ****    *  @param __lhs  C string.
2502:/usr/include/c++/4.8/bits/basic_string.h ****    *  @param __rhs  String.
2503:/usr/include/c++/4.8/bits/basic_string.h ****    *  @return  True if @a __rhs.compare(@a __lhs) == 0.  False otherwise.
2504:/usr/include/c++/4.8/bits/basic_string.h ****    */
2505:/usr/include/c++/4.8/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
2506:/usr/include/c++/4.8/bits/basic_string.h ****     inline bool
2507:/usr/include/c++/4.8/bits/basic_string.h ****     operator==(const _CharT* __lhs,
 8480              		.loc 6 2507 0
 8481              		.cfi_startproc
 8482 0000 55       		pushq	%rbp
 8483              		.cfi_def_cfa_offset 16
 8484              		.cfi_offset 6, -16
 8485 0001 4889E5   		movq	%rsp, %rbp
 8486              		.cfi_def_cfa_register 6
 8487 0004 4883EC10 		subq	$16, %rsp
 8488 0008 48897DF8 		movq	%rdi, -8(%rbp)
 8489 000c 488975F0 		movq	%rsi, -16(%rbp)
2508:/usr/include/c++/4.8/bits/basic_string.h **** 	       const basic_string<_CharT, _Traits, _Alloc>& __rhs)
2509:/usr/include/c++/4.8/bits/basic_string.h ****     { return __rhs.compare(__lhs) == 0; }
 8490              		.loc 6 2509 0
 8491 0010 488B55F8 		movq	-8(%rbp), %rdx
 8492 0014 488B45F0 		movq	-16(%rbp), %rax
 8493 0018 4889D6   		movq	%rdx, %rsi
 8494 001b 4889C7   		movq	%rax, %rdi
 8495 001e E8000000 		call	_ZNKSs7compareEPKc
 8495      00
 8496 0023 85C0     		testl	%eax, %eax
 8497 0025 0F94C0   		sete	%al
 8498 0028 C9       		leave
 8499              		.cfi_def_cfa 7, 8
 8500 0029 C3       		ret
 8501              		.cfi_endproc
 8502              	.LFE1447:
 8504              		.section	.rodata
 8505 0977 00000000 		.align 32
 8505      00000000 
 8505      00
 8508              	_ZTVN12_GLOBAL__N_142TestXmlTestReporterFixtureMultipleFailuresE:
 8509 0980 00000000 		.quad	0
 8509      00000000 
 8510 0988 00000000 		.quad	_ZTIN12_GLOBAL__N_142TestXmlTestReporterFixtureMultipleFailuresE
 8510      00000000 
 8511 0990 00000000 		.quad	_ZN12_GLOBAL__N_142TestXmlTestReporterFixtureMultipleFailuresD1Ev
 8511      00000000 
 8512 0998 00000000 		.quad	_ZN12_GLOBAL__N_142TestXmlTestReporterFixtureMultipleFailuresD0Ev
 8512      00000000 
 8513 09a0 00000000 		.quad	_ZNK12_GLOBAL__N_142TestXmlTestReporterFixtureMultipleFailures7RunImplEv
 8513      00000000 
 8514              		.text
 8515              		.align 2
 8517              	_ZN12_GLOBAL__N_142TestXmlTestReporterFixtureMultipleFailuresD2Ev:
 8518              	.LFB1490:
 159:TestXmlTestReporter.cpp **** {
 8519              		.loc 3 159 0
 8520              		.cfi_startproc
 8521 3de6 55       		pushq	%rbp
 8522              		.cfi_def_cfa_offset 16
 8523              		.cfi_offset 6, -16
 8524 3de7 4889E5   		movq	%rsp, %rbp
 8525              		.cfi_def_cfa_register 6
 8526 3dea 4883EC10 		subq	$16, %rsp
 8527 3dee 48897DF8 		movq	%rdi, -8(%rbp)
 8528              	.LBB242:
 159:TestXmlTestReporter.cpp **** {
 8529              		.loc 3 159 0
 8530 3df2 488B45F8 		movq	-8(%rbp), %rax
 8531 3df6 48C70000 		movq	$_ZTVN12_GLOBAL__N_142TestXmlTestReporterFixtureMultipleFailuresE+16, (%rax)
 8531      000000
 8532 3dfd 488B45F8 		movq	-8(%rbp), %rax
 8533 3e01 4889C7   		movq	%rax, %rdi
 8534 3e04 E8000000 		call	_ZN8UnitTest4TestD2Ev
 8534      00
 8535              	.LBE242:
 8536 3e09 B8000000 		movl	$0, %eax
 8536      00
 8537 3e0e 85C0     		testl	%eax, %eax
 8538 3e10 740C     		je	.L465
 159:TestXmlTestReporter.cpp **** {
 8539              		.loc 3 159 0 is_stmt 0 discriminator 1
 8540 3e12 488B45F8 		movq	-8(%rbp), %rax
 8541 3e16 4889C7   		movq	%rax, %rdi
 8542 3e19 E8000000 		call	_ZdlPv
 8542      00
 8543              	.L465:
 159:TestXmlTestReporter.cpp **** {
 8544              		.loc 3 159 0
 8545 3e1e C9       		leave
 8546              		.cfi_def_cfa 7, 8
 8547 3e1f C3       		ret
 8548              		.cfi_endproc
 8549              	.LFE1490:
 8551              		.set	_ZN12_GLOBAL__N_142TestXmlTestReporterFixtureMultipleFailuresD1Ev,_ZN12_GLOBAL__N_142TestXmlT
 8552              		.align 2
 8554              	_ZN12_GLOBAL__N_142TestXmlTestReporterFixtureMultipleFailuresD0Ev:
 8555              	.LFB1492:
 159:TestXmlTestReporter.cpp **** {
 8556              		.loc 3 159 0 is_stmt 1
 8557              		.cfi_startproc
 8558 3e20 55       		pushq	%rbp
 8559              		.cfi_def_cfa_offset 16
 8560              		.cfi_offset 6, -16
 8561 3e21 4889E5   		movq	%rsp, %rbp
 8562              		.cfi_def_cfa_register 6
 8563 3e24 4883EC10 		subq	$16, %rsp
 8564 3e28 48897DF8 		movq	%rdi, -8(%rbp)
 159:TestXmlTestReporter.cpp **** {
 8565              		.loc 3 159 0
 8566 3e2c 488B45F8 		movq	-8(%rbp), %rax
 8567 3e30 4889C7   		movq	%rax, %rdi
 8568 3e33 E8AEFFFF 		call	_ZN12_GLOBAL__N_142TestXmlTestReporterFixtureMultipleFailuresD1Ev
 8568      FF
 8569 3e38 488B45F8 		movq	-8(%rbp), %rax
 8570 3e3c 4889C7   		movq	%rax, %rdi
 8571 3e3f E8000000 		call	_ZdlPv
 8571      00
 8572 3e44 C9       		leave
 8573              		.cfi_def_cfa 7, 8
 8574 3e45 C3       		ret
 8575              		.cfi_endproc
 8576              	.LFE1492:
 8578              		.section	.rodata
 8579 09a8 00000000 		.align 32
 8579      00000000 
 8579      00000000 
 8579      00000000 
 8579      00000000 
 8582              	_ZTVN12_GLOBAL__N_149TestXmlTestReporterFixtureOneFailureAndOneSuccessE:
 8583 09c0 00000000 		.quad	0
 8583      00000000 
 8584 09c8 00000000 		.quad	_ZTIN12_GLOBAL__N_149TestXmlTestReporterFixtureOneFailureAndOneSuccessE
 8584      00000000 
 8585 09d0 00000000 		.quad	_ZN12_GLOBAL__N_149TestXmlTestReporterFixtureOneFailureAndOneSuccessD1Ev
 8585      00000000 
 8586 09d8 00000000 		.quad	_ZN12_GLOBAL__N_149TestXmlTestReporterFixtureOneFailureAndOneSuccessD0Ev
 8586      00000000 
 8587 09e0 00000000 		.quad	_ZNK12_GLOBAL__N_149TestXmlTestReporterFixtureOneFailureAndOneSuccess7RunImplEv
 8587      00000000 
 8588              		.text
 8589              		.align 2
 8591              	_ZN12_GLOBAL__N_149TestXmlTestReporterFixtureOneFailureAndOneSuccessD2Ev:
 8592              	.LFB1494:
 135:TestXmlTestReporter.cpp **** {
 8593              		.loc 3 135 0
 8594              		.cfi_startproc
 8595 3e46 55       		pushq	%rbp
 8596              		.cfi_def_cfa_offset 16
 8597              		.cfi_offset 6, -16
 8598 3e47 4889E5   		movq	%rsp, %rbp
 8599              		.cfi_def_cfa_register 6
 8600 3e4a 4883EC10 		subq	$16, %rsp
 8601 3e4e 48897DF8 		movq	%rdi, -8(%rbp)
 8602              	.LBB243:
 135:TestXmlTestReporter.cpp **** {
 8603              		.loc 3 135 0
 8604 3e52 488B45F8 		movq	-8(%rbp), %rax
 8605 3e56 48C70000 		movq	$_ZTVN12_GLOBAL__N_149TestXmlTestReporterFixtureOneFailureAndOneSuccessE+16, (%rax)
 8605      000000
 8606 3e5d 488B45F8 		movq	-8(%rbp), %rax
 8607 3e61 4889C7   		movq	%rax, %rdi
 8608 3e64 E8000000 		call	_ZN8UnitTest4TestD2Ev
 8608      00
 8609              	.LBE243:
 8610 3e69 B8000000 		movl	$0, %eax
 8610      00
 8611 3e6e 85C0     		testl	%eax, %eax
 8612 3e70 740C     		je	.L470
 135:TestXmlTestReporter.cpp **** {
 8613              		.loc 3 135 0 is_stmt 0 discriminator 1
 8614 3e72 488B45F8 		movq	-8(%rbp), %rax
 8615 3e76 4889C7   		movq	%rax, %rdi
 8616 3e79 E8000000 		call	_ZdlPv
 8616      00
 8617              	.L470:
 135:TestXmlTestReporter.cpp **** {
 8618              		.loc 3 135 0
 8619 3e7e C9       		leave
 8620              		.cfi_def_cfa 7, 8
 8621 3e7f C3       		ret
 8622              		.cfi_endproc
 8623              	.LFE1494:
 8625              		.set	_ZN12_GLOBAL__N_149TestXmlTestReporterFixtureOneFailureAndOneSuccessD1Ev,_ZN12_GLOBAL__N_149T
 8626              		.align 2
 8628              	_ZN12_GLOBAL__N_149TestXmlTestReporterFixtureOneFailureAndOneSuccessD0Ev:
 8629              	.LFB1496:
 135:TestXmlTestReporter.cpp **** {
 8630              		.loc 3 135 0 is_stmt 1
 8631              		.cfi_startproc
 8632 3e80 55       		pushq	%rbp
 8633              		.cfi_def_cfa_offset 16
 8634              		.cfi_offset 6, -16
 8635 3e81 4889E5   		movq	%rsp, %rbp
 8636              		.cfi_def_cfa_register 6
 8637 3e84 4883EC10 		subq	$16, %rsp
 8638 3e88 48897DF8 		movq	%rdi, -8(%rbp)
 135:TestXmlTestReporter.cpp **** {
 8639              		.loc 3 135 0
 8640 3e8c 488B45F8 		movq	-8(%rbp), %rax
 8641 3e90 4889C7   		movq	%rax, %rdi
 8642 3e93 E8AEFFFF 		call	_ZN12_GLOBAL__N_149TestXmlTestReporterFixtureOneFailureAndOneSuccessD1Ev
 8642      FF
 8643 3e98 488B45F8 		movq	-8(%rbp), %rax
 8644 3e9c 4889C7   		movq	%rax, %rdi
 8645 3e9f E8000000 		call	_ZdlPv
 8645      00
 8646 3ea4 C9       		leave
 8647              		.cfi_def_cfa 7, 8
 8648 3ea5 C3       		ret
 8649              		.cfi_endproc
 8650              	.LFE1496:
 8652              		.section	.rodata
 8653 09e8 00000000 		.align 32
 8653      00000000 
 8653      00000000 
 8653      00000000 
 8653      00000000 
 8656              	_ZTVN12_GLOBAL__N_152TestXmlTestReporterFixtureFailureMessageIsXMLEscapedE:
 8657 0a00 00000000 		.quad	0
 8657      00000000 
 8658 0a08 00000000 		.quad	_ZTIN12_GLOBAL__N_152TestXmlTestReporterFixtureFailureMessageIsXMLEscapedE
 8658      00000000 
 8659 0a10 00000000 		.quad	_ZN12_GLOBAL__N_152TestXmlTestReporterFixtureFailureMessageIsXMLEscapedD1Ev
 8659      00000000 
 8660 0a18 00000000 		.quad	_ZN12_GLOBAL__N_152TestXmlTestReporterFixtureFailureMessageIsXMLEscapedD0Ev
 8660      00000000 
 8661 0a20 00000000 		.quad	_ZNK12_GLOBAL__N_152TestXmlTestReporterFixtureFailureMessageIsXMLEscaped7RunImplEv
 8661      00000000 
 8662              		.text
 8663              		.align 2
 8665              	_ZN12_GLOBAL__N_152TestXmlTestReporterFixtureFailureMessageIsXMLEscapedD2Ev:
 8666              	.LFB1498:
 115:TestXmlTestReporter.cpp **** {
 8667              		.loc 3 115 0
 8668              		.cfi_startproc
 8669 3ea6 55       		pushq	%rbp
 8670              		.cfi_def_cfa_offset 16
 8671              		.cfi_offset 6, -16
 8672 3ea7 4889E5   		movq	%rsp, %rbp
 8673              		.cfi_def_cfa_register 6
 8674 3eaa 4883EC10 		subq	$16, %rsp
 8675 3eae 48897DF8 		movq	%rdi, -8(%rbp)
 8676              	.LBB244:
 115:TestXmlTestReporter.cpp **** {
 8677              		.loc 3 115 0
 8678 3eb2 488B45F8 		movq	-8(%rbp), %rax
 8679 3eb6 48C70000 		movq	$_ZTVN12_GLOBAL__N_152TestXmlTestReporterFixtureFailureMessageIsXMLEscapedE+16, (%rax)
 8679      000000
 8680 3ebd 488B45F8 		movq	-8(%rbp), %rax
 8681 3ec1 4889C7   		movq	%rax, %rdi
 8682 3ec4 E8000000 		call	_ZN8UnitTest4TestD2Ev
 8682      00
 8683              	.LBE244:
 8684 3ec9 B8000000 		movl	$0, %eax
 8684      00
 8685 3ece 85C0     		testl	%eax, %eax
 8686 3ed0 740C     		je	.L475
 115:TestXmlTestReporter.cpp **** {
 8687              		.loc 3 115 0 is_stmt 0 discriminator 1
 8688 3ed2 488B45F8 		movq	-8(%rbp), %rax
 8689 3ed6 4889C7   		movq	%rax, %rdi
 8690 3ed9 E8000000 		call	_ZdlPv
 8690      00
 8691              	.L475:
 115:TestXmlTestReporter.cpp **** {
 8692              		.loc 3 115 0
 8693 3ede C9       		leave
 8694              		.cfi_def_cfa 7, 8
 8695 3edf C3       		ret
 8696              		.cfi_endproc
 8697              	.LFE1498:
 8699              		.set	_ZN12_GLOBAL__N_152TestXmlTestReporterFixtureFailureMessageIsXMLEscapedD1Ev,_ZN12_GLOBAL__N_1
 8700              		.align 2
 8702              	_ZN12_GLOBAL__N_152TestXmlTestReporterFixtureFailureMessageIsXMLEscapedD0Ev:
 8703              	.LFB1500:
 115:TestXmlTestReporter.cpp **** {
 8704              		.loc 3 115 0 is_stmt 1
 8705              		.cfi_startproc
 8706 3ee0 55       		pushq	%rbp
 8707              		.cfi_def_cfa_offset 16
 8708              		.cfi_offset 6, -16
 8709 3ee1 4889E5   		movq	%rsp, %rbp
 8710              		.cfi_def_cfa_register 6
 8711 3ee4 4883EC10 		subq	$16, %rsp
 8712 3ee8 48897DF8 		movq	%rdi, -8(%rbp)
 115:TestXmlTestReporter.cpp **** {
 8713              		.loc 3 115 0
 8714 3eec 488B45F8 		movq	-8(%rbp), %rax
 8715 3ef0 4889C7   		movq	%rax, %rdi
 8716 3ef3 E8AEFFFF 		call	_ZN12_GLOBAL__N_152TestXmlTestReporterFixtureFailureMessageIsXMLEscapedD1Ev
 8716      FF
 8717 3ef8 488B45F8 		movq	-8(%rbp), %rax
 8718 3efc 4889C7   		movq	%rax, %rdi
 8719 3eff E8000000 		call	_ZdlPv
 8719      00
 8720 3f04 C9       		leave
 8721              		.cfi_def_cfa 7, 8
 8722 3f05 C3       		ret
 8723              		.cfi_endproc
 8724              	.LFE1500:
 8726              		.section	.rodata
 8727 0a28 00000000 		.align 32
 8727      00000000 
 8727      00000000 
 8727      00000000 
 8727      00000000 
 8730              	_ZTVN12_GLOBAL__N_161TestXmlTestReporterFixtureSingleFailedTestReportSummaryFormatE:
 8731 0a40 00000000 		.quad	0
 8731      00000000 
 8732 0a48 00000000 		.quad	_ZTIN12_GLOBAL__N_161TestXmlTestReporterFixtureSingleFailedTestReportSummaryFormatE
 8732      00000000 
 8733 0a50 00000000 		.quad	_ZN12_GLOBAL__N_161TestXmlTestReporterFixtureSingleFailedTestReportSummaryFormatD1Ev
 8733      00000000 
 8734 0a58 00000000 		.quad	_ZN12_GLOBAL__N_161TestXmlTestReporterFixtureSingleFailedTestReportSummaryFormatD0Ev
 8734      00000000 
 8735 0a60 00000000 		.quad	_ZNK12_GLOBAL__N_161TestXmlTestReporterFixtureSingleFailedTestReportSummaryFormat7RunImplEv
 8735      00000000 
 8736              		.text
 8737              		.align 2
 8739              	_ZN12_GLOBAL__N_161TestXmlTestReporterFixtureSingleFailedTestReportSummaryFormatD2Ev:
 8740              	.LFB1502:
  96:TestXmlTestReporter.cpp **** {
 8741              		.loc 3 96 0
 8742              		.cfi_startproc
 8743 3f06 55       		pushq	%rbp
 8744              		.cfi_def_cfa_offset 16
 8745              		.cfi_offset 6, -16
 8746 3f07 4889E5   		movq	%rsp, %rbp
 8747              		.cfi_def_cfa_register 6
 8748 3f0a 4883EC10 		subq	$16, %rsp
 8749 3f0e 48897DF8 		movq	%rdi, -8(%rbp)
 8750              	.LBB245:
  96:TestXmlTestReporter.cpp **** {
 8751              		.loc 3 96 0
 8752 3f12 488B45F8 		movq	-8(%rbp), %rax
 8753 3f16 48C70000 		movq	$_ZTVN12_GLOBAL__N_161TestXmlTestReporterFixtureSingleFailedTestReportSummaryFormatE+16, (%ra
 8753      000000
 8754 3f1d 488B45F8 		movq	-8(%rbp), %rax
 8755 3f21 4889C7   		movq	%rax, %rdi
 8756 3f24 E8000000 		call	_ZN8UnitTest4TestD2Ev
 8756      00
 8757              	.LBE245:
 8758 3f29 B8000000 		movl	$0, %eax
 8758      00
 8759 3f2e 85C0     		testl	%eax, %eax
 8760 3f30 740C     		je	.L480
  96:TestXmlTestReporter.cpp **** {
 8761              		.loc 3 96 0 is_stmt 0 discriminator 1
 8762 3f32 488B45F8 		movq	-8(%rbp), %rax
 8763 3f36 4889C7   		movq	%rax, %rdi
 8764 3f39 E8000000 		call	_ZdlPv
 8764      00
 8765              	.L480:
  96:TestXmlTestReporter.cpp **** {
 8766              		.loc 3 96 0
 8767 3f3e C9       		leave
 8768              		.cfi_def_cfa 7, 8
 8769 3f3f C3       		ret
 8770              		.cfi_endproc
 8771              	.LFE1502:
 8773              		.set	_ZN12_GLOBAL__N_161TestXmlTestReporterFixtureSingleFailedTestReportSummaryFormatD1Ev,_ZN12_GL
 8774              		.align 2
 8776              	_ZN12_GLOBAL__N_161TestXmlTestReporterFixtureSingleFailedTestReportSummaryFormatD0Ev:
 8777              	.LFB1504:
  96:TestXmlTestReporter.cpp **** {
 8778              		.loc 3 96 0 is_stmt 1
 8779              		.cfi_startproc
 8780 3f40 55       		pushq	%rbp
 8781              		.cfi_def_cfa_offset 16
 8782              		.cfi_offset 6, -16
 8783 3f41 4889E5   		movq	%rsp, %rbp
 8784              		.cfi_def_cfa_register 6
 8785 3f44 4883EC10 		subq	$16, %rsp
 8786 3f48 48897DF8 		movq	%rdi, -8(%rbp)
  96:TestXmlTestReporter.cpp **** {
 8787              		.loc 3 96 0
 8788 3f4c 488B45F8 		movq	-8(%rbp), %rax
 8789 3f50 4889C7   		movq	%rax, %rdi
 8790 3f53 E8AEFFFF 		call	_ZN12_GLOBAL__N_161TestXmlTestReporterFixtureSingleFailedTestReportSummaryFormatD1Ev
 8790      FF
 8791 3f58 488B45F8 		movq	-8(%rbp), %rax
 8792 3f5c 4889C7   		movq	%rax, %rdi
 8793 3f5f E8000000 		call	_ZdlPv
 8793      00
 8794 3f64 C9       		leave
 8795              		.cfi_def_cfa 7, 8
 8796 3f65 C3       		ret
 8797              		.cfi_endproc
 8798              	.LFE1504:
 8800              		.section	.rodata
 8801 0a68 00000000 		.align 32
 8801      00000000 
 8801      00000000 
 8801      00000000 
 8801      00000000 
 8804              	_ZTVN12_GLOBAL__N_165TestXmlTestReporterFixtureSingleSuccessfulTestReportSummaryFormatE:
 8805 0a80 00000000 		.quad	0
 8805      00000000 
 8806 0a88 00000000 		.quad	_ZTIN12_GLOBAL__N_165TestXmlTestReporterFixtureSingleSuccessfulTestReportSummaryFormatE
 8806      00000000 
 8807 0a90 00000000 		.quad	_ZN12_GLOBAL__N_165TestXmlTestReporterFixtureSingleSuccessfulTestReportSummaryFormatD1Ev
 8807      00000000 
 8808 0a98 00000000 		.quad	_ZN12_GLOBAL__N_165TestXmlTestReporterFixtureSingleSuccessfulTestReportSummaryFormatD0Ev
 8808      00000000 
 8809 0aa0 00000000 		.quad	_ZNK12_GLOBAL__N_165TestXmlTestReporterFixtureSingleSuccessfulTestReportSummaryFormat7RunImp
 8809      00000000 
 8810              		.text
 8811              		.align 2
 8813              	_ZN12_GLOBAL__N_165TestXmlTestReporterFixtureSingleSuccessfulTestReportSummaryFormatD2Ev:
 8814              	.LFB1506:
  80:TestXmlTestReporter.cpp **** {
 8815              		.loc 3 80 0
 8816              		.cfi_startproc
 8817 3f66 55       		pushq	%rbp
 8818              		.cfi_def_cfa_offset 16
 8819              		.cfi_offset 6, -16
 8820 3f67 4889E5   		movq	%rsp, %rbp
 8821              		.cfi_def_cfa_register 6
 8822 3f6a 4883EC10 		subq	$16, %rsp
 8823 3f6e 48897DF8 		movq	%rdi, -8(%rbp)
 8824              	.LBB246:
  80:TestXmlTestReporter.cpp **** {
 8825              		.loc 3 80 0
 8826 3f72 488B45F8 		movq	-8(%rbp), %rax
 8827 3f76 48C70000 		movq	$_ZTVN12_GLOBAL__N_165TestXmlTestReporterFixtureSingleSuccessfulTestReportSummaryFormatE+16, 
 8827      000000
 8828 3f7d 488B45F8 		movq	-8(%rbp), %rax
 8829 3f81 4889C7   		movq	%rax, %rdi
 8830 3f84 E8000000 		call	_ZN8UnitTest4TestD2Ev
 8830      00
 8831              	.LBE246:
 8832 3f89 B8000000 		movl	$0, %eax
 8832      00
 8833 3f8e 85C0     		testl	%eax, %eax
 8834 3f90 740C     		je	.L485
  80:TestXmlTestReporter.cpp **** {
 8835              		.loc 3 80 0 is_stmt 0 discriminator 1
 8836 3f92 488B45F8 		movq	-8(%rbp), %rax
 8837 3f96 4889C7   		movq	%rax, %rdi
 8838 3f99 E8000000 		call	_ZdlPv
 8838      00
 8839              	.L485:
  80:TestXmlTestReporter.cpp **** {
 8840              		.loc 3 80 0
 8841 3f9e C9       		leave
 8842              		.cfi_def_cfa 7, 8
 8843 3f9f C3       		ret
 8844              		.cfi_endproc
 8845              	.LFE1506:
 8847              		.set	_ZN12_GLOBAL__N_165TestXmlTestReporterFixtureSingleSuccessfulTestReportSummaryFormatD1Ev,_ZN1
 8848              		.align 2
 8850              	_ZN12_GLOBAL__N_165TestXmlTestReporterFixtureSingleSuccessfulTestReportSummaryFormatD0Ev:
 8851              	.LFB1508:
  80:TestXmlTestReporter.cpp **** {
 8852              		.loc 3 80 0 is_stmt 1
 8853              		.cfi_startproc
 8854 3fa0 55       		pushq	%rbp
 8855              		.cfi_def_cfa_offset 16
 8856              		.cfi_offset 6, -16
 8857 3fa1 4889E5   		movq	%rsp, %rbp
 8858              		.cfi_def_cfa_register 6
 8859 3fa4 4883EC10 		subq	$16, %rsp
 8860 3fa8 48897DF8 		movq	%rdi, -8(%rbp)
  80:TestXmlTestReporter.cpp **** {
 8861              		.loc 3 80 0
 8862 3fac 488B45F8 		movq	-8(%rbp), %rax
 8863 3fb0 4889C7   		movq	%rax, %rdi
 8864 3fb3 E8AEFFFF 		call	_ZN12_GLOBAL__N_165TestXmlTestReporterFixtureSingleSuccessfulTestReportSummaryFormatD1Ev
 8864      FF
 8865 3fb8 488B45F8 		movq	-8(%rbp), %rax
 8866 3fbc 4889C7   		movq	%rax, %rdi
 8867 3fbf E8000000 		call	_ZdlPv
 8867      00
 8868 3fc4 C9       		leave
 8869              		.cfi_def_cfa 7, 8
 8870 3fc5 C3       		ret
 8871              		.cfi_endproc
 8872              	.LFE1508:
 8874              		.section	.rodata
 8875 0aa8 00000000 		.align 32
 8875      00000000 
 8875      00000000 
 8875      00000000 
 8875      00000000 
 8878              	_ZTVN12_GLOBAL__N_150TestXmlTestReporterFixtureEmptyReportSummaryFormatE:
 8879 0ac0 00000000 		.quad	0
 8879      00000000 
 8880 0ac8 00000000 		.quad	_ZTIN12_GLOBAL__N_150TestXmlTestReporterFixtureEmptyReportSummaryFormatE
 8880      00000000 
 8881 0ad0 00000000 		.quad	_ZN12_GLOBAL__N_150TestXmlTestReporterFixtureEmptyReportSummaryFormatD1Ev
 8881      00000000 
 8882 0ad8 00000000 		.quad	_ZN12_GLOBAL__N_150TestXmlTestReporterFixtureEmptyReportSummaryFormatD0Ev
 8882      00000000 
 8883 0ae0 00000000 		.quad	_ZNK12_GLOBAL__N_150TestXmlTestReporterFixtureEmptyReportSummaryFormat7RunImplEv
 8883      00000000 
 8884              		.text
 8885              		.align 2
 8887              	_ZN12_GLOBAL__N_150TestXmlTestReporterFixtureEmptyReportSummaryFormatD2Ev:
 8888              	.LFB1510:
  68:TestXmlTestReporter.cpp **** {
 8889              		.loc 3 68 0
 8890              		.cfi_startproc
 8891 3fc6 55       		pushq	%rbp
 8892              		.cfi_def_cfa_offset 16
 8893              		.cfi_offset 6, -16
 8894 3fc7 4889E5   		movq	%rsp, %rbp
 8895              		.cfi_def_cfa_register 6
 8896 3fca 4883EC10 		subq	$16, %rsp
 8897 3fce 48897DF8 		movq	%rdi, -8(%rbp)
 8898              	.LBB247:
  68:TestXmlTestReporter.cpp **** {
 8899              		.loc 3 68 0
 8900 3fd2 488B45F8 		movq	-8(%rbp), %rax
 8901 3fd6 48C70000 		movq	$_ZTVN12_GLOBAL__N_150TestXmlTestReporterFixtureEmptyReportSummaryFormatE+16, (%rax)
 8901      000000
 8902 3fdd 488B45F8 		movq	-8(%rbp), %rax
 8903 3fe1 4889C7   		movq	%rax, %rdi
 8904 3fe4 E8000000 		call	_ZN8UnitTest4TestD2Ev
 8904      00
 8905              	.LBE247:
 8906 3fe9 B8000000 		movl	$0, %eax
 8906      00
 8907 3fee 85C0     		testl	%eax, %eax
 8908 3ff0 740C     		je	.L490
  68:TestXmlTestReporter.cpp **** {
 8909              		.loc 3 68 0 is_stmt 0 discriminator 1
 8910 3ff2 488B45F8 		movq	-8(%rbp), %rax
 8911 3ff6 4889C7   		movq	%rax, %rdi
 8912 3ff9 E8000000 		call	_ZdlPv
 8912      00
 8913              	.L490:
  68:TestXmlTestReporter.cpp **** {
 8914              		.loc 3 68 0
 8915 3ffe C9       		leave
 8916              		.cfi_def_cfa 7, 8
 8917 3fff C3       		ret
 8918              		.cfi_endproc
 8919              	.LFE1510:
 8921              		.set	_ZN12_GLOBAL__N_150TestXmlTestReporterFixtureEmptyReportSummaryFormatD1Ev,_ZN12_GLOBAL__N_150
 8922              		.align 2
 8924              	_ZN12_GLOBAL__N_150TestXmlTestReporterFixtureEmptyReportSummaryFormatD0Ev:
 8925              	.LFB1512:
  68:TestXmlTestReporter.cpp **** {
 8926              		.loc 3 68 0 is_stmt 1
 8927              		.cfi_startproc
 8928 4000 55       		pushq	%rbp
 8929              		.cfi_def_cfa_offset 16
 8930              		.cfi_offset 6, -16
 8931 4001 4889E5   		movq	%rsp, %rbp
 8932              		.cfi_def_cfa_register 6
 8933 4004 4883EC10 		subq	$16, %rsp
 8934 4008 48897DF8 		movq	%rdi, -8(%rbp)
  68:TestXmlTestReporter.cpp **** {
 8935              		.loc 3 68 0
 8936 400c 488B45F8 		movq	-8(%rbp), %rax
 8937 4010 4889C7   		movq	%rax, %rdi
 8938 4013 E8AEFFFF 		call	_ZN12_GLOBAL__N_150TestXmlTestReporterFixtureEmptyReportSummaryFormatD1Ev
 8938      FF
 8939 4018 488B45F8 		movq	-8(%rbp), %rax
 8940 401c 4889C7   		movq	%rax, %rdi
 8941 401f E8000000 		call	_ZdlPv
 8941      00
 8942 4024 C9       		leave
 8943              		.cfi_def_cfa 7, 8
 8944 4025 C3       		ret
 8945              		.cfi_endproc
 8946              	.LFE1512:
 8948              		.section	.rodata
 8949 0ae8 00000000 		.align 32
 8949      00000000 
 8949      00000000 
 8949      00000000 
 8949      00000000 
 8952              	_ZTVN12_GLOBAL__N_166TestXmlTestReporterFixtureOutputIsCachedUntilReportSummaryIsCalledE:
 8953 0b00 00000000 		.quad	0
 8953      00000000 
 8954 0b08 00000000 		.quad	_ZTIN12_GLOBAL__N_166TestXmlTestReporterFixtureOutputIsCachedUntilReportSummaryIsCalledE
 8954      00000000 
 8955 0b10 00000000 		.quad	_ZN12_GLOBAL__N_166TestXmlTestReporterFixtureOutputIsCachedUntilReportSummaryIsCalledD1Ev
 8955      00000000 
 8956 0b18 00000000 		.quad	_ZN12_GLOBAL__N_166TestXmlTestReporterFixtureOutputIsCachedUntilReportSummaryIsCalledD0Ev
 8956      00000000 
 8957 0b20 00000000 		.quad	_ZNK12_GLOBAL__N_166TestXmlTestReporterFixtureOutputIsCachedUntilReportSummaryIsCalled7RunIm
 8957      00000000 
 8958              		.text
 8959              		.align 2
 8961              	_ZN12_GLOBAL__N_166TestXmlTestReporterFixtureOutputIsCachedUntilReportSummaryIsCalledD2Ev:
 8962              	.LFB1514:
  55:TestXmlTestReporter.cpp **** {
 8963              		.loc 3 55 0
 8964              		.cfi_startproc
 8965 4026 55       		pushq	%rbp
 8966              		.cfi_def_cfa_offset 16
 8967              		.cfi_offset 6, -16
 8968 4027 4889E5   		movq	%rsp, %rbp
 8969              		.cfi_def_cfa_register 6
 8970 402a 4883EC10 		subq	$16, %rsp
 8971 402e 48897DF8 		movq	%rdi, -8(%rbp)
 8972              	.LBB248:
  55:TestXmlTestReporter.cpp **** {
 8973              		.loc 3 55 0
 8974 4032 488B45F8 		movq	-8(%rbp), %rax
 8975 4036 48C70000 		movq	$_ZTVN12_GLOBAL__N_166TestXmlTestReporterFixtureOutputIsCachedUntilReportSummaryIsCalledE+16,
 8975      000000
 8976 403d 488B45F8 		movq	-8(%rbp), %rax
 8977 4041 4889C7   		movq	%rax, %rdi
 8978 4044 E8000000 		call	_ZN8UnitTest4TestD2Ev
 8978      00
 8979              	.LBE248:
 8980 4049 B8000000 		movl	$0, %eax
 8980      00
 8981 404e 85C0     		testl	%eax, %eax
 8982 4050 740C     		je	.L495
  55:TestXmlTestReporter.cpp **** {
 8983              		.loc 3 55 0 is_stmt 0 discriminator 1
 8984 4052 488B45F8 		movq	-8(%rbp), %rax
 8985 4056 4889C7   		movq	%rax, %rdi
 8986 4059 E8000000 		call	_ZdlPv
 8986      00
 8987              	.L495:
  55:TestXmlTestReporter.cpp **** {
 8988              		.loc 3 55 0
 8989 405e C9       		leave
 8990              		.cfi_def_cfa 7, 8
 8991 405f C3       		ret
 8992              		.cfi_endproc
 8993              	.LFE1514:
 8995              		.set	_ZN12_GLOBAL__N_166TestXmlTestReporterFixtureOutputIsCachedUntilReportSummaryIsCalledD1Ev,_ZN
 8996              		.align 2
 8998              	_ZN12_GLOBAL__N_166TestXmlTestReporterFixtureOutputIsCachedUntilReportSummaryIsCalledD0Ev:
 8999              	.LFB1516:
  55:TestXmlTestReporter.cpp **** {
 9000              		.loc 3 55 0 is_stmt 1
 9001              		.cfi_startproc
 9002 4060 55       		pushq	%rbp
 9003              		.cfi_def_cfa_offset 16
 9004              		.cfi_offset 6, -16
 9005 4061 4889E5   		movq	%rsp, %rbp
 9006              		.cfi_def_cfa_register 6
 9007 4064 4883EC10 		subq	$16, %rsp
 9008 4068 48897DF8 		movq	%rdi, -8(%rbp)
  55:TestXmlTestReporter.cpp **** {
 9009              		.loc 3 55 0
 9010 406c 488B45F8 		movq	-8(%rbp), %rax
 9011 4070 4889C7   		movq	%rax, %rdi
 9012 4073 E8AEFFFF 		call	_ZN12_GLOBAL__N_166TestXmlTestReporterFixtureOutputIsCachedUntilReportSummaryIsCalledD1Ev
 9012      FF
 9013 4078 488B45F8 		movq	-8(%rbp), %rax
 9014 407c 4889C7   		movq	%rax, %rdi
 9015 407f E8000000 		call	_ZdlPv
 9015      00
 9016 4084 C9       		leave
 9017              		.cfi_def_cfa 7, 8
 9018 4085 C3       		ret
 9019              		.cfi_endproc
 9020              	.LFE1516:
 9022              		.section	.rodata
 9023 0b28 00000000 		.align 32
 9023      00000000 
 9023      00000000 
 9023      00000000 
 9023      00000000 
 9026              	_ZTVN12_GLOBAL__N_154TestXmlTestReporterFixtureMultipleCharactersAreEscapedE:
 9027 0b40 00000000 		.quad	0
 9027      00000000 
 9028 0b48 00000000 		.quad	_ZTIN12_GLOBAL__N_154TestXmlTestReporterFixtureMultipleCharactersAreEscapedE
 9028      00000000 
 9029 0b50 00000000 		.quad	_ZN12_GLOBAL__N_154TestXmlTestReporterFixtureMultipleCharactersAreEscapedD1Ev
 9029      00000000 
 9030 0b58 00000000 		.quad	_ZN12_GLOBAL__N_154TestXmlTestReporterFixtureMultipleCharactersAreEscapedD0Ev
 9030      00000000 
 9031 0b60 00000000 		.quad	_ZNK12_GLOBAL__N_154TestXmlTestReporterFixtureMultipleCharactersAreEscaped7RunImplEv
 9031      00000000 
 9032              		.text
 9033              		.align 2
 9035              	_ZN12_GLOBAL__N_154TestXmlTestReporterFixtureMultipleCharactersAreEscapedD2Ev:
 9036              	.LFB1518:
  34:TestXmlTestReporter.cpp **** {
 9037              		.loc 3 34 0
 9038              		.cfi_startproc
 9039 4086 55       		pushq	%rbp
 9040              		.cfi_def_cfa_offset 16
 9041              		.cfi_offset 6, -16
 9042 4087 4889E5   		movq	%rsp, %rbp
 9043              		.cfi_def_cfa_register 6
 9044 408a 4883EC10 		subq	$16, %rsp
 9045 408e 48897DF8 		movq	%rdi, -8(%rbp)
 9046              	.LBB249:
  34:TestXmlTestReporter.cpp **** {
 9047              		.loc 3 34 0
 9048 4092 488B45F8 		movq	-8(%rbp), %rax
 9049 4096 48C70000 		movq	$_ZTVN12_GLOBAL__N_154TestXmlTestReporterFixtureMultipleCharactersAreEscapedE+16, (%rax)
 9049      000000
 9050 409d 488B45F8 		movq	-8(%rbp), %rax
 9051 40a1 4889C7   		movq	%rax, %rdi
 9052 40a4 E8000000 		call	_ZN8UnitTest4TestD2Ev
 9052      00
 9053              	.LBE249:
 9054 40a9 B8000000 		movl	$0, %eax
 9054      00
 9055 40ae 85C0     		testl	%eax, %eax
 9056 40b0 740C     		je	.L500
  34:TestXmlTestReporter.cpp **** {
 9057              		.loc 3 34 0 is_stmt 0 discriminator 1
 9058 40b2 488B45F8 		movq	-8(%rbp), %rax
 9059 40b6 4889C7   		movq	%rax, %rdi
 9060 40b9 E8000000 		call	_ZdlPv
 9060      00
 9061              	.L500:
  34:TestXmlTestReporter.cpp **** {
 9062              		.loc 3 34 0
 9063 40be C9       		leave
 9064              		.cfi_def_cfa 7, 8
 9065 40bf C3       		ret
 9066              		.cfi_endproc
 9067              	.LFE1518:
 9069              		.set	_ZN12_GLOBAL__N_154TestXmlTestReporterFixtureMultipleCharactersAreEscapedD1Ev,_ZN12_GLOBAL__N
 9070              		.align 2
 9072              	_ZN12_GLOBAL__N_154TestXmlTestReporterFixtureMultipleCharactersAreEscapedD0Ev:
 9073              	.LFB1520:
  34:TestXmlTestReporter.cpp **** {
 9074              		.loc 3 34 0 is_stmt 1
 9075              		.cfi_startproc
 9076 40c0 55       		pushq	%rbp
 9077              		.cfi_def_cfa_offset 16
 9078              		.cfi_offset 6, -16
 9079 40c1 4889E5   		movq	%rsp, %rbp
 9080              		.cfi_def_cfa_register 6
 9081 40c4 4883EC10 		subq	$16, %rsp
 9082 40c8 48897DF8 		movq	%rdi, -8(%rbp)
  34:TestXmlTestReporter.cpp **** {
 9083              		.loc 3 34 0
 9084 40cc 488B45F8 		movq	-8(%rbp), %rax
 9085 40d0 4889C7   		movq	%rax, %rdi
 9086 40d3 E8AEFFFF 		call	_ZN12_GLOBAL__N_154TestXmlTestReporterFixtureMultipleCharactersAreEscapedD1Ev
 9086      FF
 9087 40d8 488B45F8 		movq	-8(%rbp), %rax
 9088 40dc 4889C7   		movq	%rax, %rdi
 9089 40df E8000000 		call	_ZdlPv
 9089      00
 9090 40e4 C9       		leave
 9091              		.cfi_def_cfa 7, 8
 9092 40e5 C3       		ret
 9093              		.cfi_endproc
 9094              	.LFE1520:
 9096              		.weak	_ZTVN8UnitTest15MemoryOutStreamE
 9097              		.section	.rodata._ZTVN8UnitTest15MemoryOutStreamE,"aG",@progbits,_ZTVN8UnitTest15MemoryOutStreamE,
 9098              		.align 32
 9101              	_ZTVN8UnitTest15MemoryOutStreamE:
 9102 0000 60000000 		.quad	96
 9102      00000000 
 9103 0008 00000000 		.quad	0
 9103      00000000 
 9104 0010 00000000 		.quad	_ZTIN8UnitTest15MemoryOutStreamE
 9104      00000000 
 9105 0018 00000000 		.quad	_ZN8UnitTest15MemoryOutStreamD1Ev
 9105      00000000 
 9106 0020 00000000 		.quad	_ZN8UnitTest15MemoryOutStreamD0Ev
 9106      00000000 
 9107 0028 A0FFFFFF 		.quad	-96
 9107      FFFFFFFF 
 9108 0030 A0FFFFFF 		.quad	-96
 9108      FFFFFFFF 
 9109 0038 00000000 		.quad	_ZTIN8UnitTest15MemoryOutStreamE
 9109      00000000 
 9110 0040 00000000 		.quad	_ZTv0_n24_N8UnitTest15MemoryOutStreamD1Ev
 9110      00000000 
 9111 0048 00000000 		.quad	_ZTv0_n24_N8UnitTest15MemoryOutStreamD0Ev
 9111      00000000 
 9112              		.section	.text._ZN8UnitTest15MemoryOutStreamD1Ev,"axG",@progbits,_ZN8UnitTest15MemoryOutStreamD1Ev
 9113              		.align 2
 9114              		.weak	_ZN8UnitTest15MemoryOutStreamD1Ev
 9116              	_ZN8UnitTest15MemoryOutStreamD1Ev:
 9117              	.LFB1523:
  13:../MemoryOutStream.h **** {
 9118              		.loc 2 13 0
 9119              		.cfi_startproc
 9120              		.cfi_personality 0x3,__gxx_personality_v0
 9121              		.cfi_lsda 0x3,.LLSDA1523
 9122 0000 55       		pushq	%rbp
 9123              		.cfi_def_cfa_offset 16
 9124              		.cfi_offset 6, -16
 9125 0001 4889E5   		movq	%rsp, %rbp
 9126              		.cfi_def_cfa_register 6
 9127 0004 53       		pushq	%rbx
 9128 0005 4883EC18 		subq	$24, %rsp
 9129              		.cfi_offset 3, -24
 9130 0009 48897DE8 		movq	%rdi, -24(%rbp)
 9131              	.LBB250:
  13:../MemoryOutStream.h **** {
 9132              		.loc 2 13 0
 9133 000d BA000000 		movl	$_ZTVN8UnitTest15MemoryOutStreamE+24, %edx
 9133      00
 9134 0012 488B45E8 		movq	-24(%rbp), %rax
 9135 0016 488910   		movq	%rdx, (%rax)
 9136 0019 BA600000 		movl	$96, %edx
 9136      00
 9137 001e 488B45E8 		movq	-24(%rbp), %rax
 9138 0022 4801C2   		addq	%rax, %rdx
 9139 0025 B8000000 		movl	$_ZTVN8UnitTest15MemoryOutStreamE+64, %eax
 9139      00
 9140 002a 488902   		movq	%rax, (%rdx)
 9141 002d 488B45E8 		movq	-24(%rbp), %rax
 9142 0031 4883C058 		addq	$88, %rax
 9143 0035 4889C7   		movq	%rax, %rdi
 9144              	.LEHB277:
 9145 0038 E8000000 		call	_ZNSsD1Ev
 9145      00
 9146              	.LEHE277:
  13:../MemoryOutStream.h **** {
 9147              		.loc 2 13 0 is_stmt 0 discriminator 10
 9148 003d BA000000 		movl	$_ZTTN8UnitTest15MemoryOutStreamE+8, %edx
 9148      00
 9149 0042 488B45E8 		movq	-24(%rbp), %rax
 9150 0046 4889D6   		movq	%rdx, %rsi
 9151 0049 4889C7   		movq	%rax, %rdi
 9152              	.LEHB278:
 9153 004c E8000000 		call	_ZNSt19basic_ostringstreamIcSt11char_traitsIcESaIcEED2Ev
 9153      00
 9154              	.LEHE278:
  13:../MemoryOutStream.h **** {
 9155              		.loc 2 13 0 discriminator 14
 9156 0051 B8020000 		movl	$2, %eax
 9156      00
 9157 0056 85C0     		testl	%eax, %eax
 9158 0058 7410     		je	.L506
  13:../MemoryOutStream.h **** {
 9159              		.loc 2 13 0 discriminator 15
 9160 005a 488B45E8 		movq	-24(%rbp), %rax
 9161 005e 4883C060 		addq	$96, %rax
 9162 0062 4889C7   		movq	%rax, %rdi
 9163              	.LEHB279:
 9164 0065 E8000000 		call	_ZNSt9basic_iosIcSt11char_traitsIcEED2Ev
 9164      00
 9165              	.LEHE279:
 9166              	.L506:
 9167              	.LBE250:
  13:../MemoryOutStream.h **** {
 9168              		.loc 2 13 0 discriminator 16
 9169 006a B8000000 		movl	$0, %eax
 9169      00
 9170 006f 85C0     		testl	%eax, %eax
 9171 0071 744E     		je	.L513
  13:../MemoryOutStream.h **** {
 9172              		.loc 2 13 0 discriminator 1
 9173 0073 488B45E8 		movq	-24(%rbp), %rax
 9174 0077 4889C7   		movq	%rax, %rdi
 9175 007a E8000000 		call	_ZdlPv
 9175      00
 9176 007f EB40     		jmp	.L513
 9177              	.L511:
 9178 0081 4889C3   		movq	%rax, %rbx
 9179              	.LBB251:
  13:../MemoryOutStream.h **** {
 9180              		.loc 2 13 0
 9181 0084 BA000000 		movl	$_ZTTN8UnitTest15MemoryOutStreamE+8, %edx
 9181      00
 9182 0089 488B45E8 		movq	-24(%rbp), %rax
 9183 008d 4889D6   		movq	%rdx, %rsi
 9184 0090 4889C7   		movq	%rax, %rdi
 9185 0093 E8000000 		call	_ZNSt19basic_ostringstreamIcSt11char_traitsIcESaIcEED2Ev
 9185      00
 9186 0098 EB03     		jmp	.L509
 9187              	.L512:
 9188 009a 4889C3   		movq	%rax, %rbx
 9189              	.L509:
 9190 009d B8020000 		movl	$2, %eax
 9190      00
 9191 00a2 85C0     		testl	%eax, %eax
 9192 00a4 7410     		je	.L510
  13:../MemoryOutStream.h **** {
 9193              		.loc 2 13 0 discriminator 20
 9194 00a6 488B45E8 		movq	-24(%rbp), %rax
 9195 00aa 4883C060 		addq	$96, %rax
 9196 00ae 4889C7   		movq	%rax, %rdi
 9197 00b1 E8000000 		call	_ZNSt9basic_iosIcSt11char_traitsIcEED2Ev
 9197      00
 9198              	.L510:
 9199 00b6 4889D8   		movq	%rbx, %rax
 9200 00b9 4889C7   		movq	%rax, %rdi
 9201              	.LEHB280:
 9202 00bc E8000000 		call	_Unwind_Resume
 9202      00
 9203              	.LEHE280:
 9204              	.L513:
 9205              	.LBE251:
  13:../MemoryOutStream.h **** {
 9206              		.loc 2 13 0
 9207 00c1 4883C418 		addq	$24, %rsp
 9208 00c5 5B       		popq	%rbx
 9209 00c6 5D       		popq	%rbp
 9210              		.cfi_def_cfa 7, 8
 9211 00c7 C3       		ret
 9212              		.cfi_endproc
 9213              	.LFE1523:
 9214              		.section	.gcc_except_table
 9215              	.LLSDA1523:
 9216 07e0 FF       		.byte	0xff
 9217 07e1 FF       		.byte	0xff
 9218 07e2 01       		.byte	0x1
 9219 07e3 13       		.uleb128 .LLSDACSE1523-.LLSDACSB1523
 9220              	.LLSDACSB1523:
 9221 07e4 38       		.uleb128 .LEHB277-.LFB1523
 9222 07e5 05       		.uleb128 .LEHE277-.LEHB277
 9223 07e6 8101     		.uleb128 .L511-.LFB1523
 9224 07e8 00       		.uleb128 0
 9225 07e9 4C       		.uleb128 .LEHB278-.LFB1523
 9226 07ea 05       		.uleb128 .LEHE278-.LEHB278
 9227 07eb 9A01     		.uleb128 .L512-.LFB1523
 9228 07ed 00       		.uleb128 0
 9229 07ee 65       		.uleb128 .LEHB279-.LFB1523
 9230 07ef 05       		.uleb128 .LEHE279-.LEHB279
 9231 07f0 00       		.uleb128 0
 9232 07f1 00       		.uleb128 0
 9233 07f2 BC01     		.uleb128 .LEHB280-.LFB1523
 9234 07f4 05       		.uleb128 .LEHE280-.LEHB280
 9235 07f5 00       		.uleb128 0
 9236 07f6 00       		.uleb128 0
 9237              	.LLSDACSE1523:
 9238              		.section	.text._ZN8UnitTest15MemoryOutStreamD1Ev,"axG",@progbits,_ZN8UnitTest15MemoryOutStreamD1Ev
 9240              		.set	.LTHUNK0,_ZN8UnitTest15MemoryOutStreamD1Ev
 9241              		.weak	_ZTv0_n24_N8UnitTest15MemoryOutStreamD1Ev
 9243              	_ZTv0_n24_N8UnitTest15MemoryOutStreamD1Ev:
 9244              	.LFB1587:
  13:../MemoryOutStream.h **** {
 9245              		.loc 2 13 0 is_stmt 1
 9246              		.cfi_startproc
 9247 00c8 4C8B17   		movq	(%rdi), %r10
 9248 00cb 49037AE8 		addq	-24(%r10), %rdi
 9249 00cf E92CFFFF 		jmp	.LTHUNK0
 9249      FF
 9250              		.cfi_endproc
 9251              	.LFE1587:
 9253              		.section	.text._ZN8UnitTest15MemoryOutStreamD0Ev,"axG",@progbits,_ZN8UnitTest15MemoryOutStreamD0Ev
 9254              		.align 2
 9255              		.weak	_ZN8UnitTest15MemoryOutStreamD0Ev
 9257              	_ZN8UnitTest15MemoryOutStreamD0Ev:
 9258              	.LFB1524:
  13:../MemoryOutStream.h **** {
 9259              		.loc 2 13 0
 9260              		.cfi_startproc
 9261 0000 55       		pushq	%rbp
 9262              		.cfi_def_cfa_offset 16
 9263              		.cfi_offset 6, -16
 9264 0001 4889E5   		movq	%rsp, %rbp
 9265              		.cfi_def_cfa_register 6
 9266 0004 4883EC10 		subq	$16, %rsp
 9267 0008 48897DF8 		movq	%rdi, -8(%rbp)
  13:../MemoryOutStream.h **** {
 9268              		.loc 2 13 0
 9269 000c 488B45F8 		movq	-8(%rbp), %rax
 9270 0010 4889C7   		movq	%rax, %rdi
 9271 0013 E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 9271      00
 9272 0018 488B45F8 		movq	-8(%rbp), %rax
 9273 001c 4889C7   		movq	%rax, %rdi
 9274 001f E8000000 		call	_ZdlPv
 9274      00
 9275 0024 C9       		leave
 9276              		.cfi_def_cfa 7, 8
 9277 0025 C3       		ret
 9278              		.cfi_endproc
 9279              	.LFE1524:
 9281              		.set	.LTHUNK1,_ZN8UnitTest15MemoryOutStreamD0Ev
 9282              		.weak	_ZTv0_n24_N8UnitTest15MemoryOutStreamD0Ev
 9284              	_ZTv0_n24_N8UnitTest15MemoryOutStreamD0Ev:
 9285              	.LFB1588:
  13:../MemoryOutStream.h **** {
 9286              		.loc 2 13 0
 9287              		.cfi_startproc
 9288 0026 4C8B17   		movq	(%rdi), %r10
 9289 0029 49037AE8 		addq	-24(%r10), %rdi
 9290 002d EBD1     		jmp	.LTHUNK1
 9291              		.cfi_endproc
 9292              	.LFE1588:
 9294              		.weak	_ZTTN8UnitTest15MemoryOutStreamE
 9295              		.section	.rodata._ZTTN8UnitTest15MemoryOutStreamE,"aG",@progbits,_ZTVN8UnitTest15MemoryOutStreamE,
 9296              		.align 32
 9299              	_ZTTN8UnitTest15MemoryOutStreamE:
 9300 0000 00000000 		.quad	_ZTVN8UnitTest15MemoryOutStreamE+24
 9300      00000000 
 9301 0008 00000000 		.quad	_ZTCN8UnitTest15MemoryOutStreamE0_St19basic_ostringstreamIcSt11char_traitsIcESaIcEE+24
 9301      00000000 
 9302 0010 00000000 		.quad	_ZTCN8UnitTest15MemoryOutStreamE0_So+24
 9302      00000000 
 9303 0018 00000000 		.quad	_ZTCN8UnitTest15MemoryOutStreamE0_So+64
 9303      00000000 
 9304 0020 00000000 		.quad	_ZTCN8UnitTest15MemoryOutStreamE0_St19basic_ostringstreamIcSt11char_traitsIcESaIcEE+64
 9304      00000000 
 9305 0028 00000000 		.quad	_ZTVN8UnitTest15MemoryOutStreamE+64
 9305      00000000 
 9306              		.hidden	_ZTCN8UnitTest15MemoryOutStreamE0_St19basic_ostringstreamIcSt11char_traitsIcESaIcEE
 9307              		.weak	_ZTCN8UnitTest15MemoryOutStreamE0_St19basic_ostringstreamIcSt11char_traitsIcESaIcEE
 9308              		.section	.rodata._ZTCN8UnitTest15MemoryOutStreamE0_St19basic_ostringstreamIcSt11char_traitsIcESaIc
 9309              		.align 32
 9312              	_ZTCN8UnitTest15MemoryOutStreamE0_St19basic_ostringstreamIcSt11char_traitsIcESaIcEE:
 9313 0000 60000000 		.quad	96
 9313      00000000 
 9314 0008 00000000 		.quad	0
 9314      00000000 
 9315 0010 00000000 		.quad	_ZTISt19basic_ostringstreamIcSt11char_traitsIcESaIcEE
 9315      00000000 
 9316 0018 00000000 		.quad	_ZNSt19basic_ostringstreamIcSt11char_traitsIcESaIcEED1Ev
 9316      00000000 
 9317 0020 00000000 		.quad	_ZNSt19basic_ostringstreamIcSt11char_traitsIcESaIcEED0Ev
 9317      00000000 
 9318 0028 A0FFFFFF 		.quad	-96
 9318      FFFFFFFF 
 9319 0030 A0FFFFFF 		.quad	-96
 9319      FFFFFFFF 
 9320 0038 00000000 		.quad	_ZTISt19basic_ostringstreamIcSt11char_traitsIcESaIcEE
 9320      00000000 
 9321 0040 00000000 		.quad	_ZTv0_n24_NSt19basic_ostringstreamIcSt11char_traitsIcESaIcEED1Ev
 9321      00000000 
 9322 0048 00000000 		.quad	_ZTv0_n24_NSt19basic_ostringstreamIcSt11char_traitsIcESaIcEED0Ev
 9322      00000000 
 9323              		.hidden	_ZTCN8UnitTest15MemoryOutStreamE0_So
 9324              		.weak	_ZTCN8UnitTest15MemoryOutStreamE0_So
 9325              		.section	.rodata._ZTCN8UnitTest15MemoryOutStreamE0_So,"aG",@progbits,_ZTVN8UnitTest15MemoryOutStre
 9326              		.align 32
 9329              	_ZTCN8UnitTest15MemoryOutStreamE0_So:
 9330 0000 60000000 		.quad	96
 9330      00000000 
 9331 0008 00000000 		.quad	0
 9331      00000000 
 9332 0010 00000000 		.quad	_ZTISo
 9332      00000000 
 9333 0018 00000000 		.quad	_ZNSoD1Ev
 9333      00000000 
 9334 0020 00000000 		.quad	_ZNSoD0Ev
 9334      00000000 
 9335 0028 A0FFFFFF 		.quad	-96
 9335      FFFFFFFF 
 9336 0030 A0FFFFFF 		.quad	-96
 9336      FFFFFFFF 
 9337 0038 00000000 		.quad	_ZTISo
 9337      00000000 
 9338 0040 00000000 		.quad	_ZTv0_n24_NSoD1Ev
 9338      00000000 
 9339 0048 00000000 		.quad	_ZTv0_n24_NSoD0Ev
 9339      00000000 
 9340              		.weak	_ZTSN8UnitTest15MemoryOutStreamE
 9341              		.section	.rodata._ZTSN8UnitTest15MemoryOutStreamE,"aG",@progbits,_ZTSN8UnitTest15MemoryOutStreamE,
 9342              		.align 16
 9345              	_ZTSN8UnitTest15MemoryOutStreamE:
 9346 0000 4E38556E 		.string	"N8UnitTest15MemoryOutStreamE"
 9346      69745465 
 9346      73743135 
 9346      4D656D6F 
 9346      72794F75 
 9347              		.weak	_ZTIN8UnitTest15MemoryOutStreamE
 9348              		.section	.rodata._ZTIN8UnitTest15MemoryOutStreamE,"aG",@progbits,_ZTIN8UnitTest15MemoryOutStreamE,
 9349              		.align 16
 9352              	_ZTIN8UnitTest15MemoryOutStreamE:
 9353 0000 00000000 		.quad	_ZTVN10__cxxabiv120__si_class_type_infoE+16
 9353      00000000 
 9354 0008 00000000 		.quad	_ZTSN8UnitTest15MemoryOutStreamE
 9354      00000000 
 9355 0010 00000000 		.quad	_ZTISt19basic_ostringstreamIcSt11char_traitsIcESaIcEE
 9355      00000000 
 9356              		.text
 9358              	_Z41__static_initialization_and_destruction_0ii:
 9359              	.LFB1525:
 182:TestXmlTestReporter.cpp **** 
 183:TestXmlTestReporter.cpp **** }
 9360              		.loc 3 183 0
 9361              		.cfi_startproc
 9362 40e6 55       		pushq	%rbp
 9363              		.cfi_def_cfa_offset 16
 9364              		.cfi_offset 6, -16
 9365 40e7 4889E5   		movq	%rsp, %rbp
 9366              		.cfi_def_cfa_register 6
 9367 40ea 4883EC10 		subq	$16, %rsp
 9368 40ee 897DFC   		movl	%edi, -4(%rbp)
 9369 40f1 8975F8   		movl	%esi, -8(%rbp)
 9370              		.loc 3 183 0
 9371 40f4 837DFC01 		cmpl	$1, -4(%rbp)
 9372 40f8 0F85B501 		jne	.L516
 9372      0000
 9373              		.loc 3 183 0 is_stmt 0 discriminator 1
 9374 40fe 817DF8FF 		cmpl	$65535, -8(%rbp)
 9374      FF0000
 9375 4105 0F85A801 		jne	.L516
 9375      0000
  34:TestXmlTestReporter.cpp **** {
 9376              		.loc 3 34 0 is_stmt 1
 9377 410b BF000000 		movl	$_ZN12_GLOBAL__N_162testXmlTestReporterFixtureMultipleCharactersAreEscapedInstanceE, %edi
 9377      00
 9378 4110 E8C3BFFF 		call	_ZN12_GLOBAL__N_154TestXmlTestReporterFixtureMultipleCharactersAreEscapedC1Ev
 9378      FF
 9379 4115 BA000000 		movl	$__dso_handle, %edx
 9379      00
 9380 411a BE000000 		movl	$_ZN12_GLOBAL__N_162testXmlTestReporterFixtureMultipleCharactersAreEscapedInstanceE, %esi
 9380      00
 9381 411f BF000000 		movl	$_ZN12_GLOBAL__N_154TestXmlTestReporterFixtureMultipleCharactersAreEscapedD1Ev, %edi
 9381      00
 9382 4124 E8000000 		call	__cxa_atexit
 9382      00
 9383 4129 E8000000 		call	_ZN8UnitTest4Test11GetTestListEv
 9383      00
 9384 412e BA000000 		movl	$_ZN12_GLOBAL__N_162testXmlTestReporterFixtureMultipleCharactersAreEscapedInstanceE, %edx
 9384      00
 9385 4133 4889C6   		movq	%rax, %rsi
 9386 4136 BF000000 		movl	$_ZN12_GLOBAL__N_155adderXmlTestReporterFixtureMultipleCharactersAreEscapedE, %edi
 9386      00
 9387 413b E8000000 		call	_ZN8UnitTest9ListAdderC1ERNS_8TestListEPNS_4TestE
 9387      00
  55:TestXmlTestReporter.cpp **** {
 9388              		.loc 3 55 0
 9389 4140 BF000000 		movl	$_ZN12_GLOBAL__N_174testXmlTestReporterFixtureOutputIsCachedUntilReportSummaryIsCalledInstanc
 9389      00
 9390 4145 E87EC4FF 		call	_ZN12_GLOBAL__N_166TestXmlTestReporterFixtureOutputIsCachedUntilReportSummaryIsCalledC1Ev
 9390      FF
 9391 414a BA000000 		movl	$__dso_handle, %edx
 9391      00
 9392 414f BE000000 		movl	$_ZN12_GLOBAL__N_174testXmlTestReporterFixtureOutputIsCachedUntilReportSummaryIsCalledInstanc
 9392      00
 9393 4154 BF000000 		movl	$_ZN12_GLOBAL__N_166TestXmlTestReporterFixtureOutputIsCachedUntilReportSummaryIsCalledD1Ev, %
 9393      00
 9394 4159 E8000000 		call	__cxa_atexit
 9394      00
 9395 415e E8000000 		call	_ZN8UnitTest4Test11GetTestListEv
 9395      00
 9396 4163 BA000000 		movl	$_ZN12_GLOBAL__N_174testXmlTestReporterFixtureOutputIsCachedUntilReportSummaryIsCalledInstanc
 9396      00
 9397 4168 4889C6   		movq	%rax, %rsi
 9398 416b BF000000 		movl	$_ZN12_GLOBAL__N_167adderXmlTestReporterFixtureOutputIsCachedUntilReportSummaryIsCalledE, %ed
 9398      00
 9399 4170 E8000000 		call	_ZN8UnitTest9ListAdderC1ERNS_8TestListEPNS_4TestE
 9399      00
  68:TestXmlTestReporter.cpp **** {
 9400              		.loc 3 68 0
 9401 4175 BF000000 		movl	$_ZN12_GLOBAL__N_158testXmlTestReporterFixtureEmptyReportSummaryFormatInstanceE, %edi
 9401      00
 9402 417a E841CAFF 		call	_ZN12_GLOBAL__N_150TestXmlTestReporterFixtureEmptyReportSummaryFormatC1Ev
 9402      FF
 9403 417f BA000000 		movl	$__dso_handle, %edx
 9403      00
 9404 4184 BE000000 		movl	$_ZN12_GLOBAL__N_158testXmlTestReporterFixtureEmptyReportSummaryFormatInstanceE, %esi
 9404      00
 9405 4189 BF000000 		movl	$_ZN12_GLOBAL__N_150TestXmlTestReporterFixtureEmptyReportSummaryFormatD1Ev, %edi
 9405      00
 9406 418e E8000000 		call	__cxa_atexit
 9406      00
 9407 4193 E8000000 		call	_ZN8UnitTest4Test11GetTestListEv
 9407      00
 9408 4198 BA000000 		movl	$_ZN12_GLOBAL__N_158testXmlTestReporterFixtureEmptyReportSummaryFormatInstanceE, %edx
 9408      00
 9409 419d 4889C6   		movq	%rax, %rsi
 9410 41a0 BF000000 		movl	$_ZN12_GLOBAL__N_151adderXmlTestReporterFixtureEmptyReportSummaryFormatE, %edi
 9410      00
 9411 41a5 E8000000 		call	_ZN8UnitTest9ListAdderC1ERNS_8TestListEPNS_4TestE
 9411      00
  80:TestXmlTestReporter.cpp **** {
 9412              		.loc 3 80 0
 9413 41aa BF000000 		movl	$_ZN12_GLOBAL__N_173testXmlTestReporterFixtureSingleSuccessfulTestReportSummaryFormatInstance
 9413      00
 9414 41af E880CEFF 		call	_ZN12_GLOBAL__N_165TestXmlTestReporterFixtureSingleSuccessfulTestReportSummaryFormatC1Ev
 9414      FF
 9415 41b4 BA000000 		movl	$__dso_handle, %edx
 9415      00
 9416 41b9 BE000000 		movl	$_ZN12_GLOBAL__N_173testXmlTestReporterFixtureSingleSuccessfulTestReportSummaryFormatInstance
 9416      00
 9417 41be BF000000 		movl	$_ZN12_GLOBAL__N_165TestXmlTestReporterFixtureSingleSuccessfulTestReportSummaryFormatD1Ev, %e
 9417      00
 9418 41c3 E8000000 		call	__cxa_atexit
 9418      00
 9419 41c8 E8000000 		call	_ZN8UnitTest4Test11GetTestListEv
 9419      00
 9420 41cd BA000000 		movl	$_ZN12_GLOBAL__N_173testXmlTestReporterFixtureSingleSuccessfulTestReportSummaryFormatInstance
 9420      00
 9421 41d2 4889C6   		movq	%rax, %rsi
 9422 41d5 BF000000 		movl	$_ZN12_GLOBAL__N_166adderXmlTestReporterFixtureSingleSuccessfulTestReportSummaryFormatE, %edi
 9422      00
 9423 41da E8000000 		call	_ZN8UnitTest9ListAdderC1ERNS_8TestListEPNS_4TestE
 9423      00
  96:TestXmlTestReporter.cpp **** {
 9424              		.loc 3 96 0
 9425 41df BF000000 		movl	$_ZN12_GLOBAL__N_169testXmlTestReporterFixtureSingleFailedTestReportSummaryFormatInstanceE, %
 9425      00
 9426 41e4 E8F9D2FF 		call	_ZN12_GLOBAL__N_161TestXmlTestReporterFixtureSingleFailedTestReportSummaryFormatC1Ev
 9426      FF
 9427 41e9 BA000000 		movl	$__dso_handle, %edx
 9427      00
 9428 41ee BE000000 		movl	$_ZN12_GLOBAL__N_169testXmlTestReporterFixtureSingleFailedTestReportSummaryFormatInstanceE, %
 9428      00
 9429 41f3 BF000000 		movl	$_ZN12_GLOBAL__N_161TestXmlTestReporterFixtureSingleFailedTestReportSummaryFormatD1Ev, %edi
 9429      00
 9430 41f8 E8000000 		call	__cxa_atexit
 9430      00
 9431 41fd E8000000 		call	_ZN8UnitTest4Test11GetTestListEv
 9431      00
 9432 4202 BA000000 		movl	$_ZN12_GLOBAL__N_169testXmlTestReporterFixtureSingleFailedTestReportSummaryFormatInstanceE, %
 9432      00
 9433 4207 4889C6   		movq	%rax, %rsi
 9434 420a BF000000 		movl	$_ZN12_GLOBAL__N_162adderXmlTestReporterFixtureSingleFailedTestReportSummaryFormatE, %edi
 9434      00
 9435 420f E8000000 		call	_ZN8UnitTest9ListAdderC1ERNS_8TestListEPNS_4TestE
 9435      00
 115:TestXmlTestReporter.cpp **** {
 9436              		.loc 3 115 0
 9437 4214 BF000000 		movl	$_ZN12_GLOBAL__N_160testXmlTestReporterFixtureFailureMessageIsXMLEscapedInstanceE, %edi
 9437      00
 9438 4219 E892D7FF 		call	_ZN12_GLOBAL__N_152TestXmlTestReporterFixtureFailureMessageIsXMLEscapedC1Ev
 9438      FF
 9439 421e BA000000 		movl	$__dso_handle, %edx
 9439      00
 9440 4223 BE000000 		movl	$_ZN12_GLOBAL__N_160testXmlTestReporterFixtureFailureMessageIsXMLEscapedInstanceE, %esi
 9440      00
 9441 4228 BF000000 		movl	$_ZN12_GLOBAL__N_152TestXmlTestReporterFixtureFailureMessageIsXMLEscapedD1Ev, %edi
 9441      00
 9442 422d E8000000 		call	__cxa_atexit
 9442      00
 9443 4232 E8000000 		call	_ZN8UnitTest4Test11GetTestListEv
 9443      00
 9444 4237 BA000000 		movl	$_ZN12_GLOBAL__N_160testXmlTestReporterFixtureFailureMessageIsXMLEscapedInstanceE, %edx
 9444      00
 9445 423c 4889C6   		movq	%rax, %rsi
 9446 423f BF000000 		movl	$_ZN12_GLOBAL__N_153adderXmlTestReporterFixtureFailureMessageIsXMLEscapedE, %edi
 9446      00
 9447 4244 E8000000 		call	_ZN8UnitTest9ListAdderC1ERNS_8TestListEPNS_4TestE
 9447      00
 135:TestXmlTestReporter.cpp **** {
 9448              		.loc 3 135 0
 9449 4249 BF000000 		movl	$_ZN12_GLOBAL__N_157testXmlTestReporterFixtureOneFailureAndOneSuccessInstanceE, %edi
 9449      00
 9450 424e E84DDCFF 		call	_ZN12_GLOBAL__N_149TestXmlTestReporterFixtureOneFailureAndOneSuccessC1Ev
 9450      FF
 9451 4253 BA000000 		movl	$__dso_handle, %edx
 9451      00
 9452 4258 BE000000 		movl	$_ZN12_GLOBAL__N_157testXmlTestReporterFixtureOneFailureAndOneSuccessInstanceE, %esi
 9452      00
 9453 425d BF000000 		movl	$_ZN12_GLOBAL__N_149TestXmlTestReporterFixtureOneFailureAndOneSuccessD1Ev, %edi
 9453      00
 9454 4262 E8000000 		call	__cxa_atexit
 9454      00
 9455 4267 E8000000 		call	_ZN8UnitTest4Test11GetTestListEv
 9455      00
 9456 426c BA000000 		movl	$_ZN12_GLOBAL__N_157testXmlTestReporterFixtureOneFailureAndOneSuccessInstanceE, %edx
 9456      00
 9457 4271 4889C6   		movq	%rax, %rsi
 9458 4274 BF000000 		movl	$_ZN12_GLOBAL__N_150adderXmlTestReporterFixtureOneFailureAndOneSuccessE, %edi
 9458      00
 9459 4279 E8000000 		call	_ZN8UnitTest9ListAdderC1ERNS_8TestListEPNS_4TestE
 9459      00
 159:TestXmlTestReporter.cpp **** {
 9460              		.loc 3 159 0
 9461 427e BF000000 		movl	$_ZN12_GLOBAL__N_150testXmlTestReporterFixtureMultipleFailuresInstanceE, %edi
 9461      00
 9462 4283 E882E1FF 		call	_ZN12_GLOBAL__N_142TestXmlTestReporterFixtureMultipleFailuresC1Ev
 9462      FF
 9463 4288 BA000000 		movl	$__dso_handle, %edx
 9463      00
 9464 428d BE000000 		movl	$_ZN12_GLOBAL__N_150testXmlTestReporterFixtureMultipleFailuresInstanceE, %esi
 9464      00
 9465 4292 BF000000 		movl	$_ZN12_GLOBAL__N_142TestXmlTestReporterFixtureMultipleFailuresD1Ev, %edi
 9465      00
 9466 4297 E8000000 		call	__cxa_atexit
 9466      00
 9467 429c E8000000 		call	_ZN8UnitTest4Test11GetTestListEv
 9467      00
 9468 42a1 BA000000 		movl	$_ZN12_GLOBAL__N_150testXmlTestReporterFixtureMultipleFailuresInstanceE, %edx
 9468      00
 9469 42a6 4889C6   		movq	%rax, %rsi
 9470 42a9 BF000000 		movl	$_ZN12_GLOBAL__N_143adderXmlTestReporterFixtureMultipleFailuresE, %edi
 9470      00
 9471 42ae E8000000 		call	_ZN8UnitTest9ListAdderC1ERNS_8TestListEPNS_4TestE
 9471      00
 9472              	.L516:
 9473              		.loc 3 183 0
 9474 42b3 C9       		leave
 9475              		.cfi_def_cfa 7, 8
 9476 42b4 C3       		ret
 9477              		.cfi_endproc
 9478              	.LFE1525:
 9480              		.section	.text._ZN8UnitTest20DeferredTestReporterD2Ev,"axG",@progbits,_ZN8UnitTest20DeferredTestRe
 9481              		.align 2
 9482              		.weak	_ZN8UnitTest20DeferredTestReporterD2Ev
 9484              	_ZN8UnitTest20DeferredTestReporterD2Ev:
 9485              	.LFB1528:
 9486              		.file 7 "../DeferredTestReporter.h"
   1:../DeferredTestReporter.h **** #ifndef UNITTEST_DEFERREDTESTREPORTER_H
   2:../DeferredTestReporter.h **** #define UNITTEST_DEFERREDTESTREPORTER_H
   3:../DeferredTestReporter.h **** 
   4:../DeferredTestReporter.h **** #include "TestReporter.h"
   5:../DeferredTestReporter.h **** #include "DeferredTestResult.h"
   6:../DeferredTestReporter.h **** 
   7:../DeferredTestReporter.h **** #include <vector>
   8:../DeferredTestReporter.h **** 
   9:../DeferredTestReporter.h **** namespace UnitTest
  10:../DeferredTestReporter.h **** {
  11:../DeferredTestReporter.h **** 
  12:../DeferredTestReporter.h **** class DeferredTestReporter : public TestReporter
 9487              		.loc 7 12 0
 9488              		.cfi_startproc
 9489              		.cfi_personality 0x3,__gxx_personality_v0
 9490              		.cfi_lsda 0x3,.LLSDA1528
 9491 0000 55       		pushq	%rbp
 9492              		.cfi_def_cfa_offset 16
 9493              		.cfi_offset 6, -16
 9494 0001 4889E5   		movq	%rsp, %rbp
 9495              		.cfi_def_cfa_register 6
 9496 0004 53       		pushq	%rbx
 9497 0005 4883EC18 		subq	$24, %rsp
 9498              		.cfi_offset 3, -24
 9499 0009 48897DE8 		movq	%rdi, -24(%rbp)
 9500              	.LBB252:
 9501              		.loc 7 12 0
 9502 000d 488B45E8 		movq	-24(%rbp), %rax
 9503 0011 48C70000 		movq	$_ZTVN8UnitTest20DeferredTestReporterE+16, (%rax)
 9503      000000
 9504 0018 488B45E8 		movq	-24(%rbp), %rax
 9505 001c 4883C008 		addq	$8, %rax
 9506 0020 4889C7   		movq	%rax, %rdi
 9507              	.LEHB281:
 9508 0023 E8000000 		call	_ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EED1Ev
 9508      00
 9509              	.LEHE281:
 9510              		.loc 7 12 0 is_stmt 0 discriminator 1
 9511 0028 488B45E8 		movq	-24(%rbp), %rax
 9512 002c 4889C7   		movq	%rax, %rdi
 9513              	.LEHB282:
 9514 002f E8000000 		call	_ZN8UnitTest12TestReporterD2Ev
 9514      00
 9515              	.LEHE282:
 9516              	.LBE252:
 9517 0034 B8000000 		movl	$0, %eax
 9517      00
 9518 0039 85C0     		testl	%eax, %eax
 9519 003b 7428     		je	.L523
 9520 003d 488B45E8 		movq	-24(%rbp), %rax
 9521 0041 4889C7   		movq	%rax, %rdi
 9522 0044 E8000000 		call	_ZdlPv
 9522      00
 9523 0049 EB1A     		jmp	.L523
 9524              	.L522:
 9525 004b 4889C3   		movq	%rax, %rbx
 9526              	.LBB253:
 9527              		.loc 7 12 0
 9528 004e 488B45E8 		movq	-24(%rbp), %rax
 9529 0052 4889C7   		movq	%rax, %rdi
 9530 0055 E8000000 		call	_ZN8UnitTest12TestReporterD2Ev
 9530      00
 9531 005a 4889D8   		movq	%rbx, %rax
 9532 005d 4889C7   		movq	%rax, %rdi
 9533              	.LEHB283:
 9534 0060 E8000000 		call	_Unwind_Resume
 9534      00
 9535              	.LEHE283:
 9536              	.L523:
 9537              	.LBE253:
 9538 0065 4883C418 		addq	$24, %rsp
 9539 0069 5B       		popq	%rbx
 9540 006a 5D       		popq	%rbp
 9541              		.cfi_def_cfa 7, 8
 9542 006b C3       		ret
 9543              		.cfi_endproc
 9544              	.LFE1528:
 9545              		.section	.gcc_except_table
 9546              	.LLSDA1528:
 9547 07f7 FF       		.byte	0xff
 9548 07f8 FF       		.byte	0xff
 9549 07f9 01       		.byte	0x1
 9550 07fa 0C       		.uleb128 .LLSDACSE1528-.LLSDACSB1528
 9551              	.LLSDACSB1528:
 9552 07fb 23       		.uleb128 .LEHB281-.LFB1528
 9553 07fc 05       		.uleb128 .LEHE281-.LEHB281
 9554 07fd 4B       		.uleb128 .L522-.LFB1528
 9555 07fe 00       		.uleb128 0
 9556 07ff 2F       		.uleb128 .LEHB282-.LFB1528
 9557 0800 05       		.uleb128 .LEHE282-.LEHB282
 9558 0801 00       		.uleb128 0
 9559 0802 00       		.uleb128 0
 9560 0803 60       		.uleb128 .LEHB283-.LFB1528
 9561 0804 05       		.uleb128 .LEHE283-.LEHB283
 9562 0805 00       		.uleb128 0
 9563 0806 00       		.uleb128 0
 9564              	.LLSDACSE1528:
 9565              		.section	.text._ZN8UnitTest20DeferredTestReporterD2Ev,"axG",@progbits,_ZN8UnitTest20DeferredTestRe
 9567              		.weak	_ZN8UnitTest20DeferredTestReporterD1Ev
 9568              		.set	_ZN8UnitTest20DeferredTestReporterD1Ev,_ZN8UnitTest20DeferredTestReporterD2Ev
 9569              		.section	.text._ZN8UnitTest20DeferredTestReporterD0Ev,"axG",@progbits,_ZN8UnitTest20DeferredTestRe
 9570              		.align 2
 9571              		.weak	_ZN8UnitTest20DeferredTestReporterD0Ev
 9573              	_ZN8UnitTest20DeferredTestReporterD0Ev:
 9574              	.LFB1530:
 9575              		.loc 7 12 0 is_stmt 1
 9576              		.cfi_startproc
 9577 0000 55       		pushq	%rbp
 9578              		.cfi_def_cfa_offset 16
 9579              		.cfi_offset 6, -16
 9580 0001 4889E5   		movq	%rsp, %rbp
 9581              		.cfi_def_cfa_register 6
 9582 0004 4883EC10 		subq	$16, %rsp
 9583 0008 48897DF8 		movq	%rdi, -8(%rbp)
 9584              		.loc 7 12 0
 9585 000c 488B45F8 		movq	-8(%rbp), %rax
 9586 0010 4889C7   		movq	%rax, %rdi
 9587 0013 E8000000 		call	_ZN8UnitTest20DeferredTestReporterD1Ev
 9587      00
 9588 0018 488B45F8 		movq	-8(%rbp), %rax
 9589 001c 4889C7   		movq	%rax, %rdi
 9590 001f E8000000 		call	_ZdlPv
 9590      00
 9591 0024 C9       		leave
 9592              		.cfi_def_cfa 7, 8
 9593 0025 C3       		ret
 9594              		.cfi_endproc
 9595              	.LFE1530:
 9597              		.section	.text._ZN8UnitTest15XmlTestReporterD2Ev,"axG",@progbits,_ZN8UnitTest15XmlTestReporterD5Ev
 9598              		.align 2
 9599              		.weak	_ZN8UnitTest15XmlTestReporterD2Ev
 9601              	_ZN8UnitTest15XmlTestReporterD2Ev:
 9602              	.LFB1531:
 9603              		.file 8 "../XmlTestReporter.h"
   1:../XmlTestReporter.h **** #ifndef UNITTEST_XMLTESTREPORTER_H
   2:../XmlTestReporter.h **** #define UNITTEST_XMLTESTREPORTER_H
   3:../XmlTestReporter.h **** 
   4:../XmlTestReporter.h **** #include "DeferredTestReporter.h"
   5:../XmlTestReporter.h **** 
   6:../XmlTestReporter.h **** #include <iosfwd>
   7:../XmlTestReporter.h **** 
   8:../XmlTestReporter.h **** namespace UnitTest
   9:../XmlTestReporter.h **** {
  10:../XmlTestReporter.h **** 
  11:../XmlTestReporter.h **** class XmlTestReporter : public DeferredTestReporter
 9604              		.loc 8 11 0
 9605              		.cfi_startproc
 9606 0000 55       		pushq	%rbp
 9607              		.cfi_def_cfa_offset 16
 9608              		.cfi_offset 6, -16
 9609 0001 4889E5   		movq	%rsp, %rbp
 9610              		.cfi_def_cfa_register 6
 9611 0004 4883EC10 		subq	$16, %rsp
 9612 0008 48897DF8 		movq	%rdi, -8(%rbp)
 9613              	.LBB254:
 9614              		.loc 8 11 0
 9615 000c 488B45F8 		movq	-8(%rbp), %rax
 9616 0010 48C70000 		movq	$_ZTVN8UnitTest15XmlTestReporterE+16, (%rax)
 9616      000000
 9617 0017 488B45F8 		movq	-8(%rbp), %rax
 9618 001b 4889C7   		movq	%rax, %rdi
 9619 001e E8000000 		call	_ZN8UnitTest20DeferredTestReporterD2Ev
 9619      00
 9620              	.LBE254:
 9621 0023 B8000000 		movl	$0, %eax
 9621      00
 9622 0028 85C0     		testl	%eax, %eax
 9623 002a 740C     		je	.L526
 9624              		.loc 8 11 0 is_stmt 0 discriminator 1
 9625 002c 488B45F8 		movq	-8(%rbp), %rax
 9626 0030 4889C7   		movq	%rax, %rdi
 9627 0033 E8000000 		call	_ZdlPv
 9627      00
 9628              	.L526:
 9629              		.loc 8 11 0
 9630 0038 C9       		leave
 9631              		.cfi_def_cfa 7, 8
 9632 0039 C3       		ret
 9633              		.cfi_endproc
 9634              	.LFE1531:
 9636              		.weak	_ZN8UnitTest15XmlTestReporterD1Ev
 9637              		.set	_ZN8UnitTest15XmlTestReporterD1Ev,_ZN8UnitTest15XmlTestReporterD2Ev
 9638              		.section	.text._ZN8UnitTest15XmlTestReporterD0Ev,"axG",@progbits,_ZN8UnitTest15XmlTestReporterD0Ev
 9639              		.align 2
 9640              		.weak	_ZN8UnitTest15XmlTestReporterD0Ev
 9642              	_ZN8UnitTest15XmlTestReporterD0Ev:
 9643              	.LFB1533:
 9644              		.loc 8 11 0 is_stmt 1
 9645              		.cfi_startproc
 9646 0000 55       		pushq	%rbp
 9647              		.cfi_def_cfa_offset 16
 9648              		.cfi_offset 6, -16
 9649 0001 4889E5   		movq	%rsp, %rbp
 9650              		.cfi_def_cfa_register 6
 9651 0004 4883EC10 		subq	$16, %rsp
 9652 0008 48897DF8 		movq	%rdi, -8(%rbp)
 9653              		.loc 8 11 0
 9654 000c 488B45F8 		movq	-8(%rbp), %rax
 9655 0010 4889C7   		movq	%rax, %rdi
 9656 0013 E8000000 		call	_ZN8UnitTest15XmlTestReporterD1Ev
 9656      00
 9657 0018 488B45F8 		movq	-8(%rbp), %rax
 9658 001c 4889C7   		movq	%rax, %rdi
 9659 001f E8000000 		call	_ZdlPv
 9659      00
 9660 0024 C9       		leave
 9661              		.cfi_def_cfa 7, 8
 9662 0025 C3       		ret
 9663              		.cfi_endproc
 9664              	.LFE1533:
 9666              		.section	.rodata
 9667 0b68 00000000 		.align 16
 9667      00000000 
 9670              	_ZTIN12_GLOBAL__N_154TestXmlTestReporterFixtureMultipleCharactersAreEscapedE:
 9671 0b70 00000000 		.quad	_ZTVN10__cxxabiv120__si_class_type_infoE+16
 9671      00000000 
 9672 0b78 00000000 		.quad	_ZTSN12_GLOBAL__N_154TestXmlTestReporterFixtureMultipleCharactersAreEscapedE
 9672      00000000 
 9673 0b80 00000000 		.quad	_ZTIN8UnitTest4TestE
 9673      00000000 
 9674 0b88 00000000 		.align 16
 9674      00000000 
 9677              	_ZTIN12_GLOBAL__N_166TestXmlTestReporterFixtureOutputIsCachedUntilReportSummaryIsCalledE:
 9678 0b90 00000000 		.quad	_ZTVN10__cxxabiv120__si_class_type_infoE+16
 9678      00000000 
 9679 0b98 00000000 		.quad	_ZTSN12_GLOBAL__N_166TestXmlTestReporterFixtureOutputIsCachedUntilReportSummaryIsCalledE
 9679      00000000 
 9680 0ba0 00000000 		.quad	_ZTIN8UnitTest4TestE
 9680      00000000 
 9681 0ba8 00000000 		.align 16
 9681      00000000 
 9684              	_ZTIN12_GLOBAL__N_150TestXmlTestReporterFixtureEmptyReportSummaryFormatE:
 9685 0bb0 00000000 		.quad	_ZTVN10__cxxabiv120__si_class_type_infoE+16
 9685      00000000 
 9686 0bb8 00000000 		.quad	_ZTSN12_GLOBAL__N_150TestXmlTestReporterFixtureEmptyReportSummaryFormatE
 9686      00000000 
 9687 0bc0 00000000 		.quad	_ZTIN8UnitTest4TestE
 9687      00000000 
 9688 0bc8 00000000 		.align 16
 9688      00000000 
 9691              	_ZTIN12_GLOBAL__N_165TestXmlTestReporterFixtureSingleSuccessfulTestReportSummaryFormatE:
 9692 0bd0 00000000 		.quad	_ZTVN10__cxxabiv120__si_class_type_infoE+16
 9692      00000000 
 9693 0bd8 00000000 		.quad	_ZTSN12_GLOBAL__N_165TestXmlTestReporterFixtureSingleSuccessfulTestReportSummaryFormatE
 9693      00000000 
 9694 0be0 00000000 		.quad	_ZTIN8UnitTest4TestE
 9694      00000000 
 9695 0be8 00000000 		.align 16
 9695      00000000 
 9698              	_ZTIN12_GLOBAL__N_161TestXmlTestReporterFixtureSingleFailedTestReportSummaryFormatE:
 9699 0bf0 00000000 		.quad	_ZTVN10__cxxabiv120__si_class_type_infoE+16
 9699      00000000 
 9700 0bf8 00000000 		.quad	_ZTSN12_GLOBAL__N_161TestXmlTestReporterFixtureSingleFailedTestReportSummaryFormatE
 9700      00000000 
 9701 0c00 00000000 		.quad	_ZTIN8UnitTest4TestE
 9701      00000000 
 9702 0c08 00000000 		.align 16
 9702      00000000 
 9705              	_ZTIN12_GLOBAL__N_152TestXmlTestReporterFixtureFailureMessageIsXMLEscapedE:
 9706 0c10 00000000 		.quad	_ZTVN10__cxxabiv120__si_class_type_infoE+16
 9706      00000000 
 9707 0c18 00000000 		.quad	_ZTSN12_GLOBAL__N_152TestXmlTestReporterFixtureFailureMessageIsXMLEscapedE
 9707      00000000 
 9708 0c20 00000000 		.quad	_ZTIN8UnitTest4TestE
 9708      00000000 
 9709 0c28 00000000 		.align 16
 9709      00000000 
 9712              	_ZTIN12_GLOBAL__N_149TestXmlTestReporterFixtureOneFailureAndOneSuccessE:
 9713 0c30 00000000 		.quad	_ZTVN10__cxxabiv120__si_class_type_infoE+16
 9713      00000000 
 9714 0c38 00000000 		.quad	_ZTSN12_GLOBAL__N_149TestXmlTestReporterFixtureOneFailureAndOneSuccessE
 9714      00000000 
 9715 0c40 00000000 		.quad	_ZTIN8UnitTest4TestE
 9715      00000000 
 9716 0c48 00000000 		.align 16
 9716      00000000 
 9719              	_ZTIN12_GLOBAL__N_142TestXmlTestReporterFixtureMultipleFailuresE:
 9720 0c50 00000000 		.quad	_ZTVN10__cxxabiv120__si_class_type_infoE+16
 9720      00000000 
 9721 0c58 00000000 		.quad	_ZTSN12_GLOBAL__N_142TestXmlTestReporterFixtureMultipleFailuresE
 9721      00000000 
 9722 0c60 00000000 		.quad	_ZTIN8UnitTest4TestE
 9722      00000000 
 9723 0c68 00000000 		.align 32
 9723      00000000 
 9723      00000000 
 9723      00000000 
 9723      00000000 
 9726              	_ZTSN12_GLOBAL__N_142TestXmlTestReporterFixtureMultipleFailuresE:
 9727 0c80 2A4E3132 		.string	"*N12_GLOBAL__N_142TestXmlTestReporterFixtureMultipleFailuresE"
 9727      5F474C4F 
 9727      42414C5F 
 9727      5F4E5F31 
 9727      34325465 
 9728 0cbe 0000     		.align 32
 9731              	_ZTSN12_GLOBAL__N_149TestXmlTestReporterFixtureOneFailureAndOneSuccessE:
 9732 0cc0 2A4E3132 		.string	"*N12_GLOBAL__N_149TestXmlTestReporterFixtureOneFailureAndOneSuccessE"
 9732      5F474C4F 
 9732      42414C5F 
 9732      5F4E5F31 
 9732      34395465 
 9733 0d05 00000000 		.align 32
 9733      00000000 
 9733      00000000 
 9733      00000000 
 9733      00000000 
 9736              	_ZTSN12_GLOBAL__N_152TestXmlTestReporterFixtureFailureMessageIsXMLEscapedE:
 9737 0d20 2A4E3132 		.string	"*N12_GLOBAL__N_152TestXmlTestReporterFixtureFailureMessageIsXMLEscapedE"
 9737      5F474C4F 
 9737      42414C5F 
 9737      5F4E5F31 
 9737      35325465 
 9738 0d68 00000000 		.align 32
 9738      00000000 
 9738      00000000 
 9738      00000000 
 9738      00000000 
 9741              	_ZTSN12_GLOBAL__N_161TestXmlTestReporterFixtureSingleFailedTestReportSummaryFormatE:
 9742 0d80 2A4E3132 		.string	"*N12_GLOBAL__N_161TestXmlTestReporterFixtureSingleFailedTestReportSummaryFormatE"
 9742      5F474C4F 
 9742      42414C5F 
 9742      5F4E5F31 
 9742      36315465 
 9743 0dd1 00000000 		.align 32
 9743      00000000 
 9743      00000000 
 9743      000000
 9746              	_ZTSN12_GLOBAL__N_165TestXmlTestReporterFixtureSingleSuccessfulTestReportSummaryFormatE:
 9747 0de0 2A4E3132 		.string	"*N12_GLOBAL__N_165TestXmlTestReporterFixtureSingleSuccessfulTestReportSummaryFormatE"
 9747      5F474C4F 
 9747      42414C5F 
 9747      5F4E5F31 
 9747      36355465 
 9748 0e35 00000000 		.align 32
 9748      00000000 
 9748      000000
 9751              	_ZTSN12_GLOBAL__N_150TestXmlTestReporterFixtureEmptyReportSummaryFormatE:
 9752 0e40 2A4E3132 		.string	"*N12_GLOBAL__N_150TestXmlTestReporterFixtureEmptyReportSummaryFormatE"
 9752      5F474C4F 
 9752      42414C5F 
 9752      5F4E5F31 
 9752      35305465 
 9753 0e86 00000000 		.align 32
 9753      00000000 
 9753      00000000 
 9753      00000000 
 9753      00000000 
 9756              	_ZTSN12_GLOBAL__N_166TestXmlTestReporterFixtureOutputIsCachedUntilReportSummaryIsCalledE:
 9757 0ea0 2A4E3132 		.string	"*N12_GLOBAL__N_166TestXmlTestReporterFixtureOutputIsCachedUntilReportSummaryIsCalledE"
 9757      5F474C4F 
 9757      42414C5F 
 9757      5F4E5F31 
 9757      36365465 
 9758 0ef6 00000000 		.align 32
 9758      00000000 
 9758      0000
 9761              	_ZTSN12_GLOBAL__N_154TestXmlTestReporterFixtureMultipleCharactersAreEscapedE:
 9762 0f00 2A4E3132 		.string	"*N12_GLOBAL__N_154TestXmlTestReporterFixtureMultipleCharactersAreEscapedE"
 9762      5F474C4F 
 9762      42414C5F 
 9762      5F4E5F31 
 9762      35345465 
 9763              		.section	.text._ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EED2Ev,"axG",@progbits,_ZNSt6vect
 9764              		.align 2
 9765              		.weak	_ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EED2Ev
 9767              	_ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EED2Ev:
 9768              	.LFB1535:
 9769              		.file 9 "/usr/include/c++/4.8/bits/stl_vector.h"
   1:/usr/include/c++/4.8/bits/stl_vector.h **** // Vector implementation -*- C++ -*-
   2:/usr/include/c++/4.8/bits/stl_vector.h **** 
   3:/usr/include/c++/4.8/bits/stl_vector.h **** // Copyright (C) 2001-2013 Free Software Foundation, Inc.
   4:/usr/include/c++/4.8/bits/stl_vector.h **** //
   5:/usr/include/c++/4.8/bits/stl_vector.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/c++/4.8/bits/stl_vector.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/4.8/bits/stl_vector.h **** // terms of the GNU General Public License as published by the
   8:/usr/include/c++/4.8/bits/stl_vector.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/4.8/bits/stl_vector.h **** // any later version.
  10:/usr/include/c++/4.8/bits/stl_vector.h **** 
  11:/usr/include/c++/4.8/bits/stl_vector.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/c++/4.8/bits/stl_vector.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/c++/4.8/bits/stl_vector.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/4.8/bits/stl_vector.h **** // GNU General Public License for more details.
  15:/usr/include/c++/4.8/bits/stl_vector.h **** 
  16:/usr/include/c++/4.8/bits/stl_vector.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/c++/4.8/bits/stl_vector.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/4.8/bits/stl_vector.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/4.8/bits/stl_vector.h **** 
  20:/usr/include/c++/4.8/bits/stl_vector.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/c++/4.8/bits/stl_vector.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/c++/4.8/bits/stl_vector.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/4.8/bits/stl_vector.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/c++/4.8/bits/stl_vector.h **** 
  25:/usr/include/c++/4.8/bits/stl_vector.h **** /*
  26:/usr/include/c++/4.8/bits/stl_vector.h ****  *
  27:/usr/include/c++/4.8/bits/stl_vector.h ****  * Copyright (c) 1994
  28:/usr/include/c++/4.8/bits/stl_vector.h ****  * Hewlett-Packard Company
  29:/usr/include/c++/4.8/bits/stl_vector.h ****  *
  30:/usr/include/c++/4.8/bits/stl_vector.h ****  * Permission to use, copy, modify, distribute and sell this software
  31:/usr/include/c++/4.8/bits/stl_vector.h ****  * and its documentation for any purpose is hereby granted without fee,
  32:/usr/include/c++/4.8/bits/stl_vector.h ****  * provided that the above copyright notice appear in all copies and
  33:/usr/include/c++/4.8/bits/stl_vector.h ****  * that both that copyright notice and this permission notice appear
  34:/usr/include/c++/4.8/bits/stl_vector.h ****  * in supporting documentation.  Hewlett-Packard Company makes no
  35:/usr/include/c++/4.8/bits/stl_vector.h ****  * representations about the suitability of this software for any
  36:/usr/include/c++/4.8/bits/stl_vector.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  37:/usr/include/c++/4.8/bits/stl_vector.h ****  *
  38:/usr/include/c++/4.8/bits/stl_vector.h ****  *
  39:/usr/include/c++/4.8/bits/stl_vector.h ****  * Copyright (c) 1996
  40:/usr/include/c++/4.8/bits/stl_vector.h ****  * Silicon Graphics Computer Systems, Inc.
  41:/usr/include/c++/4.8/bits/stl_vector.h ****  *
  42:/usr/include/c++/4.8/bits/stl_vector.h ****  * Permission to use, copy, modify, distribute and sell this software
  43:/usr/include/c++/4.8/bits/stl_vector.h ****  * and its documentation for any purpose is hereby granted without fee,
  44:/usr/include/c++/4.8/bits/stl_vector.h ****  * provided that the above copyright notice appear in all copies and
  45:/usr/include/c++/4.8/bits/stl_vector.h ****  * that both that copyright notice and this permission notice appear
  46:/usr/include/c++/4.8/bits/stl_vector.h ****  * in supporting documentation.  Silicon Graphics makes no
  47:/usr/include/c++/4.8/bits/stl_vector.h ****  * representations about the suitability of this  software for any
  48:/usr/include/c++/4.8/bits/stl_vector.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  49:/usr/include/c++/4.8/bits/stl_vector.h ****  */
  50:/usr/include/c++/4.8/bits/stl_vector.h **** 
  51:/usr/include/c++/4.8/bits/stl_vector.h **** /** @file bits/stl_vector.h
  52:/usr/include/c++/4.8/bits/stl_vector.h ****  *  This is an internal header file, included by other library headers.
  53:/usr/include/c++/4.8/bits/stl_vector.h ****  *  Do not attempt to use it directly. @headername{vector}
  54:/usr/include/c++/4.8/bits/stl_vector.h ****  */
  55:/usr/include/c++/4.8/bits/stl_vector.h **** 
  56:/usr/include/c++/4.8/bits/stl_vector.h **** #ifndef _STL_VECTOR_H
  57:/usr/include/c++/4.8/bits/stl_vector.h **** #define _STL_VECTOR_H 1
  58:/usr/include/c++/4.8/bits/stl_vector.h **** 
  59:/usr/include/c++/4.8/bits/stl_vector.h **** #include <bits/stl_iterator_base_funcs.h>
  60:/usr/include/c++/4.8/bits/stl_vector.h **** #include <bits/functexcept.h>
  61:/usr/include/c++/4.8/bits/stl_vector.h **** #include <bits/concept_check.h>
  62:/usr/include/c++/4.8/bits/stl_vector.h **** #if __cplusplus >= 201103L
  63:/usr/include/c++/4.8/bits/stl_vector.h **** #include <initializer_list>
  64:/usr/include/c++/4.8/bits/stl_vector.h **** #endif
  65:/usr/include/c++/4.8/bits/stl_vector.h **** 
  66:/usr/include/c++/4.8/bits/stl_vector.h **** namespace std _GLIBCXX_VISIBILITY(default)
  67:/usr/include/c++/4.8/bits/stl_vector.h **** {
  68:/usr/include/c++/4.8/bits/stl_vector.h **** _GLIBCXX_BEGIN_NAMESPACE_CONTAINER
  69:/usr/include/c++/4.8/bits/stl_vector.h **** 
  70:/usr/include/c++/4.8/bits/stl_vector.h ****   /// See bits/stl_deque.h's _Deque_base for an explanation.
  71:/usr/include/c++/4.8/bits/stl_vector.h ****   template<typename _Tp, typename _Alloc>
  72:/usr/include/c++/4.8/bits/stl_vector.h ****     struct _Vector_base
  73:/usr/include/c++/4.8/bits/stl_vector.h ****     {
  74:/usr/include/c++/4.8/bits/stl_vector.h ****       typedef typename __gnu_cxx::__alloc_traits<_Alloc>::template
  75:/usr/include/c++/4.8/bits/stl_vector.h ****         rebind<_Tp>::other _Tp_alloc_type;
  76:/usr/include/c++/4.8/bits/stl_vector.h ****       typedef typename __gnu_cxx::__alloc_traits<_Tp_alloc_type>::pointer
  77:/usr/include/c++/4.8/bits/stl_vector.h ****        	pointer;
  78:/usr/include/c++/4.8/bits/stl_vector.h **** 
  79:/usr/include/c++/4.8/bits/stl_vector.h ****       struct _Vector_impl 
  80:/usr/include/c++/4.8/bits/stl_vector.h ****       : public _Tp_alloc_type
  81:/usr/include/c++/4.8/bits/stl_vector.h ****       {
  82:/usr/include/c++/4.8/bits/stl_vector.h **** 	pointer _M_start;
  83:/usr/include/c++/4.8/bits/stl_vector.h **** 	pointer _M_finish;
  84:/usr/include/c++/4.8/bits/stl_vector.h **** 	pointer _M_end_of_storage;
  85:/usr/include/c++/4.8/bits/stl_vector.h **** 
  86:/usr/include/c++/4.8/bits/stl_vector.h **** 	_Vector_impl()
  87:/usr/include/c++/4.8/bits/stl_vector.h **** 	: _Tp_alloc_type(), _M_start(0), _M_finish(0), _M_end_of_storage(0)
  88:/usr/include/c++/4.8/bits/stl_vector.h **** 	{ }
  89:/usr/include/c++/4.8/bits/stl_vector.h **** 
  90:/usr/include/c++/4.8/bits/stl_vector.h **** 	_Vector_impl(_Tp_alloc_type const& __a)
  91:/usr/include/c++/4.8/bits/stl_vector.h **** 	: _Tp_alloc_type(__a), _M_start(0), _M_finish(0), _M_end_of_storage(0)
  92:/usr/include/c++/4.8/bits/stl_vector.h **** 	{ }
  93:/usr/include/c++/4.8/bits/stl_vector.h **** 
  94:/usr/include/c++/4.8/bits/stl_vector.h **** #if __cplusplus >= 201103L
  95:/usr/include/c++/4.8/bits/stl_vector.h **** 	_Vector_impl(_Tp_alloc_type&& __a)
  96:/usr/include/c++/4.8/bits/stl_vector.h **** 	: _Tp_alloc_type(std::move(__a)),
  97:/usr/include/c++/4.8/bits/stl_vector.h **** 	  _M_start(0), _M_finish(0), _M_end_of_storage(0)
  98:/usr/include/c++/4.8/bits/stl_vector.h **** 	{ }
  99:/usr/include/c++/4.8/bits/stl_vector.h **** #endif
 100:/usr/include/c++/4.8/bits/stl_vector.h **** 
 101:/usr/include/c++/4.8/bits/stl_vector.h **** 	void _M_swap_data(_Vector_impl& __x)
 102:/usr/include/c++/4.8/bits/stl_vector.h **** 	{
 103:/usr/include/c++/4.8/bits/stl_vector.h **** 	  std::swap(_M_start, __x._M_start);
 104:/usr/include/c++/4.8/bits/stl_vector.h **** 	  std::swap(_M_finish, __x._M_finish);
 105:/usr/include/c++/4.8/bits/stl_vector.h **** 	  std::swap(_M_end_of_storage, __x._M_end_of_storage);
 106:/usr/include/c++/4.8/bits/stl_vector.h **** 	}
 107:/usr/include/c++/4.8/bits/stl_vector.h ****       };
 108:/usr/include/c++/4.8/bits/stl_vector.h ****       
 109:/usr/include/c++/4.8/bits/stl_vector.h ****     public:
 110:/usr/include/c++/4.8/bits/stl_vector.h ****       typedef _Alloc allocator_type;
 111:/usr/include/c++/4.8/bits/stl_vector.h **** 
 112:/usr/include/c++/4.8/bits/stl_vector.h ****       _Tp_alloc_type&
 113:/usr/include/c++/4.8/bits/stl_vector.h ****       _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
 114:/usr/include/c++/4.8/bits/stl_vector.h ****       { return *static_cast<_Tp_alloc_type*>(&this->_M_impl); }
 115:/usr/include/c++/4.8/bits/stl_vector.h **** 
 116:/usr/include/c++/4.8/bits/stl_vector.h ****       const _Tp_alloc_type&
 117:/usr/include/c++/4.8/bits/stl_vector.h ****       _M_get_Tp_allocator() const _GLIBCXX_NOEXCEPT
 118:/usr/include/c++/4.8/bits/stl_vector.h ****       { return *static_cast<const _Tp_alloc_type*>(&this->_M_impl); }
 119:/usr/include/c++/4.8/bits/stl_vector.h **** 
 120:/usr/include/c++/4.8/bits/stl_vector.h ****       allocator_type
 121:/usr/include/c++/4.8/bits/stl_vector.h ****       get_allocator() const _GLIBCXX_NOEXCEPT
 122:/usr/include/c++/4.8/bits/stl_vector.h ****       { return allocator_type(_M_get_Tp_allocator()); }
 123:/usr/include/c++/4.8/bits/stl_vector.h **** 
 124:/usr/include/c++/4.8/bits/stl_vector.h ****       _Vector_base()
 125:/usr/include/c++/4.8/bits/stl_vector.h ****       : _M_impl() { }
 126:/usr/include/c++/4.8/bits/stl_vector.h **** 
 127:/usr/include/c++/4.8/bits/stl_vector.h ****       _Vector_base(const allocator_type& __a)
 128:/usr/include/c++/4.8/bits/stl_vector.h ****       : _M_impl(__a) { }
 129:/usr/include/c++/4.8/bits/stl_vector.h **** 
 130:/usr/include/c++/4.8/bits/stl_vector.h ****       _Vector_base(size_t __n)
 131:/usr/include/c++/4.8/bits/stl_vector.h ****       : _M_impl()
 132:/usr/include/c++/4.8/bits/stl_vector.h ****       { _M_create_storage(__n); }
 133:/usr/include/c++/4.8/bits/stl_vector.h **** 
 134:/usr/include/c++/4.8/bits/stl_vector.h ****       _Vector_base(size_t __n, const allocator_type& __a)
 135:/usr/include/c++/4.8/bits/stl_vector.h ****       : _M_impl(__a)
 136:/usr/include/c++/4.8/bits/stl_vector.h ****       { _M_create_storage(__n); }
 137:/usr/include/c++/4.8/bits/stl_vector.h **** 
 138:/usr/include/c++/4.8/bits/stl_vector.h **** #if __cplusplus >= 201103L
 139:/usr/include/c++/4.8/bits/stl_vector.h ****       _Vector_base(_Tp_alloc_type&& __a)
 140:/usr/include/c++/4.8/bits/stl_vector.h ****       : _M_impl(std::move(__a)) { }
 141:/usr/include/c++/4.8/bits/stl_vector.h **** 
 142:/usr/include/c++/4.8/bits/stl_vector.h ****       _Vector_base(_Vector_base&& __x)
 143:/usr/include/c++/4.8/bits/stl_vector.h ****       : _M_impl(std::move(__x._M_get_Tp_allocator()))
 144:/usr/include/c++/4.8/bits/stl_vector.h ****       { this->_M_impl._M_swap_data(__x._M_impl); }
 145:/usr/include/c++/4.8/bits/stl_vector.h **** 
 146:/usr/include/c++/4.8/bits/stl_vector.h ****       _Vector_base(_Vector_base&& __x, const allocator_type& __a)
 147:/usr/include/c++/4.8/bits/stl_vector.h ****       : _M_impl(__a)
 148:/usr/include/c++/4.8/bits/stl_vector.h ****       {
 149:/usr/include/c++/4.8/bits/stl_vector.h **** 	if (__x.get_allocator() == __a)
 150:/usr/include/c++/4.8/bits/stl_vector.h **** 	  this->_M_impl._M_swap_data(__x._M_impl);
 151:/usr/include/c++/4.8/bits/stl_vector.h **** 	else
 152:/usr/include/c++/4.8/bits/stl_vector.h **** 	  {
 153:/usr/include/c++/4.8/bits/stl_vector.h **** 	    size_t __n = __x._M_impl._M_finish - __x._M_impl._M_start;
 154:/usr/include/c++/4.8/bits/stl_vector.h **** 	    _M_create_storage(__n);
 155:/usr/include/c++/4.8/bits/stl_vector.h **** 	  }
 156:/usr/include/c++/4.8/bits/stl_vector.h ****       }
 157:/usr/include/c++/4.8/bits/stl_vector.h **** #endif
 158:/usr/include/c++/4.8/bits/stl_vector.h **** 
 159:/usr/include/c++/4.8/bits/stl_vector.h ****       ~_Vector_base()
 160:/usr/include/c++/4.8/bits/stl_vector.h ****       { _M_deallocate(this->_M_impl._M_start, this->_M_impl._M_end_of_storage
 161:/usr/include/c++/4.8/bits/stl_vector.h **** 		      - this->_M_impl._M_start); }
 162:/usr/include/c++/4.8/bits/stl_vector.h **** 
 163:/usr/include/c++/4.8/bits/stl_vector.h ****     public:
 164:/usr/include/c++/4.8/bits/stl_vector.h ****       _Vector_impl _M_impl;
 165:/usr/include/c++/4.8/bits/stl_vector.h **** 
 166:/usr/include/c++/4.8/bits/stl_vector.h ****       pointer
 167:/usr/include/c++/4.8/bits/stl_vector.h ****       _M_allocate(size_t __n)
 168:/usr/include/c++/4.8/bits/stl_vector.h ****       { return __n != 0 ? _M_impl.allocate(__n) : 0; }
 169:/usr/include/c++/4.8/bits/stl_vector.h **** 
 170:/usr/include/c++/4.8/bits/stl_vector.h ****       void
 171:/usr/include/c++/4.8/bits/stl_vector.h ****       _M_deallocate(pointer __p, size_t __n)
 172:/usr/include/c++/4.8/bits/stl_vector.h ****       {
 173:/usr/include/c++/4.8/bits/stl_vector.h **** 	if (__p)
 174:/usr/include/c++/4.8/bits/stl_vector.h **** 	  _M_impl.deallocate(__p, __n);
 175:/usr/include/c++/4.8/bits/stl_vector.h ****       }
 176:/usr/include/c++/4.8/bits/stl_vector.h **** 
 177:/usr/include/c++/4.8/bits/stl_vector.h ****     private:
 178:/usr/include/c++/4.8/bits/stl_vector.h ****       void
 179:/usr/include/c++/4.8/bits/stl_vector.h ****       _M_create_storage(size_t __n)
 180:/usr/include/c++/4.8/bits/stl_vector.h ****       {
 181:/usr/include/c++/4.8/bits/stl_vector.h **** 	this->_M_impl._M_start = this->_M_allocate(__n);
 182:/usr/include/c++/4.8/bits/stl_vector.h **** 	this->_M_impl._M_finish = this->_M_impl._M_start;
 183:/usr/include/c++/4.8/bits/stl_vector.h **** 	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
 184:/usr/include/c++/4.8/bits/stl_vector.h ****       }
 185:/usr/include/c++/4.8/bits/stl_vector.h ****     };
 186:/usr/include/c++/4.8/bits/stl_vector.h **** 
 187:/usr/include/c++/4.8/bits/stl_vector.h **** 
 188:/usr/include/c++/4.8/bits/stl_vector.h ****   /**
 189:/usr/include/c++/4.8/bits/stl_vector.h ****    *  @brief A standard container which offers fixed time access to
 190:/usr/include/c++/4.8/bits/stl_vector.h ****    *  individual elements in any order.
 191:/usr/include/c++/4.8/bits/stl_vector.h ****    *
 192:/usr/include/c++/4.8/bits/stl_vector.h ****    *  @ingroup sequences
 193:/usr/include/c++/4.8/bits/stl_vector.h ****    *
 194:/usr/include/c++/4.8/bits/stl_vector.h ****    *  @tparam _Tp  Type of element.
 195:/usr/include/c++/4.8/bits/stl_vector.h ****    *  @tparam _Alloc  Allocator type, defaults to allocator<_Tp>.
 196:/usr/include/c++/4.8/bits/stl_vector.h ****    *
 197:/usr/include/c++/4.8/bits/stl_vector.h ****    *  Meets the requirements of a <a href="tables.html#65">container</a>, a
 198:/usr/include/c++/4.8/bits/stl_vector.h ****    *  <a href="tables.html#66">reversible container</a>, and a
 199:/usr/include/c++/4.8/bits/stl_vector.h ****    *  <a href="tables.html#67">sequence</a>, including the
 200:/usr/include/c++/4.8/bits/stl_vector.h ****    *  <a href="tables.html#68">optional sequence requirements</a> with the
 201:/usr/include/c++/4.8/bits/stl_vector.h ****    *  %exception of @c push_front and @c pop_front.
 202:/usr/include/c++/4.8/bits/stl_vector.h ****    *
 203:/usr/include/c++/4.8/bits/stl_vector.h ****    *  In some terminology a %vector can be described as a dynamic
 204:/usr/include/c++/4.8/bits/stl_vector.h ****    *  C-style array, it offers fast and efficient access to individual
 205:/usr/include/c++/4.8/bits/stl_vector.h ****    *  elements in any order and saves the user from worrying about
 206:/usr/include/c++/4.8/bits/stl_vector.h ****    *  memory and size allocation.  Subscripting ( @c [] ) access is
 207:/usr/include/c++/4.8/bits/stl_vector.h ****    *  also provided as with C-style arrays.
 208:/usr/include/c++/4.8/bits/stl_vector.h ****   */
 209:/usr/include/c++/4.8/bits/stl_vector.h ****   template<typename _Tp, typename _Alloc = std::allocator<_Tp> >
 210:/usr/include/c++/4.8/bits/stl_vector.h ****     class vector : protected _Vector_base<_Tp, _Alloc>
 211:/usr/include/c++/4.8/bits/stl_vector.h ****     {
 212:/usr/include/c++/4.8/bits/stl_vector.h ****       // Concept requirements.
 213:/usr/include/c++/4.8/bits/stl_vector.h ****       typedef typename _Alloc::value_type                _Alloc_value_type;
 214:/usr/include/c++/4.8/bits/stl_vector.h ****       __glibcxx_class_requires(_Tp, _SGIAssignableConcept)
 215:/usr/include/c++/4.8/bits/stl_vector.h ****       __glibcxx_class_requires2(_Tp, _Alloc_value_type, _SameTypeConcept)
 216:/usr/include/c++/4.8/bits/stl_vector.h ****       
 217:/usr/include/c++/4.8/bits/stl_vector.h ****       typedef _Vector_base<_Tp, _Alloc>			 _Base;
 218:/usr/include/c++/4.8/bits/stl_vector.h ****       typedef typename _Base::_Tp_alloc_type		 _Tp_alloc_type;
 219:/usr/include/c++/4.8/bits/stl_vector.h ****       typedef __gnu_cxx::__alloc_traits<_Tp_alloc_type>  _Alloc_traits;
 220:/usr/include/c++/4.8/bits/stl_vector.h **** 
 221:/usr/include/c++/4.8/bits/stl_vector.h ****     public:
 222:/usr/include/c++/4.8/bits/stl_vector.h ****       typedef _Tp					 value_type;
 223:/usr/include/c++/4.8/bits/stl_vector.h ****       typedef typename _Base::pointer                    pointer;
 224:/usr/include/c++/4.8/bits/stl_vector.h ****       typedef typename _Alloc_traits::const_pointer      const_pointer;
 225:/usr/include/c++/4.8/bits/stl_vector.h ****       typedef typename _Alloc_traits::reference          reference;
 226:/usr/include/c++/4.8/bits/stl_vector.h ****       typedef typename _Alloc_traits::const_reference    const_reference;
 227:/usr/include/c++/4.8/bits/stl_vector.h ****       typedef __gnu_cxx::__normal_iterator<pointer, vector> iterator;
 228:/usr/include/c++/4.8/bits/stl_vector.h ****       typedef __gnu_cxx::__normal_iterator<const_pointer, vector>
 229:/usr/include/c++/4.8/bits/stl_vector.h ****       const_iterator;
 230:/usr/include/c++/4.8/bits/stl_vector.h ****       typedef std::reverse_iterator<const_iterator>  const_reverse_iterator;
 231:/usr/include/c++/4.8/bits/stl_vector.h ****       typedef std::reverse_iterator<iterator>		 reverse_iterator;
 232:/usr/include/c++/4.8/bits/stl_vector.h ****       typedef size_t					 size_type;
 233:/usr/include/c++/4.8/bits/stl_vector.h ****       typedef ptrdiff_t					 difference_type;
 234:/usr/include/c++/4.8/bits/stl_vector.h ****       typedef _Alloc                        		 allocator_type;
 235:/usr/include/c++/4.8/bits/stl_vector.h **** 
 236:/usr/include/c++/4.8/bits/stl_vector.h ****     protected:
 237:/usr/include/c++/4.8/bits/stl_vector.h ****       using _Base::_M_allocate;
 238:/usr/include/c++/4.8/bits/stl_vector.h ****       using _Base::_M_deallocate;
 239:/usr/include/c++/4.8/bits/stl_vector.h ****       using _Base::_M_impl;
 240:/usr/include/c++/4.8/bits/stl_vector.h ****       using _Base::_M_get_Tp_allocator;
 241:/usr/include/c++/4.8/bits/stl_vector.h **** 
 242:/usr/include/c++/4.8/bits/stl_vector.h ****     public:
 243:/usr/include/c++/4.8/bits/stl_vector.h ****       // [23.2.4.1] construct/copy/destroy
 244:/usr/include/c++/4.8/bits/stl_vector.h ****       // (assign() and get_allocator() are also listed in this section)
 245:/usr/include/c++/4.8/bits/stl_vector.h ****       /**
 246:/usr/include/c++/4.8/bits/stl_vector.h ****        *  @brief  Default constructor creates no elements.
 247:/usr/include/c++/4.8/bits/stl_vector.h ****        */
 248:/usr/include/c++/4.8/bits/stl_vector.h ****       vector()
 249:/usr/include/c++/4.8/bits/stl_vector.h ****       : _Base() { }
 250:/usr/include/c++/4.8/bits/stl_vector.h **** 
 251:/usr/include/c++/4.8/bits/stl_vector.h ****       /**
 252:/usr/include/c++/4.8/bits/stl_vector.h ****        *  @brief  Creates a %vector with no elements.
 253:/usr/include/c++/4.8/bits/stl_vector.h ****        *  @param  __a  An allocator object.
 254:/usr/include/c++/4.8/bits/stl_vector.h ****        */
 255:/usr/include/c++/4.8/bits/stl_vector.h ****       explicit
 256:/usr/include/c++/4.8/bits/stl_vector.h ****       vector(const allocator_type& __a)
 257:/usr/include/c++/4.8/bits/stl_vector.h ****       : _Base(__a) { }
 258:/usr/include/c++/4.8/bits/stl_vector.h **** 
 259:/usr/include/c++/4.8/bits/stl_vector.h **** #if __cplusplus >= 201103L
 260:/usr/include/c++/4.8/bits/stl_vector.h ****       /**
 261:/usr/include/c++/4.8/bits/stl_vector.h ****        *  @brief  Creates a %vector with default constructed elements.
 262:/usr/include/c++/4.8/bits/stl_vector.h ****        *  @param  __n  The number of elements to initially create.
 263:/usr/include/c++/4.8/bits/stl_vector.h ****        *  @param  __a  An allocator.
 264:/usr/include/c++/4.8/bits/stl_vector.h ****        *
 265:/usr/include/c++/4.8/bits/stl_vector.h ****        *  This constructor fills the %vector with @a __n default
 266:/usr/include/c++/4.8/bits/stl_vector.h ****        *  constructed elements.
 267:/usr/include/c++/4.8/bits/stl_vector.h ****        */
 268:/usr/include/c++/4.8/bits/stl_vector.h ****       explicit
 269:/usr/include/c++/4.8/bits/stl_vector.h ****       vector(size_type __n, const allocator_type& __a = allocator_type())
 270:/usr/include/c++/4.8/bits/stl_vector.h ****       : _Base(__n, __a)
 271:/usr/include/c++/4.8/bits/stl_vector.h ****       { _M_default_initialize(__n); }
 272:/usr/include/c++/4.8/bits/stl_vector.h **** 
 273:/usr/include/c++/4.8/bits/stl_vector.h ****       /**
 274:/usr/include/c++/4.8/bits/stl_vector.h ****        *  @brief  Creates a %vector with copies of an exemplar element.
 275:/usr/include/c++/4.8/bits/stl_vector.h ****        *  @param  __n  The number of elements to initially create.
 276:/usr/include/c++/4.8/bits/stl_vector.h ****        *  @param  __value  An element to copy.
 277:/usr/include/c++/4.8/bits/stl_vector.h ****        *  @param  __a  An allocator.
 278:/usr/include/c++/4.8/bits/stl_vector.h ****        *
 279:/usr/include/c++/4.8/bits/stl_vector.h ****        *  This constructor fills the %vector with @a __n copies of @a __value.
 280:/usr/include/c++/4.8/bits/stl_vector.h ****        */
 281:/usr/include/c++/4.8/bits/stl_vector.h ****       vector(size_type __n, const value_type& __value,
 282:/usr/include/c++/4.8/bits/stl_vector.h **** 	     const allocator_type& __a = allocator_type())
 283:/usr/include/c++/4.8/bits/stl_vector.h ****       : _Base(__n, __a)
 284:/usr/include/c++/4.8/bits/stl_vector.h ****       { _M_fill_initialize(__n, __value); }
 285:/usr/include/c++/4.8/bits/stl_vector.h **** #else
 286:/usr/include/c++/4.8/bits/stl_vector.h ****       /**
 287:/usr/include/c++/4.8/bits/stl_vector.h ****        *  @brief  Creates a %vector with copies of an exemplar element.
 288:/usr/include/c++/4.8/bits/stl_vector.h ****        *  @param  __n  The number of elements to initially create.
 289:/usr/include/c++/4.8/bits/stl_vector.h ****        *  @param  __value  An element to copy.
 290:/usr/include/c++/4.8/bits/stl_vector.h ****        *  @param  __a  An allocator.
 291:/usr/include/c++/4.8/bits/stl_vector.h ****        *
 292:/usr/include/c++/4.8/bits/stl_vector.h ****        *  This constructor fills the %vector with @a __n copies of @a __value.
 293:/usr/include/c++/4.8/bits/stl_vector.h ****        */
 294:/usr/include/c++/4.8/bits/stl_vector.h ****       explicit
 295:/usr/include/c++/4.8/bits/stl_vector.h ****       vector(size_type __n, const value_type& __value = value_type(),
 296:/usr/include/c++/4.8/bits/stl_vector.h **** 	     const allocator_type& __a = allocator_type())
 297:/usr/include/c++/4.8/bits/stl_vector.h ****       : _Base(__n, __a)
 298:/usr/include/c++/4.8/bits/stl_vector.h ****       { _M_fill_initialize(__n, __value); }
 299:/usr/include/c++/4.8/bits/stl_vector.h **** #endif
 300:/usr/include/c++/4.8/bits/stl_vector.h **** 
 301:/usr/include/c++/4.8/bits/stl_vector.h ****       /**
 302:/usr/include/c++/4.8/bits/stl_vector.h ****        *  @brief  %Vector copy constructor.
 303:/usr/include/c++/4.8/bits/stl_vector.h ****        *  @param  __x  A %vector of identical element and allocator types.
 304:/usr/include/c++/4.8/bits/stl_vector.h ****        *
 305:/usr/include/c++/4.8/bits/stl_vector.h ****        *  The newly-created %vector uses a copy of the allocation
 306:/usr/include/c++/4.8/bits/stl_vector.h ****        *  object used by @a __x.  All the elements of @a __x are copied,
 307:/usr/include/c++/4.8/bits/stl_vector.h ****        *  but any extra memory in
 308:/usr/include/c++/4.8/bits/stl_vector.h ****        *  @a __x (for fast expansion) will not be copied.
 309:/usr/include/c++/4.8/bits/stl_vector.h ****        */
 310:/usr/include/c++/4.8/bits/stl_vector.h ****       vector(const vector& __x)
 311:/usr/include/c++/4.8/bits/stl_vector.h ****       : _Base(__x.size(),
 312:/usr/include/c++/4.8/bits/stl_vector.h ****         _Alloc_traits::_S_select_on_copy(__x._M_get_Tp_allocator()))
 313:/usr/include/c++/4.8/bits/stl_vector.h ****       { this->_M_impl._M_finish =
 314:/usr/include/c++/4.8/bits/stl_vector.h **** 	  std::__uninitialized_copy_a(__x.begin(), __x.end(),
 315:/usr/include/c++/4.8/bits/stl_vector.h **** 				      this->_M_impl._M_start,
 316:/usr/include/c++/4.8/bits/stl_vector.h **** 				      _M_get_Tp_allocator());
 317:/usr/include/c++/4.8/bits/stl_vector.h ****       }
 318:/usr/include/c++/4.8/bits/stl_vector.h **** 
 319:/usr/include/c++/4.8/bits/stl_vector.h **** #if __cplusplus >= 201103L
 320:/usr/include/c++/4.8/bits/stl_vector.h ****       /**
 321:/usr/include/c++/4.8/bits/stl_vector.h ****        *  @brief  %Vector move constructor.
 322:/usr/include/c++/4.8/bits/stl_vector.h ****        *  @param  __x  A %vector of identical element and allocator types.
 323:/usr/include/c++/4.8/bits/stl_vector.h ****        *
 324:/usr/include/c++/4.8/bits/stl_vector.h ****        *  The newly-created %vector contains the exact contents of @a __x.
 325:/usr/include/c++/4.8/bits/stl_vector.h ****        *  The contents of @a __x are a valid, but unspecified %vector.
 326:/usr/include/c++/4.8/bits/stl_vector.h ****        */
 327:/usr/include/c++/4.8/bits/stl_vector.h ****       vector(vector&& __x) noexcept
 328:/usr/include/c++/4.8/bits/stl_vector.h ****       : _Base(std::move(__x)) { }
 329:/usr/include/c++/4.8/bits/stl_vector.h **** 
 330:/usr/include/c++/4.8/bits/stl_vector.h ****       /// Copy constructor with alternative allocator
 331:/usr/include/c++/4.8/bits/stl_vector.h ****       vector(const vector& __x, const allocator_type& __a)
 332:/usr/include/c++/4.8/bits/stl_vector.h ****       : _Base(__x.size(), __a)
 333:/usr/include/c++/4.8/bits/stl_vector.h ****       { this->_M_impl._M_finish =
 334:/usr/include/c++/4.8/bits/stl_vector.h **** 	  std::__uninitialized_copy_a(__x.begin(), __x.end(),
 335:/usr/include/c++/4.8/bits/stl_vector.h **** 				      this->_M_impl._M_start,
 336:/usr/include/c++/4.8/bits/stl_vector.h **** 				      _M_get_Tp_allocator());
 337:/usr/include/c++/4.8/bits/stl_vector.h ****       }
 338:/usr/include/c++/4.8/bits/stl_vector.h **** 
 339:/usr/include/c++/4.8/bits/stl_vector.h ****       /// Move constructor with alternative allocator
 340:/usr/include/c++/4.8/bits/stl_vector.h ****       vector(vector&& __rv, const allocator_type& __m)
 341:/usr/include/c++/4.8/bits/stl_vector.h ****       : _Base(std::move(__rv), __m)
 342:/usr/include/c++/4.8/bits/stl_vector.h ****       {
 343:/usr/include/c++/4.8/bits/stl_vector.h **** 	if (__rv.get_allocator() != __m)
 344:/usr/include/c++/4.8/bits/stl_vector.h **** 	  {
 345:/usr/include/c++/4.8/bits/stl_vector.h **** 	    this->_M_impl._M_finish =
 346:/usr/include/c++/4.8/bits/stl_vector.h **** 	      std::__uninitialized_move_a(__rv.begin(), __rv.end(),
 347:/usr/include/c++/4.8/bits/stl_vector.h **** 					  this->_M_impl._M_start,
 348:/usr/include/c++/4.8/bits/stl_vector.h **** 					  _M_get_Tp_allocator());
 349:/usr/include/c++/4.8/bits/stl_vector.h **** 	    __rv.clear();
 350:/usr/include/c++/4.8/bits/stl_vector.h **** 	  }
 351:/usr/include/c++/4.8/bits/stl_vector.h ****       }
 352:/usr/include/c++/4.8/bits/stl_vector.h **** 
 353:/usr/include/c++/4.8/bits/stl_vector.h ****       /**
 354:/usr/include/c++/4.8/bits/stl_vector.h ****        *  @brief  Builds a %vector from an initializer list.
 355:/usr/include/c++/4.8/bits/stl_vector.h ****        *  @param  __l  An initializer_list.
 356:/usr/include/c++/4.8/bits/stl_vector.h ****        *  @param  __a  An allocator.
 357:/usr/include/c++/4.8/bits/stl_vector.h ****        *
 358:/usr/include/c++/4.8/bits/stl_vector.h ****        *  Create a %vector consisting of copies of the elements in the
 359:/usr/include/c++/4.8/bits/stl_vector.h ****        *  initializer_list @a __l.
 360:/usr/include/c++/4.8/bits/stl_vector.h ****        *
 361:/usr/include/c++/4.8/bits/stl_vector.h ****        *  This will call the element type's copy constructor N times
 362:/usr/include/c++/4.8/bits/stl_vector.h ****        *  (where N is @a __l.size()) and do no memory reallocation.
 363:/usr/include/c++/4.8/bits/stl_vector.h ****        */
 364:/usr/include/c++/4.8/bits/stl_vector.h ****       vector(initializer_list<value_type> __l,
 365:/usr/include/c++/4.8/bits/stl_vector.h **** 	     const allocator_type& __a = allocator_type())
 366:/usr/include/c++/4.8/bits/stl_vector.h ****       : _Base(__a)
 367:/usr/include/c++/4.8/bits/stl_vector.h ****       {
 368:/usr/include/c++/4.8/bits/stl_vector.h **** 	_M_range_initialize(__l.begin(), __l.end(),
 369:/usr/include/c++/4.8/bits/stl_vector.h **** 			    random_access_iterator_tag());
 370:/usr/include/c++/4.8/bits/stl_vector.h ****       }
 371:/usr/include/c++/4.8/bits/stl_vector.h **** #endif
 372:/usr/include/c++/4.8/bits/stl_vector.h **** 
 373:/usr/include/c++/4.8/bits/stl_vector.h ****       /**
 374:/usr/include/c++/4.8/bits/stl_vector.h ****        *  @brief  Builds a %vector from a range.
 375:/usr/include/c++/4.8/bits/stl_vector.h ****        *  @param  __first  An input iterator.
 376:/usr/include/c++/4.8/bits/stl_vector.h ****        *  @param  __last  An input iterator.
 377:/usr/include/c++/4.8/bits/stl_vector.h ****        *  @param  __a  An allocator.
 378:/usr/include/c++/4.8/bits/stl_vector.h ****        *
 379:/usr/include/c++/4.8/bits/stl_vector.h ****        *  Create a %vector consisting of copies of the elements from
 380:/usr/include/c++/4.8/bits/stl_vector.h ****        *  [first,last).
 381:/usr/include/c++/4.8/bits/stl_vector.h ****        *
 382:/usr/include/c++/4.8/bits/stl_vector.h ****        *  If the iterators are forward, bidirectional, or
 383:/usr/include/c++/4.8/bits/stl_vector.h ****        *  random-access, then this will call the elements' copy
 384:/usr/include/c++/4.8/bits/stl_vector.h ****        *  constructor N times (where N is distance(first,last)) and do
 385:/usr/include/c++/4.8/bits/stl_vector.h ****        *  no memory reallocation.  But if only input iterators are
 386:/usr/include/c++/4.8/bits/stl_vector.h ****        *  used, then this will do at most 2N calls to the copy
 387:/usr/include/c++/4.8/bits/stl_vector.h ****        *  constructor, and logN memory reallocations.
 388:/usr/include/c++/4.8/bits/stl_vector.h ****        */
 389:/usr/include/c++/4.8/bits/stl_vector.h **** #if __cplusplus >= 201103L
 390:/usr/include/c++/4.8/bits/stl_vector.h ****       template<typename _InputIterator,
 391:/usr/include/c++/4.8/bits/stl_vector.h **** 	       typename = std::_RequireInputIter<_InputIterator>>
 392:/usr/include/c++/4.8/bits/stl_vector.h ****         vector(_InputIterator __first, _InputIterator __last,
 393:/usr/include/c++/4.8/bits/stl_vector.h **** 	       const allocator_type& __a = allocator_type())
 394:/usr/include/c++/4.8/bits/stl_vector.h **** 	: _Base(__a)
 395:/usr/include/c++/4.8/bits/stl_vector.h ****         { _M_initialize_dispatch(__first, __last, __false_type()); }
 396:/usr/include/c++/4.8/bits/stl_vector.h **** #else
 397:/usr/include/c++/4.8/bits/stl_vector.h ****       template<typename _InputIterator>
 398:/usr/include/c++/4.8/bits/stl_vector.h ****         vector(_InputIterator __first, _InputIterator __last,
 399:/usr/include/c++/4.8/bits/stl_vector.h **** 	       const allocator_type& __a = allocator_type())
 400:/usr/include/c++/4.8/bits/stl_vector.h **** 	: _Base(__a)
 401:/usr/include/c++/4.8/bits/stl_vector.h ****         {
 402:/usr/include/c++/4.8/bits/stl_vector.h **** 	  // Check whether it's an integral type.  If so, it's not an iterator.
 403:/usr/include/c++/4.8/bits/stl_vector.h **** 	  typedef typename std::__is_integer<_InputIterator>::__type _Integral;
 404:/usr/include/c++/4.8/bits/stl_vector.h **** 	  _M_initialize_dispatch(__first, __last, _Integral());
 405:/usr/include/c++/4.8/bits/stl_vector.h **** 	}
 406:/usr/include/c++/4.8/bits/stl_vector.h **** #endif
 407:/usr/include/c++/4.8/bits/stl_vector.h **** 
 408:/usr/include/c++/4.8/bits/stl_vector.h ****       /**
 409:/usr/include/c++/4.8/bits/stl_vector.h ****        *  The dtor only erases the elements, and note that if the
 410:/usr/include/c++/4.8/bits/stl_vector.h ****        *  elements themselves are pointers, the pointed-to memory is
 411:/usr/include/c++/4.8/bits/stl_vector.h ****        *  not touched in any way.  Managing the pointer is the user's
 412:/usr/include/c++/4.8/bits/stl_vector.h ****        *  responsibility.
 413:/usr/include/c++/4.8/bits/stl_vector.h ****        */
 414:/usr/include/c++/4.8/bits/stl_vector.h ****       ~vector() _GLIBCXX_NOEXCEPT
 9770              		.loc 9 414 0
 9771              		.cfi_startproc
 9772              		.cfi_personality 0x3,__gxx_personality_v0
 9773              		.cfi_lsda 0x3,.LLSDA1535
 9774 0000 55       		pushq	%rbp
 9775              		.cfi_def_cfa_offset 16
 9776              		.cfi_offset 6, -16
 9777 0001 4889E5   		movq	%rsp, %rbp
 9778              		.cfi_def_cfa_register 6
 9779 0004 53       		pushq	%rbx
 9780 0005 4883EC18 		subq	$24, %rsp
 9781              		.cfi_offset 3, -24
 9782 0009 48897DE8 		movq	%rdi, -24(%rbp)
 9783              	.LBB255:
 415:/usr/include/c++/4.8/bits/stl_vector.h ****       { std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
 416:/usr/include/c++/4.8/bits/stl_vector.h **** 		      _M_get_Tp_allocator()); }
 9784              		.loc 9 416 0
 9785 000d 488B45E8 		movq	-24(%rbp), %rax
 9786 0011 4889C7   		movq	%rax, %rdi
 9787 0014 E8000000 		call	_ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE19_M_get_Tp_allocatorEv
 9787      00
 9788 0019 4889C2   		movq	%rax, %rdx
 9789 001c 488B45E8 		movq	-24(%rbp), %rax
 9790 0020 488B4808 		movq	8(%rax), %rcx
 9791 0024 488B45E8 		movq	-24(%rbp), %rax
 9792 0028 488B00   		movq	(%rax), %rax
 415:/usr/include/c++/4.8/bits/stl_vector.h ****       { std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
 9793              		.loc 9 415 0
 9794 002b 4889CE   		movq	%rcx, %rsi
 9795 002e 4889C7   		movq	%rax, %rdi
 9796              	.LEHB284:
 9797 0031 E8000000 		call	_ZSt8_DestroyIPN8UnitTest18DeferredTestResultES1_EvT_S3_RSaIT0_E
 9797      00
 9798              	.LEHE284:
 9799              		.loc 9 416 0
 9800 0036 488B45E8 		movq	-24(%rbp), %rax
 9801 003a 4889C7   		movq	%rax, %rdi
 9802              	.LEHB285:
 9803 003d E8000000 		call	_ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EED2Ev
 9803      00
 9804              	.LEHE285:
 9805 0042 EB1A     		jmp	.L535
 9806              	.L534:
 9807 0044 4889C3   		movq	%rax, %rbx
 9808 0047 488B45E8 		movq	-24(%rbp), %rax
 9809 004b 4889C7   		movq	%rax, %rdi
 9810 004e E8000000 		call	_ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EED2Ev
 9810      00
 9811 0053 4889D8   		movq	%rbx, %rax
 9812 0056 4889C7   		movq	%rax, %rdi
 9813              	.LEHB286:
 9814 0059 E8000000 		call	_Unwind_Resume
 9814      00
 9815              	.LEHE286:
 9816              	.L535:
 9817              	.LBE255:
 9818 005e 4883C418 		addq	$24, %rsp
 9819 0062 5B       		popq	%rbx
 9820 0063 5D       		popq	%rbp
 9821              		.cfi_def_cfa 7, 8
 9822 0064 C3       		ret
 9823              		.cfi_endproc
 9824              	.LFE1535:
 9825              		.section	.gcc_except_table
 9826              	.LLSDA1535:
 9827 0807 FF       		.byte	0xff
 9828 0808 FF       		.byte	0xff
 9829 0809 01       		.byte	0x1
 9830 080a 0C       		.uleb128 .LLSDACSE1535-.LLSDACSB1535
 9831              	.LLSDACSB1535:
 9832 080b 31       		.uleb128 .LEHB284-.LFB1535
 9833 080c 05       		.uleb128 .LEHE284-.LEHB284
 9834 080d 44       		.uleb128 .L534-.LFB1535
 9835 080e 00       		.uleb128 0
 9836 080f 3D       		.uleb128 .LEHB285-.LFB1535
 9837 0810 05       		.uleb128 .LEHE285-.LEHB285
 9838 0811 00       		.uleb128 0
 9839 0812 00       		.uleb128 0
 9840 0813 59       		.uleb128 .LEHB286-.LFB1535
 9841 0814 05       		.uleb128 .LEHE286-.LEHB286
 9842 0815 00       		.uleb128 0
 9843 0816 00       		.uleb128 0
 9844              	.LLSDACSE1535:
 9845              		.section	.text._ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EED2Ev,"axG",@progbits,_ZNSt6vect
 9847              		.weak	_ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EED1Ev
 9848              		.set	_ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EED1Ev,_ZNSt6vectorIN8UnitTest18DeferredTes
 9849              		.section	.text._ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE12_Vector_implD2Ev,"axG"
 9850              		.align 2
 9851              		.weak	_ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE12_Vector_implD2Ev
 9853              	_ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE12_Vector_implD2Ev:
 9854              	.LFB1539:
  79:/usr/include/c++/4.8/bits/stl_vector.h ****       : public _Tp_alloc_type
 9855              		.loc 9 79 0
 9856              		.cfi_startproc
 9857 0000 55       		pushq	%rbp
 9858              		.cfi_def_cfa_offset 16
 9859              		.cfi_offset 6, -16
 9860 0001 4889E5   		movq	%rsp, %rbp
 9861              		.cfi_def_cfa_register 6
 9862 0004 4883EC10 		subq	$16, %rsp
 9863 0008 48897DF8 		movq	%rdi, -8(%rbp)
 9864              	.LBB256:
  79:/usr/include/c++/4.8/bits/stl_vector.h ****       : public _Tp_alloc_type
 9865              		.loc 9 79 0
 9866 000c 488B45F8 		movq	-8(%rbp), %rax
 9867 0010 4889C7   		movq	%rax, %rdi
 9868 0013 E8000000 		call	_ZNSaIN8UnitTest18DeferredTestResultEED2Ev
 9868      00
 9869              	.LBE256:
 9870 0018 C9       		leave
 9871              		.cfi_def_cfa 7, 8
 9872 0019 C3       		ret
 9873              		.cfi_endproc
 9874              	.LFE1539:
 9876              		.weak	_ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE12_Vector_implD1Ev
 9877              		.set	_ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE12_Vector_implD1Ev,_ZNSt12_Vector_
 9878              		.section	.text._ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EED2Ev,"axG",@progbits,_ZN
 9879              		.align 2
 9880              		.weak	_ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EED2Ev
 9882              	_ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EED2Ev:
 9883              	.LFB1541:
 159:/usr/include/c++/4.8/bits/stl_vector.h ****       { _M_deallocate(this->_M_impl._M_start, this->_M_impl._M_end_of_storage
 9884              		.loc 9 159 0
 9885              		.cfi_startproc
 9886              		.cfi_personality 0x3,__gxx_personality_v0
 9887              		.cfi_lsda 0x3,.LLSDA1541
 9888 0000 55       		pushq	%rbp
 9889              		.cfi_def_cfa_offset 16
 9890              		.cfi_offset 6, -16
 9891 0001 4889E5   		movq	%rsp, %rbp
 9892              		.cfi_def_cfa_register 6
 9893 0004 53       		pushq	%rbx
 9894 0005 4883EC18 		subq	$24, %rsp
 9895              		.cfi_offset 3, -24
 9896 0009 48897DE8 		movq	%rdi, -24(%rbp)
 9897              	.LBB257:
 161:/usr/include/c++/4.8/bits/stl_vector.h **** 
 9898              		.loc 9 161 0
 9899 000d 488B45E8 		movq	-24(%rbp), %rax
 9900 0011 488B4010 		movq	16(%rax), %rax
 9901 0015 4889C2   		movq	%rax, %rdx
 9902 0018 488B45E8 		movq	-24(%rbp), %rax
 9903 001c 488B00   		movq	(%rax), %rax
 9904 001f 4829C2   		subq	%rax, %rdx
 9905 0022 4889D0   		movq	%rdx, %rax
 9906 0025 48C1F803 		sarq	$3, %rax
 9907 0029 4889C2   		movq	%rax, %rdx
 9908 002c 48B8B76D 		movabsq	$7905747460161236407, %rax
 9908      DBB66DDB 
 9908      B66D
 9909 0036 480FAFC2 		imulq	%rdx, %rax
 9910 003a 4889C2   		movq	%rax, %rdx
 9911 003d 488B45E8 		movq	-24(%rbp), %rax
 9912 0041 488B08   		movq	(%rax), %rcx
 160:/usr/include/c++/4.8/bits/stl_vector.h **** 		      - this->_M_impl._M_start); }
 9913              		.loc 9 160 0
 9914 0044 488B45E8 		movq	-24(%rbp), %rax
 9915 0048 4889CE   		movq	%rcx, %rsi
 9916 004b 4889C7   		movq	%rax, %rdi
 9917              	.LEHB287:
 9918 004e E8000000 		call	_ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE13_M_deallocateEPS1_m
 9918      00
 9919              	.LEHE287:
 161:/usr/include/c++/4.8/bits/stl_vector.h **** 
 9920              		.loc 9 161 0
 9921 0053 488B45E8 		movq	-24(%rbp), %rax
 9922 0057 4889C7   		movq	%rax, %rdi
 9923 005a E8000000 		call	_ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE12_Vector_implD1Ev
 9923      00
 9924 005f EB1A     		jmp	.L542
 9925              	.L541:
 9926 0061 4889C3   		movq	%rax, %rbx
 9927 0064 488B45E8 		movq	-24(%rbp), %rax
 9928 0068 4889C7   		movq	%rax, %rdi
 9929 006b E8000000 		call	_ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE12_Vector_implD1Ev
 9929      00
 9930 0070 4889D8   		movq	%rbx, %rax
 9931 0073 4889C7   		movq	%rax, %rdi
 9932              	.LEHB288:
 9933 0076 E8000000 		call	_Unwind_Resume
 9933      00
 9934              	.LEHE288:
 9935              	.L542:
 9936              	.LBE257:
 9937 007b 4883C418 		addq	$24, %rsp
 9938 007f 5B       		popq	%rbx
 9939 0080 5D       		popq	%rbp
 9940              		.cfi_def_cfa 7, 8
 9941 0081 C3       		ret
 9942              		.cfi_endproc
 9943              	.LFE1541:
 9944              		.section	.gcc_except_table
 9945              	.LLSDA1541:
 9946 0817 FF       		.byte	0xff
 9947 0818 FF       		.byte	0xff
 9948 0819 01       		.byte	0x1
 9949 081a 08       		.uleb128 .LLSDACSE1541-.LLSDACSB1541
 9950              	.LLSDACSB1541:
 9951 081b 4E       		.uleb128 .LEHB287-.LFB1541
 9952 081c 05       		.uleb128 .LEHE287-.LEHB287
 9953 081d 61       		.uleb128 .L541-.LFB1541
 9954 081e 00       		.uleb128 0
 9955 081f 76       		.uleb128 .LEHB288-.LFB1541
 9956 0820 05       		.uleb128 .LEHE288-.LEHB288
 9957 0821 00       		.uleb128 0
 9958 0822 00       		.uleb128 0
 9959              	.LLSDACSE1541:
 9960              		.section	.text._ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EED2Ev,"axG",@progbits,_ZN
 9962              		.weak	_ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EED1Ev
 9963              		.set	_ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EED1Ev,_ZNSt12_Vector_baseIN8UnitTes
 9964              		.section	.text._ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE19_M_get_Tp_allocatorEv,
 9965              		.align 2
 9966              		.weak	_ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE19_M_get_Tp_allocatorEv
 9968              	_ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE19_M_get_Tp_allocatorEv:
 9969              	.LFB1543:
 113:/usr/include/c++/4.8/bits/stl_vector.h ****       { return *static_cast<_Tp_alloc_type*>(&this->_M_impl); }
 9970              		.loc 9 113 0
 9971              		.cfi_startproc
 9972 0000 55       		pushq	%rbp
 9973              		.cfi_def_cfa_offset 16
 9974              		.cfi_offset 6, -16
 9975 0001 4889E5   		movq	%rsp, %rbp
 9976              		.cfi_def_cfa_register 6
 9977 0004 48897DF8 		movq	%rdi, -8(%rbp)
 114:/usr/include/c++/4.8/bits/stl_vector.h **** 
 9978              		.loc 9 114 0
 9979 0008 488B45F8 		movq	-8(%rbp), %rax
 9980 000c 5D       		popq	%rbp
 9981              		.cfi_def_cfa 7, 8
 9982 000d C3       		ret
 9983              		.cfi_endproc
 9984              	.LFE1543:
 9986              		.section	.text._ZSt8_DestroyIPN8UnitTest18DeferredTestResultES1_EvT_S3_RSaIT0_E,"axG",@progbits,_Z
 9987              		.weak	_ZSt8_DestroyIPN8UnitTest18DeferredTestResultES1_EvT_S3_RSaIT0_E
 9989              	_ZSt8_DestroyIPN8UnitTest18DeferredTestResultES1_EvT_S3_RSaIT0_E:
 9990              	.LFB1544:
 9991              		.file 10 "/usr/include/c++/4.8/bits/stl_construct.h"
   1:/usr/include/c++/4.8/bits/stl_construct.h **** // nonstandard construct and destroy functions -*- C++ -*-
   2:/usr/include/c++/4.8/bits/stl_construct.h **** 
   3:/usr/include/c++/4.8/bits/stl_construct.h **** // Copyright (C) 2001-2013 Free Software Foundation, Inc.
   4:/usr/include/c++/4.8/bits/stl_construct.h **** //
   5:/usr/include/c++/4.8/bits/stl_construct.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/c++/4.8/bits/stl_construct.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/4.8/bits/stl_construct.h **** // terms of the GNU General Public License as published by the
   8:/usr/include/c++/4.8/bits/stl_construct.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/4.8/bits/stl_construct.h **** // any later version.
  10:/usr/include/c++/4.8/bits/stl_construct.h **** 
  11:/usr/include/c++/4.8/bits/stl_construct.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/c++/4.8/bits/stl_construct.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/c++/4.8/bits/stl_construct.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/4.8/bits/stl_construct.h **** // GNU General Public License for more details.
  15:/usr/include/c++/4.8/bits/stl_construct.h **** 
  16:/usr/include/c++/4.8/bits/stl_construct.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/c++/4.8/bits/stl_construct.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/4.8/bits/stl_construct.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/4.8/bits/stl_construct.h **** 
  20:/usr/include/c++/4.8/bits/stl_construct.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/c++/4.8/bits/stl_construct.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/c++/4.8/bits/stl_construct.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/4.8/bits/stl_construct.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/c++/4.8/bits/stl_construct.h **** 
  25:/usr/include/c++/4.8/bits/stl_construct.h **** /*
  26:/usr/include/c++/4.8/bits/stl_construct.h ****  *
  27:/usr/include/c++/4.8/bits/stl_construct.h ****  * Copyright (c) 1994
  28:/usr/include/c++/4.8/bits/stl_construct.h ****  * Hewlett-Packard Company
  29:/usr/include/c++/4.8/bits/stl_construct.h ****  *
  30:/usr/include/c++/4.8/bits/stl_construct.h ****  * Permission to use, copy, modify, distribute and sell this software
  31:/usr/include/c++/4.8/bits/stl_construct.h ****  * and its documentation for any purpose is hereby granted without fee,
  32:/usr/include/c++/4.8/bits/stl_construct.h ****  * provided that the above copyright notice appear in all copies and
  33:/usr/include/c++/4.8/bits/stl_construct.h ****  * that both that copyright notice and this permission notice appear
  34:/usr/include/c++/4.8/bits/stl_construct.h ****  * in supporting documentation.  Hewlett-Packard Company makes no
  35:/usr/include/c++/4.8/bits/stl_construct.h ****  * representations about the suitability of this software for any
  36:/usr/include/c++/4.8/bits/stl_construct.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  37:/usr/include/c++/4.8/bits/stl_construct.h ****  *
  38:/usr/include/c++/4.8/bits/stl_construct.h ****  *
  39:/usr/include/c++/4.8/bits/stl_construct.h ****  * Copyright (c) 1996,1997
  40:/usr/include/c++/4.8/bits/stl_construct.h ****  * Silicon Graphics Computer Systems, Inc.
  41:/usr/include/c++/4.8/bits/stl_construct.h ****  *
  42:/usr/include/c++/4.8/bits/stl_construct.h ****  * Permission to use, copy, modify, distribute and sell this software
  43:/usr/include/c++/4.8/bits/stl_construct.h ****  * and its documentation for any purpose is hereby granted without fee,
  44:/usr/include/c++/4.8/bits/stl_construct.h ****  * provided that the above copyright notice appear in all copies and
  45:/usr/include/c++/4.8/bits/stl_construct.h ****  * that both that copyright notice and this permission notice appear
  46:/usr/include/c++/4.8/bits/stl_construct.h ****  * in supporting documentation.  Silicon Graphics makes no
  47:/usr/include/c++/4.8/bits/stl_construct.h ****  * representations about the suitability of this software for any
  48:/usr/include/c++/4.8/bits/stl_construct.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  49:/usr/include/c++/4.8/bits/stl_construct.h ****  */
  50:/usr/include/c++/4.8/bits/stl_construct.h **** 
  51:/usr/include/c++/4.8/bits/stl_construct.h **** /** @file bits/stl_construct.h
  52:/usr/include/c++/4.8/bits/stl_construct.h ****  *  This is an internal header file, included by other library headers.
  53:/usr/include/c++/4.8/bits/stl_construct.h ****  *  Do not attempt to use it directly. @headername{memory}
  54:/usr/include/c++/4.8/bits/stl_construct.h ****  */
  55:/usr/include/c++/4.8/bits/stl_construct.h **** 
  56:/usr/include/c++/4.8/bits/stl_construct.h **** #ifndef _STL_CONSTRUCT_H
  57:/usr/include/c++/4.8/bits/stl_construct.h **** #define _STL_CONSTRUCT_H 1
  58:/usr/include/c++/4.8/bits/stl_construct.h **** 
  59:/usr/include/c++/4.8/bits/stl_construct.h **** #include <new>
  60:/usr/include/c++/4.8/bits/stl_construct.h **** #include <bits/move.h>
  61:/usr/include/c++/4.8/bits/stl_construct.h **** #include <ext/alloc_traits.h>
  62:/usr/include/c++/4.8/bits/stl_construct.h **** 
  63:/usr/include/c++/4.8/bits/stl_construct.h **** namespace std _GLIBCXX_VISIBILITY(default)
  64:/usr/include/c++/4.8/bits/stl_construct.h **** {
  65:/usr/include/c++/4.8/bits/stl_construct.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  66:/usr/include/c++/4.8/bits/stl_construct.h **** 
  67:/usr/include/c++/4.8/bits/stl_construct.h ****   /**
  68:/usr/include/c++/4.8/bits/stl_construct.h ****    * Constructs an object in existing memory by invoking an allocated
  69:/usr/include/c++/4.8/bits/stl_construct.h ****    * object's constructor with an initializer.
  70:/usr/include/c++/4.8/bits/stl_construct.h ****    */
  71:/usr/include/c++/4.8/bits/stl_construct.h **** #if __cplusplus >= 201103L
  72:/usr/include/c++/4.8/bits/stl_construct.h ****   template<typename _T1, typename... _Args>
  73:/usr/include/c++/4.8/bits/stl_construct.h ****     inline void
  74:/usr/include/c++/4.8/bits/stl_construct.h ****     _Construct(_T1* __p, _Args&&... __args)
  75:/usr/include/c++/4.8/bits/stl_construct.h ****     { ::new(static_cast<void*>(__p)) _T1(std::forward<_Args>(__args)...); }
  76:/usr/include/c++/4.8/bits/stl_construct.h **** #else
  77:/usr/include/c++/4.8/bits/stl_construct.h ****   template<typename _T1, typename _T2>
  78:/usr/include/c++/4.8/bits/stl_construct.h ****     inline void
  79:/usr/include/c++/4.8/bits/stl_construct.h ****     _Construct(_T1* __p, const _T2& __value)
  80:/usr/include/c++/4.8/bits/stl_construct.h ****     {
  81:/usr/include/c++/4.8/bits/stl_construct.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
  82:/usr/include/c++/4.8/bits/stl_construct.h ****       // 402. wrong new expression in [some_]allocator::construct
  83:/usr/include/c++/4.8/bits/stl_construct.h ****       ::new(static_cast<void*>(__p)) _T1(__value);
  84:/usr/include/c++/4.8/bits/stl_construct.h ****     }
  85:/usr/include/c++/4.8/bits/stl_construct.h **** #endif
  86:/usr/include/c++/4.8/bits/stl_construct.h **** 
  87:/usr/include/c++/4.8/bits/stl_construct.h ****   /**
  88:/usr/include/c++/4.8/bits/stl_construct.h ****    * Destroy the object pointed to by a pointer type.
  89:/usr/include/c++/4.8/bits/stl_construct.h ****    */
  90:/usr/include/c++/4.8/bits/stl_construct.h ****   template<typename _Tp>
  91:/usr/include/c++/4.8/bits/stl_construct.h ****     inline void
  92:/usr/include/c++/4.8/bits/stl_construct.h ****     _Destroy(_Tp* __pointer)
  93:/usr/include/c++/4.8/bits/stl_construct.h ****     { __pointer->~_Tp(); }
  94:/usr/include/c++/4.8/bits/stl_construct.h **** 
  95:/usr/include/c++/4.8/bits/stl_construct.h ****   template<bool>
  96:/usr/include/c++/4.8/bits/stl_construct.h ****     struct _Destroy_aux
  97:/usr/include/c++/4.8/bits/stl_construct.h ****     {
  98:/usr/include/c++/4.8/bits/stl_construct.h ****       template<typename _ForwardIterator>
  99:/usr/include/c++/4.8/bits/stl_construct.h ****         static void
 100:/usr/include/c++/4.8/bits/stl_construct.h ****         __destroy(_ForwardIterator __first, _ForwardIterator __last)
 101:/usr/include/c++/4.8/bits/stl_construct.h **** 	{
 102:/usr/include/c++/4.8/bits/stl_construct.h **** 	  for (; __first != __last; ++__first)
 103:/usr/include/c++/4.8/bits/stl_construct.h **** 	    std::_Destroy(std::__addressof(*__first));
 104:/usr/include/c++/4.8/bits/stl_construct.h **** 	}
 105:/usr/include/c++/4.8/bits/stl_construct.h ****     };
 106:/usr/include/c++/4.8/bits/stl_construct.h **** 
 107:/usr/include/c++/4.8/bits/stl_construct.h ****   template<>
 108:/usr/include/c++/4.8/bits/stl_construct.h ****     struct _Destroy_aux<true>
 109:/usr/include/c++/4.8/bits/stl_construct.h ****     {
 110:/usr/include/c++/4.8/bits/stl_construct.h ****       template<typename _ForwardIterator>
 111:/usr/include/c++/4.8/bits/stl_construct.h ****         static void
 112:/usr/include/c++/4.8/bits/stl_construct.h ****         __destroy(_ForwardIterator, _ForwardIterator) { }
 113:/usr/include/c++/4.8/bits/stl_construct.h ****     };
 114:/usr/include/c++/4.8/bits/stl_construct.h **** 
 115:/usr/include/c++/4.8/bits/stl_construct.h ****   /**
 116:/usr/include/c++/4.8/bits/stl_construct.h ****    * Destroy a range of objects.  If the value_type of the object has
 117:/usr/include/c++/4.8/bits/stl_construct.h ****    * a trivial destructor, the compiler should optimize all of this
 118:/usr/include/c++/4.8/bits/stl_construct.h ****    * away, otherwise the objects' destructors must be invoked.
 119:/usr/include/c++/4.8/bits/stl_construct.h ****    */
 120:/usr/include/c++/4.8/bits/stl_construct.h ****   template<typename _ForwardIterator>
 121:/usr/include/c++/4.8/bits/stl_construct.h ****     inline void
 122:/usr/include/c++/4.8/bits/stl_construct.h ****     _Destroy(_ForwardIterator __first, _ForwardIterator __last)
 123:/usr/include/c++/4.8/bits/stl_construct.h ****     {
 124:/usr/include/c++/4.8/bits/stl_construct.h ****       typedef typename iterator_traits<_ForwardIterator>::value_type
 125:/usr/include/c++/4.8/bits/stl_construct.h ****                        _Value_type;
 126:/usr/include/c++/4.8/bits/stl_construct.h ****       std::_Destroy_aux<__has_trivial_destructor(_Value_type)>::
 127:/usr/include/c++/4.8/bits/stl_construct.h **** 	__destroy(__first, __last);
 128:/usr/include/c++/4.8/bits/stl_construct.h ****     }
 129:/usr/include/c++/4.8/bits/stl_construct.h **** 
 130:/usr/include/c++/4.8/bits/stl_construct.h ****   /**
 131:/usr/include/c++/4.8/bits/stl_construct.h ****    * Destroy a range of objects using the supplied allocator.  For
 132:/usr/include/c++/4.8/bits/stl_construct.h ****    * nondefault allocators we do not optimize away invocation of 
 133:/usr/include/c++/4.8/bits/stl_construct.h ****    * destroy() even if _Tp has a trivial destructor.
 134:/usr/include/c++/4.8/bits/stl_construct.h ****    */
 135:/usr/include/c++/4.8/bits/stl_construct.h **** 
 136:/usr/include/c++/4.8/bits/stl_construct.h ****   template<typename _ForwardIterator, typename _Allocator>
 137:/usr/include/c++/4.8/bits/stl_construct.h ****     void
 138:/usr/include/c++/4.8/bits/stl_construct.h ****     _Destroy(_ForwardIterator __first, _ForwardIterator __last,
 139:/usr/include/c++/4.8/bits/stl_construct.h **** 	     _Allocator& __alloc)
 140:/usr/include/c++/4.8/bits/stl_construct.h ****     {
 141:/usr/include/c++/4.8/bits/stl_construct.h ****       typedef __gnu_cxx::__alloc_traits<_Allocator> __traits;
 142:/usr/include/c++/4.8/bits/stl_construct.h ****       for (; __first != __last; ++__first)
 143:/usr/include/c++/4.8/bits/stl_construct.h **** 	__traits::destroy(__alloc, std::__addressof(*__first));
 144:/usr/include/c++/4.8/bits/stl_construct.h ****     }
 145:/usr/include/c++/4.8/bits/stl_construct.h **** 
 146:/usr/include/c++/4.8/bits/stl_construct.h ****   template<typename _ForwardIterator, typename _Tp>
 147:/usr/include/c++/4.8/bits/stl_construct.h ****     inline void
 148:/usr/include/c++/4.8/bits/stl_construct.h ****     _Destroy(_ForwardIterator __first, _ForwardIterator __last,
 9992              		.loc 10 148 0
 9993              		.cfi_startproc
 9994 0000 55       		pushq	%rbp
 9995              		.cfi_def_cfa_offset 16
 9996              		.cfi_offset 6, -16
 9997 0001 4889E5   		movq	%rsp, %rbp
 9998              		.cfi_def_cfa_register 6
 9999 0004 4883EC20 		subq	$32, %rsp
 10000 0008 48897DF8 		movq	%rdi, -8(%rbp)
 10001 000c 488975F0 		movq	%rsi, -16(%rbp)
 10002 0010 488955E8 		movq	%rdx, -24(%rbp)
 149:/usr/include/c++/4.8/bits/stl_construct.h **** 	     allocator<_Tp>&)
 150:/usr/include/c++/4.8/bits/stl_construct.h ****     {
 151:/usr/include/c++/4.8/bits/stl_construct.h ****       _Destroy(__first, __last);
 10003              		.loc 10 151 0
 10004 0014 488B55F0 		movq	-16(%rbp), %rdx
 10005 0018 488B45F8 		movq	-8(%rbp), %rax
 10006 001c 4889D6   		movq	%rdx, %rsi
 10007 001f 4889C7   		movq	%rax, %rdi
 10008 0022 E8000000 		call	_ZSt8_DestroyIPN8UnitTest18DeferredTestResultEEvT_S3_
 10008      00
 152:/usr/include/c++/4.8/bits/stl_construct.h ****     }
 10009              		.loc 10 152 0
 10010 0027 C9       		leave
 10011              		.cfi_def_cfa 7, 8
 10012 0028 C3       		ret
 10013              		.cfi_endproc
 10014              	.LFE1544:
 10016              		.section	.text._ZNSaIN8UnitTest18DeferredTestResultEED2Ev,"axG",@progbits,_ZNSaIN8UnitTest18Deferr
 10017              		.align 2
 10018              		.weak	_ZNSaIN8UnitTest18DeferredTestResultEED2Ev
 10020              	_ZNSaIN8UnitTest18DeferredTestResultEED2Ev:
 10021              	.LFB1546:
 10022              		.file 11 "/usr/include/c++/4.8/bits/allocator.h"
   1:/usr/include/c++/4.8/bits/allocator.h **** // Allocators -*- C++ -*-
   2:/usr/include/c++/4.8/bits/allocator.h **** 
   3:/usr/include/c++/4.8/bits/allocator.h **** // Copyright (C) 2001-2013 Free Software Foundation, Inc.
   4:/usr/include/c++/4.8/bits/allocator.h **** //
   5:/usr/include/c++/4.8/bits/allocator.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/c++/4.8/bits/allocator.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/4.8/bits/allocator.h **** // terms of the GNU General Public License as published by the
   8:/usr/include/c++/4.8/bits/allocator.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/4.8/bits/allocator.h **** // any later version.
  10:/usr/include/c++/4.8/bits/allocator.h **** 
  11:/usr/include/c++/4.8/bits/allocator.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/c++/4.8/bits/allocator.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/c++/4.8/bits/allocator.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/4.8/bits/allocator.h **** // GNU General Public License for more details.
  15:/usr/include/c++/4.8/bits/allocator.h **** 
  16:/usr/include/c++/4.8/bits/allocator.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/c++/4.8/bits/allocator.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/4.8/bits/allocator.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/4.8/bits/allocator.h **** 
  20:/usr/include/c++/4.8/bits/allocator.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/c++/4.8/bits/allocator.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/c++/4.8/bits/allocator.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/4.8/bits/allocator.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/c++/4.8/bits/allocator.h **** 
  25:/usr/include/c++/4.8/bits/allocator.h **** /*
  26:/usr/include/c++/4.8/bits/allocator.h ****  * Copyright (c) 1996-1997
  27:/usr/include/c++/4.8/bits/allocator.h ****  * Silicon Graphics Computer Systems, Inc.
  28:/usr/include/c++/4.8/bits/allocator.h ****  *
  29:/usr/include/c++/4.8/bits/allocator.h ****  * Permission to use, copy, modify, distribute and sell this software
  30:/usr/include/c++/4.8/bits/allocator.h ****  * and its documentation for any purpose is hereby granted without fee,
  31:/usr/include/c++/4.8/bits/allocator.h ****  * provided that the above copyright notice appear in all copies and
  32:/usr/include/c++/4.8/bits/allocator.h ****  * that both that copyright notice and this permission notice appear
  33:/usr/include/c++/4.8/bits/allocator.h ****  * in supporting documentation.  Silicon Graphics makes no
  34:/usr/include/c++/4.8/bits/allocator.h ****  * representations about the suitability of this software for any
  35:/usr/include/c++/4.8/bits/allocator.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  36:/usr/include/c++/4.8/bits/allocator.h ****  */
  37:/usr/include/c++/4.8/bits/allocator.h **** 
  38:/usr/include/c++/4.8/bits/allocator.h **** /** @file bits/allocator.h
  39:/usr/include/c++/4.8/bits/allocator.h ****  *  This is an internal header file, included by other library headers.
  40:/usr/include/c++/4.8/bits/allocator.h ****  *  Do not attempt to use it directly. @headername{memory}
  41:/usr/include/c++/4.8/bits/allocator.h ****  */
  42:/usr/include/c++/4.8/bits/allocator.h **** 
  43:/usr/include/c++/4.8/bits/allocator.h **** #ifndef _ALLOCATOR_H
  44:/usr/include/c++/4.8/bits/allocator.h **** #define _ALLOCATOR_H 1
  45:/usr/include/c++/4.8/bits/allocator.h **** 
  46:/usr/include/c++/4.8/bits/allocator.h **** #include <bits/c++allocator.h> // Define the base class to std::allocator.
  47:/usr/include/c++/4.8/bits/allocator.h **** #include <bits/memoryfwd.h>
  48:/usr/include/c++/4.8/bits/allocator.h **** #if __cplusplus >= 201103L
  49:/usr/include/c++/4.8/bits/allocator.h **** #include <type_traits>
  50:/usr/include/c++/4.8/bits/allocator.h **** #endif
  51:/usr/include/c++/4.8/bits/allocator.h **** 
  52:/usr/include/c++/4.8/bits/allocator.h **** namespace std _GLIBCXX_VISIBILITY(default)
  53:/usr/include/c++/4.8/bits/allocator.h **** {
  54:/usr/include/c++/4.8/bits/allocator.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  55:/usr/include/c++/4.8/bits/allocator.h **** 
  56:/usr/include/c++/4.8/bits/allocator.h ****   /**
  57:/usr/include/c++/4.8/bits/allocator.h ****    *  @addtogroup allocators
  58:/usr/include/c++/4.8/bits/allocator.h ****    *  @{
  59:/usr/include/c++/4.8/bits/allocator.h ****    */
  60:/usr/include/c++/4.8/bits/allocator.h **** 
  61:/usr/include/c++/4.8/bits/allocator.h ****   /// allocator<void> specialization.
  62:/usr/include/c++/4.8/bits/allocator.h ****   template<>
  63:/usr/include/c++/4.8/bits/allocator.h ****     class allocator<void>
  64:/usr/include/c++/4.8/bits/allocator.h ****     {
  65:/usr/include/c++/4.8/bits/allocator.h ****     public:
  66:/usr/include/c++/4.8/bits/allocator.h ****       typedef size_t      size_type;
  67:/usr/include/c++/4.8/bits/allocator.h ****       typedef ptrdiff_t   difference_type;
  68:/usr/include/c++/4.8/bits/allocator.h ****       typedef void*       pointer;
  69:/usr/include/c++/4.8/bits/allocator.h ****       typedef const void* const_pointer;
  70:/usr/include/c++/4.8/bits/allocator.h ****       typedef void        value_type;
  71:/usr/include/c++/4.8/bits/allocator.h **** 
  72:/usr/include/c++/4.8/bits/allocator.h ****       template<typename _Tp1>
  73:/usr/include/c++/4.8/bits/allocator.h ****         struct rebind
  74:/usr/include/c++/4.8/bits/allocator.h ****         { typedef allocator<_Tp1> other; };
  75:/usr/include/c++/4.8/bits/allocator.h **** 
  76:/usr/include/c++/4.8/bits/allocator.h **** #if __cplusplus >= 201103L
  77:/usr/include/c++/4.8/bits/allocator.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
  78:/usr/include/c++/4.8/bits/allocator.h ****       // 2103. std::allocator propagate_on_container_move_assignment
  79:/usr/include/c++/4.8/bits/allocator.h ****       typedef true_type propagate_on_container_move_assignment;
  80:/usr/include/c++/4.8/bits/allocator.h **** #endif
  81:/usr/include/c++/4.8/bits/allocator.h ****     };
  82:/usr/include/c++/4.8/bits/allocator.h **** 
  83:/usr/include/c++/4.8/bits/allocator.h ****   /**
  84:/usr/include/c++/4.8/bits/allocator.h ****    * @brief  The @a standard allocator, as per [20.4].
  85:/usr/include/c++/4.8/bits/allocator.h ****    *
  86:/usr/include/c++/4.8/bits/allocator.h ****    *  See http://gcc.gnu.org/onlinedocs/libstdc++/manual/bk01pt04ch11.html
  87:/usr/include/c++/4.8/bits/allocator.h ****    *  for further details.
  88:/usr/include/c++/4.8/bits/allocator.h ****    *
  89:/usr/include/c++/4.8/bits/allocator.h ****    *  @tparam  _Tp  Type of allocated object.
  90:/usr/include/c++/4.8/bits/allocator.h ****    */
  91:/usr/include/c++/4.8/bits/allocator.h ****   template<typename _Tp>
  92:/usr/include/c++/4.8/bits/allocator.h ****     class allocator: public __allocator_base<_Tp>
  93:/usr/include/c++/4.8/bits/allocator.h ****     {
  94:/usr/include/c++/4.8/bits/allocator.h ****    public:
  95:/usr/include/c++/4.8/bits/allocator.h ****       typedef size_t     size_type;
  96:/usr/include/c++/4.8/bits/allocator.h ****       typedef ptrdiff_t  difference_type;
  97:/usr/include/c++/4.8/bits/allocator.h ****       typedef _Tp*       pointer;
  98:/usr/include/c++/4.8/bits/allocator.h ****       typedef const _Tp* const_pointer;
  99:/usr/include/c++/4.8/bits/allocator.h ****       typedef _Tp&       reference;
 100:/usr/include/c++/4.8/bits/allocator.h ****       typedef const _Tp& const_reference;
 101:/usr/include/c++/4.8/bits/allocator.h ****       typedef _Tp        value_type;
 102:/usr/include/c++/4.8/bits/allocator.h **** 
 103:/usr/include/c++/4.8/bits/allocator.h ****       template<typename _Tp1>
 104:/usr/include/c++/4.8/bits/allocator.h ****         struct rebind
 105:/usr/include/c++/4.8/bits/allocator.h ****         { typedef allocator<_Tp1> other; };
 106:/usr/include/c++/4.8/bits/allocator.h **** 
 107:/usr/include/c++/4.8/bits/allocator.h **** #if __cplusplus >= 201103L
 108:/usr/include/c++/4.8/bits/allocator.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 109:/usr/include/c++/4.8/bits/allocator.h ****       // 2103. std::allocator propagate_on_container_move_assignment
 110:/usr/include/c++/4.8/bits/allocator.h ****       typedef true_type propagate_on_container_move_assignment;
 111:/usr/include/c++/4.8/bits/allocator.h **** #endif
 112:/usr/include/c++/4.8/bits/allocator.h **** 
 113:/usr/include/c++/4.8/bits/allocator.h ****       allocator() throw() { }
 114:/usr/include/c++/4.8/bits/allocator.h **** 
 115:/usr/include/c++/4.8/bits/allocator.h ****       allocator(const allocator& __a) throw()
 116:/usr/include/c++/4.8/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 117:/usr/include/c++/4.8/bits/allocator.h **** 
 118:/usr/include/c++/4.8/bits/allocator.h ****       template<typename _Tp1>
 119:/usr/include/c++/4.8/bits/allocator.h ****         allocator(const allocator<_Tp1>&) throw() { }
 120:/usr/include/c++/4.8/bits/allocator.h **** 
 121:/usr/include/c++/4.8/bits/allocator.h ****       ~allocator() throw() { }
 10023              		.loc 11 121 0
 10024              		.cfi_startproc
 10025 0000 55       		pushq	%rbp
 10026              		.cfi_def_cfa_offset 16
 10027              		.cfi_offset 6, -16
 10028 0001 4889E5   		movq	%rsp, %rbp
 10029              		.cfi_def_cfa_register 6
 10030 0004 4883EC10 		subq	$16, %rsp
 10031 0008 48897DF8 		movq	%rdi, -8(%rbp)
 10032              	.LBB258:
 10033              		.loc 11 121 0
 10034 000c 488B45F8 		movq	-8(%rbp), %rax
 10035 0010 4889C7   		movq	%rax, %rdi
 10036 0013 E8000000 		call	_ZN9__gnu_cxx13new_allocatorIN8UnitTest18DeferredTestResultEED2Ev
 10036      00
 10037              	.LBE258:
 10038 0018 C9       		leave
 10039              		.cfi_def_cfa 7, 8
 10040 0019 C3       		ret
 10041              		.cfi_endproc
 10042              	.LFE1546:
 10044              		.weak	_ZNSaIN8UnitTest18DeferredTestResultEED1Ev
 10045              		.set	_ZNSaIN8UnitTest18DeferredTestResultEED1Ev,_ZNSaIN8UnitTest18DeferredTestResultEED2Ev
 10046              		.section	.text._ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE13_M_deallocateEPS1_m,"a
 10047              		.align 2
 10048              		.weak	_ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE13_M_deallocateEPS1_m
 10050              	_ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE13_M_deallocateEPS1_m:
 10051              	.LFB1548:
 171:/usr/include/c++/4.8/bits/stl_vector.h ****       {
 10052              		.loc 9 171 0
 10053              		.cfi_startproc
 10054 0000 55       		pushq	%rbp
 10055              		.cfi_def_cfa_offset 16
 10056              		.cfi_offset 6, -16
 10057 0001 4889E5   		movq	%rsp, %rbp
 10058              		.cfi_def_cfa_register 6
 10059 0004 4883EC20 		subq	$32, %rsp
 10060 0008 48897DF8 		movq	%rdi, -8(%rbp)
 10061 000c 488975F0 		movq	%rsi, -16(%rbp)
 10062 0010 488955E8 		movq	%rdx, -24(%rbp)
 173:/usr/include/c++/4.8/bits/stl_vector.h **** 	  _M_impl.deallocate(__p, __n);
 10063              		.loc 9 173 0
 10064 0014 48837DF0 		cmpq	$0, -16(%rbp)
 10064      00
 10065 0019 7417     		je	.L548
 174:/usr/include/c++/4.8/bits/stl_vector.h ****       }
 10066              		.loc 9 174 0
 10067 001b 488B45F8 		movq	-8(%rbp), %rax
 10068 001f 488B55E8 		movq	-24(%rbp), %rdx
 10069 0023 488B4DF0 		movq	-16(%rbp), %rcx
 10070 0027 4889CE   		movq	%rcx, %rsi
 10071 002a 4889C7   		movq	%rax, %rdi
 10072 002d E8000000 		call	_ZN9__gnu_cxx13new_allocatorIN8UnitTest18DeferredTestResultEE10deallocateEPS2_m
 10072      00
 10073              	.L548:
 175:/usr/include/c++/4.8/bits/stl_vector.h **** 
 10074              		.loc 9 175 0
 10075 0032 C9       		leave
 10076              		.cfi_def_cfa 7, 8
 10077 0033 C3       		ret
 10078              		.cfi_endproc
 10079              	.LFE1548:
 10081              		.section	.text._ZSt8_DestroyIPN8UnitTest18DeferredTestResultEEvT_S3_,"axG",@progbits,_ZSt8_Destroy
 10082              		.weak	_ZSt8_DestroyIPN8UnitTest18DeferredTestResultEEvT_S3_
 10084              	_ZSt8_DestroyIPN8UnitTest18DeferredTestResultEEvT_S3_:
 10085              	.LFB1549:
 122:/usr/include/c++/4.8/bits/stl_construct.h ****     {
 10086              		.loc 10 122 0
 10087              		.cfi_startproc
 10088 0000 55       		pushq	%rbp
 10089              		.cfi_def_cfa_offset 16
 10090              		.cfi_offset 6, -16
 10091 0001 4889E5   		movq	%rsp, %rbp
 10092              		.cfi_def_cfa_register 6
 10093 0004 4883EC10 		subq	$16, %rsp
 10094 0008 48897DF8 		movq	%rdi, -8(%rbp)
 10095 000c 488975F0 		movq	%rsi, -16(%rbp)
 10096              	.LBB259:
 126:/usr/include/c++/4.8/bits/stl_construct.h **** 	__destroy(__first, __last);
 10097              		.loc 10 126 0
 10098 0010 488B55F0 		movq	-16(%rbp), %rdx
 10099 0014 488B45F8 		movq	-8(%rbp), %rax
 10100 0018 4889D6   		movq	%rdx, %rsi
 10101 001b 4889C7   		movq	%rax, %rdi
 10102 001e E8000000 		call	_ZNSt12_Destroy_auxILb0EE9__destroyIPN8UnitTest18DeferredTestResultEEEvT_S5_
 10102      00
 10103              	.LBE259:
 128:/usr/include/c++/4.8/bits/stl_construct.h **** 
 10104              		.loc 10 128 0
 10105 0023 C9       		leave
 10106              		.cfi_def_cfa 7, 8
 10107 0024 C3       		ret
 10108              		.cfi_endproc
 10109              	.LFE1549:
 10111              		.section	.text._ZN9__gnu_cxx13new_allocatorIN8UnitTest18DeferredTestResultEED2Ev,"axG",@progbits,_
 10112              		.align 2
 10113              		.weak	_ZN9__gnu_cxx13new_allocatorIN8UnitTest18DeferredTestResultEED2Ev
 10115              	_ZN9__gnu_cxx13new_allocatorIN8UnitTest18DeferredTestResultEED2Ev:
 10116              	.LFB1551:
 10117              		.file 12 "/usr/include/c++/4.8/ext/new_allocator.h"
   1:/usr/include/c++/4.8/ext/new_allocator.h **** // Allocator that wraps operator new -*- C++ -*-
   2:/usr/include/c++/4.8/ext/new_allocator.h **** 
   3:/usr/include/c++/4.8/ext/new_allocator.h **** // Copyright (C) 2001-2013 Free Software Foundation, Inc.
   4:/usr/include/c++/4.8/ext/new_allocator.h **** //
   5:/usr/include/c++/4.8/ext/new_allocator.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/c++/4.8/ext/new_allocator.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/4.8/ext/new_allocator.h **** // terms of the GNU General Public License as published by the
   8:/usr/include/c++/4.8/ext/new_allocator.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/4.8/ext/new_allocator.h **** // any later version.
  10:/usr/include/c++/4.8/ext/new_allocator.h **** 
  11:/usr/include/c++/4.8/ext/new_allocator.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/c++/4.8/ext/new_allocator.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/c++/4.8/ext/new_allocator.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/4.8/ext/new_allocator.h **** // GNU General Public License for more details.
  15:/usr/include/c++/4.8/ext/new_allocator.h **** 
  16:/usr/include/c++/4.8/ext/new_allocator.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/c++/4.8/ext/new_allocator.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/4.8/ext/new_allocator.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/4.8/ext/new_allocator.h **** 
  20:/usr/include/c++/4.8/ext/new_allocator.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/c++/4.8/ext/new_allocator.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/c++/4.8/ext/new_allocator.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/4.8/ext/new_allocator.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/c++/4.8/ext/new_allocator.h **** 
  25:/usr/include/c++/4.8/ext/new_allocator.h **** /** @file ext/new_allocator.h
  26:/usr/include/c++/4.8/ext/new_allocator.h ****  *  This file is a GNU extension to the Standard C++ Library.
  27:/usr/include/c++/4.8/ext/new_allocator.h ****  */
  28:/usr/include/c++/4.8/ext/new_allocator.h **** 
  29:/usr/include/c++/4.8/ext/new_allocator.h **** #ifndef _NEW_ALLOCATOR_H
  30:/usr/include/c++/4.8/ext/new_allocator.h **** #define _NEW_ALLOCATOR_H 1
  31:/usr/include/c++/4.8/ext/new_allocator.h **** 
  32:/usr/include/c++/4.8/ext/new_allocator.h **** #include <bits/c++config.h>
  33:/usr/include/c++/4.8/ext/new_allocator.h **** #include <new>
  34:/usr/include/c++/4.8/ext/new_allocator.h **** #include <bits/functexcept.h>
  35:/usr/include/c++/4.8/ext/new_allocator.h **** #include <bits/move.h>
  36:/usr/include/c++/4.8/ext/new_allocator.h **** #if __cplusplus >= 201103L
  37:/usr/include/c++/4.8/ext/new_allocator.h **** #include <type_traits>
  38:/usr/include/c++/4.8/ext/new_allocator.h **** #endif
  39:/usr/include/c++/4.8/ext/new_allocator.h **** 
  40:/usr/include/c++/4.8/ext/new_allocator.h **** namespace __gnu_cxx _GLIBCXX_VISIBILITY(default)
  41:/usr/include/c++/4.8/ext/new_allocator.h **** {
  42:/usr/include/c++/4.8/ext/new_allocator.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  43:/usr/include/c++/4.8/ext/new_allocator.h **** 
  44:/usr/include/c++/4.8/ext/new_allocator.h ****   using std::size_t;
  45:/usr/include/c++/4.8/ext/new_allocator.h ****   using std::ptrdiff_t;
  46:/usr/include/c++/4.8/ext/new_allocator.h **** 
  47:/usr/include/c++/4.8/ext/new_allocator.h ****   /**
  48:/usr/include/c++/4.8/ext/new_allocator.h ****    *  @brief  An allocator that uses global new, as per [20.4].
  49:/usr/include/c++/4.8/ext/new_allocator.h ****    *  @ingroup allocators
  50:/usr/include/c++/4.8/ext/new_allocator.h ****    *
  51:/usr/include/c++/4.8/ext/new_allocator.h ****    *  This is precisely the allocator defined in the C++ Standard. 
  52:/usr/include/c++/4.8/ext/new_allocator.h ****    *    - all allocation calls operator new
  53:/usr/include/c++/4.8/ext/new_allocator.h ****    *    - all deallocation calls operator delete
  54:/usr/include/c++/4.8/ext/new_allocator.h ****    *
  55:/usr/include/c++/4.8/ext/new_allocator.h ****    *  @tparam  _Tp  Type of allocated object.
  56:/usr/include/c++/4.8/ext/new_allocator.h ****    */
  57:/usr/include/c++/4.8/ext/new_allocator.h ****   template<typename _Tp>
  58:/usr/include/c++/4.8/ext/new_allocator.h ****     class new_allocator
  59:/usr/include/c++/4.8/ext/new_allocator.h ****     {
  60:/usr/include/c++/4.8/ext/new_allocator.h ****     public:
  61:/usr/include/c++/4.8/ext/new_allocator.h ****       typedef size_t     size_type;
  62:/usr/include/c++/4.8/ext/new_allocator.h ****       typedef ptrdiff_t  difference_type;
  63:/usr/include/c++/4.8/ext/new_allocator.h ****       typedef _Tp*       pointer;
  64:/usr/include/c++/4.8/ext/new_allocator.h ****       typedef const _Tp* const_pointer;
  65:/usr/include/c++/4.8/ext/new_allocator.h ****       typedef _Tp&       reference;
  66:/usr/include/c++/4.8/ext/new_allocator.h ****       typedef const _Tp& const_reference;
  67:/usr/include/c++/4.8/ext/new_allocator.h ****       typedef _Tp        value_type;
  68:/usr/include/c++/4.8/ext/new_allocator.h **** 
  69:/usr/include/c++/4.8/ext/new_allocator.h ****       template<typename _Tp1>
  70:/usr/include/c++/4.8/ext/new_allocator.h ****         struct rebind
  71:/usr/include/c++/4.8/ext/new_allocator.h ****         { typedef new_allocator<_Tp1> other; };
  72:/usr/include/c++/4.8/ext/new_allocator.h **** 
  73:/usr/include/c++/4.8/ext/new_allocator.h **** #if __cplusplus >= 201103L
  74:/usr/include/c++/4.8/ext/new_allocator.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
  75:/usr/include/c++/4.8/ext/new_allocator.h ****       // 2103. propagate_on_container_move_assignment
  76:/usr/include/c++/4.8/ext/new_allocator.h ****       typedef std::true_type propagate_on_container_move_assignment;
  77:/usr/include/c++/4.8/ext/new_allocator.h **** #endif
  78:/usr/include/c++/4.8/ext/new_allocator.h **** 
  79:/usr/include/c++/4.8/ext/new_allocator.h ****       new_allocator() _GLIBCXX_USE_NOEXCEPT { }
  80:/usr/include/c++/4.8/ext/new_allocator.h **** 
  81:/usr/include/c++/4.8/ext/new_allocator.h ****       new_allocator(const new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
  82:/usr/include/c++/4.8/ext/new_allocator.h **** 
  83:/usr/include/c++/4.8/ext/new_allocator.h ****       template<typename _Tp1>
  84:/usr/include/c++/4.8/ext/new_allocator.h ****         new_allocator(const new_allocator<_Tp1>&) _GLIBCXX_USE_NOEXCEPT { }
  85:/usr/include/c++/4.8/ext/new_allocator.h **** 
  86:/usr/include/c++/4.8/ext/new_allocator.h ****       ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
 10118              		.loc 12 86 0
 10119              		.cfi_startproc
 10120 0000 55       		pushq	%rbp
 10121              		.cfi_def_cfa_offset 16
 10122              		.cfi_offset 6, -16
 10123 0001 4889E5   		movq	%rsp, %rbp
 10124              		.cfi_def_cfa_register 6
 10125 0004 48897DF8 		movq	%rdi, -8(%rbp)
 10126              		.loc 12 86 0
 10127 0008 5D       		popq	%rbp
 10128              		.cfi_def_cfa 7, 8
 10129 0009 C3       		ret
 10130              		.cfi_endproc
 10131              	.LFE1551:
 10133              		.weak	_ZN9__gnu_cxx13new_allocatorIN8UnitTest18DeferredTestResultEED1Ev
 10134              		.set	_ZN9__gnu_cxx13new_allocatorIN8UnitTest18DeferredTestResultEED1Ev,_ZN9__gnu_cxx13new_allocato
 10135              		.section	.text._ZN9__gnu_cxx13new_allocatorIN8UnitTest18DeferredTestResultEE10deallocateEPS2_m,"ax
 10136              		.align 2
 10137              		.weak	_ZN9__gnu_cxx13new_allocatorIN8UnitTest18DeferredTestResultEE10deallocateEPS2_m
 10139              	_ZN9__gnu_cxx13new_allocatorIN8UnitTest18DeferredTestResultEE10deallocateEPS2_m:
 10140              	.LFB1553:
  87:/usr/include/c++/4.8/ext/new_allocator.h **** 
  88:/usr/include/c++/4.8/ext/new_allocator.h ****       pointer
  89:/usr/include/c++/4.8/ext/new_allocator.h ****       address(reference __x) const _GLIBCXX_NOEXCEPT
  90:/usr/include/c++/4.8/ext/new_allocator.h ****       { return std::__addressof(__x); }
  91:/usr/include/c++/4.8/ext/new_allocator.h **** 
  92:/usr/include/c++/4.8/ext/new_allocator.h ****       const_pointer
  93:/usr/include/c++/4.8/ext/new_allocator.h ****       address(const_reference __x) const _GLIBCXX_NOEXCEPT
  94:/usr/include/c++/4.8/ext/new_allocator.h ****       { return std::__addressof(__x); }
  95:/usr/include/c++/4.8/ext/new_allocator.h **** 
  96:/usr/include/c++/4.8/ext/new_allocator.h ****       // NB: __n is permitted to be 0.  The C++ standard says nothing
  97:/usr/include/c++/4.8/ext/new_allocator.h ****       // about what the return value is when __n == 0.
  98:/usr/include/c++/4.8/ext/new_allocator.h ****       pointer
  99:/usr/include/c++/4.8/ext/new_allocator.h ****       allocate(size_type __n, const void* = 0)
 100:/usr/include/c++/4.8/ext/new_allocator.h ****       { 
 101:/usr/include/c++/4.8/ext/new_allocator.h **** 	if (__n > this->max_size())
 102:/usr/include/c++/4.8/ext/new_allocator.h **** 	  std::__throw_bad_alloc();
 103:/usr/include/c++/4.8/ext/new_allocator.h **** 
 104:/usr/include/c++/4.8/ext/new_allocator.h **** 	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
 105:/usr/include/c++/4.8/ext/new_allocator.h ****       }
 106:/usr/include/c++/4.8/ext/new_allocator.h **** 
 107:/usr/include/c++/4.8/ext/new_allocator.h ****       // __p is not permitted to be a null pointer.
 108:/usr/include/c++/4.8/ext/new_allocator.h ****       void
 109:/usr/include/c++/4.8/ext/new_allocator.h ****       deallocate(pointer __p, size_type)
 10141              		.loc 12 109 0
 10142              		.cfi_startproc
 10143 0000 55       		pushq	%rbp
 10144              		.cfi_def_cfa_offset 16
 10145              		.cfi_offset 6, -16
 10146 0001 4889E5   		movq	%rsp, %rbp
 10147              		.cfi_def_cfa_register 6
 10148 0004 4883EC20 		subq	$32, %rsp
 10149 0008 48897DF8 		movq	%rdi, -8(%rbp)
 10150 000c 488975F0 		movq	%rsi, -16(%rbp)
 10151 0010 488955E8 		movq	%rdx, -24(%rbp)
 110:/usr/include/c++/4.8/ext/new_allocator.h ****       { ::operator delete(__p); }
 10152              		.loc 12 110 0
 10153 0014 488B45F0 		movq	-16(%rbp), %rax
 10154 0018 4889C7   		movq	%rax, %rdi
 10155 001b E8000000 		call	_ZdlPv
 10155      00
 10156 0020 C9       		leave
 10157              		.cfi_def_cfa 7, 8
 10158 0021 C3       		ret
 10159              		.cfi_endproc
 10160              	.LFE1553:
 10162              		.section	.text._ZNSt12_Destroy_auxILb0EE9__destroyIPN8UnitTest18DeferredTestResultEEEvT_S5_,"axG",
 10163              		.weak	_ZNSt12_Destroy_auxILb0EE9__destroyIPN8UnitTest18DeferredTestResultEEEvT_S5_
 10165              	_ZNSt12_Destroy_auxILb0EE9__destroyIPN8UnitTest18DeferredTestResultEEEvT_S5_:
 10166              	.LFB1554:
 100:/usr/include/c++/4.8/bits/stl_construct.h **** 	{
 10167              		.loc 10 100 0
 10168              		.cfi_startproc
 10169 0000 55       		pushq	%rbp
 10170              		.cfi_def_cfa_offset 16
 10171              		.cfi_offset 6, -16
 10172 0001 4889E5   		movq	%rsp, %rbp
 10173              		.cfi_def_cfa_register 6
 10174 0004 4883EC10 		subq	$16, %rsp
 10175 0008 48897DF8 		movq	%rdi, -8(%rbp)
 10176 000c 488975F0 		movq	%rsi, -16(%rbp)
 102:/usr/include/c++/4.8/bits/stl_construct.h **** 	    std::_Destroy(std::__addressof(*__first));
 10177              		.loc 10 102 0
 10178 0010 EB19     		jmp	.L555
 10179              	.L556:
 103:/usr/include/c++/4.8/bits/stl_construct.h **** 	}
 10180              		.loc 10 103 0 discriminator 2
 10181 0012 488B45F8 		movq	-8(%rbp), %rax
 10182 0016 4889C7   		movq	%rax, %rdi
 10183 0019 E8000000 		call	_ZSt11__addressofIN8UnitTest18DeferredTestResultEEPT_RS2_
 10183      00
 10184 001e 4889C7   		movq	%rax, %rdi
 10185 0021 E8000000 		call	_ZSt8_DestroyIN8UnitTest18DeferredTestResultEEvPT_
 10185      00
 102:/usr/include/c++/4.8/bits/stl_construct.h **** 	    std::_Destroy(std::__addressof(*__first));
 10186              		.loc 10 102 0 discriminator 2
 10187 0026 488345F8 		addq	$56, -8(%rbp)
 10187      38
 10188              	.L555:
 102:/usr/include/c++/4.8/bits/stl_construct.h **** 	    std::_Destroy(std::__addressof(*__first));
 10189              		.loc 10 102 0 is_stmt 0 discriminator 1
 10190 002b 488B45F8 		movq	-8(%rbp), %rax
 10191 002f 483B45F0 		cmpq	-16(%rbp), %rax
 10192 0033 75DD     		jne	.L556
 104:/usr/include/c++/4.8/bits/stl_construct.h ****     };
 10193              		.loc 10 104 0 is_stmt 1
 10194 0035 C9       		leave
 10195              		.cfi_def_cfa 7, 8
 10196 0036 C3       		ret
 10197              		.cfi_endproc
 10198              	.LFE1554:
 10200              		.section	.text._ZSt11__addressofIN8UnitTest18DeferredTestResultEEPT_RS2_,"axG",@progbits,_ZSt11__a
 10201              		.weak	_ZSt11__addressofIN8UnitTest18DeferredTestResultEEPT_RS2_
 10203              	_ZSt11__addressofIN8UnitTest18DeferredTestResultEEPT_RS2_:
 10204              	.LFB1555:
 10205              		.file 13 "/usr/include/c++/4.8/bits/move.h"
   1:/usr/include/c++/4.8/bits/move.h **** // Move, forward and identity for C++0x + swap -*- C++ -*-
   2:/usr/include/c++/4.8/bits/move.h **** 
   3:/usr/include/c++/4.8/bits/move.h **** // Copyright (C) 2007-2013 Free Software Foundation, Inc.
   4:/usr/include/c++/4.8/bits/move.h **** //
   5:/usr/include/c++/4.8/bits/move.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/c++/4.8/bits/move.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/4.8/bits/move.h **** // terms of the GNU General Public License as published by the
   8:/usr/include/c++/4.8/bits/move.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/4.8/bits/move.h **** // any later version.
  10:/usr/include/c++/4.8/bits/move.h **** 
  11:/usr/include/c++/4.8/bits/move.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/c++/4.8/bits/move.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/c++/4.8/bits/move.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/4.8/bits/move.h **** // GNU General Public License for more details.
  15:/usr/include/c++/4.8/bits/move.h **** 
  16:/usr/include/c++/4.8/bits/move.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/c++/4.8/bits/move.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/4.8/bits/move.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/4.8/bits/move.h **** 
  20:/usr/include/c++/4.8/bits/move.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/c++/4.8/bits/move.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/c++/4.8/bits/move.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/4.8/bits/move.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/c++/4.8/bits/move.h **** 
  25:/usr/include/c++/4.8/bits/move.h **** /** @file bits/move.h
  26:/usr/include/c++/4.8/bits/move.h ****  *  This is an internal header file, included by other library headers.
  27:/usr/include/c++/4.8/bits/move.h ****  *  Do not attempt to use it directly. @headername{utility}
  28:/usr/include/c++/4.8/bits/move.h ****  */
  29:/usr/include/c++/4.8/bits/move.h **** 
  30:/usr/include/c++/4.8/bits/move.h **** #ifndef _MOVE_H
  31:/usr/include/c++/4.8/bits/move.h **** #define _MOVE_H 1
  32:/usr/include/c++/4.8/bits/move.h **** 
  33:/usr/include/c++/4.8/bits/move.h **** #include <bits/c++config.h>
  34:/usr/include/c++/4.8/bits/move.h **** #include <bits/concept_check.h>
  35:/usr/include/c++/4.8/bits/move.h **** 
  36:/usr/include/c++/4.8/bits/move.h **** namespace std _GLIBCXX_VISIBILITY(default)
  37:/usr/include/c++/4.8/bits/move.h **** {
  38:/usr/include/c++/4.8/bits/move.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  39:/usr/include/c++/4.8/bits/move.h **** 
  40:/usr/include/c++/4.8/bits/move.h ****   // Used, in C++03 mode too, by allocators, etc.
  41:/usr/include/c++/4.8/bits/move.h ****   /**
  42:/usr/include/c++/4.8/bits/move.h ****    *  @brief Same as C++11 std::addressof
  43:/usr/include/c++/4.8/bits/move.h ****    *  @ingroup utilities
  44:/usr/include/c++/4.8/bits/move.h ****    */
  45:/usr/include/c++/4.8/bits/move.h ****   template<typename _Tp>
  46:/usr/include/c++/4.8/bits/move.h ****     inline _Tp*
  47:/usr/include/c++/4.8/bits/move.h ****     __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
 10206              		.loc 13 47 0
 10207              		.cfi_startproc
 10208 0000 55       		pushq	%rbp
 10209              		.cfi_def_cfa_offset 16
 10210              		.cfi_offset 6, -16
 10211 0001 4889E5   		movq	%rsp, %rbp
 10212              		.cfi_def_cfa_register 6
 10213 0004 48897DF8 		movq	%rdi, -8(%rbp)
  48:/usr/include/c++/4.8/bits/move.h ****     {
  49:/usr/include/c++/4.8/bits/move.h ****       return reinterpret_cast<_Tp*>
  50:/usr/include/c++/4.8/bits/move.h **** 	(&const_cast<char&>(reinterpret_cast<const volatile char&>(__r)));
 10214              		.loc 13 50 0
 10215 0008 488B45F8 		movq	-8(%rbp), %rax
  51:/usr/include/c++/4.8/bits/move.h ****     }
 10216              		.loc 13 51 0
 10217 000c 5D       		popq	%rbp
 10218              		.cfi_def_cfa 7, 8
 10219 000d C3       		ret
 10220              		.cfi_endproc
 10221              	.LFE1555:
 10223              		.section	.text._ZN8UnitTest18DeferredTestResultD2Ev,"axG",@progbits,_ZN8UnitTest18DeferredTestResu
 10224              		.align 2
 10225              		.weak	_ZN8UnitTest18DeferredTestResultD2Ev
 10227              	_ZN8UnitTest18DeferredTestResultD2Ev:
 10228              	.LFB1558:
 10229              		.file 14 "../DeferredTestResult.h"
   1:../DeferredTestResult.h **** #ifndef UNITTEST_DEFERREDTESTRESULT_H
   2:../DeferredTestResult.h **** #define UNITTEST_DEFERREDTESTRESULT_H
   3:../DeferredTestResult.h **** 
   4:../DeferredTestResult.h **** #include <string>
   5:../DeferredTestResult.h **** #include <vector>
   6:../DeferredTestResult.h **** 
   7:../DeferredTestResult.h **** namespace UnitTest
   8:../DeferredTestResult.h **** {
   9:../DeferredTestResult.h **** 
  10:../DeferredTestResult.h **** struct DeferredTestResult
 10230              		.loc 14 10 0
 10231              		.cfi_startproc
 10232              		.cfi_personality 0x3,__gxx_personality_v0
 10233              		.cfi_lsda 0x3,.LLSDA1558
 10234 0000 55       		pushq	%rbp
 10235              		.cfi_def_cfa_offset 16
 10236              		.cfi_offset 6, -16
 10237 0001 4889E5   		movq	%rsp, %rbp
 10238              		.cfi_def_cfa_register 6
 10239 0004 53       		pushq	%rbx
 10240 0005 4883EC18 		subq	$24, %rsp
 10241              		.cfi_offset 3, -24
 10242 0009 48897DE8 		movq	%rdi, -24(%rbp)
 10243              	.LBB260:
 10244              		.loc 14 10 0
 10245 000d 488B45E8 		movq	-24(%rbp), %rax
 10246 0011 4883C018 		addq	$24, %rax
 10247 0015 4889C7   		movq	%rax, %rdi
 10248              	.LEHB289:
 10249 0018 E8000000 		call	_ZNSt6vectorISt4pairIiSsESaIS1_EED1Ev
 10249      00
 10250              	.LEHE289:
 10251              		.loc 14 10 0 is_stmt 0 discriminator 1
 10252 001d 488B45E8 		movq	-24(%rbp), %rax
 10253 0021 4883C010 		addq	$16, %rax
 10254 0025 4889C7   		movq	%rax, %rdi
 10255              	.LEHB290:
 10256 0028 E8000000 		call	_ZNSsD1Ev
 10256      00
 10257              	.LEHE290:
 10258              		.loc 14 10 0 discriminator 2
 10259 002d 488B45E8 		movq	-24(%rbp), %rax
 10260 0031 4883C008 		addq	$8, %rax
 10261 0035 4889C7   		movq	%rax, %rdi
 10262              	.LEHB291:
 10263 0038 E8000000 		call	_ZNSsD1Ev
 10263      00
 10264              	.LEHE291:
 10265              		.loc 14 10 0 discriminator 3
 10266 003d 488B45E8 		movq	-24(%rbp), %rax
 10267 0041 4889C7   		movq	%rax, %rdi
 10268              	.LEHB292:
 10269 0044 E8000000 		call	_ZNSsD1Ev
 10269      00
 10270              	.LEHE292:
 10271 0049 EB44     		jmp	.L567
 10272              	.L564:
 10273 004b 4889C3   		movq	%rax, %rbx
 10274              		.loc 14 10 0
 10275 004e 488B45E8 		movq	-24(%rbp), %rax
 10276 0052 4883C010 		addq	$16, %rax
 10277 0056 4889C7   		movq	%rax, %rdi
 10278 0059 E8000000 		call	_ZNSsD1Ev
 10278      00
 10279 005e EB03     		jmp	.L562
 10280              	.L565:
 10281 0060 4889C3   		movq	%rax, %rbx
 10282              	.L562:
 10283 0063 488B45E8 		movq	-24(%rbp), %rax
 10284 0067 4883C008 		addq	$8, %rax
 10285 006b 4889C7   		movq	%rax, %rdi
 10286 006e E8000000 		call	_ZNSsD1Ev
 10286      00
 10287 0073 EB03     		jmp	.L563
 10288              	.L566:
 10289 0075 4889C3   		movq	%rax, %rbx
 10290              	.L563:
 10291 0078 488B45E8 		movq	-24(%rbp), %rax
 10292 007c 4889C7   		movq	%rax, %rdi
 10293 007f E8000000 		call	_ZNSsD1Ev
 10293      00
 10294 0084 4889D8   		movq	%rbx, %rax
 10295 0087 4889C7   		movq	%rax, %rdi
 10296              	.LEHB293:
 10297 008a E8000000 		call	_Unwind_Resume
 10297      00
 10298              	.LEHE293:
 10299              	.L567:
 10300              	.LBE260:
 10301 008f 4883C418 		addq	$24, %rsp
 10302 0093 5B       		popq	%rbx
 10303 0094 5D       		popq	%rbp
 10304              		.cfi_def_cfa 7, 8
 10305 0095 C3       		ret
 10306              		.cfi_endproc
 10307              	.LFE1558:
 10308              		.section	.gcc_except_table
 10309              	.LLSDA1558:
 10310 0823 FF       		.byte	0xff
 10311 0824 FF       		.byte	0xff
 10312 0825 01       		.byte	0x1
 10313 0826 15       		.uleb128 .LLSDACSE1558-.LLSDACSB1558
 10314              	.LLSDACSB1558:
 10315 0827 18       		.uleb128 .LEHB289-.LFB1558
 10316 0828 05       		.uleb128 .LEHE289-.LEHB289
 10317 0829 4B       		.uleb128 .L564-.LFB1558
 10318 082a 00       		.uleb128 0
 10319 082b 28       		.uleb128 .LEHB290-.LFB1558
 10320 082c 05       		.uleb128 .LEHE290-.LEHB290
 10321 082d 60       		.uleb128 .L565-.LFB1558
 10322 082e 00       		.uleb128 0
 10323 082f 38       		.uleb128 .LEHB291-.LFB1558
 10324 0830 05       		.uleb128 .LEHE291-.LEHB291
 10325 0831 75       		.uleb128 .L566-.LFB1558
 10326 0832 00       		.uleb128 0
 10327 0833 44       		.uleb128 .LEHB292-.LFB1558
 10328 0834 05       		.uleb128 .LEHE292-.LEHB292
 10329 0835 00       		.uleb128 0
 10330 0836 00       		.uleb128 0
 10331 0837 8A01     		.uleb128 .LEHB293-.LFB1558
 10332 0839 05       		.uleb128 .LEHE293-.LEHB293
 10333 083a 00       		.uleb128 0
 10334 083b 00       		.uleb128 0
 10335              	.LLSDACSE1558:
 10336              		.section	.text._ZN8UnitTest18DeferredTestResultD2Ev,"axG",@progbits,_ZN8UnitTest18DeferredTestResu
 10338              		.weak	_ZN8UnitTest18DeferredTestResultD1Ev
 10339              		.set	_ZN8UnitTest18DeferredTestResultD1Ev,_ZN8UnitTest18DeferredTestResultD2Ev
 10340              		.section	.text._ZSt8_DestroyIN8UnitTest18DeferredTestResultEEvPT_,"axG",@progbits,_ZSt8_DestroyIN8
 10341              		.weak	_ZSt8_DestroyIN8UnitTest18DeferredTestResultEEvPT_
 10343              	_ZSt8_DestroyIN8UnitTest18DeferredTestResultEEvPT_:
 10344              	.LFB1556:
  92:/usr/include/c++/4.8/bits/stl_construct.h ****     { __pointer->~_Tp(); }
 10345              		.loc 10 92 0 is_stmt 1
 10346              		.cfi_startproc
 10347 0000 55       		pushq	%rbp
 10348              		.cfi_def_cfa_offset 16
 10349              		.cfi_offset 6, -16
 10350 0001 4889E5   		movq	%rsp, %rbp
 10351              		.cfi_def_cfa_register 6
 10352 0004 4883EC10 		subq	$16, %rsp
 10353 0008 48897DF8 		movq	%rdi, -8(%rbp)
  93:/usr/include/c++/4.8/bits/stl_construct.h **** 
 10354              		.loc 10 93 0
 10355 000c 488B45F8 		movq	-8(%rbp), %rax
 10356 0010 4889C7   		movq	%rax, %rdi
 10357 0013 E8000000 		call	_ZN8UnitTest18DeferredTestResultD1Ev
 10357      00
 10358 0018 C9       		leave
 10359              		.cfi_def_cfa 7, 8
 10360 0019 C3       		ret
 10361              		.cfi_endproc
 10362              	.LFE1556:
 10364              		.section	.text._ZNSt6vectorISt4pairIiSsESaIS1_EED2Ev,"axG",@progbits,_ZNSt6vectorISt4pairIiSsESaIS
 10365              		.align 2
 10366              		.weak	_ZNSt6vectorISt4pairIiSsESaIS1_EED2Ev
 10368              	_ZNSt6vectorISt4pairIiSsESaIS1_EED2Ev:
 10369              	.LFB1561:
 414:/usr/include/c++/4.8/bits/stl_vector.h ****       { std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
 10370              		.loc 9 414 0
 10371              		.cfi_startproc
 10372              		.cfi_personality 0x3,__gxx_personality_v0
 10373              		.cfi_lsda 0x3,.LLSDA1561
 10374 0000 55       		pushq	%rbp
 10375              		.cfi_def_cfa_offset 16
 10376              		.cfi_offset 6, -16
 10377 0001 4889E5   		movq	%rsp, %rbp
 10378              		.cfi_def_cfa_register 6
 10379 0004 53       		pushq	%rbx
 10380 0005 4883EC18 		subq	$24, %rsp
 10381              		.cfi_offset 3, -24
 10382 0009 48897DE8 		movq	%rdi, -24(%rbp)
 10383              	.LBB261:
 10384              		.loc 9 416 0
 10385 000d 488B45E8 		movq	-24(%rbp), %rax
 10386 0011 4889C7   		movq	%rax, %rdi
 10387 0014 E8000000 		call	_ZNSt12_Vector_baseISt4pairIiSsESaIS1_EE19_M_get_Tp_allocatorEv
 10387      00
 10388 0019 4889C2   		movq	%rax, %rdx
 10389 001c 488B45E8 		movq	-24(%rbp), %rax
 10390 0020 488B4808 		movq	8(%rax), %rcx
 10391 0024 488B45E8 		movq	-24(%rbp), %rax
 10392 0028 488B00   		movq	(%rax), %rax
 415:/usr/include/c++/4.8/bits/stl_vector.h **** 		      _M_get_Tp_allocator()); }
 10393              		.loc 9 415 0
 10394 002b 4889CE   		movq	%rcx, %rsi
 10395 002e 4889C7   		movq	%rax, %rdi
 10396              	.LEHB294:
 10397 0031 E8000000 		call	_ZSt8_DestroyIPSt4pairIiSsES1_EvT_S3_RSaIT0_E
 10397      00
 10398              	.LEHE294:
 10399              		.loc 9 416 0
 10400 0036 488B45E8 		movq	-24(%rbp), %rax
 10401 003a 4889C7   		movq	%rax, %rdi
 10402              	.LEHB295:
 10403 003d E8000000 		call	_ZNSt12_Vector_baseISt4pairIiSsESaIS1_EED2Ev
 10403      00
 10404              	.LEHE295:
 10405 0042 EB1A     		jmp	.L573
 10406              	.L572:
 10407 0044 4889C3   		movq	%rax, %rbx
 10408 0047 488B45E8 		movq	-24(%rbp), %rax
 10409 004b 4889C7   		movq	%rax, %rdi
 10410 004e E8000000 		call	_ZNSt12_Vector_baseISt4pairIiSsESaIS1_EED2Ev
 10410      00
 10411 0053 4889D8   		movq	%rbx, %rax
 10412 0056 4889C7   		movq	%rax, %rdi
 10413              	.LEHB296:
 10414 0059 E8000000 		call	_Unwind_Resume
 10414      00
 10415              	.LEHE296:
 10416              	.L573:
 10417              	.LBE261:
 10418 005e 4883C418 		addq	$24, %rsp
 10419 0062 5B       		popq	%rbx
 10420 0063 5D       		popq	%rbp
 10421              		.cfi_def_cfa 7, 8
 10422 0064 C3       		ret
 10423              		.cfi_endproc
 10424              	.LFE1561:
 10425              		.section	.gcc_except_table
 10426              	.LLSDA1561:
 10427 083c FF       		.byte	0xff
 10428 083d FF       		.byte	0xff
 10429 083e 01       		.byte	0x1
 10430 083f 0C       		.uleb128 .LLSDACSE1561-.LLSDACSB1561
 10431              	.LLSDACSB1561:
 10432 0840 31       		.uleb128 .LEHB294-.LFB1561
 10433 0841 05       		.uleb128 .LEHE294-.LEHB294
 10434 0842 44       		.uleb128 .L572-.LFB1561
 10435 0843 00       		.uleb128 0
 10436 0844 3D       		.uleb128 .LEHB295-.LFB1561
 10437 0845 05       		.uleb128 .LEHE295-.LEHB295
 10438 0846 00       		.uleb128 0
 10439 0847 00       		.uleb128 0
 10440 0848 59       		.uleb128 .LEHB296-.LFB1561
 10441 0849 05       		.uleb128 .LEHE296-.LEHB296
 10442 084a 00       		.uleb128 0
 10443 084b 00       		.uleb128 0
 10444              	.LLSDACSE1561:
 10445              		.section	.text._ZNSt6vectorISt4pairIiSsESaIS1_EED2Ev,"axG",@progbits,_ZNSt6vectorISt4pairIiSsESaIS
 10447              		.weak	_ZNSt6vectorISt4pairIiSsESaIS1_EED1Ev
 10448              		.set	_ZNSt6vectorISt4pairIiSsESaIS1_EED1Ev,_ZNSt6vectorISt4pairIiSsESaIS1_EED2Ev
 10449              		.section	.text._ZNSt12_Vector_baseISt4pairIiSsESaIS1_EE12_Vector_implD2Ev,"axG",@progbits,_ZNSt12_
 10450              		.align 2
 10451              		.weak	_ZNSt12_Vector_baseISt4pairIiSsESaIS1_EE12_Vector_implD2Ev
 10453              	_ZNSt12_Vector_baseISt4pairIiSsESaIS1_EE12_Vector_implD2Ev:
 10454              	.LFB1565:
  79:/usr/include/c++/4.8/bits/stl_vector.h ****       : public _Tp_alloc_type
 10455              		.loc 9 79 0
 10456              		.cfi_startproc
 10457 0000 55       		pushq	%rbp
 10458              		.cfi_def_cfa_offset 16
 10459              		.cfi_offset 6, -16
 10460 0001 4889E5   		movq	%rsp, %rbp
 10461              		.cfi_def_cfa_register 6
 10462 0004 4883EC10 		subq	$16, %rsp
 10463 0008 48897DF8 		movq	%rdi, -8(%rbp)
 10464              	.LBB262:
  79:/usr/include/c++/4.8/bits/stl_vector.h ****       : public _Tp_alloc_type
 10465              		.loc 9 79 0
 10466 000c 488B45F8 		movq	-8(%rbp), %rax
 10467 0010 4889C7   		movq	%rax, %rdi
 10468 0013 E8000000 		call	_ZNSaISt4pairIiSsEED2Ev
 10468      00
 10469              	.LBE262:
 10470 0018 C9       		leave
 10471              		.cfi_def_cfa 7, 8
 10472 0019 C3       		ret
 10473              		.cfi_endproc
 10474              	.LFE1565:
 10476              		.weak	_ZNSt12_Vector_baseISt4pairIiSsESaIS1_EE12_Vector_implD1Ev
 10477              		.set	_ZNSt12_Vector_baseISt4pairIiSsESaIS1_EE12_Vector_implD1Ev,_ZNSt12_Vector_baseISt4pairIiSsESa
 10478              		.section	.text._ZNSt12_Vector_baseISt4pairIiSsESaIS1_EED2Ev,"axG",@progbits,_ZNSt12_Vector_baseISt
 10479              		.align 2
 10480              		.weak	_ZNSt12_Vector_baseISt4pairIiSsESaIS1_EED2Ev
 10482              	_ZNSt12_Vector_baseISt4pairIiSsESaIS1_EED2Ev:
 10483              	.LFB1567:
 159:/usr/include/c++/4.8/bits/stl_vector.h ****       { _M_deallocate(this->_M_impl._M_start, this->_M_impl._M_end_of_storage
 10484              		.loc 9 159 0
 10485              		.cfi_startproc
 10486              		.cfi_personality 0x3,__gxx_personality_v0
 10487              		.cfi_lsda 0x3,.LLSDA1567
 10488 0000 55       		pushq	%rbp
 10489              		.cfi_def_cfa_offset 16
 10490              		.cfi_offset 6, -16
 10491 0001 4889E5   		movq	%rsp, %rbp
 10492              		.cfi_def_cfa_register 6
 10493 0004 53       		pushq	%rbx
 10494 0005 4883EC18 		subq	$24, %rsp
 10495              		.cfi_offset 3, -24
 10496 0009 48897DE8 		movq	%rdi, -24(%rbp)
 10497              	.LBB263:
 161:/usr/include/c++/4.8/bits/stl_vector.h **** 
 10498              		.loc 9 161 0
 10499 000d 488B45E8 		movq	-24(%rbp), %rax
 10500 0011 488B4010 		movq	16(%rax), %rax
 10501 0015 4889C2   		movq	%rax, %rdx
 10502 0018 488B45E8 		movq	-24(%rbp), %rax
 10503 001c 488B00   		movq	(%rax), %rax
 10504 001f 4829C2   		subq	%rax, %rdx
 10505 0022 4889D0   		movq	%rdx, %rax
 10506 0025 48C1F804 		sarq	$4, %rax
 10507 0029 4889C2   		movq	%rax, %rdx
 10508 002c 488B45E8 		movq	-24(%rbp), %rax
 10509 0030 488B08   		movq	(%rax), %rcx
 160:/usr/include/c++/4.8/bits/stl_vector.h **** 		      - this->_M_impl._M_start); }
 10510              		.loc 9 160 0
 10511 0033 488B45E8 		movq	-24(%rbp), %rax
 10512 0037 4889CE   		movq	%rcx, %rsi
 10513 003a 4889C7   		movq	%rax, %rdi
 10514              	.LEHB297:
 10515 003d E8000000 		call	_ZNSt12_Vector_baseISt4pairIiSsESaIS1_EE13_M_deallocateEPS1_m
 10515      00
 10516              	.LEHE297:
 161:/usr/include/c++/4.8/bits/stl_vector.h **** 
 10517              		.loc 9 161 0
 10518 0042 488B45E8 		movq	-24(%rbp), %rax
 10519 0046 4889C7   		movq	%rax, %rdi
 10520 0049 E8000000 		call	_ZNSt12_Vector_baseISt4pairIiSsESaIS1_EE12_Vector_implD1Ev
 10520      00
 10521 004e EB1A     		jmp	.L580
 10522              	.L579:
 10523 0050 4889C3   		movq	%rax, %rbx
 10524 0053 488B45E8 		movq	-24(%rbp), %rax
 10525 0057 4889C7   		movq	%rax, %rdi
 10526 005a E8000000 		call	_ZNSt12_Vector_baseISt4pairIiSsESaIS1_EE12_Vector_implD1Ev
 10526      00
 10527 005f 4889D8   		movq	%rbx, %rax
 10528 0062 4889C7   		movq	%rax, %rdi
 10529              	.LEHB298:
 10530 0065 E8000000 		call	_Unwind_Resume
 10530      00
 10531              	.LEHE298:
 10532              	.L580:
 10533              	.LBE263:
 10534 006a 4883C418 		addq	$24, %rsp
 10535 006e 5B       		popq	%rbx
 10536 006f 5D       		popq	%rbp
 10537              		.cfi_def_cfa 7, 8
 10538 0070 C3       		ret
 10539              		.cfi_endproc
 10540              	.LFE1567:
 10541              		.section	.gcc_except_table
 10542              	.LLSDA1567:
 10543 084c FF       		.byte	0xff
 10544 084d FF       		.byte	0xff
 10545 084e 01       		.byte	0x1
 10546 084f 08       		.uleb128 .LLSDACSE1567-.LLSDACSB1567
 10547              	.LLSDACSB1567:
 10548 0850 3D       		.uleb128 .LEHB297-.LFB1567
 10549 0851 05       		.uleb128 .LEHE297-.LEHB297
 10550 0852 50       		.uleb128 .L579-.LFB1567
 10551 0853 00       		.uleb128 0
 10552 0854 65       		.uleb128 .LEHB298-.LFB1567
 10553 0855 05       		.uleb128 .LEHE298-.LEHB298
 10554 0856 00       		.uleb128 0
 10555 0857 00       		.uleb128 0
 10556              	.LLSDACSE1567:
 10557              		.section	.text._ZNSt12_Vector_baseISt4pairIiSsESaIS1_EED2Ev,"axG",@progbits,_ZNSt12_Vector_baseISt
 10559              		.weak	_ZNSt12_Vector_baseISt4pairIiSsESaIS1_EED1Ev
 10560              		.set	_ZNSt12_Vector_baseISt4pairIiSsESaIS1_EED1Ev,_ZNSt12_Vector_baseISt4pairIiSsESaIS1_EED2Ev
 10561              		.section	.text._ZNSt12_Vector_baseISt4pairIiSsESaIS1_EE19_M_get_Tp_allocatorEv,"axG",@progbits,_ZN
 10562              		.align 2
 10563              		.weak	_ZNSt12_Vector_baseISt4pairIiSsESaIS1_EE19_M_get_Tp_allocatorEv
 10565              	_ZNSt12_Vector_baseISt4pairIiSsESaIS1_EE19_M_get_Tp_allocatorEv:
 10566              	.LFB1569:
 113:/usr/include/c++/4.8/bits/stl_vector.h ****       { return *static_cast<_Tp_alloc_type*>(&this->_M_impl); }
 10567              		.loc 9 113 0
 10568              		.cfi_startproc
 10569 0000 55       		pushq	%rbp
 10570              		.cfi_def_cfa_offset 16
 10571              		.cfi_offset 6, -16
 10572 0001 4889E5   		movq	%rsp, %rbp
 10573              		.cfi_def_cfa_register 6
 10574 0004 48897DF8 		movq	%rdi, -8(%rbp)
 114:/usr/include/c++/4.8/bits/stl_vector.h **** 
 10575              		.loc 9 114 0
 10576 0008 488B45F8 		movq	-8(%rbp), %rax
 10577 000c 5D       		popq	%rbp
 10578              		.cfi_def_cfa 7, 8
 10579 000d C3       		ret
 10580              		.cfi_endproc
 10581              	.LFE1569:
 10583              		.section	.text._ZSt8_DestroyIPSt4pairIiSsES1_EvT_S3_RSaIT0_E,"axG",@progbits,_ZSt8_DestroyIPSt4pai
 10584              		.weak	_ZSt8_DestroyIPSt4pairIiSsES1_EvT_S3_RSaIT0_E
 10586              	_ZSt8_DestroyIPSt4pairIiSsES1_EvT_S3_RSaIT0_E:
 10587              	.LFB1570:
 148:/usr/include/c++/4.8/bits/stl_construct.h **** 	     allocator<_Tp>&)
 10588              		.loc 10 148 0
 10589              		.cfi_startproc
 10590 0000 55       		pushq	%rbp
 10591              		.cfi_def_cfa_offset 16
 10592              		.cfi_offset 6, -16
 10593 0001 4889E5   		movq	%rsp, %rbp
 10594              		.cfi_def_cfa_register 6
 10595 0004 4883EC20 		subq	$32, %rsp
 10596 0008 48897DF8 		movq	%rdi, -8(%rbp)
 10597 000c 488975F0 		movq	%rsi, -16(%rbp)
 10598 0010 488955E8 		movq	%rdx, -24(%rbp)
 151:/usr/include/c++/4.8/bits/stl_construct.h ****     }
 10599              		.loc 10 151 0
 10600 0014 488B55F0 		movq	-16(%rbp), %rdx
 10601 0018 488B45F8 		movq	-8(%rbp), %rax
 10602 001c 4889D6   		movq	%rdx, %rsi
 10603 001f 4889C7   		movq	%rax, %rdi
 10604 0022 E8000000 		call	_ZSt8_DestroyIPSt4pairIiSsEEvT_S3_
 10604      00
 10605              		.loc 10 152 0
 10606 0027 C9       		leave
 10607              		.cfi_def_cfa 7, 8
 10608 0028 C3       		ret
 10609              		.cfi_endproc
 10610              	.LFE1570:
 10612              		.section	.text._ZNSaISt4pairIiSsEED2Ev,"axG",@progbits,_ZNSaISt4pairIiSsEED5Ev,comdat
 10613              		.align 2
 10614              		.weak	_ZNSaISt4pairIiSsEED2Ev
 10616              	_ZNSaISt4pairIiSsEED2Ev:
 10617              	.LFB1572:
 10618              		.loc 11 121 0
 10619              		.cfi_startproc
 10620 0000 55       		pushq	%rbp
 10621              		.cfi_def_cfa_offset 16
 10622              		.cfi_offset 6, -16
 10623 0001 4889E5   		movq	%rsp, %rbp
 10624              		.cfi_def_cfa_register 6
 10625 0004 4883EC10 		subq	$16, %rsp
 10626 0008 48897DF8 		movq	%rdi, -8(%rbp)
 10627              	.LBB264:
 10628              		.loc 11 121 0
 10629 000c 488B45F8 		movq	-8(%rbp), %rax
 10630 0010 4889C7   		movq	%rax, %rdi
 10631 0013 E8000000 		call	_ZN9__gnu_cxx13new_allocatorISt4pairIiSsEED2Ev
 10631      00
 10632              	.LBE264:
 10633 0018 C9       		leave
 10634              		.cfi_def_cfa 7, 8
 10635 0019 C3       		ret
 10636              		.cfi_endproc
 10637              	.LFE1572:
 10639              		.weak	_ZNSaISt4pairIiSsEED1Ev
 10640              		.set	_ZNSaISt4pairIiSsEED1Ev,_ZNSaISt4pairIiSsEED2Ev
 10641              		.section	.text._ZNSt12_Vector_baseISt4pairIiSsESaIS1_EE13_M_deallocateEPS1_m,"axG",@progbits,_ZNSt
 10642              		.align 2
 10643              		.weak	_ZNSt12_Vector_baseISt4pairIiSsESaIS1_EE13_M_deallocateEPS1_m
 10645              	_ZNSt12_Vector_baseISt4pairIiSsESaIS1_EE13_M_deallocateEPS1_m:
 10646              	.LFB1574:
 171:/usr/include/c++/4.8/bits/stl_vector.h ****       {
 10647              		.loc 9 171 0
 10648              		.cfi_startproc
 10649 0000 55       		pushq	%rbp
 10650              		.cfi_def_cfa_offset 16
 10651              		.cfi_offset 6, -16
 10652 0001 4889E5   		movq	%rsp, %rbp
 10653              		.cfi_def_cfa_register 6
 10654 0004 4883EC20 		subq	$32, %rsp
 10655 0008 48897DF8 		movq	%rdi, -8(%rbp)
 10656 000c 488975F0 		movq	%rsi, -16(%rbp)
 10657 0010 488955E8 		movq	%rdx, -24(%rbp)
 173:/usr/include/c++/4.8/bits/stl_vector.h **** 	  _M_impl.deallocate(__p, __n);
 10658              		.loc 9 173 0
 10659 0014 48837DF0 		cmpq	$0, -16(%rbp)
 10659      00
 10660 0019 7417     		je	.L586
 174:/usr/include/c++/4.8/bits/stl_vector.h ****       }
 10661              		.loc 9 174 0
 10662 001b 488B45F8 		movq	-8(%rbp), %rax
 10663 001f 488B55E8 		movq	-24(%rbp), %rdx
 10664 0023 488B4DF0 		movq	-16(%rbp), %rcx
 10665 0027 4889CE   		movq	%rcx, %rsi
 10666 002a 4889C7   		movq	%rax, %rdi
 10667 002d E8000000 		call	_ZN9__gnu_cxx13new_allocatorISt4pairIiSsEE10deallocateEPS2_m
 10667      00
 10668              	.L586:
 175:/usr/include/c++/4.8/bits/stl_vector.h **** 
 10669              		.loc 9 175 0
 10670 0032 C9       		leave
 10671              		.cfi_def_cfa 7, 8
 10672 0033 C3       		ret
 10673              		.cfi_endproc
 10674              	.LFE1574:
 10676              		.section	.text._ZSt8_DestroyIPSt4pairIiSsEEvT_S3_,"axG",@progbits,_ZSt8_DestroyIPSt4pairIiSsEEvT_S
 10677              		.weak	_ZSt8_DestroyIPSt4pairIiSsEEvT_S3_
 10679              	_ZSt8_DestroyIPSt4pairIiSsEEvT_S3_:
 10680              	.LFB1575:
 122:/usr/include/c++/4.8/bits/stl_construct.h ****     {
 10681              		.loc 10 122 0
 10682              		.cfi_startproc
 10683 0000 55       		pushq	%rbp
 10684              		.cfi_def_cfa_offset 16
 10685              		.cfi_offset 6, -16
 10686 0001 4889E5   		movq	%rsp, %rbp
 10687              		.cfi_def_cfa_register 6
 10688 0004 4883EC10 		subq	$16, %rsp
 10689 0008 48897DF8 		movq	%rdi, -8(%rbp)
 10690 000c 488975F0 		movq	%rsi, -16(%rbp)
 10691              	.LBB265:
 126:/usr/include/c++/4.8/bits/stl_construct.h **** 	__destroy(__first, __last);
 10692              		.loc 10 126 0
 10693 0010 488B55F0 		movq	-16(%rbp), %rdx
 10694 0014 488B45F8 		movq	-8(%rbp), %rax
 10695 0018 4889D6   		movq	%rdx, %rsi
 10696 001b 4889C7   		movq	%rax, %rdi
 10697 001e E8000000 		call	_ZNSt12_Destroy_auxILb0EE9__destroyIPSt4pairIiSsEEEvT_S5_
 10697      00
 10698              	.LBE265:
 128:/usr/include/c++/4.8/bits/stl_construct.h **** 
 10699              		.loc 10 128 0
 10700 0023 C9       		leave
 10701              		.cfi_def_cfa 7, 8
 10702 0024 C3       		ret
 10703              		.cfi_endproc
 10704              	.LFE1575:
 10706              		.section	.text._ZN9__gnu_cxx13new_allocatorISt4pairIiSsEED2Ev,"axG",@progbits,_ZN9__gnu_cxx13new_a
 10707              		.align 2
 10708              		.weak	_ZN9__gnu_cxx13new_allocatorISt4pairIiSsEED2Ev
 10710              	_ZN9__gnu_cxx13new_allocatorISt4pairIiSsEED2Ev:
 10711              	.LFB1577:
  86:/usr/include/c++/4.8/ext/new_allocator.h **** 
 10712              		.loc 12 86 0
 10713              		.cfi_startproc
 10714 0000 55       		pushq	%rbp
 10715              		.cfi_def_cfa_offset 16
 10716              		.cfi_offset 6, -16
 10717 0001 4889E5   		movq	%rsp, %rbp
 10718              		.cfi_def_cfa_register 6
 10719 0004 48897DF8 		movq	%rdi, -8(%rbp)
  86:/usr/include/c++/4.8/ext/new_allocator.h **** 
 10720              		.loc 12 86 0
 10721 0008 5D       		popq	%rbp
 10722              		.cfi_def_cfa 7, 8
 10723 0009 C3       		ret
 10724              		.cfi_endproc
 10725              	.LFE1577:
 10727              		.weak	_ZN9__gnu_cxx13new_allocatorISt4pairIiSsEED1Ev
 10728              		.set	_ZN9__gnu_cxx13new_allocatorISt4pairIiSsEED1Ev,_ZN9__gnu_cxx13new_allocatorISt4pairIiSsEED2Ev
 10729              		.section	.text._ZN9__gnu_cxx13new_allocatorISt4pairIiSsEE10deallocateEPS2_m,"axG",@progbits,_ZN9__
 10730              		.align 2
 10731              		.weak	_ZN9__gnu_cxx13new_allocatorISt4pairIiSsEE10deallocateEPS2_m
 10733              	_ZN9__gnu_cxx13new_allocatorISt4pairIiSsEE10deallocateEPS2_m:
 10734              	.LFB1579:
 109:/usr/include/c++/4.8/ext/new_allocator.h ****       { ::operator delete(__p); }
 10735              		.loc 12 109 0
 10736              		.cfi_startproc
 10737 0000 55       		pushq	%rbp
 10738              		.cfi_def_cfa_offset 16
 10739              		.cfi_offset 6, -16
 10740 0001 4889E5   		movq	%rsp, %rbp
 10741              		.cfi_def_cfa_register 6
 10742 0004 4883EC20 		subq	$32, %rsp
 10743 0008 48897DF8 		movq	%rdi, -8(%rbp)
 10744 000c 488975F0 		movq	%rsi, -16(%rbp)
 10745 0010 488955E8 		movq	%rdx, -24(%rbp)
 10746              		.loc 12 110 0
 10747 0014 488B45F0 		movq	-16(%rbp), %rax
 10748 0018 4889C7   		movq	%rax, %rdi
 10749 001b E8000000 		call	_ZdlPv
 10749      00
 10750 0020 C9       		leave
 10751              		.cfi_def_cfa 7, 8
 10752 0021 C3       		ret
 10753              		.cfi_endproc
 10754              	.LFE1579:
 10756              		.section	.text._ZNSt12_Destroy_auxILb0EE9__destroyIPSt4pairIiSsEEEvT_S5_,"axG",@progbits,_ZNSt12_D
 10757              		.weak	_ZNSt12_Destroy_auxILb0EE9__destroyIPSt4pairIiSsEEEvT_S5_
 10759              	_ZNSt12_Destroy_auxILb0EE9__destroyIPSt4pairIiSsEEEvT_S5_:
 10760              	.LFB1580:
 100:/usr/include/c++/4.8/bits/stl_construct.h **** 	{
 10761              		.loc 10 100 0
 10762              		.cfi_startproc
 10763 0000 55       		pushq	%rbp
 10764              		.cfi_def_cfa_offset 16
 10765              		.cfi_offset 6, -16
 10766 0001 4889E5   		movq	%rsp, %rbp
 10767              		.cfi_def_cfa_register 6
 10768 0004 4883EC10 		subq	$16, %rsp
 10769 0008 48897DF8 		movq	%rdi, -8(%rbp)
 10770 000c 488975F0 		movq	%rsi, -16(%rbp)
 102:/usr/include/c++/4.8/bits/stl_construct.h **** 	    std::_Destroy(std::__addressof(*__first));
 10771              		.loc 10 102 0
 10772 0010 EB19     		jmp	.L593
 10773              	.L594:
 103:/usr/include/c++/4.8/bits/stl_construct.h **** 	}
 10774              		.loc 10 103 0 discriminator 2
 10775 0012 488B45F8 		movq	-8(%rbp), %rax
 10776 0016 4889C7   		movq	%rax, %rdi
 10777 0019 E8000000 		call	_ZSt11__addressofISt4pairIiSsEEPT_RS2_
 10777      00
 10778 001e 4889C7   		movq	%rax, %rdi
 10779 0021 E8000000 		call	_ZSt8_DestroyISt4pairIiSsEEvPT_
 10779      00
 102:/usr/include/c++/4.8/bits/stl_construct.h **** 	    std::_Destroy(std::__addressof(*__first));
 10780              		.loc 10 102 0 discriminator 2
 10781 0026 488345F8 		addq	$16, -8(%rbp)
 10781      10
 10782              	.L593:
 102:/usr/include/c++/4.8/bits/stl_construct.h **** 	    std::_Destroy(std::__addressof(*__first));
 10783              		.loc 10 102 0 is_stmt 0 discriminator 1
 10784 002b 488B45F8 		movq	-8(%rbp), %rax
 10785 002f 483B45F0 		cmpq	-16(%rbp), %rax
 10786 0033 75DD     		jne	.L594
 104:/usr/include/c++/4.8/bits/stl_construct.h ****     };
 10787              		.loc 10 104 0 is_stmt 1
 10788 0035 C9       		leave
 10789              		.cfi_def_cfa 7, 8
 10790 0036 C3       		ret
 10791              		.cfi_endproc
 10792              	.LFE1580:
 10794              		.section	.text._ZSt11__addressofISt4pairIiSsEEPT_RS2_,"axG",@progbits,_ZSt11__addressofISt4pairIiS
 10795              		.weak	_ZSt11__addressofISt4pairIiSsEEPT_RS2_
 10797              	_ZSt11__addressofISt4pairIiSsEEPT_RS2_:
 10798              	.LFB1581:
  47:/usr/include/c++/4.8/bits/move.h ****     {
 10799              		.loc 13 47 0
 10800              		.cfi_startproc
 10801 0000 55       		pushq	%rbp
 10802              		.cfi_def_cfa_offset 16
 10803              		.cfi_offset 6, -16
 10804 0001 4889E5   		movq	%rsp, %rbp
 10805              		.cfi_def_cfa_register 6
 10806 0004 48897DF8 		movq	%rdi, -8(%rbp)
  50:/usr/include/c++/4.8/bits/move.h ****     }
 10807              		.loc 13 50 0
 10808 0008 488B45F8 		movq	-8(%rbp), %rax
 10809              		.loc 13 51 0
 10810 000c 5D       		popq	%rbp
 10811              		.cfi_def_cfa 7, 8
 10812 000d C3       		ret
 10813              		.cfi_endproc
 10814              	.LFE1581:
 10816              		.section	.text._ZNSt4pairIiSsED2Ev,"axG",@progbits,_ZNSt4pairIiSsED5Ev,comdat
 10817              		.align 2
 10818              		.weak	_ZNSt4pairIiSsED2Ev
 10820              	_ZNSt4pairIiSsED2Ev:
 10821              	.LFB1584:
 10822              		.file 15 "/usr/include/c++/4.8/bits/stl_pair.h"
   1:/usr/include/c++/4.8/bits/stl_pair.h **** // Pair implementation -*- C++ -*-
   2:/usr/include/c++/4.8/bits/stl_pair.h **** 
   3:/usr/include/c++/4.8/bits/stl_pair.h **** // Copyright (C) 2001-2013 Free Software Foundation, Inc.
   4:/usr/include/c++/4.8/bits/stl_pair.h **** //
   5:/usr/include/c++/4.8/bits/stl_pair.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/c++/4.8/bits/stl_pair.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/4.8/bits/stl_pair.h **** // terms of the GNU General Public License as published by the
   8:/usr/include/c++/4.8/bits/stl_pair.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/4.8/bits/stl_pair.h **** // any later version.
  10:/usr/include/c++/4.8/bits/stl_pair.h **** 
  11:/usr/include/c++/4.8/bits/stl_pair.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/c++/4.8/bits/stl_pair.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/c++/4.8/bits/stl_pair.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/4.8/bits/stl_pair.h **** // GNU General Public License for more details.
  15:/usr/include/c++/4.8/bits/stl_pair.h **** 
  16:/usr/include/c++/4.8/bits/stl_pair.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/c++/4.8/bits/stl_pair.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/4.8/bits/stl_pair.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/4.8/bits/stl_pair.h **** 
  20:/usr/include/c++/4.8/bits/stl_pair.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/c++/4.8/bits/stl_pair.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/c++/4.8/bits/stl_pair.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/4.8/bits/stl_pair.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/c++/4.8/bits/stl_pair.h **** 
  25:/usr/include/c++/4.8/bits/stl_pair.h **** /*
  26:/usr/include/c++/4.8/bits/stl_pair.h ****  *
  27:/usr/include/c++/4.8/bits/stl_pair.h ****  * Copyright (c) 1994
  28:/usr/include/c++/4.8/bits/stl_pair.h ****  * Hewlett-Packard Company
  29:/usr/include/c++/4.8/bits/stl_pair.h ****  *
  30:/usr/include/c++/4.8/bits/stl_pair.h ****  * Permission to use, copy, modify, distribute and sell this software
  31:/usr/include/c++/4.8/bits/stl_pair.h ****  * and its documentation for any purpose is hereby granted without fee,
  32:/usr/include/c++/4.8/bits/stl_pair.h ****  * provided that the above copyright notice appear in all copies and
  33:/usr/include/c++/4.8/bits/stl_pair.h ****  * that both that copyright notice and this permission notice appear
  34:/usr/include/c++/4.8/bits/stl_pair.h ****  * in supporting documentation.  Hewlett-Packard Company makes no
  35:/usr/include/c++/4.8/bits/stl_pair.h ****  * representations about the suitability of this software for any
  36:/usr/include/c++/4.8/bits/stl_pair.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  37:/usr/include/c++/4.8/bits/stl_pair.h ****  *
  38:/usr/include/c++/4.8/bits/stl_pair.h ****  *
  39:/usr/include/c++/4.8/bits/stl_pair.h ****  * Copyright (c) 1996,1997
  40:/usr/include/c++/4.8/bits/stl_pair.h ****  * Silicon Graphics Computer Systems, Inc.
  41:/usr/include/c++/4.8/bits/stl_pair.h ****  *
  42:/usr/include/c++/4.8/bits/stl_pair.h ****  * Permission to use, copy, modify, distribute and sell this software
  43:/usr/include/c++/4.8/bits/stl_pair.h ****  * and its documentation for any purpose is hereby granted without fee,
  44:/usr/include/c++/4.8/bits/stl_pair.h ****  * provided that the above copyright notice appear in all copies and
  45:/usr/include/c++/4.8/bits/stl_pair.h ****  * that both that copyright notice and this permission notice appear
  46:/usr/include/c++/4.8/bits/stl_pair.h ****  * in supporting documentation.  Silicon Graphics makes no
  47:/usr/include/c++/4.8/bits/stl_pair.h ****  * representations about the suitability of this software for any
  48:/usr/include/c++/4.8/bits/stl_pair.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  49:/usr/include/c++/4.8/bits/stl_pair.h ****  */
  50:/usr/include/c++/4.8/bits/stl_pair.h **** 
  51:/usr/include/c++/4.8/bits/stl_pair.h **** /** @file bits/stl_pair.h
  52:/usr/include/c++/4.8/bits/stl_pair.h ****  *  This is an internal header file, included by other library headers.
  53:/usr/include/c++/4.8/bits/stl_pair.h ****  *  Do not attempt to use it directly. @headername{utility}
  54:/usr/include/c++/4.8/bits/stl_pair.h ****  */
  55:/usr/include/c++/4.8/bits/stl_pair.h **** 
  56:/usr/include/c++/4.8/bits/stl_pair.h **** #ifndef _STL_PAIR_H
  57:/usr/include/c++/4.8/bits/stl_pair.h **** #define _STL_PAIR_H 1
  58:/usr/include/c++/4.8/bits/stl_pair.h **** 
  59:/usr/include/c++/4.8/bits/stl_pair.h **** #include <bits/move.h> // for std::move / std::forward, and std::swap
  60:/usr/include/c++/4.8/bits/stl_pair.h **** 
  61:/usr/include/c++/4.8/bits/stl_pair.h **** #if __cplusplus >= 201103L
  62:/usr/include/c++/4.8/bits/stl_pair.h **** #include <type_traits> // for std::__decay_and_strip too
  63:/usr/include/c++/4.8/bits/stl_pair.h **** #endif
  64:/usr/include/c++/4.8/bits/stl_pair.h **** 
  65:/usr/include/c++/4.8/bits/stl_pair.h **** namespace std _GLIBCXX_VISIBILITY(default)
  66:/usr/include/c++/4.8/bits/stl_pair.h **** {
  67:/usr/include/c++/4.8/bits/stl_pair.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  68:/usr/include/c++/4.8/bits/stl_pair.h **** 
  69:/usr/include/c++/4.8/bits/stl_pair.h ****   /**
  70:/usr/include/c++/4.8/bits/stl_pair.h ****    *  @addtogroup utilities
  71:/usr/include/c++/4.8/bits/stl_pair.h ****    *  @{
  72:/usr/include/c++/4.8/bits/stl_pair.h ****    */
  73:/usr/include/c++/4.8/bits/stl_pair.h **** 
  74:/usr/include/c++/4.8/bits/stl_pair.h **** #if __cplusplus >= 201103L
  75:/usr/include/c++/4.8/bits/stl_pair.h ****   /// piecewise_construct_t
  76:/usr/include/c++/4.8/bits/stl_pair.h ****   struct piecewise_construct_t { };
  77:/usr/include/c++/4.8/bits/stl_pair.h **** 
  78:/usr/include/c++/4.8/bits/stl_pair.h ****   /// piecewise_construct
  79:/usr/include/c++/4.8/bits/stl_pair.h ****   constexpr piecewise_construct_t piecewise_construct = piecewise_construct_t();
  80:/usr/include/c++/4.8/bits/stl_pair.h **** 
  81:/usr/include/c++/4.8/bits/stl_pair.h ****   // Forward declarations.
  82:/usr/include/c++/4.8/bits/stl_pair.h ****   template<typename...>
  83:/usr/include/c++/4.8/bits/stl_pair.h ****     class tuple;
  84:/usr/include/c++/4.8/bits/stl_pair.h **** 
  85:/usr/include/c++/4.8/bits/stl_pair.h ****   template<std::size_t...>
  86:/usr/include/c++/4.8/bits/stl_pair.h ****     struct _Index_tuple;
  87:/usr/include/c++/4.8/bits/stl_pair.h **** #endif
  88:/usr/include/c++/4.8/bits/stl_pair.h **** 
  89:/usr/include/c++/4.8/bits/stl_pair.h ****  /**
  90:/usr/include/c++/4.8/bits/stl_pair.h ****    *  @brief Struct holding two objects of arbitrary type.
  91:/usr/include/c++/4.8/bits/stl_pair.h ****    *
  92:/usr/include/c++/4.8/bits/stl_pair.h ****    *  @tparam _T1  Type of first object.
  93:/usr/include/c++/4.8/bits/stl_pair.h ****    *  @tparam _T2  Type of second object.
  94:/usr/include/c++/4.8/bits/stl_pair.h ****    */
  95:/usr/include/c++/4.8/bits/stl_pair.h ****   template<class _T1, class _T2>
  96:/usr/include/c++/4.8/bits/stl_pair.h ****     struct pair
 10823              		.loc 15 96 0
 10824              		.cfi_startproc
 10825 0000 55       		pushq	%rbp
 10826              		.cfi_def_cfa_offset 16
 10827              		.cfi_offset 6, -16
 10828 0001 4889E5   		movq	%rsp, %rbp
 10829              		.cfi_def_cfa_register 6
 10830 0004 4883EC10 		subq	$16, %rsp
 10831 0008 48897DF8 		movq	%rdi, -8(%rbp)
 10832              	.LBB266:
 10833              		.loc 15 96 0
 10834 000c 488B45F8 		movq	-8(%rbp), %rax
 10835 0010 4883C008 		addq	$8, %rax
 10836 0014 4889C7   		movq	%rax, %rdi
 10837 0017 E8000000 		call	_ZNSsD1Ev
 10837      00
 10838              	.LBE266:
 10839 001c C9       		leave
 10840              		.cfi_def_cfa 7, 8
 10841 001d C3       		ret
 10842              		.cfi_endproc
 10843              	.LFE1584:
 10845              		.weak	_ZNSt4pairIiSsED1Ev
 10846              		.set	_ZNSt4pairIiSsED1Ev,_ZNSt4pairIiSsED2Ev
 10847              		.section	.text._ZSt8_DestroyISt4pairIiSsEEvPT_,"axG",@progbits,_ZSt8_DestroyISt4pairIiSsEEvPT_,com
 10848              		.weak	_ZSt8_DestroyISt4pairIiSsEEvPT_
 10850              	_ZSt8_DestroyISt4pairIiSsEEvPT_:
 10851              	.LFB1582:
  92:/usr/include/c++/4.8/bits/stl_construct.h ****     { __pointer->~_Tp(); }
 10852              		.loc 10 92 0
 10853              		.cfi_startproc
 10854 0000 55       		pushq	%rbp
 10855              		.cfi_def_cfa_offset 16
 10856              		.cfi_offset 6, -16
 10857 0001 4889E5   		movq	%rsp, %rbp
 10858              		.cfi_def_cfa_register 6
 10859 0004 4883EC10 		subq	$16, %rsp
 10860 0008 48897DF8 		movq	%rdi, -8(%rbp)
  93:/usr/include/c++/4.8/bits/stl_construct.h **** 
 10861              		.loc 10 93 0
 10862 000c 488B45F8 		movq	-8(%rbp), %rax
 10863 0010 4889C7   		movq	%rax, %rdi
 10864 0013 E8000000 		call	_ZNSt4pairIiSsED1Ev
 10864      00
 10865 0018 C9       		leave
 10866              		.cfi_def_cfa 7, 8
 10867 0019 C3       		ret
 10868              		.cfi_endproc
 10869              	.LFE1582:
 10871              		.text
 10873              	_GLOBAL__sub_I_TestXmlTestReporter.cpp:
 10874              	.LFB1586:
 10875              		.loc 3 183 0
 10876              		.cfi_startproc
 10877 42b5 55       		pushq	%rbp
 10878              		.cfi_def_cfa_offset 16
 10879              		.cfi_offset 6, -16
 10880 42b6 4889E5   		movq	%rsp, %rbp
 10881              		.cfi_def_cfa_register 6
 10882              		.loc 3 183 0
 10883 42b9 BEFFFF00 		movl	$65535, %esi
 10883      00
 10884 42be BF010000 		movl	$1, %edi
 10884      00
 10885 42c3 E81EFEFF 		call	_Z41__static_initialization_and_destruction_0ii
 10885      FF
 10886 42c8 5D       		popq	%rbp
 10887              		.cfi_def_cfa 7, 8
 10888 42c9 C3       		ret
 10889              		.cfi_endproc
 10890              	.LFE1586:
 10892              		.section	.init_array,"aw"
 10893              		.align 8
 10894 0000 00000000 		.quad	_GLOBAL__sub_I_TestXmlTestReporter.cpp
 10894      00000000 
 10895              		.section	.rodata
 10896 0f4a 00000000 		.align 8
 10896      0000
 10899              	_ZZL18__gthread_active_pvE20__gthread_active_ptr:
 10900 0f50 00000000 		.quad	_ZL28__gthrw___pthread_key_createPjPFvPvE
 10900      00000000 
 10901              		.weakref	_ZL28__gthrw___pthread_key_createPjPFvPvE,__pthread_key_create
 10902              		.align 4
 10903              	.LC10:
 10904 0f58 CDCCCC3D 		.long	1036831949
 10905              		.align 4
 10906              	.LC16:
 10907 0f5c 0000803F 		.long	1065353216
 10908              		.align 4
 10909              	.LC38:
 10910 0f60 CDCC8C3F 		.long	1066192077
 10911              		.text
 10912              	.Letext0:
 10913              		.file 16 "../TestDetails.h"
 10914              		.file 17 "../TestList.h"
 10915              		.file 18 "../TestResults.h"
 10916              		.file 19 "../PosixUtils/SignalTranslator.h"
 10917              		.file 20 "/usr/include/stdio.h"
 10918              		.file 21 "<built-in>"
 10919              		.file 22 "/usr/lib/gcc/x86_64-linux-gnu/4.8/include/stddef.h"
 10920              		.file 23 "/usr/include/wchar.h"
 10921              		.file 24 "/usr/include/c++/4.8/cwchar"
 10922              		.file 25 "/usr/include/c++/4.8/bits/char_traits.h"
 10923              		.file 26 "/usr/include/x86_64-linux-gnu/c++/4.8/bits/c++config.h"
 10924              		.file 27 "/usr/include/c++/4.8/clocale"
 10925              		.file 28 "/usr/include/c++/4.8/bits/basic_string.tcc"
 10926              		.file 29 "/usr/include/c++/4.8/bits/stringfwd.h"
 10927              		.file 30 "/usr/include/c++/4.8/cwctype"
 10928              		.file 31 "/usr/include/c++/4.8/bits/vector.tcc"
 10929              		.file 32 "/usr/include/c++/4.8/iosfwd"
 10930              		.file 33 "/usr/include/c++/4.8/bits/stl_iterator_base_types.h"
 10931              		.file 34 "/usr/include/time.h"
 10932              		.file 35 "/usr/include/c++/4.8/ext/numeric_traits.h"
 10933              		.file 36 "/usr/include/c++/4.8/bits/stl_iterator.h"
 10934              		.file 37 "/usr/include/c++/4.8/ext/alloc_traits.h"
 10935              		.file 38 "/usr/include/c++/4.8/debug/debug.h"
 10936              		.file 39 "/usr/include/locale.h"
 10937              		.file 40 "/usr/include/x86_64-linux-gnu/bits/types.h"
 10938              		.file 41 "/usr/include/x86_64-linux-gnu/bits/setjmp.h"
 10939              		.file 42 "/usr/include/x86_64-linux-gnu/c++/4.8/bits/atomic_word.h"
 10940              		.file 43 "/usr/include/wctype.h"
 10941              		.file 44 "/usr/include/x86_64-linux-gnu/bits/sigset.h"
 10942              		.file 45 "/usr/include/setjmp.h"
 10943              		.file 46 "/usr/include/x86_64-linux-gnu/bits/siginfo.h"
 10944              		.file 47 "/usr/include/signal.h"
 10945              		.file 48 "/usr/include/x86_64-linux-gnu/bits/sigaction.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 TestXmlTestReporter.cpp
     /tmp/ccidAgPS.s:10     .text._ZN13UnitTestSuite12GetSuiteNameEv:0000000000000000 _ZN13UnitTestSuite12GetSuiteNameEv
     /tmp/ccidAgPS.s:33     .text._ZN8UnitTest15MemoryOutStreamC1Ev:0000000000000000 _ZN8UnitTest15MemoryOutStreamC1Ev
     /tmp/ccidAgPS.s:9299   .rodata._ZTTN8UnitTest15MemoryOutStreamE:0000000000000000 _ZTTN8UnitTest15MemoryOutStreamE
     /tmp/ccidAgPS.s:9101   .rodata._ZTVN8UnitTest15MemoryOutStreamE:0000000000000000 _ZTVN8UnitTest15MemoryOutStreamE
     /tmp/ccidAgPS.s:145    .text:0000000000000000 _ZN12_GLOBAL__N_122XmlTestReporterFixtureC2Ev
     /tmp/ccidAgPS.s:226    .text:000000000000005c _ZN12_GLOBAL__N_122XmlTestReporterFixtureD2Ev
     /tmp/ccidAgPS.s:9601   .text._ZN8UnitTest15XmlTestReporterD2Ev:0000000000000000 _ZN8UnitTest15XmlTestReporterD1Ev
     /tmp/ccidAgPS.s:300    .text:00000000000000aa _ZN12_GLOBAL__N_156XmlTestReporterFixtureMultipleCharactersAreEscapedHelperC2ERKN8UnitTest11TestDetailsE
     /tmp/ccidAgPS.s:300    .text:00000000000000aa _ZN12_GLOBAL__N_156XmlTestReporterFixtureMultipleCharactersAreEscapedHelperC1ERKN8UnitTest11TestDetailsE
     /tmp/ccidAgPS.s:336    .text:00000000000000d8 _ZN12_GLOBAL__N_154TestXmlTestReporterFixtureMultipleCharactersAreEscapedC2Ev
     /tmp/ccidAgPS.s:9026   .rodata:0000000000000b40 _ZTVN12_GLOBAL__N_154TestXmlTestReporterFixtureMultipleCharactersAreEscapedE
     /tmp/ccidAgPS.s:336    .text:00000000000000d8 _ZN12_GLOBAL__N_154TestXmlTestReporterFixtureMultipleCharactersAreEscapedC1Ev
     /tmp/ccidAgPS.s:368    .bss:0000000000000000 _ZN12_GLOBAL__N_162testXmlTestReporterFixtureMultipleCharactersAreEscapedInstanceE
     /tmp/ccidAgPS.s:368    .bss:0000000000000038 _ZN12_GLOBAL__N_155adderXmlTestReporterFixtureMultipleCharactersAreEscapedE
     /tmp/ccidAgPS.s:373    .text:0000000000000116 _ZN12_GLOBAL__N_156XmlTestReporterFixtureMultipleCharactersAreEscapedHelperD2Ev
     /tmp/ccidAgPS.s:373    .text:0000000000000116 _ZN12_GLOBAL__N_156XmlTestReporterFixtureMultipleCharactersAreEscapedHelperD1Ev
     /tmp/ccidAgPS.s:409    .text:0000000000000130 _ZNK12_GLOBAL__N_154TestXmlTestReporterFixtureMultipleCharactersAreEscaped7RunImplEv
     /tmp/ccidAgPS.s:5563   .text:0000000000002926 _ZN8UnitTest11ExecuteTestIN12_GLOBAL__N_156XmlTestReporterFixtureMultipleCharactersAreEscapedHelperEEEvRT_RKNS_11TestDetailsE
     /tmp/ccidAgPS.s:9116   .text._ZN8UnitTest15MemoryOutStreamD1Ev:0000000000000000 _ZN8UnitTest15MemoryOutStreamD1Ev
     /tmp/ccidAgPS.s:762    .text:0000000000000412 _ZN12_GLOBAL__N_156XmlTestReporterFixtureMultipleCharactersAreEscapedHelper7RunImplEv
     /tmp/ccidAgPS.s:5915   .text._ZN8UnitTest10CheckEqualIPKcSsEEvRNS_11TestResultsERKT_RKT0_RKNS_11TestDetailsE:0000000000000000 _ZN8UnitTest10CheckEqualIPKcSsEEvRNS_11TestResultsERKT_RKT0_RKNS_11TestDetailsE
     /tmp/ccidAgPS.s:960    .text:000000000000059a _ZN12_GLOBAL__N_168XmlTestReporterFixtureOutputIsCachedUntilReportSummaryIsCalledHelperC2ERKN8UnitTest11TestDetailsE
     /tmp/ccidAgPS.s:960    .text:000000000000059a _ZN12_GLOBAL__N_168XmlTestReporterFixtureOutputIsCachedUntilReportSummaryIsCalledHelperC1ERKN8UnitTest11TestDetailsE
     /tmp/ccidAgPS.s:995    .text:00000000000005c8 _ZN12_GLOBAL__N_166TestXmlTestReporterFixtureOutputIsCachedUntilReportSummaryIsCalledC2Ev
     /tmp/ccidAgPS.s:8952   .rodata:0000000000000b00 _ZTVN12_GLOBAL__N_166TestXmlTestReporterFixtureOutputIsCachedUntilReportSummaryIsCalledE
     /tmp/ccidAgPS.s:995    .text:00000000000005c8 _ZN12_GLOBAL__N_166TestXmlTestReporterFixtureOutputIsCachedUntilReportSummaryIsCalledC1Ev
     /tmp/ccidAgPS.s:1027   .bss:0000000000000040 _ZN12_GLOBAL__N_174testXmlTestReporterFixtureOutputIsCachedUntilReportSummaryIsCalledInstanceE
     /tmp/ccidAgPS.s:1027   .bss:0000000000000078 _ZN12_GLOBAL__N_167adderXmlTestReporterFixtureOutputIsCachedUntilReportSummaryIsCalledE
     /tmp/ccidAgPS.s:1032   .text:0000000000000606 _ZN12_GLOBAL__N_168XmlTestReporterFixtureOutputIsCachedUntilReportSummaryIsCalledHelperD2Ev
     /tmp/ccidAgPS.s:1032   .text:0000000000000606 _ZN12_GLOBAL__N_168XmlTestReporterFixtureOutputIsCachedUntilReportSummaryIsCalledHelperD1Ev
     /tmp/ccidAgPS.s:1058   .text:0000000000000620 _ZNK12_GLOBAL__N_166TestXmlTestReporterFixtureOutputIsCachedUntilReportSummaryIsCalled7RunImplEv
     /tmp/ccidAgPS.s:6043   .text:0000000000002bbe _ZN8UnitTest11ExecuteTestIN12_GLOBAL__N_168XmlTestReporterFixtureOutputIsCachedUntilReportSummaryIsCalledHelperEEEvRT_RKNS_11TestDetailsE
     /tmp/ccidAgPS.s:1411   .text:0000000000000902 _ZN12_GLOBAL__N_168XmlTestReporterFixtureOutputIsCachedUntilReportSummaryIsCalledHelper7RunImplEv
     /tmp/ccidAgPS.s:6389   .text._ZN8UnitTest5CheckIbEEbT_:0000000000000000 _ZN8UnitTest5CheckIbEEbT_
     /tmp/ccidAgPS.s:1730   .text:0000000000000b92 _ZN12_GLOBAL__N_152XmlTestReporterFixtureEmptyReportSummaryFormatHelperC2ERKN8UnitTest11TestDetailsE
     /tmp/ccidAgPS.s:1730   .text:0000000000000b92 _ZN12_GLOBAL__N_152XmlTestReporterFixtureEmptyReportSummaryFormatHelperC1ERKN8UnitTest11TestDetailsE
     /tmp/ccidAgPS.s:1764   .text:0000000000000bc0 _ZN12_GLOBAL__N_150TestXmlTestReporterFixtureEmptyReportSummaryFormatC2Ev
     /tmp/ccidAgPS.s:8878   .rodata:0000000000000ac0 _ZTVN12_GLOBAL__N_150TestXmlTestReporterFixtureEmptyReportSummaryFormatE
     /tmp/ccidAgPS.s:1764   .text:0000000000000bc0 _ZN12_GLOBAL__N_150TestXmlTestReporterFixtureEmptyReportSummaryFormatC1Ev
     /tmp/ccidAgPS.s:1796   .bss:0000000000000080 _ZN12_GLOBAL__N_158testXmlTestReporterFixtureEmptyReportSummaryFormatInstanceE
     /tmp/ccidAgPS.s:1796   .bss:00000000000000b8 _ZN12_GLOBAL__N_151adderXmlTestReporterFixtureEmptyReportSummaryFormatE
     /tmp/ccidAgPS.s:1801   .text:0000000000000bfe _ZN12_GLOBAL__N_152XmlTestReporterFixtureEmptyReportSummaryFormatHelperD2Ev
     /tmp/ccidAgPS.s:1801   .text:0000000000000bfe _ZN12_GLOBAL__N_152XmlTestReporterFixtureEmptyReportSummaryFormatHelperD1Ev
     /tmp/ccidAgPS.s:1827   .text:0000000000000c18 _ZNK12_GLOBAL__N_150TestXmlTestReporterFixtureEmptyReportSummaryFormat7RunImplEv
     /tmp/ccidAgPS.s:6411   .text:0000000000002e56 _ZN8UnitTest11ExecuteTestIN12_GLOBAL__N_152XmlTestReporterFixtureEmptyReportSummaryFormatHelperEEEvRT_RKNS_11TestDetailsE
     /tmp/ccidAgPS.s:2169   .text:0000000000000efa _ZN12_GLOBAL__N_152XmlTestReporterFixtureEmptyReportSummaryFormatHelper7RunImplEv
     /tmp/ccidAgPS.s:2336   .text:0000000000001006 _ZN12_GLOBAL__N_167XmlTestReporterFixtureSingleSuccessfulTestReportSummaryFormatHelperC2ERKN8UnitTest11TestDetailsE
     /tmp/ccidAgPS.s:2336   .text:0000000000001006 _ZN12_GLOBAL__N_167XmlTestReporterFixtureSingleSuccessfulTestReportSummaryFormatHelperC1ERKN8UnitTest11TestDetailsE
     /tmp/ccidAgPS.s:2371   .text:0000000000001034 _ZN12_GLOBAL__N_165TestXmlTestReporterFixtureSingleSuccessfulTestReportSummaryFormatC2Ev
     /tmp/ccidAgPS.s:8804   .rodata:0000000000000a80 _ZTVN12_GLOBAL__N_165TestXmlTestReporterFixtureSingleSuccessfulTestReportSummaryFormatE
     /tmp/ccidAgPS.s:2371   .text:0000000000001034 _ZN12_GLOBAL__N_165TestXmlTestReporterFixtureSingleSuccessfulTestReportSummaryFormatC1Ev
     /tmp/ccidAgPS.s:2403   .bss:00000000000000c0 _ZN12_GLOBAL__N_173testXmlTestReporterFixtureSingleSuccessfulTestReportSummaryFormatInstanceE
     /tmp/ccidAgPS.s:2403   .bss:00000000000000f8 _ZN12_GLOBAL__N_166adderXmlTestReporterFixtureSingleSuccessfulTestReportSummaryFormatE
     /tmp/ccidAgPS.s:2408   .text:0000000000001072 _ZN12_GLOBAL__N_167XmlTestReporterFixtureSingleSuccessfulTestReportSummaryFormatHelperD2Ev
     /tmp/ccidAgPS.s:2408   .text:0000000000001072 _ZN12_GLOBAL__N_167XmlTestReporterFixtureSingleSuccessfulTestReportSummaryFormatHelperD1Ev
     /tmp/ccidAgPS.s:2434   .text:000000000000108c _ZNK12_GLOBAL__N_165TestXmlTestReporterFixtureSingleSuccessfulTestReportSummaryFormat7RunImplEv
     /tmp/ccidAgPS.s:6755   .text:00000000000030ee _ZN8UnitTest11ExecuteTestIN12_GLOBAL__N_167XmlTestReporterFixtureSingleSuccessfulTestReportSummaryFormatHelperEEEvRT_RKNS_11TestDetailsE
     /tmp/ccidAgPS.s:2776   .text:000000000000136e _ZN12_GLOBAL__N_167XmlTestReporterFixtureSingleSuccessfulTestReportSummaryFormatHelper7RunImplEv
     /tmp/ccidAgPS.s:2958   .text:00000000000014b4 _ZN12_GLOBAL__N_163XmlTestReporterFixtureSingleFailedTestReportSummaryFormatHelperC2ERKN8UnitTest11TestDetailsE
     /tmp/ccidAgPS.s:2958   .text:00000000000014b4 _ZN12_GLOBAL__N_163XmlTestReporterFixtureSingleFailedTestReportSummaryFormatHelperC1ERKN8UnitTest11TestDetailsE
     /tmp/ccidAgPS.s:2993   .text:00000000000014e2 _ZN12_GLOBAL__N_161TestXmlTestReporterFixtureSingleFailedTestReportSummaryFormatC2Ev
     /tmp/ccidAgPS.s:8730   .rodata:0000000000000a40 _ZTVN12_GLOBAL__N_161TestXmlTestReporterFixtureSingleFailedTestReportSummaryFormatE
     /tmp/ccidAgPS.s:2993   .text:00000000000014e2 _ZN12_GLOBAL__N_161TestXmlTestReporterFixtureSingleFailedTestReportSummaryFormatC1Ev
     /tmp/ccidAgPS.s:3025   .bss:0000000000000100 _ZN12_GLOBAL__N_169testXmlTestReporterFixtureSingleFailedTestReportSummaryFormatInstanceE
     /tmp/ccidAgPS.s:3025   .bss:0000000000000138 _ZN12_GLOBAL__N_162adderXmlTestReporterFixtureSingleFailedTestReportSummaryFormatE
     /tmp/ccidAgPS.s:3030   .text:0000000000001520 _ZN12_GLOBAL__N_163XmlTestReporterFixtureSingleFailedTestReportSummaryFormatHelperD2Ev
     /tmp/ccidAgPS.s:3030   .text:0000000000001520 _ZN12_GLOBAL__N_163XmlTestReporterFixtureSingleFailedTestReportSummaryFormatHelperD1Ev
     /tmp/ccidAgPS.s:3056   .text:000000000000153a _ZNK12_GLOBAL__N_161TestXmlTestReporterFixtureSingleFailedTestReportSummaryFormat7RunImplEv
     /tmp/ccidAgPS.s:7099   .text:0000000000003386 _ZN8UnitTest11ExecuteTestIN12_GLOBAL__N_163XmlTestReporterFixtureSingleFailedTestReportSummaryFormatHelperEEEvRT_RKNS_11TestDetailsE
     /tmp/ccidAgPS.s:3404   .text:000000000000181c _ZN12_GLOBAL__N_163XmlTestReporterFixtureSingleFailedTestReportSummaryFormatHelper7RunImplEv
     /tmp/ccidAgPS.s:3594   .text:0000000000001982 _ZN12_GLOBAL__N_154XmlTestReporterFixtureFailureMessageIsXMLEscapedHelperC2ERKN8UnitTest11TestDetailsE
     /tmp/ccidAgPS.s:3594   .text:0000000000001982 _ZN12_GLOBAL__N_154XmlTestReporterFixtureFailureMessageIsXMLEscapedHelperC1ERKN8UnitTest11TestDetailsE
     /tmp/ccidAgPS.s:3628   .text:00000000000019b0 _ZN12_GLOBAL__N_152TestXmlTestReporterFixtureFailureMessageIsXMLEscapedC2Ev
     /tmp/ccidAgPS.s:8656   .rodata:0000000000000a00 _ZTVN12_GLOBAL__N_152TestXmlTestReporterFixtureFailureMessageIsXMLEscapedE
     /tmp/ccidAgPS.s:3628   .text:00000000000019b0 _ZN12_GLOBAL__N_152TestXmlTestReporterFixtureFailureMessageIsXMLEscapedC1Ev
     /tmp/ccidAgPS.s:3660   .bss:0000000000000140 _ZN12_GLOBAL__N_160testXmlTestReporterFixtureFailureMessageIsXMLEscapedInstanceE
     /tmp/ccidAgPS.s:3660   .bss:0000000000000178 _ZN12_GLOBAL__N_153adderXmlTestReporterFixtureFailureMessageIsXMLEscapedE
     /tmp/ccidAgPS.s:3665   .text:00000000000019ee _ZN12_GLOBAL__N_154XmlTestReporterFixtureFailureMessageIsXMLEscapedHelperD2Ev
     /tmp/ccidAgPS.s:3665   .text:00000000000019ee _ZN12_GLOBAL__N_154XmlTestReporterFixtureFailureMessageIsXMLEscapedHelperD1Ev
     /tmp/ccidAgPS.s:3691   .text:0000000000001a08 _ZNK12_GLOBAL__N_152TestXmlTestReporterFixtureFailureMessageIsXMLEscaped7RunImplEv
     /tmp/ccidAgPS.s:7443   .text:000000000000361e _ZN8UnitTest11ExecuteTestIN12_GLOBAL__N_154XmlTestReporterFixtureFailureMessageIsXMLEscapedHelperEEEvRT_RKNS_11TestDetailsE
     /tmp/ccidAgPS.s:4035   .text:0000000000001cea _ZN12_GLOBAL__N_154XmlTestReporterFixtureFailureMessageIsXMLEscapedHelper7RunImplEv
     /tmp/ccidAgPS.s:4233   .text:0000000000001e72 _ZN12_GLOBAL__N_151XmlTestReporterFixtureOneFailureAndOneSuccessHelperC2ERKN8UnitTest11TestDetailsE
     /tmp/ccidAgPS.s:4233   .text:0000000000001e72 _ZN12_GLOBAL__N_151XmlTestReporterFixtureOneFailureAndOneSuccessHelperC1ERKN8UnitTest11TestDetailsE
     /tmp/ccidAgPS.s:4267   .text:0000000000001ea0 _ZN12_GLOBAL__N_149TestXmlTestReporterFixtureOneFailureAndOneSuccessC2Ev
     /tmp/ccidAgPS.s:8582   .rodata:00000000000009c0 _ZTVN12_GLOBAL__N_149TestXmlTestReporterFixtureOneFailureAndOneSuccessE
     /tmp/ccidAgPS.s:4267   .text:0000000000001ea0 _ZN12_GLOBAL__N_149TestXmlTestReporterFixtureOneFailureAndOneSuccessC1Ev
     /tmp/ccidAgPS.s:4299   .bss:0000000000000180 _ZN12_GLOBAL__N_157testXmlTestReporterFixtureOneFailureAndOneSuccessInstanceE
     /tmp/ccidAgPS.s:4299   .bss:00000000000001b8 _ZN12_GLOBAL__N_150adderXmlTestReporterFixtureOneFailureAndOneSuccessE
     /tmp/ccidAgPS.s:4304   .text:0000000000001ede _ZN12_GLOBAL__N_151XmlTestReporterFixtureOneFailureAndOneSuccessHelperD2Ev
     /tmp/ccidAgPS.s:4304   .text:0000000000001ede _ZN12_GLOBAL__N_151XmlTestReporterFixtureOneFailureAndOneSuccessHelperD1Ev
     /tmp/ccidAgPS.s:4330   .text:0000000000001ef8 _ZNK12_GLOBAL__N_149TestXmlTestReporterFixtureOneFailureAndOneSuccess7RunImplEv
     /tmp/ccidAgPS.s:7787   .text:00000000000038b6 _ZN8UnitTest11ExecuteTestIN12_GLOBAL__N_151XmlTestReporterFixtureOneFailureAndOneSuccessHelperEEEvRT_RKNS_11TestDetailsE
     /tmp/ccidAgPS.s:4681   .text:00000000000021da _ZN12_GLOBAL__N_151XmlTestReporterFixtureOneFailureAndOneSuccessHelper7RunImplEv
     /tmp/ccidAgPS.s:4902   .text:00000000000023dc _ZN12_GLOBAL__N_144XmlTestReporterFixtureMultipleFailuresHelperC2ERKN8UnitTest11TestDetailsE
     /tmp/ccidAgPS.s:4902   .text:00000000000023dc _ZN12_GLOBAL__N_144XmlTestReporterFixtureMultipleFailuresHelperC1ERKN8UnitTest11TestDetailsE
     /tmp/ccidAgPS.s:4936   .text:000000000000240a _ZN12_GLOBAL__N_142TestXmlTestReporterFixtureMultipleFailuresC2Ev
     /tmp/ccidAgPS.s:8508   .rodata:0000000000000980 _ZTVN12_GLOBAL__N_142TestXmlTestReporterFixtureMultipleFailuresE
     /tmp/ccidAgPS.s:4936   .text:000000000000240a _ZN12_GLOBAL__N_142TestXmlTestReporterFixtureMultipleFailuresC1Ev
     /tmp/ccidAgPS.s:4968   .bss:00000000000001c0 _ZN12_GLOBAL__N_150testXmlTestReporterFixtureMultipleFailuresInstanceE
     /tmp/ccidAgPS.s:4968   .bss:00000000000001f8 _ZN12_GLOBAL__N_143adderXmlTestReporterFixtureMultipleFailuresE
     /tmp/ccidAgPS.s:4973   .text:0000000000002448 _ZN12_GLOBAL__N_144XmlTestReporterFixtureMultipleFailuresHelperD2Ev
     /tmp/ccidAgPS.s:4973   .text:0000000000002448 _ZN12_GLOBAL__N_144XmlTestReporterFixtureMultipleFailuresHelperD1Ev
     /tmp/ccidAgPS.s:4999   .text:0000000000002462 _ZNK12_GLOBAL__N_142TestXmlTestReporterFixtureMultipleFailures7RunImplEv
     /tmp/ccidAgPS.s:8131   .text:0000000000003b4e _ZN8UnitTest11ExecuteTestIN12_GLOBAL__N_144XmlTestReporterFixtureMultipleFailuresHelperEEEvRT_RKNS_11TestDetailsE
     /tmp/ccidAgPS.s:5344   .text:0000000000002744 _ZN12_GLOBAL__N_144XmlTestReporterFixtureMultipleFailuresHelper7RunImplEv
     /tmp/ccidAgPS.s:8477   .text._ZSteqIcSt11char_traitsIcESaIcEEbPKT_RKSbIS3_T0_T1_E:0000000000000000 _ZSteqIcSt11char_traitsIcESaIcEEbPKT_RKSbIS3_T0_T1_E
     /tmp/ccidAgPS.s:9719   .rodata:0000000000000c50 _ZTIN12_GLOBAL__N_142TestXmlTestReporterFixtureMultipleFailuresE
     /tmp/ccidAgPS.s:8517   .text:0000000000003de6 _ZN12_GLOBAL__N_142TestXmlTestReporterFixtureMultipleFailuresD1Ev
     /tmp/ccidAgPS.s:8554   .text:0000000000003e20 _ZN12_GLOBAL__N_142TestXmlTestReporterFixtureMultipleFailuresD0Ev
     /tmp/ccidAgPS.s:8517   .text:0000000000003de6 _ZN12_GLOBAL__N_142TestXmlTestReporterFixtureMultipleFailuresD2Ev
     /tmp/ccidAgPS.s:9712   .rodata:0000000000000c30 _ZTIN12_GLOBAL__N_149TestXmlTestReporterFixtureOneFailureAndOneSuccessE
     /tmp/ccidAgPS.s:8591   .text:0000000000003e46 _ZN12_GLOBAL__N_149TestXmlTestReporterFixtureOneFailureAndOneSuccessD1Ev
     /tmp/ccidAgPS.s:8628   .text:0000000000003e80 _ZN12_GLOBAL__N_149TestXmlTestReporterFixtureOneFailureAndOneSuccessD0Ev
     /tmp/ccidAgPS.s:8591   .text:0000000000003e46 _ZN12_GLOBAL__N_149TestXmlTestReporterFixtureOneFailureAndOneSuccessD2Ev
     /tmp/ccidAgPS.s:9705   .rodata:0000000000000c10 _ZTIN12_GLOBAL__N_152TestXmlTestReporterFixtureFailureMessageIsXMLEscapedE
     /tmp/ccidAgPS.s:8665   .text:0000000000003ea6 _ZN12_GLOBAL__N_152TestXmlTestReporterFixtureFailureMessageIsXMLEscapedD1Ev
     /tmp/ccidAgPS.s:8702   .text:0000000000003ee0 _ZN12_GLOBAL__N_152TestXmlTestReporterFixtureFailureMessageIsXMLEscapedD0Ev
     /tmp/ccidAgPS.s:8665   .text:0000000000003ea6 _ZN12_GLOBAL__N_152TestXmlTestReporterFixtureFailureMessageIsXMLEscapedD2Ev
     /tmp/ccidAgPS.s:9698   .rodata:0000000000000bf0 _ZTIN12_GLOBAL__N_161TestXmlTestReporterFixtureSingleFailedTestReportSummaryFormatE
     /tmp/ccidAgPS.s:8739   .text:0000000000003f06 _ZN12_GLOBAL__N_161TestXmlTestReporterFixtureSingleFailedTestReportSummaryFormatD1Ev
     /tmp/ccidAgPS.s:8776   .text:0000000000003f40 _ZN12_GLOBAL__N_161TestXmlTestReporterFixtureSingleFailedTestReportSummaryFormatD0Ev
     /tmp/ccidAgPS.s:8739   .text:0000000000003f06 _ZN12_GLOBAL__N_161TestXmlTestReporterFixtureSingleFailedTestReportSummaryFormatD2Ev
     /tmp/ccidAgPS.s:9691   .rodata:0000000000000bd0 _ZTIN12_GLOBAL__N_165TestXmlTestReporterFixtureSingleSuccessfulTestReportSummaryFormatE
     /tmp/ccidAgPS.s:8813   .text:0000000000003f66 _ZN12_GLOBAL__N_165TestXmlTestReporterFixtureSingleSuccessfulTestReportSummaryFormatD1Ev
     /tmp/ccidAgPS.s:8850   .text:0000000000003fa0 _ZN12_GLOBAL__N_165TestXmlTestReporterFixtureSingleSuccessfulTestReportSummaryFormatD0Ev
     /tmp/ccidAgPS.s:8813   .text:0000000000003f66 _ZN12_GLOBAL__N_165TestXmlTestReporterFixtureSingleSuccessfulTestReportSummaryFormatD2Ev
     /tmp/ccidAgPS.s:9684   .rodata:0000000000000bb0 _ZTIN12_GLOBAL__N_150TestXmlTestReporterFixtureEmptyReportSummaryFormatE
     /tmp/ccidAgPS.s:8887   .text:0000000000003fc6 _ZN12_GLOBAL__N_150TestXmlTestReporterFixtureEmptyReportSummaryFormatD1Ev
     /tmp/ccidAgPS.s:8924   .text:0000000000004000 _ZN12_GLOBAL__N_150TestXmlTestReporterFixtureEmptyReportSummaryFormatD0Ev
     /tmp/ccidAgPS.s:8887   .text:0000000000003fc6 _ZN12_GLOBAL__N_150TestXmlTestReporterFixtureEmptyReportSummaryFormatD2Ev
     /tmp/ccidAgPS.s:9677   .rodata:0000000000000b90 _ZTIN12_GLOBAL__N_166TestXmlTestReporterFixtureOutputIsCachedUntilReportSummaryIsCalledE
     /tmp/ccidAgPS.s:8961   .text:0000000000004026 _ZN12_GLOBAL__N_166TestXmlTestReporterFixtureOutputIsCachedUntilReportSummaryIsCalledD1Ev
     /tmp/ccidAgPS.s:8998   .text:0000000000004060 _ZN12_GLOBAL__N_166TestXmlTestReporterFixtureOutputIsCachedUntilReportSummaryIsCalledD0Ev
     /tmp/ccidAgPS.s:8961   .text:0000000000004026 _ZN12_GLOBAL__N_166TestXmlTestReporterFixtureOutputIsCachedUntilReportSummaryIsCalledD2Ev
     /tmp/ccidAgPS.s:9670   .rodata:0000000000000b70 _ZTIN12_GLOBAL__N_154TestXmlTestReporterFixtureMultipleCharactersAreEscapedE
     /tmp/ccidAgPS.s:9035   .text:0000000000004086 _ZN12_GLOBAL__N_154TestXmlTestReporterFixtureMultipleCharactersAreEscapedD1Ev
     /tmp/ccidAgPS.s:9072   .text:00000000000040c0 _ZN12_GLOBAL__N_154TestXmlTestReporterFixtureMultipleCharactersAreEscapedD0Ev
     /tmp/ccidAgPS.s:9035   .text:0000000000004086 _ZN12_GLOBAL__N_154TestXmlTestReporterFixtureMultipleCharactersAreEscapedD2Ev
     /tmp/ccidAgPS.s:9352   .rodata._ZTIN8UnitTest15MemoryOutStreamE:0000000000000000 _ZTIN8UnitTest15MemoryOutStreamE
     /tmp/ccidAgPS.s:9257   .text._ZN8UnitTest15MemoryOutStreamD0Ev:0000000000000000 _ZN8UnitTest15MemoryOutStreamD0Ev
     /tmp/ccidAgPS.s:9243   .text._ZN8UnitTest15MemoryOutStreamD1Ev:00000000000000c8 _ZTv0_n24_N8UnitTest15MemoryOutStreamD1Ev
     /tmp/ccidAgPS.s:9284   .text._ZN8UnitTest15MemoryOutStreamD0Ev:0000000000000026 _ZTv0_n24_N8UnitTest15MemoryOutStreamD0Ev
     /tmp/ccidAgPS.s:9312   .rodata._ZTCN8UnitTest15MemoryOutStreamE0_St19basic_ostringstreamIcSt11char_traitsIcESaIcEE:0000000000000000 _ZTCN8UnitTest15MemoryOutStreamE0_St19basic_ostringstreamIcSt11char_traitsIcESaIcEE
     /tmp/ccidAgPS.s:9329   .rodata._ZTCN8UnitTest15MemoryOutStreamE0_So:0000000000000000 _ZTCN8UnitTest15MemoryOutStreamE0_So
     /tmp/ccidAgPS.s:9345   .rodata._ZTSN8UnitTest15MemoryOutStreamE:0000000000000000 _ZTSN8UnitTest15MemoryOutStreamE
     /tmp/ccidAgPS.s:9358   .text:00000000000040e6 _Z41__static_initialization_and_destruction_0ii
     /tmp/ccidAgPS.s:9484   .text._ZN8UnitTest20DeferredTestReporterD2Ev:0000000000000000 _ZN8UnitTest20DeferredTestReporterD2Ev
     /tmp/ccidAgPS.s:9767   .text._ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EED2Ev:0000000000000000 _ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EED1Ev
     /tmp/ccidAgPS.s:9484   .text._ZN8UnitTest20DeferredTestReporterD2Ev:0000000000000000 _ZN8UnitTest20DeferredTestReporterD1Ev
     /tmp/ccidAgPS.s:9573   .text._ZN8UnitTest20DeferredTestReporterD0Ev:0000000000000000 _ZN8UnitTest20DeferredTestReporterD0Ev
     /tmp/ccidAgPS.s:9601   .text._ZN8UnitTest15XmlTestReporterD2Ev:0000000000000000 _ZN8UnitTest15XmlTestReporterD2Ev
     /tmp/ccidAgPS.s:9642   .text._ZN8UnitTest15XmlTestReporterD0Ev:0000000000000000 _ZN8UnitTest15XmlTestReporterD0Ev
     /tmp/ccidAgPS.s:9761   .rodata:0000000000000f00 _ZTSN12_GLOBAL__N_154TestXmlTestReporterFixtureMultipleCharactersAreEscapedE
     /tmp/ccidAgPS.s:9756   .rodata:0000000000000ea0 _ZTSN12_GLOBAL__N_166TestXmlTestReporterFixtureOutputIsCachedUntilReportSummaryIsCalledE
     /tmp/ccidAgPS.s:9751   .rodata:0000000000000e40 _ZTSN12_GLOBAL__N_150TestXmlTestReporterFixtureEmptyReportSummaryFormatE
     /tmp/ccidAgPS.s:9746   .rodata:0000000000000de0 _ZTSN12_GLOBAL__N_165TestXmlTestReporterFixtureSingleSuccessfulTestReportSummaryFormatE
     /tmp/ccidAgPS.s:9741   .rodata:0000000000000d80 _ZTSN12_GLOBAL__N_161TestXmlTestReporterFixtureSingleFailedTestReportSummaryFormatE
     /tmp/ccidAgPS.s:9736   .rodata:0000000000000d20 _ZTSN12_GLOBAL__N_152TestXmlTestReporterFixtureFailureMessageIsXMLEscapedE
     /tmp/ccidAgPS.s:9731   .rodata:0000000000000cc0 _ZTSN12_GLOBAL__N_149TestXmlTestReporterFixtureOneFailureAndOneSuccessE
     /tmp/ccidAgPS.s:9726   .rodata:0000000000000c80 _ZTSN12_GLOBAL__N_142TestXmlTestReporterFixtureMultipleFailuresE
     /tmp/ccidAgPS.s:9767   .text._ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EED2Ev:0000000000000000 _ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EED2Ev
     /tmp/ccidAgPS.s:9968   .text._ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE19_M_get_Tp_allocatorEv:0000000000000000 _ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE19_M_get_Tp_allocatorEv
     /tmp/ccidAgPS.s:9989   .text._ZSt8_DestroyIPN8UnitTest18DeferredTestResultES1_EvT_S3_RSaIT0_E:0000000000000000 _ZSt8_DestroyIPN8UnitTest18DeferredTestResultES1_EvT_S3_RSaIT0_E
     /tmp/ccidAgPS.s:9882   .text._ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EED2Ev:0000000000000000 _ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EED2Ev
     /tmp/ccidAgPS.s:9853   .text._ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE12_Vector_implD2Ev:0000000000000000 _ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE12_Vector_implD2Ev
     /tmp/ccidAgPS.s:10020  .text._ZNSaIN8UnitTest18DeferredTestResultEED2Ev:0000000000000000 _ZNSaIN8UnitTest18DeferredTestResultEED2Ev
     /tmp/ccidAgPS.s:9853   .text._ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE12_Vector_implD2Ev:0000000000000000 _ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE12_Vector_implD1Ev
     /tmp/ccidAgPS.s:10050  .text._ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE13_M_deallocateEPS1_m:0000000000000000 _ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE13_M_deallocateEPS1_m
     /tmp/ccidAgPS.s:9882   .text._ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EED2Ev:0000000000000000 _ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EED1Ev
     /tmp/ccidAgPS.s:10084  .text._ZSt8_DestroyIPN8UnitTest18DeferredTestResultEEvT_S3_:0000000000000000 _ZSt8_DestroyIPN8UnitTest18DeferredTestResultEEvT_S3_
     /tmp/ccidAgPS.s:10115  .text._ZN9__gnu_cxx13new_allocatorIN8UnitTest18DeferredTestResultEED2Ev:0000000000000000 _ZN9__gnu_cxx13new_allocatorIN8UnitTest18DeferredTestResultEED2Ev
     /tmp/ccidAgPS.s:10020  .text._ZNSaIN8UnitTest18DeferredTestResultEED2Ev:0000000000000000 _ZNSaIN8UnitTest18DeferredTestResultEED1Ev
     /tmp/ccidAgPS.s:10139  .text._ZN9__gnu_cxx13new_allocatorIN8UnitTest18DeferredTestResultEE10deallocateEPS2_m:0000000000000000 _ZN9__gnu_cxx13new_allocatorIN8UnitTest18DeferredTestResultEE10deallocateEPS2_m
     /tmp/ccidAgPS.s:10165  .text._ZNSt12_Destroy_auxILb0EE9__destroyIPN8UnitTest18DeferredTestResultEEEvT_S5_:0000000000000000 _ZNSt12_Destroy_auxILb0EE9__destroyIPN8UnitTest18DeferredTestResultEEEvT_S5_
     /tmp/ccidAgPS.s:10115  .text._ZN9__gnu_cxx13new_allocatorIN8UnitTest18DeferredTestResultEED2Ev:0000000000000000 _ZN9__gnu_cxx13new_allocatorIN8UnitTest18DeferredTestResultEED1Ev
     /tmp/ccidAgPS.s:10203  .text._ZSt11__addressofIN8UnitTest18DeferredTestResultEEPT_RS2_:0000000000000000 _ZSt11__addressofIN8UnitTest18DeferredTestResultEEPT_RS2_
     /tmp/ccidAgPS.s:10343  .text._ZSt8_DestroyIN8UnitTest18DeferredTestResultEEvPT_:0000000000000000 _ZSt8_DestroyIN8UnitTest18DeferredTestResultEEvPT_
     /tmp/ccidAgPS.s:10227  .text._ZN8UnitTest18DeferredTestResultD2Ev:0000000000000000 _ZN8UnitTest18DeferredTestResultD2Ev
     /tmp/ccidAgPS.s:10368  .text._ZNSt6vectorISt4pairIiSsESaIS1_EED2Ev:0000000000000000 _ZNSt6vectorISt4pairIiSsESaIS1_EED1Ev
     /tmp/ccidAgPS.s:10227  .text._ZN8UnitTest18DeferredTestResultD2Ev:0000000000000000 _ZN8UnitTest18DeferredTestResultD1Ev
     /tmp/ccidAgPS.s:10368  .text._ZNSt6vectorISt4pairIiSsESaIS1_EED2Ev:0000000000000000 _ZNSt6vectorISt4pairIiSsESaIS1_EED2Ev
     /tmp/ccidAgPS.s:10565  .text._ZNSt12_Vector_baseISt4pairIiSsESaIS1_EE19_M_get_Tp_allocatorEv:0000000000000000 _ZNSt12_Vector_baseISt4pairIiSsESaIS1_EE19_M_get_Tp_allocatorEv
     /tmp/ccidAgPS.s:10586  .text._ZSt8_DestroyIPSt4pairIiSsES1_EvT_S3_RSaIT0_E:0000000000000000 _ZSt8_DestroyIPSt4pairIiSsES1_EvT_S3_RSaIT0_E
     /tmp/ccidAgPS.s:10482  .text._ZNSt12_Vector_baseISt4pairIiSsESaIS1_EED2Ev:0000000000000000 _ZNSt12_Vector_baseISt4pairIiSsESaIS1_EED2Ev
     /tmp/ccidAgPS.s:10453  .text._ZNSt12_Vector_baseISt4pairIiSsESaIS1_EE12_Vector_implD2Ev:0000000000000000 _ZNSt12_Vector_baseISt4pairIiSsESaIS1_EE12_Vector_implD2Ev
     /tmp/ccidAgPS.s:10616  .text._ZNSaISt4pairIiSsEED2Ev:0000000000000000 _ZNSaISt4pairIiSsEED2Ev
     /tmp/ccidAgPS.s:10453  .text._ZNSt12_Vector_baseISt4pairIiSsESaIS1_EE12_Vector_implD2Ev:0000000000000000 _ZNSt12_Vector_baseISt4pairIiSsESaIS1_EE12_Vector_implD1Ev
     /tmp/ccidAgPS.s:10645  .text._ZNSt12_Vector_baseISt4pairIiSsESaIS1_EE13_M_deallocateEPS1_m:0000000000000000 _ZNSt12_Vector_baseISt4pairIiSsESaIS1_EE13_M_deallocateEPS1_m
     /tmp/ccidAgPS.s:10482  .text._ZNSt12_Vector_baseISt4pairIiSsESaIS1_EED2Ev:0000000000000000 _ZNSt12_Vector_baseISt4pairIiSsESaIS1_EED1Ev
     /tmp/ccidAgPS.s:10679  .text._ZSt8_DestroyIPSt4pairIiSsEEvT_S3_:0000000000000000 _ZSt8_DestroyIPSt4pairIiSsEEvT_S3_
     /tmp/ccidAgPS.s:10710  .text._ZN9__gnu_cxx13new_allocatorISt4pairIiSsEED2Ev:0000000000000000 _ZN9__gnu_cxx13new_allocatorISt4pairIiSsEED2Ev
     /tmp/ccidAgPS.s:10616  .text._ZNSaISt4pairIiSsEED2Ev:0000000000000000 _ZNSaISt4pairIiSsEED1Ev
     /tmp/ccidAgPS.s:10733  .text._ZN9__gnu_cxx13new_allocatorISt4pairIiSsEE10deallocateEPS2_m:0000000000000000 _ZN9__gnu_cxx13new_allocatorISt4pairIiSsEE10deallocateEPS2_m
     /tmp/ccidAgPS.s:10759  .text._ZNSt12_Destroy_auxILb0EE9__destroyIPSt4pairIiSsEEEvT_S5_:0000000000000000 _ZNSt12_Destroy_auxILb0EE9__destroyIPSt4pairIiSsEEEvT_S5_
     /tmp/ccidAgPS.s:10710  .text._ZN9__gnu_cxx13new_allocatorISt4pairIiSsEED2Ev:0000000000000000 _ZN9__gnu_cxx13new_allocatorISt4pairIiSsEED1Ev
     /tmp/ccidAgPS.s:10797  .text._ZSt11__addressofISt4pairIiSsEEPT_RS2_:0000000000000000 _ZSt11__addressofISt4pairIiSsEEPT_RS2_
     /tmp/ccidAgPS.s:10850  .text._ZSt8_DestroyISt4pairIiSsEEvPT_:0000000000000000 _ZSt8_DestroyISt4pairIiSsEEvPT_
     /tmp/ccidAgPS.s:10820  .text._ZNSt4pairIiSsED2Ev:0000000000000000 _ZNSt4pairIiSsED2Ev
     /tmp/ccidAgPS.s:10820  .text._ZNSt4pairIiSsED2Ev:0000000000000000 _ZNSt4pairIiSsED1Ev
     /tmp/ccidAgPS.s:10873  .text:00000000000042b5 _GLOBAL__sub_I_TestXmlTestReporter.cpp
     /tmp/ccidAgPS.s:10899  .rodata:0000000000000f50 _ZZL18__gthread_active_pvE20__gthread_active_ptr
                           .group:0000000000000000 _ZN8UnitTest20DeferredTestReporterD5Ev
                           .group:0000000000000000 _ZN8UnitTest15XmlTestReporterD5Ev
                           .group:0000000000000000 _ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EED5Ev
                           .group:0000000000000000 _ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE12_Vector_implD5Ev
                           .group:0000000000000000 _ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EED5Ev
                           .group:0000000000000000 _ZNSaIN8UnitTest18DeferredTestResultEED5Ev
                           .group:0000000000000000 _ZN9__gnu_cxx13new_allocatorIN8UnitTest18DeferredTestResultEED5Ev
                           .group:0000000000000000 _ZN8UnitTest18DeferredTestResultD5Ev
                           .group:0000000000000000 _ZNSt6vectorISt4pairIiSsESaIS1_EED5Ev
                           .group:0000000000000000 _ZNSt12_Vector_baseISt4pairIiSsESaIS1_EE12_Vector_implD5Ev
                           .group:0000000000000000 _ZNSt12_Vector_baseISt4pairIiSsESaIS1_EED5Ev
                           .group:0000000000000000 _ZNSaISt4pairIiSsEED5Ev
                           .group:0000000000000000 _ZN9__gnu_cxx13new_allocatorISt4pairIiSsEED5Ev
                           .group:0000000000000000 _ZNSt4pairIiSsED5Ev

UNDEFINED SYMBOLS
__gxx_personality_v0
_ZNSt9basic_iosIcSt11char_traitsIcEEC2Ev
_ZNSt19basic_ostringstreamIcSt11char_traitsIcESaIcEEC2ESt13_Ios_Openmode
_ZNSsC1Ev
_ZNSt19basic_ostringstreamIcSt11char_traitsIcESaIcEED2Ev
_ZNSt9basic_iosIcSt11char_traitsIcEED2Ev
_Unwind_Resume
_ZNSt19basic_ostringstreamIcSt11char_traitsIcESaIcEEC1ESt13_Ios_Openmode
_ZN8UnitTest15XmlTestReporterC1ERSo
_ZNSt19basic_ostringstreamIcSt11char_traitsIcESaIcEED1Ev
_ZN8UnitTest4TestC2EPKcS2_S2_i
__cxa_end_catch
__cxa_begin_catch
_ZNK8UnitTest15AssertException10LineNumberEv
_ZNK8UnitTest15AssertException8FilenameEv
_ZN8UnitTest11TestDetailsC1EPKcS2_S2_i
_ZN8UnitTest11CurrentTest7ResultsEv
_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
_ZNK8UnitTest15MemoryOutStream7GetTextEv
_ZN8UnitTest11TestDetailsC1ERKS0_i
_ZTISt9exception
_ZTIN8UnitTest15AssertExceptionE
_ZN8UnitTest20DeferredTestReporter15ReportTestStartERKNS_11TestDetailsE
_ZN8UnitTest20DeferredTestReporter13ReportFailureERKNS_11TestDetailsEPKc
_ZN8UnitTest20DeferredTestReporter16ReportTestFinishERKNS_11TestDetailsEf
_ZN8UnitTest15XmlTestReporter13ReportSummaryEiiif
_ZN8UnitTest11CurrentTest7DetailsEv
_ZNKSt19basic_ostringstreamIcSt11char_traitsIcESaIcEE3strEv
_ZNSsD1Ev
_ZNKSs5emptyEv
_ZN8UnitTest16SignalTranslatorC1Ev
_ZN8UnitTest16SignalTranslator12s_jumpTargetE
__sigsetjmp
__cxa_allocate_exception
_ZTIPKc
__cxa_throw
_ZN8UnitTest16SignalTranslatorD1Ev
_ZStlsIcSt11char_traitsIcESaIcEERSt13basic_ostreamIT_T0_ES7_RKSbIS4_S5_T1_E
_ZNKSs7compareEPKc
_ZN8UnitTest4TestD2Ev
_ZdlPv
_ZTISt19basic_ostringstreamIcSt11char_traitsIcESaIcEE
_ZNSt19basic_ostringstreamIcSt11char_traitsIcESaIcEED0Ev
_ZTv0_n24_NSt19basic_ostringstreamIcSt11char_traitsIcESaIcEED1Ev
_ZTv0_n24_NSt19basic_ostringstreamIcSt11char_traitsIcESaIcEED0Ev
_ZTISo
_ZNSoD1Ev
_ZNSoD0Ev
_ZTv0_n24_NSoD1Ev
_ZTv0_n24_NSoD0Ev
_ZTVN10__cxxabiv120__si_class_type_infoE
__dso_handle
__cxa_atexit
_ZN8UnitTest4Test11GetTestListEv
_ZN8UnitTest9ListAdderC1ERNS_8TestListEPNS_4TestE
_ZTVN8UnitTest20DeferredTestReporterE
_ZN8UnitTest12TestReporterD2Ev
_ZTVN8UnitTest15XmlTestReporterE
_ZTIN8UnitTest4TestE
__pthread_key_create
