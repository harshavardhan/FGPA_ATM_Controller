   1              		.file	"TestDeferredTestReporter.cpp"
   2              		.text
   3              	.Ltext0:
   4              		.section	.rodata
   5              	.LC0:
   6 0000 44656661 		.string	"DefaultSuite"
   6      756C7453 
   6      75697465 
   6      00
   7              		.section	.text._ZN13UnitTestSuite12GetSuiteNameEv,"axG",@progbits,_ZN13UnitTestSuite12GetSuiteName
   8              		.weak	_ZN13UnitTestSuite12GetSuiteNameEv
  10              	_ZN13UnitTestSuite12GetSuiteNameEv:
  11              	.LFB0:
  12              		.file 1 "../TestSuite.h"
   1:../TestSuite.h **** #ifndef UNITTEST_TESTSUITE_H
   2:../TestSuite.h **** #define UNITTEST_TESTSUITE_H
   3:../TestSuite.h **** 
   4:../TestSuite.h **** namespace UnitTestSuite {
   5:../TestSuite.h **** 
   6:../TestSuite.h ****     inline char const* GetSuiteName ()
   7:../TestSuite.h ****     {
  13              		.loc 1 7 0
  14              		.cfi_startproc
  15 0000 55       		pushq	%rbp
  16              		.cfi_def_cfa_offset 16
  17              		.cfi_offset 6, -16
  18 0001 4889E5   		movq	%rsp, %rbp
  19              		.cfi_def_cfa_register 6
   8:../TestSuite.h ****         return "DefaultSuite";
  20              		.loc 1 8 0
  21 0004 B8000000 		movl	$.LC0, %eax
  21      00
   9:../TestSuite.h ****     }
  22              		.loc 1 9 0
  23 0009 5D       		popq	%rbp
  24              		.cfi_def_cfa 7, 8
  25 000a C3       		ret
  26              		.cfi_endproc
  27              	.LFE0:
  29              		.section	.text._ZN8UnitTest15MemoryOutStreamC1Ev,"axG",@progbits,_ZN8UnitTest15MemoryOutStreamC1Ev
  30              		.align 2
  31              		.weak	_ZN8UnitTest15MemoryOutStreamC1Ev
  33              	_ZN8UnitTest15MemoryOutStreamC1Ev:
  34              	.LFB1007:
  35              		.file 2 "../MemoryOutStream.h"
   1:../MemoryOutStream.h **** #ifndef UNITTEST_MEMORYOUTSTREAM_H
   2:../MemoryOutStream.h **** #define UNITTEST_MEMORYOUTSTREAM_H
   3:../MemoryOutStream.h **** 
   4:../MemoryOutStream.h **** #include "Config.h"
   5:../MemoryOutStream.h **** 
   6:../MemoryOutStream.h **** #ifndef UNITTEST_USE_CUSTOM_STREAMS
   7:../MemoryOutStream.h **** 
   8:../MemoryOutStream.h **** #include <sstream>
   9:../MemoryOutStream.h **** 
  10:../MemoryOutStream.h **** namespace UnitTest
  11:../MemoryOutStream.h **** {
  12:../MemoryOutStream.h **** 
  13:../MemoryOutStream.h **** class MemoryOutStream : public std::ostringstream
  14:../MemoryOutStream.h **** {
  15:../MemoryOutStream.h **** public:
  16:../MemoryOutStream.h ****     MemoryOutStream() {}
  36              		.loc 2 16 0
  37              		.cfi_startproc
  38              		.cfi_personality 0x3,__gxx_personality_v0
  39              		.cfi_lsda 0x3,.LLSDA1007
  40 0000 55       		pushq	%rbp
  41              		.cfi_def_cfa_offset 16
  42              		.cfi_offset 6, -16
  43 0001 4889E5   		movq	%rsp, %rbp
  44              		.cfi_def_cfa_register 6
  45 0004 53       		pushq	%rbx
  46 0005 4883EC18 		subq	$24, %rsp
  47              		.cfi_offset 3, -24
  48 0009 48897DE8 		movq	%rdi, -24(%rbp)
  49              	.LBB2:
  50              		.loc 2 16 0
  51 000d 488B45E8 		movq	-24(%rbp), %rax
  52 0011 4883C060 		addq	$96, %rax
  53 0015 4889C7   		movq	%rax, %rdi
  54              	.LEHB0:
  55 0018 E8000000 		call	_ZNSt9basic_iosIcSt11char_traitsIcEEC2Ev
  55      00
  56              	.LEHE0:
  57 001d B9000000 		movl	$_ZTTN8UnitTest15MemoryOutStreamE+8, %ecx
  57      00
  58 0022 488B45E8 		movq	-24(%rbp), %rax
  59 0026 BA100000 		movl	$16, %edx
  59      00
  60 002b 4889CE   		movq	%rcx, %rsi
  61 002e 4889C7   		movq	%rax, %rdi
  62              	.LEHB1:
  63 0031 E8000000 		call	_ZNSt19basic_ostringstreamIcSt11char_traitsIcESaIcEEC2ESt13_Ios_Openmode
  63      00
  64              	.LEHE1:
  65              		.loc 2 16 0 is_stmt 0 discriminator 6
  66 0036 BA000000 		movl	$_ZTVN8UnitTest15MemoryOutStreamE+24, %edx
  66      00
  67 003b 488B45E8 		movq	-24(%rbp), %rax
  68 003f 488910   		movq	%rdx, (%rax)
  69 0042 BA600000 		movl	$96, %edx
  69      00
  70 0047 488B45E8 		movq	-24(%rbp), %rax
  71 004b 4801C2   		addq	%rax, %rdx
  72 004e B8000000 		movl	$_ZTVN8UnitTest15MemoryOutStreamE+64, %eax
  72      00
  73 0053 488902   		movq	%rax, (%rdx)
  74 0056 488B45E8 		movq	-24(%rbp), %rax
  75 005a 4883C058 		addq	$88, %rax
  76 005e 4889C7   		movq	%rax, %rdi
  77              	.LEHB2:
  78 0061 E8000000 		call	_ZNSsC1Ev
  78      00
  79              	.LEHE2:
  80              	.LBE2:
  81              		.loc 2 16 0
  82 0066 EB37     		jmp	.L8
  83              	.L6:
  84 0068 4889C3   		movq	%rax, %rbx
  85              	.LBB3:
  86 006b BA000000 		movl	$_ZTTN8UnitTest15MemoryOutStreamE+8, %edx
  86      00
  87 0070 488B45E8 		movq	-24(%rbp), %rax
  88 0074 4889D6   		movq	%rdx, %rsi
  89 0077 4889C7   		movq	%rax, %rdi
  90 007a E8000000 		call	_ZNSt19basic_ostringstreamIcSt11char_traitsIcESaIcEED2Ev
  90      00
  91 007f EB03     		jmp	.L5
  92              	.L7:
  93 0081 4889C3   		movq	%rax, %rbx
  94              	.L5:
  95              		.loc 2 16 0 discriminator 19
  96 0084 488B45E8 		movq	-24(%rbp), %rax
  97 0088 4883C060 		addq	$96, %rax
  98 008c 4889C7   		movq	%rax, %rdi
  99 008f E8000000 		call	_ZNSt9basic_iosIcSt11char_traitsIcEED2Ev
  99      00
 100 0094 4889D8   		movq	%rbx, %rax
 101 0097 4889C7   		movq	%rax, %rdi
 102              	.LEHB3:
 103 009a E8000000 		call	_Unwind_Resume
 103      00
 104              	.LEHE3:
 105              	.L8:
 106              	.LBE3:
 107              		.loc 2 16 0
 108 009f 4883C418 		addq	$24, %rsp
 109 00a3 5B       		popq	%rbx
 110 00a4 5D       		popq	%rbp
 111              		.cfi_def_cfa 7, 8
 112 00a5 C3       		ret
 113              		.cfi_endproc
 114              	.LFE1007:
 115              		.globl	__gxx_personality_v0
 116              		.section	.gcc_except_table._ZN8UnitTest15MemoryOutStreamC1Ev,"aG",@progbits,_ZN8UnitTest15MemoryOu
 117              	.LLSDA1007:
 118 0000 FF       		.byte	0xff
 119 0001 FF       		.byte	0xff
 120 0002 01       		.byte	0x1
 121 0003 12       		.uleb128 .LLSDACSE1007-.LLSDACSB1007
 122              	.LLSDACSB1007:
 123 0004 18       		.uleb128 .LEHB0-.LFB1007
 124 0005 05       		.uleb128 .LEHE0-.LEHB0
 125 0006 00       		.uleb128 0
 126 0007 00       		.uleb128 0
 127 0008 31       		.uleb128 .LEHB1-.LFB1007
 128 0009 05       		.uleb128 .LEHE1-.LEHB1
 129 000a 8101     		.uleb128 .L7-.LFB1007
 130 000c 00       		.uleb128 0
 131 000d 61       		.uleb128 .LEHB2-.LFB1007
 132 000e 05       		.uleb128 .LEHE2-.LEHB2
 133 000f 68       		.uleb128 .L6-.LFB1007
 134 0010 00       		.uleb128 0
 135 0011 9A01     		.uleb128 .LEHB3-.LFB1007
 136 0013 05       		.uleb128 .LEHE3-.LEHB3
 137 0014 00       		.uleb128 0
 138 0015 00       		.uleb128 0
 139              	.LLSDACSE1007:
 140              		.section	.text._ZN8UnitTest15MemoryOutStreamC1Ev,"axG",@progbits,_ZN8UnitTest15MemoryOutStreamC1Ev
 142              		.text
 143              		.align 2
 145              	_ZN8UnitTest12_GLOBAL__N_124MockDeferredTestReporter13ReportSummaryEiiif:
 146              	.LFB1280:
 147              		.file 3 "TestDeferredTestReporter.cpp"
   1:TestDeferredTestReporter.cpp **** #include "../UnitTest++.h"
   2:TestDeferredTestReporter.cpp **** #include "../DeferredTestReporter.h"
   3:TestDeferredTestReporter.cpp **** #include "../Config.h"
   4:TestDeferredTestReporter.cpp **** #include <cstring>
   5:TestDeferredTestReporter.cpp **** 
   6:TestDeferredTestReporter.cpp **** namespace UnitTest
   7:TestDeferredTestReporter.cpp **** {
   8:TestDeferredTestReporter.cpp **** 
   9:TestDeferredTestReporter.cpp **** namespace 
  10:TestDeferredTestReporter.cpp **** {
  11:TestDeferredTestReporter.cpp **** 
  12:TestDeferredTestReporter.cpp **** #ifdef UNITTEST_USE_CUSTOM_STREAMS
  13:TestDeferredTestReporter.cpp **** 	MemoryOutStream& operator <<(MemoryOutStream& lhs, const std::string& rhs)
  14:TestDeferredTestReporter.cpp **** 	{
  15:TestDeferredTestReporter.cpp **** 		lhs << rhs.c_str();
  16:TestDeferredTestReporter.cpp **** 		return lhs;
  17:TestDeferredTestReporter.cpp **** 	}
  18:TestDeferredTestReporter.cpp **** #endif
  19:TestDeferredTestReporter.cpp **** 
  20:TestDeferredTestReporter.cpp **** struct MockDeferredTestReporter : public DeferredTestReporter
  21:TestDeferredTestReporter.cpp **** {
  22:TestDeferredTestReporter.cpp ****     virtual void ReportSummary(int, int, int, float) 
 148              		.loc 3 22 0 is_stmt 1
 149              		.cfi_startproc
 150 0000 55       		pushq	%rbp
 151              		.cfi_def_cfa_offset 16
 152              		.cfi_offset 6, -16
 153 0001 4889E5   		movq	%rsp, %rbp
 154              		.cfi_def_cfa_register 6
 155 0004 48897DF8 		movq	%rdi, -8(%rbp)
 156 0008 8975F4   		movl	%esi, -12(%rbp)
 157 000b 8955F0   		movl	%edx, -16(%rbp)
 158 000e 894DEC   		movl	%ecx, -20(%rbp)
 159 0011 F30F1145 		movss	%xmm0, -24(%rbp)
 159      E8
  23:TestDeferredTestReporter.cpp ****     {
  24:TestDeferredTestReporter.cpp ****     }
 160              		.loc 3 24 0
 161 0016 5D       		popq	%rbp
 162              		.cfi_def_cfa 7, 8
 163 0017 C3       		ret
 164              		.cfi_endproc
 165              	.LFE1280:
 167              		.section	.text._ZN8UnitTest12TestReporterC2Ev,"axG",@progbits,_ZN8UnitTest12TestReporterC5Ev,comda
 168              		.align 2
 169              		.weak	_ZN8UnitTest12TestReporterC2Ev
 171              	_ZN8UnitTest12TestReporterC2Ev:
 172              	.LFB1285:
 173              		.file 4 "../TestReporter.h"
   1:../TestReporter.h **** #ifndef UNITTEST_TESTREPORTER_H
   2:../TestReporter.h **** #define UNITTEST_TESTREPORTER_H
   3:../TestReporter.h **** 
   4:../TestReporter.h **** namespace UnitTest {
   5:../TestReporter.h **** 
   6:../TestReporter.h **** class TestDetails;
   7:../TestReporter.h **** 
   8:../TestReporter.h **** class TestReporter
 174              		.loc 4 8 0
 175              		.cfi_startproc
 176 0000 55       		pushq	%rbp
 177              		.cfi_def_cfa_offset 16
 178              		.cfi_offset 6, -16
 179 0001 4889E5   		movq	%rsp, %rbp
 180              		.cfi_def_cfa_register 6
 181 0004 48897DF8 		movq	%rdi, -8(%rbp)
 182              	.LBB4:
 183              		.loc 4 8 0
 184 0008 488B45F8 		movq	-8(%rbp), %rax
 185 000c 48C70000 		movq	$_ZTVN8UnitTest12TestReporterE+16, (%rax)
 185      000000
 186              	.LBE4:
 187 0013 5D       		popq	%rbp
 188              		.cfi_def_cfa 7, 8
 189 0014 C3       		ret
 190              		.cfi_endproc
 191              	.LFE1285:
 193              		.weak	_ZN8UnitTest12TestReporterC1Ev
 194              		.set	_ZN8UnitTest12TestReporterC1Ev,_ZN8UnitTest12TestReporterC2Ev
 195              		.section	.text._ZN8UnitTest20DeferredTestReporterC2Ev,"axG",@progbits,_ZN8UnitTest20DeferredTestRe
 196              		.align 2
 197              		.weak	_ZN8UnitTest20DeferredTestReporterC2Ev
 199              	_ZN8UnitTest20DeferredTestReporterC2Ev:
 200              	.LFB1287:
 201              		.file 5 "../DeferredTestReporter.h"
   1:../DeferredTestReporter.h **** #ifndef UNITTEST_DEFERREDTESTREPORTER_H
   2:../DeferredTestReporter.h **** #define UNITTEST_DEFERREDTESTREPORTER_H
   3:../DeferredTestReporter.h **** 
   4:../DeferredTestReporter.h **** #include "TestReporter.h"
   5:../DeferredTestReporter.h **** #include "DeferredTestResult.h"
   6:../DeferredTestReporter.h **** 
   7:../DeferredTestReporter.h **** #include <vector>
   8:../DeferredTestReporter.h **** 
   9:../DeferredTestReporter.h **** namespace UnitTest
  10:../DeferredTestReporter.h **** {
  11:../DeferredTestReporter.h **** 
  12:../DeferredTestReporter.h **** class DeferredTestReporter : public TestReporter
 202              		.loc 5 12 0
 203              		.cfi_startproc
 204              		.cfi_personality 0x3,__gxx_personality_v0
 205              		.cfi_lsda 0x3,.LLSDA1287
 206 0000 55       		pushq	%rbp
 207              		.cfi_def_cfa_offset 16
 208              		.cfi_offset 6, -16
 209 0001 4889E5   		movq	%rsp, %rbp
 210              		.cfi_def_cfa_register 6
 211 0004 53       		pushq	%rbx
 212 0005 4883EC18 		subq	$24, %rsp
 213              		.cfi_offset 3, -24
 214 0009 48897DE8 		movq	%rdi, -24(%rbp)
 215              	.LBB5:
 216              		.loc 5 12 0
 217 000d 488B45E8 		movq	-24(%rbp), %rax
 218 0011 4889C7   		movq	%rax, %rdi
 219 0014 E8000000 		call	_ZN8UnitTest12TestReporterC2Ev
 219      00
 220 0019 488B45E8 		movq	-24(%rbp), %rax
 221 001d 48C70000 		movq	$_ZTVN8UnitTest20DeferredTestReporterE+16, (%rax)
 221      000000
 222 0024 488B45E8 		movq	-24(%rbp), %rax
 223 0028 4883C008 		addq	$8, %rax
 224 002c 4889C7   		movq	%rax, %rdi
 225              	.LEHB4:
 226 002f E8000000 		call	_ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EEC1Ev
 226      00
 227              	.LEHE4:
 228              	.LBE5:
 229 0034 EB1A     		jmp	.L14
 230              	.L13:
 231 0036 4889C3   		movq	%rax, %rbx
 232              	.LBB6:
 233 0039 488B45E8 		movq	-24(%rbp), %rax
 234 003d 4889C7   		movq	%rax, %rdi
 235 0040 E8000000 		call	_ZN8UnitTest12TestReporterD2Ev
 235      00
 236 0045 4889D8   		movq	%rbx, %rax
 237 0048 4889C7   		movq	%rax, %rdi
 238              	.LEHB5:
 239 004b E8000000 		call	_Unwind_Resume
 239      00
 240              	.LEHE5:
 241              	.L14:
 242              	.LBE6:
 243 0050 4883C418 		addq	$24, %rsp
 244 0054 5B       		popq	%rbx
 245 0055 5D       		popq	%rbp
 246              		.cfi_def_cfa 7, 8
 247 0056 C3       		ret
 248              		.cfi_endproc
 249              	.LFE1287:
 250              		.section	.gcc_except_table._ZN8UnitTest20DeferredTestReporterC2Ev,"aG",@progbits,_ZN8UnitTest20Def
 251              	.LLSDA1287:
 252 0000 FF       		.byte	0xff
 253 0001 FF       		.byte	0xff
 254 0002 01       		.byte	0x1
 255 0003 08       		.uleb128 .LLSDACSE1287-.LLSDACSB1287
 256              	.LLSDACSB1287:
 257 0004 2F       		.uleb128 .LEHB4-.LFB1287
 258 0005 05       		.uleb128 .LEHE4-.LEHB4
 259 0006 36       		.uleb128 .L13-.LFB1287
 260 0007 00       		.uleb128 0
 261 0008 4B       		.uleb128 .LEHB5-.LFB1287
 262 0009 05       		.uleb128 .LEHE5-.LEHB5
 263 000a 00       		.uleb128 0
 264 000b 00       		.uleb128 0
 265              	.LLSDACSE1287:
 266              		.section	.text._ZN8UnitTest20DeferredTestReporterC2Ev,"axG",@progbits,_ZN8UnitTest20DeferredTestRe
 268              		.weak	_ZN8UnitTest20DeferredTestReporterC1Ev
 269              		.set	_ZN8UnitTest20DeferredTestReporterC1Ev,_ZN8UnitTest20DeferredTestReporterC2Ev
 270              		.section	.text._ZN8UnitTest20DeferredTestReporterD2Ev,"axG",@progbits,_ZN8UnitTest20DeferredTestRe
 271              		.align 2
 272              		.weak	_ZN8UnitTest20DeferredTestReporterD2Ev
 274              	_ZN8UnitTest20DeferredTestReporterD2Ev:
 275              	.LFB1290:
 276              		.loc 5 12 0
 277              		.cfi_startproc
 278              		.cfi_personality 0x3,__gxx_personality_v0
 279              		.cfi_lsda 0x3,.LLSDA1290
 280 0000 55       		pushq	%rbp
 281              		.cfi_def_cfa_offset 16
 282              		.cfi_offset 6, -16
 283 0001 4889E5   		movq	%rsp, %rbp
 284              		.cfi_def_cfa_register 6
 285 0004 53       		pushq	%rbx
 286 0005 4883EC18 		subq	$24, %rsp
 287              		.cfi_offset 3, -24
 288 0009 48897DE8 		movq	%rdi, -24(%rbp)
 289              	.LBB7:
 290              		.loc 5 12 0
 291 000d 488B45E8 		movq	-24(%rbp), %rax
 292 0011 48C70000 		movq	$_ZTVN8UnitTest20DeferredTestReporterE+16, (%rax)
 292      000000
 293 0018 488B45E8 		movq	-24(%rbp), %rax
 294 001c 4883C008 		addq	$8, %rax
 295 0020 4889C7   		movq	%rax, %rdi
 296              	.LEHB6:
 297 0023 E8000000 		call	_ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EED1Ev
 297      00
 298              	.LEHE6:
 299              		.loc 5 12 0 is_stmt 0 discriminator 1
 300 0028 488B45E8 		movq	-24(%rbp), %rax
 301 002c 4889C7   		movq	%rax, %rdi
 302              	.LEHB7:
 303 002f E8000000 		call	_ZN8UnitTest12TestReporterD2Ev
 303      00
 304              	.LEHE7:
 305              	.LBE7:
 306 0034 B8000000 		movl	$0, %eax
 306      00
 307 0039 85C0     		testl	%eax, %eax
 308 003b 7428     		je	.L20
 309 003d 488B45E8 		movq	-24(%rbp), %rax
 310 0041 4889C7   		movq	%rax, %rdi
 311 0044 E8000000 		call	_ZdlPv
 311      00
 312 0049 EB1A     		jmp	.L20
 313              	.L19:
 314 004b 4889C3   		movq	%rax, %rbx
 315              	.LBB8:
 316              		.loc 5 12 0
 317 004e 488B45E8 		movq	-24(%rbp), %rax
 318 0052 4889C7   		movq	%rax, %rdi
 319 0055 E8000000 		call	_ZN8UnitTest12TestReporterD2Ev
 319      00
 320 005a 4889D8   		movq	%rbx, %rax
 321 005d 4889C7   		movq	%rax, %rdi
 322              	.LEHB8:
 323 0060 E8000000 		call	_Unwind_Resume
 323      00
 324              	.LEHE8:
 325              	.L20:
 326              	.LBE8:
 327 0065 4883C418 		addq	$24, %rsp
 328 0069 5B       		popq	%rbx
 329 006a 5D       		popq	%rbp
 330              		.cfi_def_cfa 7, 8
 331 006b C3       		ret
 332              		.cfi_endproc
 333              	.LFE1290:
 334              		.section	.gcc_except_table._ZN8UnitTest20DeferredTestReporterD2Ev,"aG",@progbits,_ZN8UnitTest20Def
 335              	.LLSDA1290:
 336 0000 FF       		.byte	0xff
 337 0001 FF       		.byte	0xff
 338 0002 01       		.byte	0x1
 339 0003 0C       		.uleb128 .LLSDACSE1290-.LLSDACSB1290
 340              	.LLSDACSB1290:
 341 0004 23       		.uleb128 .LEHB6-.LFB1290
 342 0005 05       		.uleb128 .LEHE6-.LEHB6
 343 0006 4B       		.uleb128 .L19-.LFB1290
 344 0007 00       		.uleb128 0
 345 0008 2F       		.uleb128 .LEHB7-.LFB1290
 346 0009 05       		.uleb128 .LEHE7-.LEHB7
 347 000a 00       		.uleb128 0
 348 000b 00       		.uleb128 0
 349 000c 60       		.uleb128 .LEHB8-.LFB1290
 350 000d 05       		.uleb128 .LEHE8-.LEHB8
 351 000e 00       		.uleb128 0
 352 000f 00       		.uleb128 0
 353              	.LLSDACSE1290:
 354              		.section	.text._ZN8UnitTest20DeferredTestReporterD2Ev,"axG",@progbits,_ZN8UnitTest20DeferredTestRe
 356              		.weak	_ZN8UnitTest20DeferredTestReporterD1Ev
 357              		.set	_ZN8UnitTest20DeferredTestReporterD1Ev,_ZN8UnitTest20DeferredTestReporterD2Ev
 358              		.section	.text._ZN8UnitTest20DeferredTestReporterD0Ev,"axG",@progbits,_ZN8UnitTest20DeferredTestRe
 359              		.align 2
 360              		.weak	_ZN8UnitTest20DeferredTestReporterD0Ev
 362              	_ZN8UnitTest20DeferredTestReporterD0Ev:
 363              	.LFB1292:
 364              		.loc 5 12 0 is_stmt 1
 365              		.cfi_startproc
 366 0000 55       		pushq	%rbp
 367              		.cfi_def_cfa_offset 16
 368              		.cfi_offset 6, -16
 369 0001 4889E5   		movq	%rsp, %rbp
 370              		.cfi_def_cfa_register 6
 371 0004 4883EC10 		subq	$16, %rsp
 372 0008 48897DF8 		movq	%rdi, -8(%rbp)
 373              		.loc 5 12 0
 374 000c 488B45F8 		movq	-8(%rbp), %rax
 375 0010 4889C7   		movq	%rax, %rdi
 376 0013 E8000000 		call	_ZN8UnitTest20DeferredTestReporterD1Ev
 376      00
 377 0018 488B45F8 		movq	-8(%rbp), %rax
 378 001c 4889C7   		movq	%rax, %rdi
 379 001f E8000000 		call	_ZdlPv
 379      00
 380 0024 C9       		leave
 381              		.cfi_def_cfa 7, 8
 382 0025 C3       		ret
 383              		.cfi_endproc
 384              	.LFE1292:
 386              		.text
 387              		.align 2
 389              	_ZN8UnitTest12_GLOBAL__N_124MockDeferredTestReporterC2Ev:
 390              	.LFB1293:
  20:TestDeferredTestReporter.cpp **** {
 391              		.loc 3 20 0
 392              		.cfi_startproc
 393 0018 55       		pushq	%rbp
 394              		.cfi_def_cfa_offset 16
 395              		.cfi_offset 6, -16
 396 0019 4889E5   		movq	%rsp, %rbp
 397              		.cfi_def_cfa_register 6
 398 001c 4883EC10 		subq	$16, %rsp
 399 0020 48897DF8 		movq	%rdi, -8(%rbp)
 400              	.LBB9:
  20:TestDeferredTestReporter.cpp **** {
 401              		.loc 3 20 0
 402 0024 488B45F8 		movq	-8(%rbp), %rax
 403 0028 4889C7   		movq	%rax, %rdi
 404 002b E8000000 		call	_ZN8UnitTest20DeferredTestReporterC2Ev
 404      00
 405 0030 488B45F8 		movq	-8(%rbp), %rax
 406 0034 48C70000 		movq	$_ZTVN8UnitTest12_GLOBAL__N_124MockDeferredTestReporterE+16, (%rax)
 406      000000
 407              	.LBE9:
 408 003b C9       		leave
 409              		.cfi_def_cfa 7, 8
 410 003c C3       		ret
 411              		.cfi_endproc
 412              	.LFE1293:
 414              		.set	_ZN8UnitTest12_GLOBAL__N_124MockDeferredTestReporterC1Ev,_ZN8UnitTest12_GLOBAL__N_124MockDefe
 415              		.section	.rodata
 416              	.LC1:
 417 000d 556E6971 		.string	"UniqueTestName"
 417      75655465 
 417      73744E61 
 417      6D6500
 418              	.LC2:
 419 001c 556E6971 		.string	"UniqueTestSuite"
 419      75655465 
 419      73745375 
 419      69746500 
 420              	.LC3:
 421 002c 66696C65 		.string	"filename.h"
 421      6E616D65 
 421      2E6800
 422              		.text
 423 003d 90       		.align 2
 425              	_ZN8UnitTest12_GLOBAL__N_127DeferredTestReporterFixtureC2Ev:
 426              	.LFB1295:
  25:TestDeferredTestReporter.cpp **** };
  26:TestDeferredTestReporter.cpp **** 
  27:TestDeferredTestReporter.cpp **** struct DeferredTestReporterFixture
  28:TestDeferredTestReporter.cpp **** {
  29:TestDeferredTestReporter.cpp ****     DeferredTestReporterFixture()
 427              		.loc 3 29 0
 428              		.cfi_startproc
 429              		.cfi_personality 0x3,__gxx_personality_v0
 430              		.cfi_lsda 0x3,.LLSDA1295
 431 003e 55       		pushq	%rbp
 432              		.cfi_def_cfa_offset 16
 433              		.cfi_offset 6, -16
 434 003f 4889E5   		movq	%rsp, %rbp
 435              		.cfi_def_cfa_register 6
 436 0042 4155     		pushq	%r13
 437 0044 4154     		pushq	%r12
 438 0046 53       		pushq	%rbx
 439 0047 4883EC28 		subq	$40, %rsp
 440              		.cfi_offset 13, -24
 441              		.cfi_offset 12, -32
 442              		.cfi_offset 3, -40
 443 004b 48897DC8 		movq	%rdi, -56(%rbp)
 444              	.LBB10:
  30:TestDeferredTestReporter.cpp ****         : testName("UniqueTestName")
  31:TestDeferredTestReporter.cpp ****         , testSuite("UniqueTestSuite")
  32:TestDeferredTestReporter.cpp ****         , fileName("filename.h")
  33:TestDeferredTestReporter.cpp ****         , lineNumber(12)
  34:TestDeferredTestReporter.cpp ****         , details(testName.c_str(), testSuite.c_str(), fileName.c_str(), lineNumber)
 445              		.loc 3 34 0
 446 004f 488B45C8 		movq	-56(%rbp), %rax
 447 0053 4889C7   		movq	%rax, %rdi
 448              	.LEHB9:
 449 0056 E8BDFFFF 		call	_ZN8UnitTest12_GLOBAL__N_124MockDeferredTestReporterC1Ev
 449      FF
 450              	.LEHE9:
 451 005b 488D45DF 		leaq	-33(%rbp), %rax
 452 005f 4889C7   		movq	%rax, %rdi
 453 0062 E8000000 		call	_ZNSaIcEC1Ev
 453      00
 454 0067 488B45C8 		movq	-56(%rbp), %rax
 455 006b 488D4820 		leaq	32(%rax), %rcx
 456 006f 488D45DF 		leaq	-33(%rbp), %rax
 457 0073 4889C2   		movq	%rax, %rdx
 458 0076 BE000000 		movl	$.LC1, %esi
 458      00
 459 007b 4889CF   		movq	%rcx, %rdi
 460              	.LEHB10:
 461 007e E8000000 		call	_ZNSsC1EPKcRKSaIcE
 461      00
 462              	.LEHE10:
 463              		.loc 3 34 0 is_stmt 0 discriminator 1
 464 0083 488D45DF 		leaq	-33(%rbp), %rax
 465 0087 4889C7   		movq	%rax, %rdi
 466 008a E8000000 		call	_ZNSaIcED1Ev
 466      00
 467 008f 488D45DF 		leaq	-33(%rbp), %rax
 468 0093 4889C7   		movq	%rax, %rdi
 469 0096 E8000000 		call	_ZNSaIcEC1Ev
 469      00
 470 009b 488B45C8 		movq	-56(%rbp), %rax
 471 009f 488D4828 		leaq	40(%rax), %rcx
 472 00a3 488D45DF 		leaq	-33(%rbp), %rax
 473 00a7 4889C2   		movq	%rax, %rdx
 474 00aa BE000000 		movl	$.LC2, %esi
 474      00
 475 00af 4889CF   		movq	%rcx, %rdi
 476              	.LEHB11:
 477 00b2 E8000000 		call	_ZNSsC1EPKcRKSaIcE
 477      00
 478              	.LEHE11:
 479              		.loc 3 34 0 discriminator 2
 480 00b7 488D45DF 		leaq	-33(%rbp), %rax
 481 00bb 4889C7   		movq	%rax, %rdi
 482 00be E8000000 		call	_ZNSaIcED1Ev
 482      00
 483 00c3 488D45DF 		leaq	-33(%rbp), %rax
 484 00c7 4889C7   		movq	%rax, %rdi
 485 00ca E8000000 		call	_ZNSaIcEC1Ev
 485      00
 486 00cf 488B45C8 		movq	-56(%rbp), %rax
 487 00d3 488D4830 		leaq	48(%rax), %rcx
 488 00d7 488D45DF 		leaq	-33(%rbp), %rax
 489 00db 4889C2   		movq	%rax, %rdx
 490 00de BE000000 		movl	$.LC3, %esi
 490      00
 491 00e3 4889CF   		movq	%rcx, %rdi
 492              	.LEHB12:
 493 00e6 E8000000 		call	_ZNSsC1EPKcRKSaIcE
 493      00
 494              	.LEHE12:
 495              		.loc 3 34 0 discriminator 3
 496 00eb 488D45DF 		leaq	-33(%rbp), %rax
 497 00ef 4889C7   		movq	%rax, %rdi
 498 00f2 E8000000 		call	_ZNSaIcED1Ev
 498      00
 499 00f7 488B45C8 		movq	-56(%rbp), %rax
 500 00fb C740380C 		movl	$12, 56(%rax)
 500      000000
 501 0102 488B45C8 		movq	-56(%rbp), %rax
 502 0106 448B6838 		movl	56(%rax), %r13d
 503 010a 488B45C8 		movq	-56(%rbp), %rax
 504 010e 4883C030 		addq	$48, %rax
 505 0112 4889C7   		movq	%rax, %rdi
 506              	.LEHB13:
 507 0115 E8000000 		call	_ZNKSs5c_strEv
 507      00
 508 011a 4989C4   		movq	%rax, %r12
 509 011d 488B45C8 		movq	-56(%rbp), %rax
 510 0121 4883C028 		addq	$40, %rax
 511 0125 4889C7   		movq	%rax, %rdi
 512 0128 E8000000 		call	_ZNKSs5c_strEv
 512      00
 513              		.loc 3 34 0 discriminator 4
 514 012d 4889C3   		movq	%rax, %rbx
 515 0130 488B45C8 		movq	-56(%rbp), %rax
 516 0134 4883C020 		addq	$32, %rax
 517 0138 4889C7   		movq	%rax, %rdi
 518 013b E8000000 		call	_ZNKSs5c_strEv
 518      00
 519              		.loc 3 34 0 discriminator 5
 520 0140 488B55C8 		movq	-56(%rbp), %rdx
 521 0144 488D7A40 		leaq	64(%rdx), %rdi
 522 0148 4589E8   		movl	%r13d, %r8d
 523 014b 4C89E1   		movq	%r12, %rcx
 524 014e 4889DA   		movq	%rbx, %rdx
 525 0151 4889C6   		movq	%rax, %rsi
 526 0154 E8000000 		call	_ZN8UnitTest11TestDetailsC1EPKcS2_S2_i
 526      00
 527              	.LEHE13:
 528              	.LBE10:
  35:TestDeferredTestReporter.cpp ****     {
  36:TestDeferredTestReporter.cpp ****     }
 529              		.loc 3 36 0 is_stmt 1
 530 0159 EB7D     		jmp	.L36
 531              	.L32:
 532 015b 4889C3   		movq	%rax, %rbx
 533              	.LBB11:
  34:TestDeferredTestReporter.cpp ****     {
 534              		.loc 3 34 0
 535 015e 488D45DF 		leaq	-33(%rbp), %rax
 536 0162 4889C7   		movq	%rax, %rdi
 537 0165 E8000000 		call	_ZNSaIcED1Ev
 537      00
 538 016a EB55     		jmp	.L26
 539              	.L33:
 540 016c 4889C3   		movq	%rax, %rbx
 541 016f 488D45DF 		leaq	-33(%rbp), %rax
 542 0173 4889C7   		movq	%rax, %rdi
 543 0176 E8000000 		call	_ZNSaIcED1Ev
 543      00
 544 017b EB34     		jmp	.L28
 545              	.L34:
 546 017d 4889C3   		movq	%rax, %rbx
 547 0180 488D45DF 		leaq	-33(%rbp), %rax
 548 0184 4889C7   		movq	%rax, %rdi
 549 0187 E8000000 		call	_ZNSaIcED1Ev
 549      00
 550 018c EB13     		jmp	.L30
 551              	.L35:
 552 018e 4889C3   		movq	%rax, %rbx
 553 0191 488B45C8 		movq	-56(%rbp), %rax
 554 0195 4883C030 		addq	$48, %rax
 555 0199 4889C7   		movq	%rax, %rdi
 556 019c E8000000 		call	_ZNSsD1Ev
 556      00
 557              	.L30:
 558 01a1 488B45C8 		movq	-56(%rbp), %rax
 559 01a5 4883C028 		addq	$40, %rax
 560 01a9 4889C7   		movq	%rax, %rdi
 561 01ac E8000000 		call	_ZNSsD1Ev
 561      00
 562              	.L28:
 563 01b1 488B45C8 		movq	-56(%rbp), %rax
 564 01b5 4883C020 		addq	$32, %rax
 565 01b9 4889C7   		movq	%rax, %rdi
 566 01bc E8000000 		call	_ZNSsD1Ev
 566      00
 567              	.L26:
 568 01c1 488B45C8 		movq	-56(%rbp), %rax
 569 01c5 4889C7   		movq	%rax, %rdi
 570 01c8 E8A13000 		call	_ZN8UnitTest12_GLOBAL__N_124MockDeferredTestReporterD1Ev
 570      00
 571 01cd 4889D8   		movq	%rbx, %rax
 572 01d0 4889C7   		movq	%rax, %rdi
 573              	.LEHB14:
 574 01d3 E8000000 		call	_Unwind_Resume
 574      00
 575              	.LEHE14:
 576              	.L36:
 577              	.LBE11:
 578              		.loc 3 36 0
 579 01d8 4883C428 		addq	$40, %rsp
 580 01dc 5B       		popq	%rbx
 581 01dd 415C     		popq	%r12
 582 01df 415D     		popq	%r13
 583 01e1 5D       		popq	%rbp
 584              		.cfi_def_cfa 7, 8
 585 01e2 C3       		ret
 586              		.cfi_endproc
 587              	.LFE1295:
 588              		.section	.gcc_except_table,"a",@progbits
 589              	.LLSDA1295:
 590 0000 FF       		.byte	0xff
 591 0001 FF       		.byte	0xff
 592 0002 01       		.byte	0x1
 593 0003 1F       		.uleb128 .LLSDACSE1295-.LLSDACSB1295
 594              	.LLSDACSB1295:
 595 0004 18       		.uleb128 .LEHB9-.LFB1295
 596 0005 05       		.uleb128 .LEHE9-.LEHB9
 597 0006 00       		.uleb128 0
 598 0007 00       		.uleb128 0
 599 0008 40       		.uleb128 .LEHB10-.LFB1295
 600 0009 05       		.uleb128 .LEHE10-.LEHB10
 601 000a 9D02     		.uleb128 .L32-.LFB1295
 602 000c 00       		.uleb128 0
 603 000d 74       		.uleb128 .LEHB11-.LFB1295
 604 000e 05       		.uleb128 .LEHE11-.LEHB11
 605 000f AE02     		.uleb128 .L33-.LFB1295
 606 0011 00       		.uleb128 0
 607 0012 A801     		.uleb128 .LEHB12-.LFB1295
 608 0014 05       		.uleb128 .LEHE12-.LEHB12
 609 0015 BF02     		.uleb128 .L34-.LFB1295
 610 0017 00       		.uleb128 0
 611 0018 D701     		.uleb128 .LEHB13-.LFB1295
 612 001a 44       		.uleb128 .LEHE13-.LEHB13
 613 001b D002     		.uleb128 .L35-.LFB1295
 614 001d 00       		.uleb128 0
 615 001e 9503     		.uleb128 .LEHB14-.LFB1295
 616 0020 05       		.uleb128 .LEHE14-.LEHB14
 617 0021 00       		.uleb128 0
 618 0022 00       		.uleb128 0
 619              	.LLSDACSE1295:
 620              		.text
 622 01e3 90       		.align 2
 624              	_ZN8UnitTest12_GLOBAL__N_127DeferredTestReporterFixtureD2Ev:
 625              	.LFB1299:
  27:TestDeferredTestReporter.cpp **** {
 626              		.loc 3 27 0
 627              		.cfi_startproc
 628              		.cfi_personality 0x3,__gxx_personality_v0
 629              		.cfi_lsda 0x3,.LLSDA1299
 630 01e4 55       		pushq	%rbp
 631              		.cfi_def_cfa_offset 16
 632              		.cfi_offset 6, -16
 633 01e5 4889E5   		movq	%rsp, %rbp
 634              		.cfi_def_cfa_register 6
 635 01e8 53       		pushq	%rbx
 636 01e9 4883EC18 		subq	$24, %rsp
 637              		.cfi_offset 3, -24
 638 01ed 48897DE8 		movq	%rdi, -24(%rbp)
 639              	.LBB12:
  27:TestDeferredTestReporter.cpp **** {
 640              		.loc 3 27 0
 641 01f1 488B45E8 		movq	-24(%rbp), %rax
 642 01f5 4883C030 		addq	$48, %rax
 643 01f9 4889C7   		movq	%rax, %rdi
 644              	.LEHB15:
 645 01fc E8000000 		call	_ZNSsD1Ev
 645      00
 646              	.LEHE15:
  27:TestDeferredTestReporter.cpp **** {
 647              		.loc 3 27 0 is_stmt 0 discriminator 1
 648 0201 488B45E8 		movq	-24(%rbp), %rax
 649 0205 4883C028 		addq	$40, %rax
 650 0209 4889C7   		movq	%rax, %rdi
 651              	.LEHB16:
 652 020c E8000000 		call	_ZNSsD1Ev
 652      00
 653              	.LEHE16:
  27:TestDeferredTestReporter.cpp **** {
 654              		.loc 3 27 0 discriminator 2
 655 0211 488B45E8 		movq	-24(%rbp), %rax
 656 0215 4883C020 		addq	$32, %rax
 657 0219 4889C7   		movq	%rax, %rdi
 658              	.LEHB17:
 659 021c E8000000 		call	_ZNSsD1Ev
 659      00
 660              	.LEHE17:
  27:TestDeferredTestReporter.cpp **** {
 661              		.loc 3 27 0 discriminator 3
 662 0221 488B45E8 		movq	-24(%rbp), %rax
 663 0225 4889C7   		movq	%rax, %rdi
 664              	.LEHB18:
 665 0228 E8413000 		call	_ZN8UnitTest12_GLOBAL__N_124MockDeferredTestReporterD1Ev
 665      00
 666              	.LEHE18:
 667 022d EB44     		jmp	.L45
 668              	.L42:
 669 022f 4889C3   		movq	%rax, %rbx
  27:TestDeferredTestReporter.cpp **** {
 670              		.loc 3 27 0
 671 0232 488B45E8 		movq	-24(%rbp), %rax
 672 0236 4883C028 		addq	$40, %rax
 673 023a 4889C7   		movq	%rax, %rdi
 674 023d E8000000 		call	_ZNSsD1Ev
 674      00
 675 0242 EB03     		jmp	.L40
 676              	.L43:
 677 0244 4889C3   		movq	%rax, %rbx
 678              	.L40:
 679 0247 488B45E8 		movq	-24(%rbp), %rax
 680 024b 4883C020 		addq	$32, %rax
 681 024f 4889C7   		movq	%rax, %rdi
 682 0252 E8000000 		call	_ZNSsD1Ev
 682      00
 683 0257 EB03     		jmp	.L41
 684              	.L44:
 685 0259 4889C3   		movq	%rax, %rbx
 686              	.L41:
 687 025c 488B45E8 		movq	-24(%rbp), %rax
 688 0260 4889C7   		movq	%rax, %rdi
 689 0263 E8063000 		call	_ZN8UnitTest12_GLOBAL__N_124MockDeferredTestReporterD1Ev
 689      00
 690 0268 4889D8   		movq	%rbx, %rax
 691 026b 4889C7   		movq	%rax, %rdi
 692              	.LEHB19:
 693 026e E8000000 		call	_Unwind_Resume
 693      00
 694              	.LEHE19:
 695              	.L45:
 696              	.LBE12:
 697 0273 4883C418 		addq	$24, %rsp
 698 0277 5B       		popq	%rbx
 699 0278 5D       		popq	%rbp
 700              		.cfi_def_cfa 7, 8
 701 0279 C3       		ret
 702              		.cfi_endproc
 703              	.LFE1299:
 704              		.section	.gcc_except_table
 705              	.LLSDA1299:
 706 0023 FF       		.byte	0xff
 707 0024 FF       		.byte	0xff
 708 0025 01       		.byte	0x1
 709 0026 15       		.uleb128 .LLSDACSE1299-.LLSDACSB1299
 710              	.LLSDACSB1299:
 711 0027 18       		.uleb128 .LEHB15-.LFB1299
 712 0028 05       		.uleb128 .LEHE15-.LEHB15
 713 0029 4B       		.uleb128 .L42-.LFB1299
 714 002a 00       		.uleb128 0
 715 002b 28       		.uleb128 .LEHB16-.LFB1299
 716 002c 05       		.uleb128 .LEHE16-.LEHB16
 717 002d 60       		.uleb128 .L43-.LFB1299
 718 002e 00       		.uleb128 0
 719 002f 38       		.uleb128 .LEHB17-.LFB1299
 720 0030 05       		.uleb128 .LEHE17-.LEHB17
 721 0031 75       		.uleb128 .L44-.LFB1299
 722 0032 00       		.uleb128 0
 723 0033 44       		.uleb128 .LEHB18-.LFB1299
 724 0034 05       		.uleb128 .LEHE18-.LEHB18
 725 0035 00       		.uleb128 0
 726 0036 00       		.uleb128 0
 727 0037 8A01     		.uleb128 .LEHB19-.LFB1299
 728 0039 05       		.uleb128 .LEHE19-.LEHB19
 729 003a 00       		.uleb128 0
 730 003b 00       		.uleb128 0
 731              	.LLSDACSE1299:
 732              		.text
 734              		.align 2
 736              	_ZN8UnitTest12_GLOBAL__N_171DeferredTestReporterFixtureReportTestStartCreatesANewDeferredTestHelper
 737              	.LFB1301:
  37:TestDeferredTestReporter.cpp **** 
  38:TestDeferredTestReporter.cpp ****     MockDeferredTestReporter reporter;
  39:TestDeferredTestReporter.cpp ****     std::string const testName;
  40:TestDeferredTestReporter.cpp ****     std::string const testSuite;
  41:TestDeferredTestReporter.cpp ****     std::string const fileName;
  42:TestDeferredTestReporter.cpp ****     int const lineNumber;
  43:TestDeferredTestReporter.cpp ****     TestDetails const details;
  44:TestDeferredTestReporter.cpp **** };
  45:TestDeferredTestReporter.cpp **** 
  46:TestDeferredTestReporter.cpp **** TEST_FIXTURE(DeferredTestReporterFixture, ReportTestStartCreatesANewDeferredTest)
 738              		.loc 3 46 0 is_stmt 1
 739              		.cfi_startproc
 740 027a 55       		pushq	%rbp
 741              		.cfi_def_cfa_offset 16
 742              		.cfi_offset 6, -16
 743 027b 4889E5   		movq	%rsp, %rbp
 744              		.cfi_def_cfa_register 6
 745 027e 4883EC10 		subq	$16, %rsp
 746 0282 48897DF8 		movq	%rdi, -8(%rbp)
 747 0286 488975F0 		movq	%rsi, -16(%rbp)
 748              	.LBB13:
 749              		.loc 3 46 0
 750 028a 488B45F8 		movq	-8(%rbp), %rax
 751 028e 4889C7   		movq	%rax, %rdi
 752 0291 E8A8FDFF 		call	_ZN8UnitTest12_GLOBAL__N_127DeferredTestReporterFixtureC2Ev
 752      FF
 753 0296 488B45F8 		movq	-8(%rbp), %rax
 754 029a 488B55F0 		movq	-16(%rbp), %rdx
 755 029e 48895060 		movq	%rdx, 96(%rax)
 756              	.LBE13:
 757 02a2 C9       		leave
 758              		.cfi_def_cfa 7, 8
 759 02a3 C3       		ret
 760              		.cfi_endproc
 761              	.LFE1301:
 763              		.set	_ZN8UnitTest12_GLOBAL__N_171DeferredTestReporterFixtureReportTestStartCreatesANewDeferredTest
 764              		.section	.rodata
 765              	.LC4:
 766 0037 54657374 		.string	"TestDeferredTestReporter.cpp"
 766      44656665 
 766      72726564 
 766      54657374 
 766      5265706F 
 767 0054 00000000 		.align 8
 768              	.LC5:
 769 0058 5265706F 		.string	"ReportTestStartCreatesANewDeferredTest"
 769      72745465 
 769      73745374 
 769      61727443 
 769      72656174 
 770              		.text
 771              		.align 2
 773              	_ZN8UnitTest12_GLOBAL__N_169TestDeferredTestReporterFixtureReportTestStartCreatesANewDeferredTestC2
 774              	.LFB1304:
 775              		.loc 3 46 0
 776              		.cfi_startproc
 777 02a4 55       		pushq	%rbp
 778              		.cfi_def_cfa_offset 16
 779              		.cfi_offset 6, -16
 780 02a5 4889E5   		movq	%rsp, %rbp
 781              		.cfi_def_cfa_register 6
 782 02a8 4883EC10 		subq	$16, %rsp
 783 02ac 48897DF8 		movq	%rdi, -8(%rbp)
 784              	.LBB14:
 785              		.loc 3 46 0
 786 02b0 E8000000 		call	_ZN13UnitTestSuite12GetSuiteNameEv
 786      00
 787 02b5 4889C2   		movq	%rax, %rdx
 788 02b8 488B45F8 		movq	-8(%rbp), %rax
 789 02bc 41B82E00 		movl	$46, %r8d
 789      0000
 790 02c2 B9000000 		movl	$.LC4, %ecx
 790      00
 791 02c7 BE000000 		movl	$.LC5, %esi
 791      00
 792 02cc 4889C7   		movq	%rax, %rdi
 793 02cf E8000000 		call	_ZN8UnitTest4TestC2EPKcS2_S2_i
 793      00
 794 02d4 488B45F8 		movq	-8(%rbp), %rax
 795 02d8 48C70000 		movq	$_ZTVN8UnitTest12_GLOBAL__N_169TestDeferredTestReporterFixtureReportTestStartCreatesANewDefer
 795      000000
 796              	.LBE14:
 797 02df C9       		leave
 798              		.cfi_def_cfa 7, 8
 799 02e0 C3       		ret
 800              		.cfi_endproc
 801              	.LFE1304:
 803              		.set	_ZN8UnitTest12_GLOBAL__N_169TestDeferredTestReporterFixtureReportTestStartCreatesANewDeferred
 804              		.local	_ZN8UnitTest12_GLOBAL__N_177testDeferredTestReporterFixtureReportTestStartCreatesANewDeferr
 805              		.comm	_ZN8UnitTest12_GLOBAL__N_177testDeferredTestReporterFixtureReportTestStartCreatesANewDeferre
 806              		.local	_ZN8UnitTest12_GLOBAL__N_170adderDeferredTestReporterFixtureReportTestStartCreatesANewDefer
 807              		.comm	_ZN8UnitTest12_GLOBAL__N_170adderDeferredTestReporterFixtureReportTestStartCreatesANewDeferr
 808 02e1 90       		.align 2
 810              	_ZN8UnitTest12_GLOBAL__N_171DeferredTestReporterFixtureReportTestStartCreatesANewDeferredTestHelper
 811              	.LFB1308:
 812              		.loc 3 46 0
 813              		.cfi_startproc
 814 02e2 55       		pushq	%rbp
 815              		.cfi_def_cfa_offset 16
 816              		.cfi_offset 6, -16
 817 02e3 4889E5   		movq	%rsp, %rbp
 818              		.cfi_def_cfa_register 6
 819 02e6 4883EC10 		subq	$16, %rsp
 820 02ea 48897DF8 		movq	%rdi, -8(%rbp)
 821              	.LBB15:
 822              		.loc 3 46 0
 823 02ee 488B45F8 		movq	-8(%rbp), %rax
 824 02f2 4889C7   		movq	%rax, %rdi
 825 02f5 E8EAFEFF 		call	_ZN8UnitTest12_GLOBAL__N_127DeferredTestReporterFixtureD2Ev
 825      FF
 826              	.LBE15:
 827 02fa C9       		leave
 828              		.cfi_def_cfa 7, 8
 829 02fb C3       		ret
 830              		.cfi_endproc
 831              	.LFE1308:
 833              		.set	_ZN8UnitTest12_GLOBAL__N_171DeferredTestReporterFixtureReportTestStartCreatesANewDeferredTest
 834              		.section	.rodata
 835              	.LC6:
 836 007f 556E6861 		.string	"Unhandled exception: "
 836      6E646C65 
 836      64206578 
 836      63657074 
 836      696F6E3A 
 837 0095 000000   		.align 8
 838              	.LC7:
 839 0098 556E6861 		.string	"Unhandled exception while destroying fixture DeferredTestReporterFixture"
 839      6E646C65 
 839      64206578 
 839      63657074 
 839      696F6E20 
 840 00e1 00000000 		.align 8
 840      000000
 841              	.LC8:
 842 00e8 556E6861 		.string	"Unhandled exception while constructing fixture DeferredTestReporterFixture"
 842      6E646C65 
 842      64206578 
 842      63657074 
 842      696F6E20 
 843              		.text
 844              		.align 2
 846              	_ZNK8UnitTest12_GLOBAL__N_169TestDeferredTestReporterFixtureReportTestStartCreatesANewDeferredTest7
 847              	.LFB1306:
 848              		.loc 3 46 0
 849              		.cfi_startproc
 850              		.cfi_personality 0x3,__gxx_personality_v0
 851              		.cfi_lsda 0x3,.LLSDA1306
 852 02fc 55       		pushq	%rbp
 853              		.cfi_def_cfa_offset 16
 854              		.cfi_offset 6, -16
 855 02fd 4889E5   		movq	%rsp, %rbp
 856              		.cfi_def_cfa_register 6
 857 0300 4154     		pushq	%r12
 858 0302 53       		pushq	%rbx
 859 0303 4881ECA0 		subq	$416, %rsp
 859      010000
 860              		.cfi_offset 12, -24
 861              		.cfi_offset 3, -32
 862 030a 4889BD58 		movq	%rdi, -424(%rbp)
 862      FEFFFF
 863              	.LBB16:
 864              		.loc 3 46 0
 865 0311 C6856FFE 		movb	$0, -401(%rbp)
 865      FFFF00
 866              	.LBB17:
 867 0318 488B8558 		movq	-424(%rbp), %rax
 867      FEFFFF
 868 031f 488D5008 		leaq	8(%rax), %rdx
 869 0323 488D8580 		leaq	-384(%rbp), %rax
 869      FEFFFF
 870 032a 4889D6   		movq	%rdx, %rsi
 871 032d 4889C7   		movq	%rax, %rdi
 872              	.LEHB20:
 873 0330 E845FFFF 		call	_ZN8UnitTest12_GLOBAL__N_171DeferredTestReporterFixtureReportTestStartCreatesANewDeferredTest
 873      FF
 874              	.LEHE20:
 875              		.loc 3 46 0 is_stmt 0 discriminator 1
 876 0335 C6856FFE 		movb	$1, -401(%rbp)
 876      FFFF01
 877 033c 488B8558 		movq	-424(%rbp), %rax
 877      FEFFFF
 878 0343 488D5008 		leaq	8(%rax), %rdx
 879 0347 488D8580 		leaq	-384(%rbp), %rax
 879      FEFFFF
 880 034e 4889D6   		movq	%rdx, %rsi
 881 0351 4889C7   		movq	%rax, %rdi
 882              	.LEHB21:
 883 0354 E8451D00 		call	_ZN8UnitTest11ExecuteTestINS_12_GLOBAL__N_171DeferredTestReporterFixtureReportTestStartCreate
 883      00
 884              	.LEHE21:
 885 0359 488D8580 		leaq	-384(%rbp), %rax
 885      FEFFFF
 886 0360 4889C7   		movq	%rax, %rdi
 887              	.LEHB22:
 888 0363 E87AFFFF 		call	_ZN8UnitTest12_GLOBAL__N_171DeferredTestReporterFixtureReportTestStartCreatesANewDeferredTest
 888      FF
 889              	.LEHE22:
 890              	.LBE17:
 891              	.LBE16:
 892              		.loc 3 46 0
 893 0368 E9640200 		jmp	.L70
 893      00
 894              	.L64:
 895 036d 4989C4   		movq	%rax, %r12
 896 0370 4889D3   		movq	%rdx, %rbx
 897              	.LBB25:
 898              	.LBB18:
 899 0373 488D8580 		leaq	-384(%rbp), %rax
 899      FEFFFF
 900 037a 4889C7   		movq	%rax, %rdi
 901 037d E860FFFF 		call	_ZN8UnitTest12_GLOBAL__N_171DeferredTestReporterFixtureReportTestStartCreatesANewDeferredTest
 901      FF
 902 0382 4C89E0   		movq	%r12, %rax
 903 0385 4889DA   		movq	%rbx, %rdx
 904 0388 EB00     		jmp	.L52
 905              	.L63:
 906              	.L52:
 907 038a 4883FA01 		cmpq	$1, %rdx
 908 038e 745C     		je	.L54
 909 0390 4883FA02 		cmpq	$2, %rdx
 910 0394 0F84F400 		je	.L55
 910      0000
 911 039a E9980100 		jmp	.L69
 911      00
 912              	.L65:
 913 039f 4889C3   		movq	%rax, %rbx
 914              	.LBE18:
 915              	.LBB19:
 916 03a2 E8000000 		call	__cxa_end_catch
 916      00
 917 03a7 4889D8   		movq	%rbx, %rax
 918 03aa 4889C7   		movq	%rax, %rdi
 919              	.LEHB23:
 920 03ad E8000000 		call	_Unwind_Resume
 920      00
 921              	.LEHE23:
 922              	.L66:
 923 03b2 4889C3   		movq	%rax, %rbx
 924              	.LBE19:
 925              	.LBB20:
 926              	.LBB21:
 927 03b5 488D8580 		leaq	-384(%rbp), %rax
 927      FEFFFF
 928 03bc 4889C7   		movq	%rax, %rdi
 929 03bf E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 929      00
 930 03c4 EB03     		jmp	.L58
 931              	.L67:
 932 03c6 4889C3   		movq	%rax, %rbx
 933              	.L58:
 934              	.LBE21:
 935 03c9 E8000000 		call	__cxa_end_catch
 935      00
 936 03ce 4889D8   		movq	%rbx, %rax
 937 03d1 4889C7   		movq	%rax, %rdi
 938              	.LEHB24:
 939 03d4 E8000000 		call	_Unwind_Resume
 939      00
 940              	.LEHE24:
 941              	.L68:
 942 03d9 4889C3   		movq	%rax, %rbx
 943              	.LBE20:
 944 03dc E8000000 		call	__cxa_end_catch
 944      00
 945 03e1 4889D8   		movq	%rbx, %rax
 946 03e4 4889C7   		movq	%rax, %rdi
 947              	.LEHB25:
 948 03e7 E8000000 		call	_Unwind_Resume
 948      00
 949              	.LEHE25:
 950              	.L54:
 951              	.LBB23:
 952 03ec 4889C7   		movq	%rax, %rdi
 953 03ef E8000000 		call	__cxa_begin_catch
 953      00
 954 03f4 48898570 		movq	%rax, -400(%rbp)
 954      FEFFFF
 955 03fb 488B8570 		movq	-400(%rbp), %rax
 955      FEFFFF
 956 0402 488B00   		movq	(%rax), %rax
 957 0405 4883C010 		addq	$16, %rax
 958 0409 488B00   		movq	(%rax), %rax
 959 040c 488B9570 		movq	-400(%rbp), %rdx
 959      FEFFFF
 960 0413 4889D7   		movq	%rdx, %rdi
 961 0416 FFD0     		call	*%rax
 962 0418 4889C3   		movq	%rax, %rbx
 963 041b 488B8570 		movq	-400(%rbp), %rax
 963      FEFFFF
 964 0422 4889C7   		movq	%rax, %rdi
 965              	.LEHB26:
 966 0425 E8000000 		call	_ZNK8UnitTest15AssertException10LineNumberEv
 966      00
 967 042a 4189C4   		movl	%eax, %r12d
 968 042d 488B8570 		movq	-400(%rbp), %rax
 968      FEFFFF
 969 0434 4889C7   		movq	%rax, %rdi
 970 0437 E8000000 		call	_ZNK8UnitTest15AssertException8FilenameEv
 970      00
 971              		.loc 3 46 0 discriminator 1
 972 043c 4889C1   		movq	%rax, %rcx
 973 043f 488B8558 		movq	-424(%rbp), %rax
 973      FEFFFF
 974 0446 488B5008 		movq	8(%rax), %rdx
 975 044a 488B8558 		movq	-424(%rbp), %rax
 975      FEFFFF
 976 0451 488B7010 		movq	16(%rax), %rsi
 977 0455 488D8580 		leaq	-384(%rbp), %rax
 977      FEFFFF
 978 045c 4589E0   		movl	%r12d, %r8d
 979 045f 4889C7   		movq	%rax, %rdi
 980 0462 E8000000 		call	_ZN8UnitTest11TestDetailsC1EPKcS2_S2_i
 980      00
 981              		.loc 3 46 0 discriminator 3
 982 0467 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 982      00
 983 046c 488B00   		movq	(%rax), %rax
 984 046f 488D8D80 		leaq	-384(%rbp), %rcx
 984      FEFFFF
 985 0476 4889DA   		movq	%rbx, %rdx
 986 0479 4889CE   		movq	%rcx, %rsi
 987 047c 4889C7   		movq	%rax, %rdi
 988 047f E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 988      00
 989              	.LEHE26:
 990              		.loc 3 46 0 discriminator 1
 991 0484 E8000000 		call	__cxa_end_catch
 991      00
 992              	.LBE23:
 993              	.LBE25:
 994 0489 E9430100 		jmp	.L70
 994      00
 995              	.L55:
 996              	.LBB26:
 997              	.LBB24:
 998              		.loc 3 46 0
 999 048e 4889C7   		movq	%rax, %rdi
 1000 0491 E8000000 		call	__cxa_begin_catch
 1000      00
 1001 0496 48898578 		movq	%rax, -392(%rbp)
 1001      FEFFFF
 1002              	.LBB22:
 1003 049d 488D8580 		leaq	-384(%rbp), %rax
 1003      FEFFFF
 1004 04a4 4889C7   		movq	%rax, %rdi
 1005              	.LEHB27:
 1006 04a7 E8000000 		call	_ZN8UnitTest15MemoryOutStreamC1Ev
 1006      00
 1007              	.LEHE27:
 1008              		.loc 3 46 0 discriminator 1
 1009 04ac 488B8578 		movq	-392(%rbp), %rax
 1009      FEFFFF
 1010 04b3 488B00   		movq	(%rax), %rax
 1011 04b6 4883C010 		addq	$16, %rax
 1012 04ba 488B00   		movq	(%rax), %rax
 1013 04bd 488B9578 		movq	-392(%rbp), %rdx
 1013      FEFFFF
 1014 04c4 4889D7   		movq	%rdx, %rdi
 1015 04c7 FFD0     		call	*%rax
 1016 04c9 4889C3   		movq	%rax, %rbx
 1017 04cc 488D8580 		leaq	-384(%rbp), %rax
 1017      FEFFFF
 1018 04d3 BE000000 		movl	$.LC6, %esi
 1018      00
 1019 04d8 4889C7   		movq	%rax, %rdi
 1020              	.LEHB28:
 1021 04db E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
 1021      00
 1022 04e0 4889DE   		movq	%rbx, %rsi
 1023 04e3 4889C7   		movq	%rax, %rdi
 1024 04e6 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
 1024      00
 1025 04eb 488D8580 		leaq	-384(%rbp), %rax
 1025      FEFFFF
 1026 04f2 4889C7   		movq	%rax, %rdi
 1027 04f5 E8000000 		call	_ZNK8UnitTest15MemoryOutStream7GetTextEv
 1027      00
 1028 04fa 4889C3   		movq	%rax, %rbx
 1029 04fd 488B8558 		movq	-424(%rbp), %rax
 1029      FEFFFF
 1030 0504 4C8D6008 		leaq	8(%rax), %r12
 1031 0508 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 1031      00
 1032 050d 488B00   		movq	(%rax), %rax
 1033 0510 4889DA   		movq	%rbx, %rdx
 1034 0513 4C89E6   		movq	%r12, %rsi
 1035 0516 4889C7   		movq	%rax, %rdi
 1036 0519 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 1036      00
 1037              	.LEHE28:
 1038 051e 488D8580 		leaq	-384(%rbp), %rax
 1038      FEFFFF
 1039 0525 4889C7   		movq	%rax, %rdi
 1040              	.LEHB29:
 1041 0528 E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 1041      00
 1042              	.LEHE29:
 1043              	.LBE22:
 1044              		.loc 3 46 0
 1045 052d E8000000 		call	__cxa_end_catch
 1045      00
 1046              	.LBE24:
 1047              	.LBE26:
 1048 0532 E99A0000 		jmp	.L70
 1048      00
 1049              	.L69:
 1050              	.LBB27:
 1051 0537 4889C7   		movq	%rax, %rdi
 1052 053a E8000000 		call	__cxa_begin_catch
 1052      00
 1053 053f 80BD6FFE 		cmpb	$0, -401(%rbp)
 1053      FFFF00
 1054 0546 7443     		je	.L61
 1055              		.loc 3 46 0 discriminator 1
 1056 0548 488B8558 		movq	-424(%rbp), %rax
 1056      FEFFFF
 1057 054f 488D4808 		leaq	8(%rax), %rcx
 1058 0553 488D8580 		leaq	-384(%rbp), %rax
 1058      FEFFFF
 1059 055a BA2E0000 		movl	$46, %edx
 1059      00
 1060 055f 4889CE   		movq	%rcx, %rsi
 1061 0562 4889C7   		movq	%rax, %rdi
 1062              	.LEHB30:
 1063 0565 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 1063      00
 1064 056a E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 1064      00
 1065 056f 488B00   		movq	(%rax), %rax
 1066 0572 488D8D80 		leaq	-384(%rbp), %rcx
 1066      FEFFFF
 1067 0579 BA000000 		movl	$.LC7, %edx
 1067      00
 1068 057e 4889CE   		movq	%rcx, %rsi
 1069 0581 4889C7   		movq	%rax, %rdi
 1070 0584 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 1070      00
 1071 0589 EB41     		jmp	.L62
 1072              	.L61:
 1073              		.loc 3 46 0 discriminator 2
 1074 058b 488B8558 		movq	-424(%rbp), %rax
 1074      FEFFFF
 1075 0592 488D4808 		leaq	8(%rax), %rcx
 1076 0596 488D8580 		leaq	-384(%rbp), %rax
 1076      FEFFFF
 1077 059d BA2E0000 		movl	$46, %edx
 1077      00
 1078 05a2 4889CE   		movq	%rcx, %rsi
 1079 05a5 4889C7   		movq	%rax, %rdi
 1080 05a8 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 1080      00
 1081              		.loc 3 46 0 discriminator 1
 1082 05ad E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 1082      00
 1083 05b2 488B00   		movq	(%rax), %rax
 1084 05b5 488D8D80 		leaq	-384(%rbp), %rcx
 1084      FEFFFF
 1085 05bc BA000000 		movl	$.LC8, %edx
 1085      00
 1086 05c1 4889CE   		movq	%rcx, %rsi
 1087 05c4 4889C7   		movq	%rax, %rdi
 1088 05c7 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 1088      00
 1089              	.LEHE30:
 1090              	.L62:
 1091              	.LEHB31:
 1092 05cc E8000000 		call	__cxa_end_catch
 1092      00
 1093              	.LEHE31:
 1094              	.L70:
 1095              	.LBE27:
 1096              		.loc 3 46 0
 1097 05d1 90       		nop
 1098 05d2 4881C4A0 		addq	$416, %rsp
 1098      010000
 1099 05d9 5B       		popq	%rbx
 1100 05da 415C     		popq	%r12
 1101 05dc 5D       		popq	%rbp
 1102              		.cfi_def_cfa 7, 8
 1103 05dd C3       		ret
 1104              		.cfi_endproc
 1105              	.LFE1306:
 1106              		.section	.gcc_except_table
 1107              		.align 4
 1108              	.LLSDA1306:
 1109 003c FF       		.byte	0xff
 1110 003d 03       		.byte	0x3
 1111 003e 59       		.uleb128 .LLSDATT1306-.LLSDATTD1306
 1112              	.LLSDATTD1306:
 1113 003f 01       		.byte	0x1
 1114 0040 40       		.uleb128 .LLSDACSE1306-.LLSDACSB1306
 1115              	.LLSDACSB1306:
 1116 0041 34       		.uleb128 .LEHB20-.LFB1306
 1117 0042 05       		.uleb128 .LEHE20-.LEHB20
 1118 0043 8E01     		.uleb128 .L63-.LFB1306
 1119 0045 05       		.uleb128 0x5
 1120 0046 58       		.uleb128 .LEHB21-.LFB1306
 1121 0047 05       		.uleb128 .LEHE21-.LEHB21
 1122 0048 71       		.uleb128 .L64-.LFB1306
 1123 0049 07       		.uleb128 0x7
 1124 004a 67       		.uleb128 .LEHB22-.LFB1306
 1125 004b 05       		.uleb128 .LEHE22-.LEHB22
 1126 004c 8E01     		.uleb128 .L63-.LFB1306
 1127 004e 05       		.uleb128 0x5
 1128 004f B101     		.uleb128 .LEHB23-.LFB1306
 1129 0051 05       		.uleb128 .LEHE23-.LEHB23
 1130 0052 00       		.uleb128 0
 1131 0053 00       		.uleb128 0
 1132 0054 D801     		.uleb128 .LEHB24-.LFB1306
 1133 0056 05       		.uleb128 .LEHE24-.LEHB24
 1134 0057 00       		.uleb128 0
 1135 0058 00       		.uleb128 0
 1136 0059 EB01     		.uleb128 .LEHB25-.LFB1306
 1137 005b 05       		.uleb128 .LEHE25-.LEHB25
 1138 005c 00       		.uleb128 0
 1139 005d 00       		.uleb128 0
 1140 005e A902     		.uleb128 .LEHB26-.LFB1306
 1141 0060 5F       		.uleb128 .LEHE26-.LEHB26
 1142 0061 A301     		.uleb128 .L65-.LFB1306
 1143 0063 00       		.uleb128 0
 1144 0064 AB03     		.uleb128 .LEHB27-.LFB1306
 1145 0066 05       		.uleb128 .LEHE27-.LEHB27
 1146 0067 CA01     		.uleb128 .L67-.LFB1306
 1147 0069 00       		.uleb128 0
 1148 006a DF03     		.uleb128 .LEHB28-.LFB1306
 1149 006c 43       		.uleb128 .LEHE28-.LEHB28
 1150 006d B601     		.uleb128 .L66-.LFB1306
 1151 006f 00       		.uleb128 0
 1152 0070 AC04     		.uleb128 .LEHB29-.LFB1306
 1153 0072 05       		.uleb128 .LEHE29-.LEHB29
 1154 0073 CA01     		.uleb128 .L67-.LFB1306
 1155 0075 00       		.uleb128 0
 1156 0076 E904     		.uleb128 .LEHB30-.LFB1306
 1157 0078 67       		.uleb128 .LEHE30-.LEHB30
 1158 0079 DD01     		.uleb128 .L68-.LFB1306
 1159 007b 00       		.uleb128 0
 1160 007c D005     		.uleb128 .LEHB31-.LFB1306
 1161 007e 05       		.uleb128 .LEHE31-.LEHB31
 1162 007f 00       		.uleb128 0
 1163 0080 00       		.uleb128 0
 1164              	.LLSDACSE1306:
 1165 0081 03       		.byte	0x3
 1166 0082 00       		.byte	0
 1167 0083 02       		.byte	0x2
 1168 0084 7D       		.byte	0x7d
 1169 0085 01       		.byte	0x1
 1170 0086 7D       		.byte	0x7d
 1171 0087 00       		.byte	0
 1172 0088 7D       		.byte	0x7d
 1173 0089 000000   		.align 4
 1174 008c 00000000 		.long	0
 1175              	
 1176 0090 00000000 		.long	_ZTISt9exception
 1177 0094 00000000 		.long	_ZTIN8UnitTest15AssertExceptionE
 1178              	.LLSDATT1306:
 1179              		.text
 1181              		.section	.rodata
 1182 0133 00000000 		.align 8
 1182      00
 1183              	.LC9:
 1184 0138 556E6861 		.string	"Unhandled exception in CHECK_EQUAL(1, (int)reporter.GetResults().size())"
 1184      6E646C65 
 1184      64206578 
 1184      63657074 
 1184      696F6E20 
 1185              		.text
 1186              		.align 2
 1188              	_ZN8UnitTest12_GLOBAL__N_171DeferredTestReporterFixtureReportTestStartCreatesANewDeferredTestHelper
 1189              	.LFB1310:
  47:TestDeferredTestReporter.cpp **** {
 1190              		.loc 3 47 0 is_stmt 1
 1191              		.cfi_startproc
 1192              		.cfi_personality 0x3,__gxx_personality_v0
 1193              		.cfi_lsda 0x3,.LLSDA1310
 1194 05de 55       		pushq	%rbp
 1195              		.cfi_def_cfa_offset 16
 1196              		.cfi_offset 6, -16
 1197 05df 4889E5   		movq	%rsp, %rbp
 1198              		.cfi_def_cfa_register 6
 1199 05e2 53       		pushq	%rbx
 1200 05e3 4883EC48 		subq	$72, %rsp
 1201              		.cfi_offset 3, -24
 1202 05e7 48897DB8 		movq	%rdi, -72(%rbp)
  48:TestDeferredTestReporter.cpp ****     reporter.ReportTestStart(details);
 1203              		.loc 3 48 0
 1204 05eb 488B45B8 		movq	-72(%rbp), %rax
 1205 05ef 488D5040 		leaq	64(%rax), %rdx
 1206 05f3 488B45B8 		movq	-72(%rbp), %rax
 1207 05f7 4889D6   		movq	%rdx, %rsi
 1208 05fa 4889C7   		movq	%rax, %rdi
 1209              	.LEHB32:
 1210 05fd E8000000 		call	_ZN8UnitTest20DeferredTestReporter15ReportTestStartERKNS_11TestDetailsE
 1210      00
 1211              	.LEHE32:
 1212              	.LEHB33:
  49:TestDeferredTestReporter.cpp ****     CHECK_EQUAL(1, (int)reporter.GetResults().size());
 1213              		.loc 3 49 0
 1214 0602 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 1214      00
 1215 0607 488B08   		movq	(%rax), %rcx
 1216 060a 488D45D0 		leaq	-48(%rbp), %rax
 1217 060e BA310000 		movl	$49, %edx
 1217      00
 1218 0613 4889CE   		movq	%rcx, %rsi
 1219 0616 4889C7   		movq	%rax, %rdi
 1220 0619 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 1220      00
 1221              		.loc 3 49 0 is_stmt 0 discriminator 1
 1222 061e 488B45B8 		movq	-72(%rbp), %rax
 1223 0622 4889C7   		movq	%rax, %rdi
 1224 0625 E8000000 		call	_ZN8UnitTest20DeferredTestReporter10GetResultsEv
 1224      00
 1225 062a 4889C7   		movq	%rax, %rdi
 1226 062d E8000000 		call	_ZNKSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EE4sizeEv
 1226      00
 1227 0632 8945CC   		movl	%eax, -52(%rbp)
 1228 0635 C745C801 		movl	$1, -56(%rbp)
 1228      000000
 1229 063c E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 1229      00
 1230 0641 488B00   		movq	(%rax), %rax
 1231 0644 488D4DD0 		leaq	-48(%rbp), %rcx
 1232 0648 488D55CC 		leaq	-52(%rbp), %rdx
 1233 064c 488D75C8 		leaq	-56(%rbp), %rsi
 1234 0650 4889C7   		movq	%rax, %rdi
 1235 0653 E8000000 		call	_ZN8UnitTest10CheckEqualIiiEEvRNS_11TestResultsERKT_RKT0_RKNS_11TestDetailsE
 1235      00
 1236              	.LEHE33:
  50:TestDeferredTestReporter.cpp **** }
 1237              		.loc 3 50 0 is_stmt 1
 1238 0658 EB58     		jmp	.L77
 1239              	.L76:
 1240 065a 4889C3   		movq	%rax, %rbx
  49:TestDeferredTestReporter.cpp ****     CHECK_EQUAL(1, (int)reporter.GetResults().size());
 1241              		.loc 3 49 0
 1242 065d E8000000 		call	__cxa_end_catch
 1242      00
 1243 0662 4889D8   		movq	%rbx, %rax
 1244 0665 4889C7   		movq	%rax, %rdi
 1245              	.LEHB34:
 1246 0668 E8000000 		call	_Unwind_Resume
 1246      00
 1247              	.LEHE34:
 1248              	.L75:
 1249 066d 4889C7   		movq	%rax, %rdi
 1250 0670 E8000000 		call	__cxa_begin_catch
 1250      00
 1251              	.LEHB35:
 1252 0675 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 1252      00
 1253 067a 488B08   		movq	(%rax), %rcx
 1254 067d 488D45D0 		leaq	-48(%rbp), %rax
 1255 0681 BA310000 		movl	$49, %edx
 1255      00
 1256 0686 4889CE   		movq	%rcx, %rsi
 1257 0689 4889C7   		movq	%rax, %rdi
 1258 068c E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 1258      00
  49:TestDeferredTestReporter.cpp ****     CHECK_EQUAL(1, (int)reporter.GetResults().size());
 1259              		.loc 3 49 0 is_stmt 0 discriminator 1
 1260 0691 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 1260      00
 1261 0696 488B00   		movq	(%rax), %rax
 1262 0699 488D4DD0 		leaq	-48(%rbp), %rcx
 1263 069d BA000000 		movl	$.LC9, %edx
 1263      00
 1264 06a2 4889CE   		movq	%rcx, %rsi
 1265 06a5 4889C7   		movq	%rax, %rdi
 1266 06a8 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 1266      00
 1267              	.LEHE35:
 1268              	.LEHB36:
 1269 06ad E8000000 		call	__cxa_end_catch
 1269      00
 1270              	.LEHE36:
 1271              	.L77:
 1272              		.loc 3 50 0 is_stmt 1
 1273 06b2 90       		nop
 1274 06b3 4883C448 		addq	$72, %rsp
 1275 06b7 5B       		popq	%rbx
 1276 06b8 5D       		popq	%rbp
 1277              		.cfi_def_cfa 7, 8
 1278 06b9 C3       		ret
 1279              		.cfi_endproc
 1280              	.LFE1310:
 1281              		.section	.gcc_except_table
 1282              		.align 4
 1283              	.LLSDA1310:
 1284 0098 FF       		.byte	0xff
 1285 0099 03       		.byte	0x3
 1286 009a 21       		.uleb128 .LLSDATT1310-.LLSDATTD1310
 1287              	.LLSDATTD1310:
 1288 009b 01       		.byte	0x1
 1289 009c 18       		.uleb128 .LLSDACSE1310-.LLSDACSB1310
 1290              	.LLSDACSB1310:
 1291 009d 1F       		.uleb128 .LEHB32-.LFB1310
 1292 009e 05       		.uleb128 .LEHE32-.LEHB32
 1293 009f 00       		.uleb128 0
 1294 00a0 00       		.uleb128 0
 1295 00a1 24       		.uleb128 .LEHB33-.LFB1310
 1296 00a2 56       		.uleb128 .LEHE33-.LEHB33
 1297 00a3 8F01     		.uleb128 .L75-.LFB1310
 1298 00a5 01       		.uleb128 0x1
 1299 00a6 8A01     		.uleb128 .LEHB34-.LFB1310
 1300 00a8 05       		.uleb128 .LEHE34-.LEHB34
 1301 00a9 00       		.uleb128 0
 1302 00aa 00       		.uleb128 0
 1303 00ab 9701     		.uleb128 .LEHB35-.LFB1310
 1304 00ad 38       		.uleb128 .LEHE35-.LEHB35
 1305 00ae 7C       		.uleb128 .L76-.LFB1310
 1306 00af 00       		.uleb128 0
 1307 00b0 CF01     		.uleb128 .LEHB36-.LFB1310
 1308 00b2 05       		.uleb128 .LEHE36-.LEHB36
 1309 00b3 00       		.uleb128 0
 1310 00b4 00       		.uleb128 0
 1311              	.LLSDACSE1310:
 1312 00b5 01       		.byte	0x1
 1313 00b6 00       		.byte	0
 1314 00b7 00       		.align 4
 1315 00b8 00000000 		.long	0
 1316              	
 1317              	.LLSDATT1310:
 1318              		.text
 1320              		.align 2
 1322              	_ZN8UnitTest12_GLOBAL__N_172DeferredTestReporterFixtureReportTestStartCapturesTestNameAndSuiteHelpe
 1323              	.LFB1312:
  51:TestDeferredTestReporter.cpp **** 
  52:TestDeferredTestReporter.cpp **** TEST_FIXTURE(DeferredTestReporterFixture, ReportTestStartCapturesTestNameAndSuite)
 1324              		.loc 3 52 0
 1325              		.cfi_startproc
 1326 06ba 55       		pushq	%rbp
 1327              		.cfi_def_cfa_offset 16
 1328              		.cfi_offset 6, -16
 1329 06bb 4889E5   		movq	%rsp, %rbp
 1330              		.cfi_def_cfa_register 6
 1331 06be 4883EC10 		subq	$16, %rsp
 1332 06c2 48897DF8 		movq	%rdi, -8(%rbp)
 1333 06c6 488975F0 		movq	%rsi, -16(%rbp)
 1334              	.LBB28:
 1335              		.loc 3 52 0
 1336 06ca 488B45F8 		movq	-8(%rbp), %rax
 1337 06ce 4889C7   		movq	%rax, %rdi
 1338 06d1 E868F9FF 		call	_ZN8UnitTest12_GLOBAL__N_127DeferredTestReporterFixtureC2Ev
 1338      FF
 1339 06d6 488B45F8 		movq	-8(%rbp), %rax
 1340 06da 488B55F0 		movq	-16(%rbp), %rdx
 1341 06de 48895060 		movq	%rdx, 96(%rax)
 1342              	.LBE28:
 1343 06e2 C9       		leave
 1344              		.cfi_def_cfa 7, 8
 1345 06e3 C3       		ret
 1346              		.cfi_endproc
 1347              	.LFE1312:
 1349              		.set	_ZN8UnitTest12_GLOBAL__N_172DeferredTestReporterFixtureReportTestStartCapturesTestNameAndSuit
 1350              		.section	.rodata
 1351 0181 00000000 		.align 8
 1351      000000
 1352              	.LC10:
 1353 0188 5265706F 		.string	"ReportTestStartCapturesTestNameAndSuite"
 1353      72745465 
 1353      73745374 
 1353      61727443 
 1353      61707475 
 1354              		.text
 1355              		.align 2
 1357              	_ZN8UnitTest12_GLOBAL__N_170TestDeferredTestReporterFixtureReportTestStartCapturesTestNameAndSuiteC
 1358              	.LFB1315:
 1359              		.loc 3 52 0
 1360              		.cfi_startproc
 1361 06e4 55       		pushq	%rbp
 1362              		.cfi_def_cfa_offset 16
 1363              		.cfi_offset 6, -16
 1364 06e5 4889E5   		movq	%rsp, %rbp
 1365              		.cfi_def_cfa_register 6
 1366 06e8 4883EC10 		subq	$16, %rsp
 1367 06ec 48897DF8 		movq	%rdi, -8(%rbp)
 1368              	.LBB29:
 1369              		.loc 3 52 0
 1370 06f0 E8000000 		call	_ZN13UnitTestSuite12GetSuiteNameEv
 1370      00
 1371 06f5 4889C2   		movq	%rax, %rdx
 1372 06f8 488B45F8 		movq	-8(%rbp), %rax
 1373 06fc 41B83400 		movl	$52, %r8d
 1373      0000
 1374 0702 B9000000 		movl	$.LC4, %ecx
 1374      00
 1375 0707 BE000000 		movl	$.LC10, %esi
 1375      00
 1376 070c 4889C7   		movq	%rax, %rdi
 1377 070f E8000000 		call	_ZN8UnitTest4TestC2EPKcS2_S2_i
 1377      00
 1378 0714 488B45F8 		movq	-8(%rbp), %rax
 1379 0718 48C70000 		movq	$_ZTVN8UnitTest12_GLOBAL__N_170TestDeferredTestReporterFixtureReportTestStartCapturesTestName
 1379      000000
 1380              	.LBE29:
 1381 071f C9       		leave
 1382              		.cfi_def_cfa 7, 8
 1383 0720 C3       		ret
 1384              		.cfi_endproc
 1385              	.LFE1315:
 1387              		.set	_ZN8UnitTest12_GLOBAL__N_170TestDeferredTestReporterFixtureReportTestStartCapturesTestNameAnd
 1388              		.local	_ZN8UnitTest12_GLOBAL__N_178testDeferredTestReporterFixtureReportTestStartCapturesTestNameA
 1389              		.comm	_ZN8UnitTest12_GLOBAL__N_178testDeferredTestReporterFixtureReportTestStartCapturesTestNameAn
 1390              		.local	_ZN8UnitTest12_GLOBAL__N_171adderDeferredTestReporterFixtureReportTestStartCapturesTestName
 1391              		.comm	_ZN8UnitTest12_GLOBAL__N_171adderDeferredTestReporterFixtureReportTestStartCapturesTestNameA
 1392 0721 90       		.align 2
 1394              	_ZN8UnitTest12_GLOBAL__N_172DeferredTestReporterFixtureReportTestStartCapturesTestNameAndSuiteHelpe
 1395              	.LFB1319:
 1396              		.loc 3 52 0
 1397              		.cfi_startproc
 1398 0722 55       		pushq	%rbp
 1399              		.cfi_def_cfa_offset 16
 1400              		.cfi_offset 6, -16
 1401 0723 4889E5   		movq	%rsp, %rbp
 1402              		.cfi_def_cfa_register 6
 1403 0726 4883EC10 		subq	$16, %rsp
 1404 072a 48897DF8 		movq	%rdi, -8(%rbp)
 1405              	.LBB30:
 1406              		.loc 3 52 0
 1407 072e 488B45F8 		movq	-8(%rbp), %rax
 1408 0732 4889C7   		movq	%rax, %rdi
 1409 0735 E8AAFAFF 		call	_ZN8UnitTest12_GLOBAL__N_127DeferredTestReporterFixtureD2Ev
 1409      FF
 1410              	.LBE30:
 1411 073a C9       		leave
 1412              		.cfi_def_cfa 7, 8
 1413 073b C3       		ret
 1414              		.cfi_endproc
 1415              	.LFE1319:
 1417              		.set	_ZN8UnitTest12_GLOBAL__N_172DeferredTestReporterFixtureReportTestStartCapturesTestNameAndSuit
 1418              		.align 2
 1420              	_ZNK8UnitTest12_GLOBAL__N_170TestDeferredTestReporterFixtureReportTestStartCapturesTestNameAndSuite
 1421              	.LFB1317:
 1422              		.loc 3 52 0
 1423              		.cfi_startproc
 1424              		.cfi_personality 0x3,__gxx_personality_v0
 1425              		.cfi_lsda 0x3,.LLSDA1317
 1426 073c 55       		pushq	%rbp
 1427              		.cfi_def_cfa_offset 16
 1428              		.cfi_offset 6, -16
 1429 073d 4889E5   		movq	%rsp, %rbp
 1430              		.cfi_def_cfa_register 6
 1431 0740 4154     		pushq	%r12
 1432 0742 53       		pushq	%rbx
 1433 0743 4881ECA0 		subq	$416, %rsp
 1433      010000
 1434              		.cfi_offset 12, -24
 1435              		.cfi_offset 3, -32
 1436 074a 4889BD58 		movq	%rdi, -424(%rbp)
 1436      FEFFFF
 1437              	.LBB31:
 1438              		.loc 3 52 0
 1439 0751 C6856FFE 		movb	$0, -401(%rbp)
 1439      FFFF00
 1440              	.LBB32:
 1441 0758 488B8558 		movq	-424(%rbp), %rax
 1441      FEFFFF
 1442 075f 488D5008 		leaq	8(%rax), %rdx
 1443 0763 488D8580 		leaq	-384(%rbp), %rax
 1443      FEFFFF
 1444 076a 4889D6   		movq	%rdx, %rsi
 1445 076d 4889C7   		movq	%rax, %rdi
 1446              	.LEHB37:
 1447 0770 E845FFFF 		call	_ZN8UnitTest12_GLOBAL__N_172DeferredTestReporterFixtureReportTestStartCapturesTestNameAndSuit
 1447      FF
 1448              	.LEHE37:
 1449              		.loc 3 52 0 is_stmt 0 discriminator 1
 1450 0775 C6856FFE 		movb	$1, -401(%rbp)
 1450      FFFF01
 1451 077c 488B8558 		movq	-424(%rbp), %rax
 1451      FEFFFF
 1452 0783 488D5008 		leaq	8(%rax), %rdx
 1453 0787 488D8580 		leaq	-384(%rbp), %rax
 1453      FEFFFF
 1454 078e 4889D6   		movq	%rdx, %rsi
 1455 0791 4889C7   		movq	%rax, %rdi
 1456              	.LEHB38:
 1457 0794 E89D1B00 		call	_ZN8UnitTest11ExecuteTestINS_12_GLOBAL__N_172DeferredTestReporterFixtureReportTestStartCaptur
 1457      00
 1458              	.LEHE38:
 1459 0799 488D8580 		leaq	-384(%rbp), %rax
 1459      FEFFFF
 1460 07a0 4889C7   		movq	%rax, %rdi
 1461              	.LEHB39:
 1462 07a3 E87AFFFF 		call	_ZN8UnitTest12_GLOBAL__N_172DeferredTestReporterFixtureReportTestStartCapturesTestNameAndSuit
 1462      FF
 1463              	.LEHE39:
 1464              	.LBE32:
 1465              	.LBE31:
 1466              		.loc 3 52 0
 1467 07a8 E9640200 		jmp	.L102
 1467      00
 1468              	.L96:
 1469 07ad 4989C4   		movq	%rax, %r12
 1470 07b0 4889D3   		movq	%rdx, %rbx
 1471              	.LBB40:
 1472              	.LBB33:
 1473 07b3 488D8580 		leaq	-384(%rbp), %rax
 1473      FEFFFF
 1474 07ba 4889C7   		movq	%rax, %rdi
 1475 07bd E860FFFF 		call	_ZN8UnitTest12_GLOBAL__N_172DeferredTestReporterFixtureReportTestStartCapturesTestNameAndSuit
 1475      FF
 1476 07c2 4C89E0   		movq	%r12, %rax
 1477 07c5 4889DA   		movq	%rbx, %rdx
 1478 07c8 EB00     		jmp	.L84
 1479              	.L95:
 1480              	.L84:
 1481 07ca 4883FA01 		cmpq	$1, %rdx
 1482 07ce 745C     		je	.L86
 1483 07d0 4883FA02 		cmpq	$2, %rdx
 1484 07d4 0F84F400 		je	.L87
 1484      0000
 1485 07da E9980100 		jmp	.L101
 1485      00
 1486              	.L97:
 1487 07df 4889C3   		movq	%rax, %rbx
 1488              	.LBE33:
 1489              	.LBB34:
 1490 07e2 E8000000 		call	__cxa_end_catch
 1490      00
 1491 07e7 4889D8   		movq	%rbx, %rax
 1492 07ea 4889C7   		movq	%rax, %rdi
 1493              	.LEHB40:
 1494 07ed E8000000 		call	_Unwind_Resume
 1494      00
 1495              	.LEHE40:
 1496              	.L98:
 1497 07f2 4889C3   		movq	%rax, %rbx
 1498              	.LBE34:
 1499              	.LBB35:
 1500              	.LBB36:
 1501 07f5 488D8580 		leaq	-384(%rbp), %rax
 1501      FEFFFF
 1502 07fc 4889C7   		movq	%rax, %rdi
 1503 07ff E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 1503      00
 1504 0804 EB03     		jmp	.L90
 1505              	.L99:
 1506 0806 4889C3   		movq	%rax, %rbx
 1507              	.L90:
 1508              	.LBE36:
 1509 0809 E8000000 		call	__cxa_end_catch
 1509      00
 1510 080e 4889D8   		movq	%rbx, %rax
 1511 0811 4889C7   		movq	%rax, %rdi
 1512              	.LEHB41:
 1513 0814 E8000000 		call	_Unwind_Resume
 1513      00
 1514              	.LEHE41:
 1515              	.L100:
 1516 0819 4889C3   		movq	%rax, %rbx
 1517              	.LBE35:
 1518 081c E8000000 		call	__cxa_end_catch
 1518      00
 1519 0821 4889D8   		movq	%rbx, %rax
 1520 0824 4889C7   		movq	%rax, %rdi
 1521              	.LEHB42:
 1522 0827 E8000000 		call	_Unwind_Resume
 1522      00
 1523              	.LEHE42:
 1524              	.L86:
 1525              	.LBB38:
 1526 082c 4889C7   		movq	%rax, %rdi
 1527 082f E8000000 		call	__cxa_begin_catch
 1527      00
 1528 0834 48898570 		movq	%rax, -400(%rbp)
 1528      FEFFFF
 1529 083b 488B8570 		movq	-400(%rbp), %rax
 1529      FEFFFF
 1530 0842 488B00   		movq	(%rax), %rax
 1531 0845 4883C010 		addq	$16, %rax
 1532 0849 488B00   		movq	(%rax), %rax
 1533 084c 488B9570 		movq	-400(%rbp), %rdx
 1533      FEFFFF
 1534 0853 4889D7   		movq	%rdx, %rdi
 1535 0856 FFD0     		call	*%rax
 1536 0858 4889C3   		movq	%rax, %rbx
 1537 085b 488B8570 		movq	-400(%rbp), %rax
 1537      FEFFFF
 1538 0862 4889C7   		movq	%rax, %rdi
 1539              	.LEHB43:
 1540 0865 E8000000 		call	_ZNK8UnitTest15AssertException10LineNumberEv
 1540      00
 1541 086a 4189C4   		movl	%eax, %r12d
 1542 086d 488B8570 		movq	-400(%rbp), %rax
 1542      FEFFFF
 1543 0874 4889C7   		movq	%rax, %rdi
 1544 0877 E8000000 		call	_ZNK8UnitTest15AssertException8FilenameEv
 1544      00
 1545              		.loc 3 52 0 discriminator 1
 1546 087c 4889C1   		movq	%rax, %rcx
 1547 087f 488B8558 		movq	-424(%rbp), %rax
 1547      FEFFFF
 1548 0886 488B5008 		movq	8(%rax), %rdx
 1549 088a 488B8558 		movq	-424(%rbp), %rax
 1549      FEFFFF
 1550 0891 488B7010 		movq	16(%rax), %rsi
 1551 0895 488D8580 		leaq	-384(%rbp), %rax
 1551      FEFFFF
 1552 089c 4589E0   		movl	%r12d, %r8d
 1553 089f 4889C7   		movq	%rax, %rdi
 1554 08a2 E8000000 		call	_ZN8UnitTest11TestDetailsC1EPKcS2_S2_i
 1554      00
 1555              		.loc 3 52 0 discriminator 3
 1556 08a7 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 1556      00
 1557 08ac 488B00   		movq	(%rax), %rax
 1558 08af 488D8D80 		leaq	-384(%rbp), %rcx
 1558      FEFFFF
 1559 08b6 4889DA   		movq	%rbx, %rdx
 1560 08b9 4889CE   		movq	%rcx, %rsi
 1561 08bc 4889C7   		movq	%rax, %rdi
 1562 08bf E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 1562      00
 1563              	.LEHE43:
 1564              		.loc 3 52 0 discriminator 1
 1565 08c4 E8000000 		call	__cxa_end_catch
 1565      00
 1566              	.LBE38:
 1567              	.LBE40:
 1568 08c9 E9430100 		jmp	.L102
 1568      00
 1569              	.L87:
 1570              	.LBB41:
 1571              	.LBB39:
 1572              		.loc 3 52 0
 1573 08ce 4889C7   		movq	%rax, %rdi
 1574 08d1 E8000000 		call	__cxa_begin_catch
 1574      00
 1575 08d6 48898578 		movq	%rax, -392(%rbp)
 1575      FEFFFF
 1576              	.LBB37:
 1577 08dd 488D8580 		leaq	-384(%rbp), %rax
 1577      FEFFFF
 1578 08e4 4889C7   		movq	%rax, %rdi
 1579              	.LEHB44:
 1580 08e7 E8000000 		call	_ZN8UnitTest15MemoryOutStreamC1Ev
 1580      00
 1581              	.LEHE44:
 1582              		.loc 3 52 0 discriminator 1
 1583 08ec 488B8578 		movq	-392(%rbp), %rax
 1583      FEFFFF
 1584 08f3 488B00   		movq	(%rax), %rax
 1585 08f6 4883C010 		addq	$16, %rax
 1586 08fa 488B00   		movq	(%rax), %rax
 1587 08fd 488B9578 		movq	-392(%rbp), %rdx
 1587      FEFFFF
 1588 0904 4889D7   		movq	%rdx, %rdi
 1589 0907 FFD0     		call	*%rax
 1590 0909 4889C3   		movq	%rax, %rbx
 1591 090c 488D8580 		leaq	-384(%rbp), %rax
 1591      FEFFFF
 1592 0913 BE000000 		movl	$.LC6, %esi
 1592      00
 1593 0918 4889C7   		movq	%rax, %rdi
 1594              	.LEHB45:
 1595 091b E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
 1595      00
 1596 0920 4889DE   		movq	%rbx, %rsi
 1597 0923 4889C7   		movq	%rax, %rdi
 1598 0926 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
 1598      00
 1599 092b 488D8580 		leaq	-384(%rbp), %rax
 1599      FEFFFF
 1600 0932 4889C7   		movq	%rax, %rdi
 1601 0935 E8000000 		call	_ZNK8UnitTest15MemoryOutStream7GetTextEv
 1601      00
 1602 093a 4889C3   		movq	%rax, %rbx
 1603 093d 488B8558 		movq	-424(%rbp), %rax
 1603      FEFFFF
 1604 0944 4C8D6008 		leaq	8(%rax), %r12
 1605 0948 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 1605      00
 1606 094d 488B00   		movq	(%rax), %rax
 1607 0950 4889DA   		movq	%rbx, %rdx
 1608 0953 4C89E6   		movq	%r12, %rsi
 1609 0956 4889C7   		movq	%rax, %rdi
 1610 0959 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 1610      00
 1611              	.LEHE45:
 1612 095e 488D8580 		leaq	-384(%rbp), %rax
 1612      FEFFFF
 1613 0965 4889C7   		movq	%rax, %rdi
 1614              	.LEHB46:
 1615 0968 E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 1615      00
 1616              	.LEHE46:
 1617              	.LBE37:
 1618              		.loc 3 52 0
 1619 096d E8000000 		call	__cxa_end_catch
 1619      00
 1620              	.LBE39:
 1621              	.LBE41:
 1622 0972 E99A0000 		jmp	.L102
 1622      00
 1623              	.L101:
 1624              	.LBB42:
 1625 0977 4889C7   		movq	%rax, %rdi
 1626 097a E8000000 		call	__cxa_begin_catch
 1626      00
 1627 097f 80BD6FFE 		cmpb	$0, -401(%rbp)
 1627      FFFF00
 1628 0986 7443     		je	.L93
 1629              		.loc 3 52 0 discriminator 1
 1630 0988 488B8558 		movq	-424(%rbp), %rax
 1630      FEFFFF
 1631 098f 488D4808 		leaq	8(%rax), %rcx
 1632 0993 488D8580 		leaq	-384(%rbp), %rax
 1632      FEFFFF
 1633 099a BA340000 		movl	$52, %edx
 1633      00
 1634 099f 4889CE   		movq	%rcx, %rsi
 1635 09a2 4889C7   		movq	%rax, %rdi
 1636              	.LEHB47:
 1637 09a5 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 1637      00
 1638 09aa E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 1638      00
 1639 09af 488B00   		movq	(%rax), %rax
 1640 09b2 488D8D80 		leaq	-384(%rbp), %rcx
 1640      FEFFFF
 1641 09b9 BA000000 		movl	$.LC7, %edx
 1641      00
 1642 09be 4889CE   		movq	%rcx, %rsi
 1643 09c1 4889C7   		movq	%rax, %rdi
 1644 09c4 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 1644      00
 1645 09c9 EB41     		jmp	.L94
 1646              	.L93:
 1647              		.loc 3 52 0 discriminator 2
 1648 09cb 488B8558 		movq	-424(%rbp), %rax
 1648      FEFFFF
 1649 09d2 488D4808 		leaq	8(%rax), %rcx
 1650 09d6 488D8580 		leaq	-384(%rbp), %rax
 1650      FEFFFF
 1651 09dd BA340000 		movl	$52, %edx
 1651      00
 1652 09e2 4889CE   		movq	%rcx, %rsi
 1653 09e5 4889C7   		movq	%rax, %rdi
 1654 09e8 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 1654      00
 1655              		.loc 3 52 0 discriminator 1
 1656 09ed E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 1656      00
 1657 09f2 488B00   		movq	(%rax), %rax
 1658 09f5 488D8D80 		leaq	-384(%rbp), %rcx
 1658      FEFFFF
 1659 09fc BA000000 		movl	$.LC8, %edx
 1659      00
 1660 0a01 4889CE   		movq	%rcx, %rsi
 1661 0a04 4889C7   		movq	%rax, %rdi
 1662 0a07 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 1662      00
 1663              	.LEHE47:
 1664              	.L94:
 1665              	.LEHB48:
 1666 0a0c E8000000 		call	__cxa_end_catch
 1666      00
 1667              	.LEHE48:
 1668              	.L102:
 1669              	.LBE42:
 1670              		.loc 3 52 0
 1671 0a11 90       		nop
 1672 0a12 4881C4A0 		addq	$416, %rsp
 1672      010000
 1673 0a19 5B       		popq	%rbx
 1674 0a1a 415C     		popq	%r12
 1675 0a1c 5D       		popq	%rbp
 1676              		.cfi_def_cfa 7, 8
 1677 0a1d C3       		ret
 1678              		.cfi_endproc
 1679              	.LFE1317:
 1680              		.section	.gcc_except_table
 1681              		.align 4
 1682              	.LLSDA1317:
 1683 00bc FF       		.byte	0xff
 1684 00bd 03       		.byte	0x3
 1685 00be 59       		.uleb128 .LLSDATT1317-.LLSDATTD1317
 1686              	.LLSDATTD1317:
 1687 00bf 01       		.byte	0x1
 1688 00c0 40       		.uleb128 .LLSDACSE1317-.LLSDACSB1317
 1689              	.LLSDACSB1317:
 1690 00c1 34       		.uleb128 .LEHB37-.LFB1317
 1691 00c2 05       		.uleb128 .LEHE37-.LEHB37
 1692 00c3 8E01     		.uleb128 .L95-.LFB1317
 1693 00c5 05       		.uleb128 0x5
 1694 00c6 58       		.uleb128 .LEHB38-.LFB1317
 1695 00c7 05       		.uleb128 .LEHE38-.LEHB38
 1696 00c8 71       		.uleb128 .L96-.LFB1317
 1697 00c9 07       		.uleb128 0x7
 1698 00ca 67       		.uleb128 .LEHB39-.LFB1317
 1699 00cb 05       		.uleb128 .LEHE39-.LEHB39
 1700 00cc 8E01     		.uleb128 .L95-.LFB1317
 1701 00ce 05       		.uleb128 0x5
 1702 00cf B101     		.uleb128 .LEHB40-.LFB1317
 1703 00d1 05       		.uleb128 .LEHE40-.LEHB40
 1704 00d2 00       		.uleb128 0
 1705 00d3 00       		.uleb128 0
 1706 00d4 D801     		.uleb128 .LEHB41-.LFB1317
 1707 00d6 05       		.uleb128 .LEHE41-.LEHB41
 1708 00d7 00       		.uleb128 0
 1709 00d8 00       		.uleb128 0
 1710 00d9 EB01     		.uleb128 .LEHB42-.LFB1317
 1711 00db 05       		.uleb128 .LEHE42-.LEHB42
 1712 00dc 00       		.uleb128 0
 1713 00dd 00       		.uleb128 0
 1714 00de A902     		.uleb128 .LEHB43-.LFB1317
 1715 00e0 5F       		.uleb128 .LEHE43-.LEHB43
 1716 00e1 A301     		.uleb128 .L97-.LFB1317
 1717 00e3 00       		.uleb128 0
 1718 00e4 AB03     		.uleb128 .LEHB44-.LFB1317
 1719 00e6 05       		.uleb128 .LEHE44-.LEHB44
 1720 00e7 CA01     		.uleb128 .L99-.LFB1317
 1721 00e9 00       		.uleb128 0
 1722 00ea DF03     		.uleb128 .LEHB45-.LFB1317
 1723 00ec 43       		.uleb128 .LEHE45-.LEHB45
 1724 00ed B601     		.uleb128 .L98-.LFB1317
 1725 00ef 00       		.uleb128 0
 1726 00f0 AC04     		.uleb128 .LEHB46-.LFB1317
 1727 00f2 05       		.uleb128 .LEHE46-.LEHB46
 1728 00f3 CA01     		.uleb128 .L99-.LFB1317
 1729 00f5 00       		.uleb128 0
 1730 00f6 E904     		.uleb128 .LEHB47-.LFB1317
 1731 00f8 67       		.uleb128 .LEHE47-.LEHB47
 1732 00f9 DD01     		.uleb128 .L100-.LFB1317
 1733 00fb 00       		.uleb128 0
 1734 00fc D005     		.uleb128 .LEHB48-.LFB1317
 1735 00fe 05       		.uleb128 .LEHE48-.LEHB48
 1736 00ff 00       		.uleb128 0
 1737 0100 00       		.uleb128 0
 1738              	.LLSDACSE1317:
 1739 0101 03       		.byte	0x3
 1740 0102 00       		.byte	0
 1741 0103 02       		.byte	0x2
 1742 0104 7D       		.byte	0x7d
 1743 0105 01       		.byte	0x1
 1744 0106 7D       		.byte	0x7d
 1745 0107 00       		.byte	0
 1746 0108 7D       		.byte	0x7d
 1747 0109 000000   		.align 4
 1748 010c 00000000 		.long	0
 1749              	
 1750 0110 00000000 		.long	_ZTISt9exception
 1751 0114 00000000 		.long	_ZTIN8UnitTest15AssertExceptionE
 1752              	.LLSDATT1317:
 1753              		.text
 1755              		.section	.rodata
 1756              		.align 8
 1757              	.LC11:
 1758 01b0 556E6861 		.string	"Unhandled exception in CHECK_EQUAL(testName.c_str(), result.testName)"
 1758      6E646C65 
 1758      64206578 
 1758      63657074 
 1758      696F6E20 
 1759 01f6 0000     		.align 8
 1760              	.LC12:
 1761 01f8 556E6861 		.string	"Unhandled exception in CHECK_EQUAL(testSuite.c_str(), result.suiteName)"
 1761      6E646C65 
 1761      64206578 
 1761      63657074 
 1761      696F6E20 
 1762              		.text
 1763              		.align 2
 1765              	_ZN8UnitTest12_GLOBAL__N_172DeferredTestReporterFixtureReportTestStartCapturesTestNameAndSuiteHelpe
 1766              	.LFB1321:
  53:TestDeferredTestReporter.cpp **** {
 1767              		.loc 3 53 0 is_stmt 1
 1768              		.cfi_startproc
 1769              		.cfi_personality 0x3,__gxx_personality_v0
 1770              		.cfi_lsda 0x3,.LLSDA1321
 1771 0a1e 55       		pushq	%rbp
 1772              		.cfi_def_cfa_offset 16
 1773              		.cfi_offset 6, -16
 1774 0a1f 4889E5   		movq	%rsp, %rbp
 1775              		.cfi_def_cfa_register 6
 1776 0a22 53       		pushq	%rbx
 1777 0a23 4883EC48 		subq	$72, %rsp
 1778              		.cfi_offset 3, -24
 1779 0a27 48897DB8 		movq	%rdi, -72(%rbp)
 1780              	.LBB43:
  54:TestDeferredTestReporter.cpp ****     reporter.ReportTestStart(details);
 1781              		.loc 3 54 0
 1782 0a2b 488B45B8 		movq	-72(%rbp), %rax
 1783 0a2f 488D5040 		leaq	64(%rax), %rdx
 1784 0a33 488B45B8 		movq	-72(%rbp), %rax
 1785 0a37 4889D6   		movq	%rdx, %rsi
 1786 0a3a 4889C7   		movq	%rax, %rdi
 1787              	.LEHB49:
 1788 0a3d E8000000 		call	_ZN8UnitTest20DeferredTestReporter15ReportTestStartERKNS_11TestDetailsE
 1788      00
  55:TestDeferredTestReporter.cpp **** 
  56:TestDeferredTestReporter.cpp ****     DeferredTestResult const& result = reporter.GetResults().at(0);
 1789              		.loc 3 56 0
 1790 0a42 488B45B8 		movq	-72(%rbp), %rax
 1791 0a46 4889C7   		movq	%rax, %rdi
 1792 0a49 E8000000 		call	_ZN8UnitTest20DeferredTestReporter10GetResultsEv
 1792      00
 1793 0a4e BE000000 		movl	$0, %esi
 1793      00
 1794 0a53 4889C7   		movq	%rax, %rdi
 1795 0a56 E8000000 		call	_ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EE2atEm
 1795      00
 1796              	.LEHE49:
 1797 0a5b 488945C8 		movq	%rax, -56(%rbp)
 1798              	.LEHB50:
  57:TestDeferredTestReporter.cpp ****     CHECK_EQUAL(testName.c_str(), result.testName);
 1799              		.loc 3 57 0
 1800 0a5f E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 1800      00
 1801 0a64 488B08   		movq	(%rax), %rcx
 1802 0a67 488D45D0 		leaq	-48(%rbp), %rax
 1803 0a6b BA390000 		movl	$57, %edx
 1803      00
 1804 0a70 4889CE   		movq	%rcx, %rsi
 1805 0a73 4889C7   		movq	%rax, %rdi
 1806 0a76 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 1806      00
 1807              		.loc 3 57 0 is_stmt 0 discriminator 1
 1808 0a7b 488B45C8 		movq	-56(%rbp), %rax
 1809 0a7f 488D5808 		leaq	8(%rax), %rbx
 1810 0a83 488B45B8 		movq	-72(%rbp), %rax
 1811 0a87 4883C020 		addq	$32, %rax
 1812 0a8b 4889C7   		movq	%rax, %rdi
 1813 0a8e E8000000 		call	_ZNKSs5c_strEv
 1813      00
 1814 0a93 488945C0 		movq	%rax, -64(%rbp)
 1815 0a97 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 1815      00
 1816 0a9c 488B00   		movq	(%rax), %rax
 1817 0a9f 488D55D0 		leaq	-48(%rbp), %rdx
 1818 0aa3 488D75C0 		leaq	-64(%rbp), %rsi
 1819 0aa7 4889D1   		movq	%rdx, %rcx
 1820 0aaa 4889DA   		movq	%rbx, %rdx
 1821 0aad 4889C7   		movq	%rax, %rdi
 1822 0ab0 E8000000 		call	_ZN8UnitTest10CheckEqualIPKcSsEEvRNS_11TestResultsERKT_RKT0_RKNS_11TestDetailsE
 1822      00
 1823              	.LEHE50:
 1824              	.L106:
 1825              	.LEHB51:
  58:TestDeferredTestReporter.cpp ****     CHECK_EQUAL(testSuite.c_str(), result.suiteName);
 1826              		.loc 3 58 0 is_stmt 1
 1827 0ab5 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 1827      00
 1828 0aba 488B08   		movq	(%rax), %rcx
 1829 0abd 488D45D0 		leaq	-48(%rbp), %rax
 1830 0ac1 BA3A0000 		movl	$58, %edx
 1830      00
 1831 0ac6 4889CE   		movq	%rcx, %rsi
 1832 0ac9 4889C7   		movq	%rax, %rdi
 1833 0acc E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 1833      00
 1834              		.loc 3 58 0 is_stmt 0 discriminator 1
 1835 0ad1 488B5DC8 		movq	-56(%rbp), %rbx
 1836 0ad5 488B45B8 		movq	-72(%rbp), %rax
 1837 0ad9 4883C028 		addq	$40, %rax
 1838 0add 4889C7   		movq	%rax, %rdi
 1839 0ae0 E8000000 		call	_ZNKSs5c_strEv
 1839      00
 1840 0ae5 488945C0 		movq	%rax, -64(%rbp)
 1841 0ae9 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 1841      00
 1842 0aee 488B00   		movq	(%rax), %rax
 1843 0af1 488D55D0 		leaq	-48(%rbp), %rdx
 1844 0af5 488D75C0 		leaq	-64(%rbp), %rsi
 1845 0af9 4889D1   		movq	%rdx, %rcx
 1846 0afc 4889DA   		movq	%rbx, %rdx
 1847 0aff 4889C7   		movq	%rax, %rdi
 1848 0b02 E8000000 		call	_ZN8UnitTest10CheckEqualIPKcSsEEvRNS_11TestResultsERKT_RKT0_RKNS_11TestDetailsE
 1848      00
 1849              	.LEHE51:
 1850              	.LBE43:
  59:TestDeferredTestReporter.cpp **** }
 1851              		.loc 3 59 0 is_stmt 1
 1852 0b07 E9B50000 		jmp	.L114
 1852      00
 1853              	.L111:
 1854 0b0c 4889C3   		movq	%rax, %rbx
 1855              	.LBB44:
  57:TestDeferredTestReporter.cpp ****     CHECK_EQUAL(testName.c_str(), result.testName);
 1856              		.loc 3 57 0
 1857 0b0f E8000000 		call	__cxa_end_catch
 1857      00
 1858 0b14 4889D8   		movq	%rbx, %rax
 1859 0b17 4889C7   		movq	%rax, %rdi
 1860              	.LEHB52:
 1861 0b1a E8000000 		call	_Unwind_Resume
 1861      00
 1862              	.LEHE52:
 1863              	.L110:
 1864 0b1f 4889C7   		movq	%rax, %rdi
 1865 0b22 E8000000 		call	__cxa_begin_catch
 1865      00
 1866              	.LEHB53:
 1867 0b27 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 1867      00
 1868 0b2c 488B08   		movq	(%rax), %rcx
 1869 0b2f 488D45D0 		leaq	-48(%rbp), %rax
 1870 0b33 BA390000 		movl	$57, %edx
 1870      00
 1871 0b38 4889CE   		movq	%rcx, %rsi
 1872 0b3b 4889C7   		movq	%rax, %rdi
 1873 0b3e E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 1873      00
  57:TestDeferredTestReporter.cpp ****     CHECK_EQUAL(testName.c_str(), result.testName);
 1874              		.loc 3 57 0 is_stmt 0 discriminator 1
 1875 0b43 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 1875      00
 1876 0b48 488B00   		movq	(%rax), %rax
 1877 0b4b 488D4DD0 		leaq	-48(%rbp), %rcx
 1878 0b4f BA000000 		movl	$.LC11, %edx
 1878      00
 1879 0b54 4889CE   		movq	%rcx, %rsi
 1880 0b57 4889C7   		movq	%rax, %rdi
 1881 0b5a E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 1881      00
 1882              	.LEHE53:
 1883              	.LEHB54:
 1884 0b5f E8000000 		call	__cxa_end_catch
 1884      00
 1885              	.LEHE54:
 1886 0b64 E94CFFFF 		jmp	.L106
 1886      FF
 1887              	.L113:
 1888 0b69 4889C3   		movq	%rax, %rbx
  58:TestDeferredTestReporter.cpp ****     CHECK_EQUAL(testSuite.c_str(), result.suiteName);
 1889              		.loc 3 58 0 is_stmt 1
 1890 0b6c E8000000 		call	__cxa_end_catch
 1890      00
 1891 0b71 4889D8   		movq	%rbx, %rax
 1892 0b74 4889C7   		movq	%rax, %rdi
 1893              	.LEHB55:
 1894 0b77 E8000000 		call	_Unwind_Resume
 1894      00
 1895              	.LEHE55:
 1896              	.L112:
 1897 0b7c 4889C7   		movq	%rax, %rdi
 1898 0b7f E8000000 		call	__cxa_begin_catch
 1898      00
 1899              	.LEHB56:
 1900 0b84 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 1900      00
 1901 0b89 488B08   		movq	(%rax), %rcx
 1902 0b8c 488D45D0 		leaq	-48(%rbp), %rax
 1903 0b90 BA3A0000 		movl	$58, %edx
 1903      00
 1904 0b95 4889CE   		movq	%rcx, %rsi
 1905 0b98 4889C7   		movq	%rax, %rdi
 1906 0b9b E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 1906      00
  58:TestDeferredTestReporter.cpp ****     CHECK_EQUAL(testSuite.c_str(), result.suiteName);
 1907              		.loc 3 58 0 is_stmt 0 discriminator 1
 1908 0ba0 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 1908      00
 1909 0ba5 488B00   		movq	(%rax), %rax
 1910 0ba8 488D4DD0 		leaq	-48(%rbp), %rcx
 1911 0bac BA000000 		movl	$.LC12, %edx
 1911      00
 1912 0bb1 4889CE   		movq	%rcx, %rsi
 1913 0bb4 4889C7   		movq	%rax, %rdi
 1914 0bb7 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 1914      00
 1915              	.LEHE56:
 1916              	.LEHB57:
 1917 0bbc E8000000 		call	__cxa_end_catch
 1917      00
 1918              	.LEHE57:
 1919              	.L114:
 1920              	.LBE44:
 1921              		.loc 3 59 0 is_stmt 1
 1922 0bc1 90       		nop
 1923 0bc2 4883C448 		addq	$72, %rsp
 1924 0bc6 5B       		popq	%rbx
 1925 0bc7 5D       		popq	%rbp
 1926              		.cfi_def_cfa 7, 8
 1927 0bc8 C3       		ret
 1928              		.cfi_endproc
 1929              	.LFE1321:
 1930              		.section	.gcc_except_table
 1931              		.align 4
 1932              	.LLSDA1321:
 1933 0118 FF       		.byte	0xff
 1934 0119 03       		.byte	0x3
 1935 011a 39       		.uleb128 .LLSDATT1321-.LLSDATTD1321
 1936              	.LLSDATTD1321:
 1937 011b 01       		.byte	0x1
 1938 011c 2F       		.uleb128 .LLSDACSE1321-.LLSDACSB1321
 1939              	.LLSDACSB1321:
 1940 011d 1F       		.uleb128 .LEHB49-.LFB1321
 1941 011e 1E       		.uleb128 .LEHE49-.LEHB49
 1942 011f 00       		.uleb128 0
 1943 0120 00       		.uleb128 0
 1944 0121 41       		.uleb128 .LEHB50-.LFB1321
 1945 0122 56       		.uleb128 .LEHE50-.LEHB50
 1946 0123 8102     		.uleb128 .L110-.LFB1321
 1947 0125 01       		.uleb128 0x1
 1948 0126 9701     		.uleb128 .LEHB51-.LFB1321
 1949 0128 52       		.uleb128 .LEHE51-.LEHB51
 1950 0129 DE02     		.uleb128 .L112-.LFB1321
 1951 012b 01       		.uleb128 0x1
 1952 012c FC01     		.uleb128 .LEHB52-.LFB1321
 1953 012e 05       		.uleb128 .LEHE52-.LEHB52
 1954 012f 00       		.uleb128 0
 1955 0130 00       		.uleb128 0
 1956 0131 8902     		.uleb128 .LEHB53-.LFB1321
 1957 0133 38       		.uleb128 .LEHE53-.LEHB53
 1958 0134 EE01     		.uleb128 .L111-.LFB1321
 1959 0136 00       		.uleb128 0
 1960 0137 C102     		.uleb128 .LEHB54-.LFB1321
 1961 0139 05       		.uleb128 .LEHE54-.LEHB54
 1962 013a 00       		.uleb128 0
 1963 013b 00       		.uleb128 0
 1964 013c D902     		.uleb128 .LEHB55-.LFB1321
 1965 013e 05       		.uleb128 .LEHE55-.LEHB55
 1966 013f 00       		.uleb128 0
 1967 0140 00       		.uleb128 0
 1968 0141 E602     		.uleb128 .LEHB56-.LFB1321
 1969 0143 38       		.uleb128 .LEHE56-.LEHB56
 1970 0144 CB02     		.uleb128 .L113-.LFB1321
 1971 0146 00       		.uleb128 0
 1972 0147 9E03     		.uleb128 .LEHB57-.LFB1321
 1973 0149 05       		.uleb128 .LEHE57-.LEHB57
 1974 014a 00       		.uleb128 0
 1975 014b 00       		.uleb128 0
 1976              	.LLSDACSE1321:
 1977 014c 01       		.byte	0x1
 1978 014d 00       		.byte	0
 1979 014e 0000     		.align 4
 1980 0150 00000000 		.long	0
 1981              	
 1982              	.LLSDATT1321:
 1983              		.text
 1985 0bc9 90       		.align 2
 1987              	_ZN8UnitTest12_GLOBAL__N_162DeferredTestReporterFixtureReportTestEndCapturesTestTimeHelperC2ERKNS_1
 1988              	.LFB1323:
  60:TestDeferredTestReporter.cpp **** 
  61:TestDeferredTestReporter.cpp **** TEST_FIXTURE(DeferredTestReporterFixture, ReportTestEndCapturesTestTime)
 1989              		.loc 3 61 0
 1990              		.cfi_startproc
 1991 0bca 55       		pushq	%rbp
 1992              		.cfi_def_cfa_offset 16
 1993              		.cfi_offset 6, -16
 1994 0bcb 4889E5   		movq	%rsp, %rbp
 1995              		.cfi_def_cfa_register 6
 1996 0bce 4883EC10 		subq	$16, %rsp
 1997 0bd2 48897DF8 		movq	%rdi, -8(%rbp)
 1998 0bd6 488975F0 		movq	%rsi, -16(%rbp)
 1999              	.LBB45:
 2000              		.loc 3 61 0
 2001 0bda 488B45F8 		movq	-8(%rbp), %rax
 2002 0bde 4889C7   		movq	%rax, %rdi
 2003 0be1 E858F4FF 		call	_ZN8UnitTest12_GLOBAL__N_127DeferredTestReporterFixtureC2Ev
 2003      FF
 2004 0be6 488B45F8 		movq	-8(%rbp), %rax
 2005 0bea 488B55F0 		movq	-16(%rbp), %rdx
 2006 0bee 48895060 		movq	%rdx, 96(%rax)
 2007              	.LBE45:
 2008 0bf2 C9       		leave
 2009              		.cfi_def_cfa 7, 8
 2010 0bf3 C3       		ret
 2011              		.cfi_endproc
 2012              	.LFE1323:
 2014              		.set	_ZN8UnitTest12_GLOBAL__N_162DeferredTestReporterFixtureReportTestEndCapturesTestTimeHelperC1E
 2015              		.section	.rodata
 2016              	.LC13:
 2017 0240 5265706F 		.string	"ReportTestEndCapturesTestTime"
 2017      72745465 
 2017      7374456E 
 2017      64436170 
 2017      74757265 
 2018              		.text
 2019              		.align 2
 2021              	_ZN8UnitTest12_GLOBAL__N_160TestDeferredTestReporterFixtureReportTestEndCapturesTestTimeC2Ev:
 2022              	.LFB1326:
 2023              		.loc 3 61 0
 2024              		.cfi_startproc
 2025 0bf4 55       		pushq	%rbp
 2026              		.cfi_def_cfa_offset 16
 2027              		.cfi_offset 6, -16
 2028 0bf5 4889E5   		movq	%rsp, %rbp
 2029              		.cfi_def_cfa_register 6
 2030 0bf8 4883EC10 		subq	$16, %rsp
 2031 0bfc 48897DF8 		movq	%rdi, -8(%rbp)
 2032              	.LBB46:
 2033              		.loc 3 61 0
 2034 0c00 E8000000 		call	_ZN13UnitTestSuite12GetSuiteNameEv
 2034      00
 2035 0c05 4889C2   		movq	%rax, %rdx
 2036 0c08 488B45F8 		movq	-8(%rbp), %rax
 2037 0c0c 41B83D00 		movl	$61, %r8d
 2037      0000
 2038 0c12 B9000000 		movl	$.LC4, %ecx
 2038      00
 2039 0c17 BE000000 		movl	$.LC13, %esi
 2039      00
 2040 0c1c 4889C7   		movq	%rax, %rdi
 2041 0c1f E8000000 		call	_ZN8UnitTest4TestC2EPKcS2_S2_i
 2041      00
 2042 0c24 488B45F8 		movq	-8(%rbp), %rax
 2043 0c28 48C70000 		movq	$_ZTVN8UnitTest12_GLOBAL__N_160TestDeferredTestReporterFixtureReportTestEndCapturesTestTimeE+
 2043      000000
 2044              	.LBE46:
 2045 0c2f C9       		leave
 2046              		.cfi_def_cfa 7, 8
 2047 0c30 C3       		ret
 2048              		.cfi_endproc
 2049              	.LFE1326:
 2051              		.set	_ZN8UnitTest12_GLOBAL__N_160TestDeferredTestReporterFixtureReportTestEndCapturesTestTimeC1Ev,
 2052              		.local	_ZN8UnitTest12_GLOBAL__N_168testDeferredTestReporterFixtureReportTestEndCapturesTestTimeIns
 2053              		.comm	_ZN8UnitTest12_GLOBAL__N_168testDeferredTestReporterFixtureReportTestEndCapturesTestTimeInst
 2054              		.local	_ZN8UnitTest12_GLOBAL__N_161adderDeferredTestReporterFixtureReportTestEndCapturesTestTimeE
 2055              		.comm	_ZN8UnitTest12_GLOBAL__N_161adderDeferredTestReporterFixtureReportTestEndCapturesTestTimeE,1
 2056 0c31 90       		.align 2
 2058              	_ZN8UnitTest12_GLOBAL__N_162DeferredTestReporterFixtureReportTestEndCapturesTestTimeHelperD2Ev:
 2059              	.LFB1330:
 2060              		.loc 3 61 0
 2061              		.cfi_startproc
 2062 0c32 55       		pushq	%rbp
 2063              		.cfi_def_cfa_offset 16
 2064              		.cfi_offset 6, -16
 2065 0c33 4889E5   		movq	%rsp, %rbp
 2066              		.cfi_def_cfa_register 6
 2067 0c36 4883EC10 		subq	$16, %rsp
 2068 0c3a 48897DF8 		movq	%rdi, -8(%rbp)
 2069              	.LBB47:
 2070              		.loc 3 61 0
 2071 0c3e 488B45F8 		movq	-8(%rbp), %rax
 2072 0c42 4889C7   		movq	%rax, %rdi
 2073 0c45 E89AF5FF 		call	_ZN8UnitTest12_GLOBAL__N_127DeferredTestReporterFixtureD2Ev
 2073      FF
 2074              	.LBE47:
 2075 0c4a C9       		leave
 2076              		.cfi_def_cfa 7, 8
 2077 0c4b C3       		ret
 2078              		.cfi_endproc
 2079              	.LFE1330:
 2081              		.set	_ZN8UnitTest12_GLOBAL__N_162DeferredTestReporterFixtureReportTestEndCapturesTestTimeHelperD1E
 2082              		.align 2
 2084              	_ZNK8UnitTest12_GLOBAL__N_160TestDeferredTestReporterFixtureReportTestEndCapturesTestTime7RunImplEv
 2085              	.LFB1328:
 2086              		.loc 3 61 0
 2087              		.cfi_startproc
 2088              		.cfi_personality 0x3,__gxx_personality_v0
 2089              		.cfi_lsda 0x3,.LLSDA1328
 2090 0c4c 55       		pushq	%rbp
 2091              		.cfi_def_cfa_offset 16
 2092              		.cfi_offset 6, -16
 2093 0c4d 4889E5   		movq	%rsp, %rbp
 2094              		.cfi_def_cfa_register 6
 2095 0c50 4154     		pushq	%r12
 2096 0c52 53       		pushq	%rbx
 2097 0c53 4881ECA0 		subq	$416, %rsp
 2097      010000
 2098              		.cfi_offset 12, -24
 2099              		.cfi_offset 3, -32
 2100 0c5a 4889BD58 		movq	%rdi, -424(%rbp)
 2100      FEFFFF
 2101              	.LBB48:
 2102              		.loc 3 61 0
 2103 0c61 C6856FFE 		movb	$0, -401(%rbp)
 2103      FFFF00
 2104              	.LBB49:
 2105 0c68 488B8558 		movq	-424(%rbp), %rax
 2105      FEFFFF
 2106 0c6f 488D5008 		leaq	8(%rax), %rdx
 2107 0c73 488D8580 		leaq	-384(%rbp), %rax
 2107      FEFFFF
 2108 0c7a 4889D6   		movq	%rdx, %rsi
 2109 0c7d 4889C7   		movq	%rax, %rdi
 2110              	.LEHB58:
 2111 0c80 E845FFFF 		call	_ZN8UnitTest12_GLOBAL__N_162DeferredTestReporterFixtureReportTestEndCapturesTestTimeHelperC1E
 2111      FF
 2112              	.LEHE58:
 2113              		.loc 3 61 0 is_stmt 0 discriminator 1
 2114 0c85 C6856FFE 		movb	$1, -401(%rbp)
 2114      FFFF01
 2115 0c8c 488B8558 		movq	-424(%rbp), %rax
 2115      FEFFFF
 2116 0c93 488D5008 		leaq	8(%rax), %rdx
 2117 0c97 488D8580 		leaq	-384(%rbp), %rax
 2117      FEFFFF
 2118 0c9e 4889D6   		movq	%rdx, %rsi
 2119 0ca1 4889C7   		movq	%rax, %rdi
 2120              	.LEHB59:
 2121 0ca4 E8251900 		call	_ZN8UnitTest11ExecuteTestINS_12_GLOBAL__N_162DeferredTestReporterFixtureReportTestEndCaptures
 2121      00
 2122              	.LEHE59:
 2123 0ca9 488D8580 		leaq	-384(%rbp), %rax
 2123      FEFFFF
 2124 0cb0 4889C7   		movq	%rax, %rdi
 2125              	.LEHB60:
 2126 0cb3 E87AFFFF 		call	_ZN8UnitTest12_GLOBAL__N_162DeferredTestReporterFixtureReportTestEndCapturesTestTimeHelperD1E
 2126      FF
 2127              	.LEHE60:
 2128              	.LBE49:
 2129              	.LBE48:
 2130              		.loc 3 61 0
 2131 0cb8 E9640200 		jmp	.L139
 2131      00
 2132              	.L133:
 2133 0cbd 4989C4   		movq	%rax, %r12
 2134 0cc0 4889D3   		movq	%rdx, %rbx
 2135              	.LBB57:
 2136              	.LBB50:
 2137 0cc3 488D8580 		leaq	-384(%rbp), %rax
 2137      FEFFFF
 2138 0cca 4889C7   		movq	%rax, %rdi
 2139 0ccd E860FFFF 		call	_ZN8UnitTest12_GLOBAL__N_162DeferredTestReporterFixtureReportTestEndCapturesTestTimeHelperD1E
 2139      FF
 2140 0cd2 4C89E0   		movq	%r12, %rax
 2141 0cd5 4889DA   		movq	%rbx, %rdx
 2142 0cd8 EB00     		jmp	.L121
 2143              	.L132:
 2144              	.L121:
 2145 0cda 4883FA01 		cmpq	$1, %rdx
 2146 0cde 745C     		je	.L123
 2147 0ce0 4883FA02 		cmpq	$2, %rdx
 2148 0ce4 0F84F400 		je	.L124
 2148      0000
 2149 0cea E9980100 		jmp	.L138
 2149      00
 2150              	.L134:
 2151 0cef 4889C3   		movq	%rax, %rbx
 2152              	.LBE50:
 2153              	.LBB51:
 2154 0cf2 E8000000 		call	__cxa_end_catch
 2154      00
 2155 0cf7 4889D8   		movq	%rbx, %rax
 2156 0cfa 4889C7   		movq	%rax, %rdi
 2157              	.LEHB61:
 2158 0cfd E8000000 		call	_Unwind_Resume
 2158      00
 2159              	.LEHE61:
 2160              	.L135:
 2161 0d02 4889C3   		movq	%rax, %rbx
 2162              	.LBE51:
 2163              	.LBB52:
 2164              	.LBB53:
 2165 0d05 488D8580 		leaq	-384(%rbp), %rax
 2165      FEFFFF
 2166 0d0c 4889C7   		movq	%rax, %rdi
 2167 0d0f E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 2167      00
 2168 0d14 EB03     		jmp	.L127
 2169              	.L136:
 2170 0d16 4889C3   		movq	%rax, %rbx
 2171              	.L127:
 2172              	.LBE53:
 2173 0d19 E8000000 		call	__cxa_end_catch
 2173      00
 2174 0d1e 4889D8   		movq	%rbx, %rax
 2175 0d21 4889C7   		movq	%rax, %rdi
 2176              	.LEHB62:
 2177 0d24 E8000000 		call	_Unwind_Resume
 2177      00
 2178              	.LEHE62:
 2179              	.L137:
 2180 0d29 4889C3   		movq	%rax, %rbx
 2181              	.LBE52:
 2182 0d2c E8000000 		call	__cxa_end_catch
 2182      00
 2183 0d31 4889D8   		movq	%rbx, %rax
 2184 0d34 4889C7   		movq	%rax, %rdi
 2185              	.LEHB63:
 2186 0d37 E8000000 		call	_Unwind_Resume
 2186      00
 2187              	.LEHE63:
 2188              	.L123:
 2189              	.LBB55:
 2190 0d3c 4889C7   		movq	%rax, %rdi
 2191 0d3f E8000000 		call	__cxa_begin_catch
 2191      00
 2192 0d44 48898570 		movq	%rax, -400(%rbp)
 2192      FEFFFF
 2193 0d4b 488B8570 		movq	-400(%rbp), %rax
 2193      FEFFFF
 2194 0d52 488B00   		movq	(%rax), %rax
 2195 0d55 4883C010 		addq	$16, %rax
 2196 0d59 488B00   		movq	(%rax), %rax
 2197 0d5c 488B9570 		movq	-400(%rbp), %rdx
 2197      FEFFFF
 2198 0d63 4889D7   		movq	%rdx, %rdi
 2199 0d66 FFD0     		call	*%rax
 2200 0d68 4889C3   		movq	%rax, %rbx
 2201 0d6b 488B8570 		movq	-400(%rbp), %rax
 2201      FEFFFF
 2202 0d72 4889C7   		movq	%rax, %rdi
 2203              	.LEHB64:
 2204 0d75 E8000000 		call	_ZNK8UnitTest15AssertException10LineNumberEv
 2204      00
 2205 0d7a 4189C4   		movl	%eax, %r12d
 2206 0d7d 488B8570 		movq	-400(%rbp), %rax
 2206      FEFFFF
 2207 0d84 4889C7   		movq	%rax, %rdi
 2208 0d87 E8000000 		call	_ZNK8UnitTest15AssertException8FilenameEv
 2208      00
 2209              		.loc 3 61 0 discriminator 1
 2210 0d8c 4889C1   		movq	%rax, %rcx
 2211 0d8f 488B8558 		movq	-424(%rbp), %rax
 2211      FEFFFF
 2212 0d96 488B5008 		movq	8(%rax), %rdx
 2213 0d9a 488B8558 		movq	-424(%rbp), %rax
 2213      FEFFFF
 2214 0da1 488B7010 		movq	16(%rax), %rsi
 2215 0da5 488D8580 		leaq	-384(%rbp), %rax
 2215      FEFFFF
 2216 0dac 4589E0   		movl	%r12d, %r8d
 2217 0daf 4889C7   		movq	%rax, %rdi
 2218 0db2 E8000000 		call	_ZN8UnitTest11TestDetailsC1EPKcS2_S2_i
 2218      00
 2219              		.loc 3 61 0 discriminator 3
 2220 0db7 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 2220      00
 2221 0dbc 488B00   		movq	(%rax), %rax
 2222 0dbf 488D8D80 		leaq	-384(%rbp), %rcx
 2222      FEFFFF
 2223 0dc6 4889DA   		movq	%rbx, %rdx
 2224 0dc9 4889CE   		movq	%rcx, %rsi
 2225 0dcc 4889C7   		movq	%rax, %rdi
 2226 0dcf E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 2226      00
 2227              	.LEHE64:
 2228              		.loc 3 61 0 discriminator 1
 2229 0dd4 E8000000 		call	__cxa_end_catch
 2229      00
 2230              	.LBE55:
 2231              	.LBE57:
 2232 0dd9 E9430100 		jmp	.L139
 2232      00
 2233              	.L124:
 2234              	.LBB58:
 2235              	.LBB56:
 2236              		.loc 3 61 0
 2237 0dde 4889C7   		movq	%rax, %rdi
 2238 0de1 E8000000 		call	__cxa_begin_catch
 2238      00
 2239 0de6 48898578 		movq	%rax, -392(%rbp)
 2239      FEFFFF
 2240              	.LBB54:
 2241 0ded 488D8580 		leaq	-384(%rbp), %rax
 2241      FEFFFF
 2242 0df4 4889C7   		movq	%rax, %rdi
 2243              	.LEHB65:
 2244 0df7 E8000000 		call	_ZN8UnitTest15MemoryOutStreamC1Ev
 2244      00
 2245              	.LEHE65:
 2246              		.loc 3 61 0 discriminator 1
 2247 0dfc 488B8578 		movq	-392(%rbp), %rax
 2247      FEFFFF
 2248 0e03 488B00   		movq	(%rax), %rax
 2249 0e06 4883C010 		addq	$16, %rax
 2250 0e0a 488B00   		movq	(%rax), %rax
 2251 0e0d 488B9578 		movq	-392(%rbp), %rdx
 2251      FEFFFF
 2252 0e14 4889D7   		movq	%rdx, %rdi
 2253 0e17 FFD0     		call	*%rax
 2254 0e19 4889C3   		movq	%rax, %rbx
 2255 0e1c 488D8580 		leaq	-384(%rbp), %rax
 2255      FEFFFF
 2256 0e23 BE000000 		movl	$.LC6, %esi
 2256      00
 2257 0e28 4889C7   		movq	%rax, %rdi
 2258              	.LEHB66:
 2259 0e2b E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
 2259      00
 2260 0e30 4889DE   		movq	%rbx, %rsi
 2261 0e33 4889C7   		movq	%rax, %rdi
 2262 0e36 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
 2262      00
 2263 0e3b 488D8580 		leaq	-384(%rbp), %rax
 2263      FEFFFF
 2264 0e42 4889C7   		movq	%rax, %rdi
 2265 0e45 E8000000 		call	_ZNK8UnitTest15MemoryOutStream7GetTextEv
 2265      00
 2266 0e4a 4889C3   		movq	%rax, %rbx
 2267 0e4d 488B8558 		movq	-424(%rbp), %rax
 2267      FEFFFF
 2268 0e54 4C8D6008 		leaq	8(%rax), %r12
 2269 0e58 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 2269      00
 2270 0e5d 488B00   		movq	(%rax), %rax
 2271 0e60 4889DA   		movq	%rbx, %rdx
 2272 0e63 4C89E6   		movq	%r12, %rsi
 2273 0e66 4889C7   		movq	%rax, %rdi
 2274 0e69 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 2274      00
 2275              	.LEHE66:
 2276 0e6e 488D8580 		leaq	-384(%rbp), %rax
 2276      FEFFFF
 2277 0e75 4889C7   		movq	%rax, %rdi
 2278              	.LEHB67:
 2279 0e78 E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 2279      00
 2280              	.LEHE67:
 2281              	.LBE54:
 2282              		.loc 3 61 0
 2283 0e7d E8000000 		call	__cxa_end_catch
 2283      00
 2284              	.LBE56:
 2285              	.LBE58:
 2286 0e82 E99A0000 		jmp	.L139
 2286      00
 2287              	.L138:
 2288              	.LBB59:
 2289 0e87 4889C7   		movq	%rax, %rdi
 2290 0e8a E8000000 		call	__cxa_begin_catch
 2290      00
 2291 0e8f 80BD6FFE 		cmpb	$0, -401(%rbp)
 2291      FFFF00
 2292 0e96 7443     		je	.L130
 2293              		.loc 3 61 0 discriminator 1
 2294 0e98 488B8558 		movq	-424(%rbp), %rax
 2294      FEFFFF
 2295 0e9f 488D4808 		leaq	8(%rax), %rcx
 2296 0ea3 488D8580 		leaq	-384(%rbp), %rax
 2296      FEFFFF
 2297 0eaa BA3D0000 		movl	$61, %edx
 2297      00
 2298 0eaf 4889CE   		movq	%rcx, %rsi
 2299 0eb2 4889C7   		movq	%rax, %rdi
 2300              	.LEHB68:
 2301 0eb5 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 2301      00
 2302 0eba E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 2302      00
 2303 0ebf 488B00   		movq	(%rax), %rax
 2304 0ec2 488D8D80 		leaq	-384(%rbp), %rcx
 2304      FEFFFF
 2305 0ec9 BA000000 		movl	$.LC7, %edx
 2305      00
 2306 0ece 4889CE   		movq	%rcx, %rsi
 2307 0ed1 4889C7   		movq	%rax, %rdi
 2308 0ed4 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 2308      00
 2309 0ed9 EB41     		jmp	.L131
 2310              	.L130:
 2311              		.loc 3 61 0 discriminator 2
 2312 0edb 488B8558 		movq	-424(%rbp), %rax
 2312      FEFFFF
 2313 0ee2 488D4808 		leaq	8(%rax), %rcx
 2314 0ee6 488D8580 		leaq	-384(%rbp), %rax
 2314      FEFFFF
 2315 0eed BA3D0000 		movl	$61, %edx
 2315      00
 2316 0ef2 4889CE   		movq	%rcx, %rsi
 2317 0ef5 4889C7   		movq	%rax, %rdi
 2318 0ef8 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 2318      00
 2319              		.loc 3 61 0 discriminator 1
 2320 0efd E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 2320      00
 2321 0f02 488B00   		movq	(%rax), %rax
 2322 0f05 488D8D80 		leaq	-384(%rbp), %rcx
 2322      FEFFFF
 2323 0f0c BA000000 		movl	$.LC8, %edx
 2323      00
 2324 0f11 4889CE   		movq	%rcx, %rsi
 2325 0f14 4889C7   		movq	%rax, %rdi
 2326 0f17 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 2326      00
 2327              	.LEHE68:
 2328              	.L131:
 2329              	.LEHB69:
 2330 0f1c E8000000 		call	__cxa_end_catch
 2330      00
 2331              	.LEHE69:
 2332              	.L139:
 2333              	.LBE59:
 2334              		.loc 3 61 0
 2335 0f21 90       		nop
 2336 0f22 4881C4A0 		addq	$416, %rsp
 2336      010000
 2337 0f29 5B       		popq	%rbx
 2338 0f2a 415C     		popq	%r12
 2339 0f2c 5D       		popq	%rbp
 2340              		.cfi_def_cfa 7, 8
 2341 0f2d C3       		ret
 2342              		.cfi_endproc
 2343              	.LFE1328:
 2344              		.section	.gcc_except_table
 2345              		.align 4
 2346              	.LLSDA1328:
 2347 0154 FF       		.byte	0xff
 2348 0155 03       		.byte	0x3
 2349 0156 59       		.uleb128 .LLSDATT1328-.LLSDATTD1328
 2350              	.LLSDATTD1328:
 2351 0157 01       		.byte	0x1
 2352 0158 40       		.uleb128 .LLSDACSE1328-.LLSDACSB1328
 2353              	.LLSDACSB1328:
 2354 0159 34       		.uleb128 .LEHB58-.LFB1328
 2355 015a 05       		.uleb128 .LEHE58-.LEHB58
 2356 015b 8E01     		.uleb128 .L132-.LFB1328
 2357 015d 05       		.uleb128 0x5
 2358 015e 58       		.uleb128 .LEHB59-.LFB1328
 2359 015f 05       		.uleb128 .LEHE59-.LEHB59
 2360 0160 71       		.uleb128 .L133-.LFB1328
 2361 0161 07       		.uleb128 0x7
 2362 0162 67       		.uleb128 .LEHB60-.LFB1328
 2363 0163 05       		.uleb128 .LEHE60-.LEHB60
 2364 0164 8E01     		.uleb128 .L132-.LFB1328
 2365 0166 05       		.uleb128 0x5
 2366 0167 B101     		.uleb128 .LEHB61-.LFB1328
 2367 0169 05       		.uleb128 .LEHE61-.LEHB61
 2368 016a 00       		.uleb128 0
 2369 016b 00       		.uleb128 0
 2370 016c D801     		.uleb128 .LEHB62-.LFB1328
 2371 016e 05       		.uleb128 .LEHE62-.LEHB62
 2372 016f 00       		.uleb128 0
 2373 0170 00       		.uleb128 0
 2374 0171 EB01     		.uleb128 .LEHB63-.LFB1328
 2375 0173 05       		.uleb128 .LEHE63-.LEHB63
 2376 0174 00       		.uleb128 0
 2377 0175 00       		.uleb128 0
 2378 0176 A902     		.uleb128 .LEHB64-.LFB1328
 2379 0178 5F       		.uleb128 .LEHE64-.LEHB64
 2380 0179 A301     		.uleb128 .L134-.LFB1328
 2381 017b 00       		.uleb128 0
 2382 017c AB03     		.uleb128 .LEHB65-.LFB1328
 2383 017e 05       		.uleb128 .LEHE65-.LEHB65
 2384 017f CA01     		.uleb128 .L136-.LFB1328
 2385 0181 00       		.uleb128 0
 2386 0182 DF03     		.uleb128 .LEHB66-.LFB1328
 2387 0184 43       		.uleb128 .LEHE66-.LEHB66
 2388 0185 B601     		.uleb128 .L135-.LFB1328
 2389 0187 00       		.uleb128 0
 2390 0188 AC04     		.uleb128 .LEHB67-.LFB1328
 2391 018a 05       		.uleb128 .LEHE67-.LEHB67
 2392 018b CA01     		.uleb128 .L136-.LFB1328
 2393 018d 00       		.uleb128 0
 2394 018e E904     		.uleb128 .LEHB68-.LFB1328
 2395 0190 67       		.uleb128 .LEHE68-.LEHB68
 2396 0191 DD01     		.uleb128 .L137-.LFB1328
 2397 0193 00       		.uleb128 0
 2398 0194 D005     		.uleb128 .LEHB69-.LFB1328
 2399 0196 05       		.uleb128 .LEHE69-.LEHB69
 2400 0197 00       		.uleb128 0
 2401 0198 00       		.uleb128 0
 2402              	.LLSDACSE1328:
 2403 0199 03       		.byte	0x3
 2404 019a 00       		.byte	0
 2405 019b 02       		.byte	0x2
 2406 019c 7D       		.byte	0x7d
 2407 019d 01       		.byte	0x1
 2408 019e 7D       		.byte	0x7d
 2409 019f 00       		.byte	0
 2410 01a0 7D       		.byte	0x7d
 2411 01a1 000000   		.align 4
 2412 01a4 00000000 		.long	0
 2413              	
 2414 01a8 00000000 		.long	_ZTISt9exception
 2415 01ac 00000000 		.long	_ZTIN8UnitTest15AssertExceptionE
 2416              	.LLSDATT1328:
 2417              		.text
 2419              		.section	.rodata
 2420 025e 0000     		.align 8
 2421              	.LC16:
 2422 0260 556E6861 		.string	"Unhandled exception in CHECK_CLOSE(elapsed, result.timeElapsed)"
 2422      6E646C65 
 2422      64206578 
 2422      63657074 
 2422      696F6E20 
 2423              		.text
 2424              		.align 2
 2426              	_ZN8UnitTest12_GLOBAL__N_162DeferredTestReporterFixtureReportTestEndCapturesTestTimeHelper7RunImplE
 2427              	.LFB1332:
  62:TestDeferredTestReporter.cpp **** {
 2428              		.loc 3 62 0 is_stmt 1
 2429              		.cfi_startproc
 2430              		.cfi_personality 0x3,__gxx_personality_v0
 2431              		.cfi_lsda 0x3,.LLSDA1332
 2432 0f2e 55       		pushq	%rbp
 2433              		.cfi_def_cfa_offset 16
 2434              		.cfi_offset 6, -16
 2435 0f2f 4889E5   		movq	%rsp, %rbp
 2436              		.cfi_def_cfa_register 6
 2437 0f32 53       		pushq	%rbx
 2438 0f33 4883EC48 		subq	$72, %rsp
 2439              		.cfi_offset 3, -24
 2440 0f37 48897DB8 		movq	%rdi, -72(%rbp)
 2441              	.LBB60:
  63:TestDeferredTestReporter.cpp ****     float const elapsed = 123.45f;
 2442              		.loc 3 63 0
 2443 0f3b 8B050000 		movl	.LC14(%rip), %eax
 2443      0000
 2444 0f41 8945C0   		movl	%eax, -64(%rbp)
  64:TestDeferredTestReporter.cpp ****     reporter.ReportTestStart(details);
 2445              		.loc 3 64 0
 2446 0f44 488B45B8 		movq	-72(%rbp), %rax
 2447 0f48 488D5040 		leaq	64(%rax), %rdx
 2448 0f4c 488B45B8 		movq	-72(%rbp), %rax
 2449 0f50 4889D6   		movq	%rdx, %rsi
 2450 0f53 4889C7   		movq	%rax, %rdi
 2451              	.LEHB70:
 2452 0f56 E8000000 		call	_ZN8UnitTest20DeferredTestReporter15ReportTestStartERKNS_11TestDetailsE
 2452      00
  65:TestDeferredTestReporter.cpp ****     reporter.ReportTestFinish(details, elapsed);
 2453              		.loc 3 65 0
 2454 0f5b 488B45B8 		movq	-72(%rbp), %rax
 2455 0f5f 488D5040 		leaq	64(%rax), %rdx
 2456 0f63 488B45B8 		movq	-72(%rbp), %rax
 2457 0f67 F30F1005 		movss	.LC14(%rip), %xmm0
 2457      00000000 
 2458 0f6f 4889D6   		movq	%rdx, %rsi
 2459 0f72 4889C7   		movq	%rax, %rdi
 2460 0f75 E8000000 		call	_ZN8UnitTest20DeferredTestReporter16ReportTestFinishERKNS_11TestDetailsEf
 2460      00
  66:TestDeferredTestReporter.cpp **** 
  67:TestDeferredTestReporter.cpp ****     DeferredTestResult const& result = reporter.GetResults().at(0);
 2461              		.loc 3 67 0
 2462 0f7a 488B45B8 		movq	-72(%rbp), %rax
 2463 0f7e 4889C7   		movq	%rax, %rdi
 2464 0f81 E8000000 		call	_ZN8UnitTest20DeferredTestReporter10GetResultsEv
 2464      00
 2465 0f86 BE000000 		movl	$0, %esi
 2465      00
 2466 0f8b 4889C7   		movq	%rax, %rdi
 2467 0f8e E8000000 		call	_ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EE2atEm
 2467      00
 2468              	.LEHE70:
 2469 0f93 488945C8 		movq	%rax, -56(%rbp)
 2470              	.LEHB71:
  68:TestDeferredTestReporter.cpp ****     CHECK_CLOSE(elapsed, result.timeElapsed, 0.0001f);
 2471              		.loc 3 68 0
 2472 0f97 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 2472      00
 2473 0f9c 488B08   		movq	(%rax), %rcx
 2474 0f9f 488D45D0 		leaq	-48(%rbp), %rax
 2475 0fa3 BA440000 		movl	$68, %edx
 2475      00
 2476 0fa8 4889CE   		movq	%rcx, %rsi
 2477 0fab 4889C7   		movq	%rax, %rdi
 2478 0fae E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 2478      00
 2479              		.loc 3 68 0 is_stmt 0 discriminator 1
 2480 0fb3 8B050000 		movl	.LC15(%rip), %eax
 2480      0000
 2481 0fb9 8945C4   		movl	%eax, -60(%rbp)
 2482 0fbc 488B45C8 		movq	-56(%rbp), %rax
 2483 0fc0 488D5830 		leaq	48(%rax), %rbx
 2484 0fc4 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 2484      00
 2485 0fc9 488B00   		movq	(%rax), %rax
 2486 0fcc 488D4DD0 		leaq	-48(%rbp), %rcx
 2487 0fd0 488D55C4 		leaq	-60(%rbp), %rdx
 2488 0fd4 488D75C0 		leaq	-64(%rbp), %rsi
 2489 0fd8 4989C8   		movq	%rcx, %r8
 2490 0fdb 4889D1   		movq	%rdx, %rcx
 2491 0fde 4889DA   		movq	%rbx, %rdx
 2492 0fe1 4889C7   		movq	%rax, %rdi
 2493 0fe4 E8000000 		call	_ZN8UnitTest10CheckCloseIfffEEvRNS_11TestResultsERKT_RKT0_RKT1_RKNS_11TestDetailsE
 2493      00
 2494              	.LEHE71:
 2495              	.LBE60:
  69:TestDeferredTestReporter.cpp **** }
 2496              		.loc 3 69 0 is_stmt 1
 2497 0fe9 EB58     		jmp	.L146
 2498              	.L145:
 2499 0feb 4889C3   		movq	%rax, %rbx
 2500              	.LBB61:
  68:TestDeferredTestReporter.cpp ****     CHECK_CLOSE(elapsed, result.timeElapsed, 0.0001f);
 2501              		.loc 3 68 0
 2502 0fee E8000000 		call	__cxa_end_catch
 2502      00
 2503 0ff3 4889D8   		movq	%rbx, %rax
 2504 0ff6 4889C7   		movq	%rax, %rdi
 2505              	.LEHB72:
 2506 0ff9 E8000000 		call	_Unwind_Resume
 2506      00
 2507              	.LEHE72:
 2508              	.L144:
 2509 0ffe 4889C7   		movq	%rax, %rdi
 2510 1001 E8000000 		call	__cxa_begin_catch
 2510      00
 2511              	.LEHB73:
 2512 1006 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 2512      00
 2513 100b 488B08   		movq	(%rax), %rcx
 2514 100e 488D45D0 		leaq	-48(%rbp), %rax
 2515 1012 BA440000 		movl	$68, %edx
 2515      00
 2516 1017 4889CE   		movq	%rcx, %rsi
 2517 101a 4889C7   		movq	%rax, %rdi
 2518 101d E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 2518      00
  68:TestDeferredTestReporter.cpp ****     CHECK_CLOSE(elapsed, result.timeElapsed, 0.0001f);
 2519              		.loc 3 68 0 is_stmt 0 discriminator 1
 2520 1022 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 2520      00
 2521 1027 488B00   		movq	(%rax), %rax
 2522 102a 488D4DD0 		leaq	-48(%rbp), %rcx
 2523 102e BA000000 		movl	$.LC16, %edx
 2523      00
 2524 1033 4889CE   		movq	%rcx, %rsi
 2525 1036 4889C7   		movq	%rax, %rdi
 2526 1039 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 2526      00
 2527              	.LEHE73:
 2528              	.LEHB74:
 2529 103e E8000000 		call	__cxa_end_catch
 2529      00
 2530              	.LEHE74:
 2531              	.L146:
 2532              	.LBE61:
 2533              		.loc 3 69 0 is_stmt 1
 2534 1043 90       		nop
 2535 1044 4883C448 		addq	$72, %rsp
 2536 1048 5B       		popq	%rbx
 2537 1049 5D       		popq	%rbp
 2538              		.cfi_def_cfa 7, 8
 2539 104a C3       		ret
 2540              		.cfi_endproc
 2541              	.LFE1332:
 2542              		.section	.gcc_except_table
 2543              		.align 4
 2544              	.LLSDA1332:
 2545 01b0 FF       		.byte	0xff
 2546 01b1 03       		.byte	0x3
 2547 01b2 21       		.uleb128 .LLSDATT1332-.LLSDATTD1332
 2548              	.LLSDATTD1332:
 2549 01b3 01       		.byte	0x1
 2550 01b4 19       		.uleb128 .LLSDACSE1332-.LLSDACSB1332
 2551              	.LLSDACSB1332:
 2552 01b5 28       		.uleb128 .LEHB70-.LFB1332
 2553 01b6 3D       		.uleb128 .LEHE70-.LEHB70
 2554 01b7 00       		.uleb128 0
 2555 01b8 00       		.uleb128 0
 2556 01b9 69       		.uleb128 .LEHB71-.LFB1332
 2557 01ba 52       		.uleb128 .LEHE71-.LEHB71
 2558 01bb D001     		.uleb128 .L144-.LFB1332
 2559 01bd 01       		.uleb128 0x1
 2560 01be CB01     		.uleb128 .LEHB72-.LFB1332
 2561 01c0 05       		.uleb128 .LEHE72-.LEHB72
 2562 01c1 00       		.uleb128 0
 2563 01c2 00       		.uleb128 0
 2564 01c3 D801     		.uleb128 .LEHB73-.LFB1332
 2565 01c5 38       		.uleb128 .LEHE73-.LEHB73
 2566 01c6 BD01     		.uleb128 .L145-.LFB1332
 2567 01c8 00       		.uleb128 0
 2568 01c9 9002     		.uleb128 .LEHB74-.LFB1332
 2569 01cb 05       		.uleb128 .LEHE74-.LEHB74
 2570 01cc 00       		.uleb128 0
 2571 01cd 00       		.uleb128 0
 2572              	.LLSDACSE1332:
 2573 01ce 01       		.byte	0x1
 2574 01cf 00       		.byte	0
 2575              		.align 4
 2576 01d0 00000000 		.long	0
 2577              	
 2578              	.LLSDATT1332:
 2579              		.text
 2581 104b 90       		.align 2
 2583              	_ZN8UnitTest12_GLOBAL__N_165DeferredTestReporterFixtureReportFailureSavesFailureDetailsHelperC2ERKN
 2584              	.LFB1334:
  70:TestDeferredTestReporter.cpp **** 
  71:TestDeferredTestReporter.cpp **** TEST_FIXTURE(DeferredTestReporterFixture, ReportFailureSavesFailureDetails)
 2585              		.loc 3 71 0
 2586              		.cfi_startproc
 2587 104c 55       		pushq	%rbp
 2588              		.cfi_def_cfa_offset 16
 2589              		.cfi_offset 6, -16
 2590 104d 4889E5   		movq	%rsp, %rbp
 2591              		.cfi_def_cfa_register 6
 2592 1050 4883EC10 		subq	$16, %rsp
 2593 1054 48897DF8 		movq	%rdi, -8(%rbp)
 2594 1058 488975F0 		movq	%rsi, -16(%rbp)
 2595              	.LBB62:
 2596              		.loc 3 71 0
 2597 105c 488B45F8 		movq	-8(%rbp), %rax
 2598 1060 4889C7   		movq	%rax, %rdi
 2599 1063 E8D6EFFF 		call	_ZN8UnitTest12_GLOBAL__N_127DeferredTestReporterFixtureC2Ev
 2599      FF
 2600 1068 488B45F8 		movq	-8(%rbp), %rax
 2601 106c 488B55F0 		movq	-16(%rbp), %rdx
 2602 1070 48895060 		movq	%rdx, 96(%rax)
 2603              	.LBE62:
 2604 1074 C9       		leave
 2605              		.cfi_def_cfa 7, 8
 2606 1075 C3       		ret
 2607              		.cfi_endproc
 2608              	.LFE1334:
 2610              		.set	_ZN8UnitTest12_GLOBAL__N_165DeferredTestReporterFixtureReportFailureSavesFailureDetailsHelper
 2611              		.section	.rodata
 2612              		.align 8
 2613              	.LC17:
 2614 02a0 5265706F 		.string	"ReportFailureSavesFailureDetails"
 2614      72744661 
 2614      696C7572 
 2614      65536176 
 2614      65734661 
 2615              		.text
 2616              		.align 2
 2618              	_ZN8UnitTest12_GLOBAL__N_163TestDeferredTestReporterFixtureReportFailureSavesFailureDetailsC2Ev:
 2619              	.LFB1337:
 2620              		.loc 3 71 0
 2621              		.cfi_startproc
 2622 1076 55       		pushq	%rbp
 2623              		.cfi_def_cfa_offset 16
 2624              		.cfi_offset 6, -16
 2625 1077 4889E5   		movq	%rsp, %rbp
 2626              		.cfi_def_cfa_register 6
 2627 107a 4883EC10 		subq	$16, %rsp
 2628 107e 48897DF8 		movq	%rdi, -8(%rbp)
 2629              	.LBB63:
 2630              		.loc 3 71 0
 2631 1082 E8000000 		call	_ZN13UnitTestSuite12GetSuiteNameEv
 2631      00
 2632 1087 4889C2   		movq	%rax, %rdx
 2633 108a 488B45F8 		movq	-8(%rbp), %rax
 2634 108e 41B84700 		movl	$71, %r8d
 2634      0000
 2635 1094 B9000000 		movl	$.LC4, %ecx
 2635      00
 2636 1099 BE000000 		movl	$.LC17, %esi
 2636      00
 2637 109e 4889C7   		movq	%rax, %rdi
 2638 10a1 E8000000 		call	_ZN8UnitTest4TestC2EPKcS2_S2_i
 2638      00
 2639 10a6 488B45F8 		movq	-8(%rbp), %rax
 2640 10aa 48C70000 		movq	$_ZTVN8UnitTest12_GLOBAL__N_163TestDeferredTestReporterFixtureReportFailureSavesFailureDetail
 2640      000000
 2641              	.LBE63:
 2642 10b1 C9       		leave
 2643              		.cfi_def_cfa 7, 8
 2644 10b2 C3       		ret
 2645              		.cfi_endproc
 2646              	.LFE1337:
 2648              		.set	_ZN8UnitTest12_GLOBAL__N_163TestDeferredTestReporterFixtureReportFailureSavesFailureDetailsC1
 2649              		.local	_ZN8UnitTest12_GLOBAL__N_171testDeferredTestReporterFixtureReportFailureSavesFailureDetails
 2650              		.comm	_ZN8UnitTest12_GLOBAL__N_171testDeferredTestReporterFixtureReportFailureSavesFailureDetailsI
 2651              		.local	_ZN8UnitTest12_GLOBAL__N_164adderDeferredTestReporterFixtureReportFailureSavesFailureDetail
 2652              		.comm	_ZN8UnitTest12_GLOBAL__N_164adderDeferredTestReporterFixtureReportFailureSavesFailureDetails
 2653 10b3 90       		.align 2
 2655              	_ZN8UnitTest12_GLOBAL__N_165DeferredTestReporterFixtureReportFailureSavesFailureDetailsHelperD2Ev:
 2656              	.LFB1341:
 2657              		.loc 3 71 0
 2658              		.cfi_startproc
 2659 10b4 55       		pushq	%rbp
 2660              		.cfi_def_cfa_offset 16
 2661              		.cfi_offset 6, -16
 2662 10b5 4889E5   		movq	%rsp, %rbp
 2663              		.cfi_def_cfa_register 6
 2664 10b8 4883EC10 		subq	$16, %rsp
 2665 10bc 48897DF8 		movq	%rdi, -8(%rbp)
 2666              	.LBB64:
 2667              		.loc 3 71 0
 2668 10c0 488B45F8 		movq	-8(%rbp), %rax
 2669 10c4 4889C7   		movq	%rax, %rdi
 2670 10c7 E818F1FF 		call	_ZN8UnitTest12_GLOBAL__N_127DeferredTestReporterFixtureD2Ev
 2670      FF
 2671              	.LBE64:
 2672 10cc C9       		leave
 2673              		.cfi_def_cfa 7, 8
 2674 10cd C3       		ret
 2675              		.cfi_endproc
 2676              	.LFE1341:
 2678              		.set	_ZN8UnitTest12_GLOBAL__N_165DeferredTestReporterFixtureReportFailureSavesFailureDetailsHelper
 2679              		.align 2
 2681              	_ZNK8UnitTest12_GLOBAL__N_163TestDeferredTestReporterFixtureReportFailureSavesFailureDetails7RunImp
 2682              	.LFB1339:
 2683              		.loc 3 71 0
 2684              		.cfi_startproc
 2685              		.cfi_personality 0x3,__gxx_personality_v0
 2686              		.cfi_lsda 0x3,.LLSDA1339
 2687 10ce 55       		pushq	%rbp
 2688              		.cfi_def_cfa_offset 16
 2689              		.cfi_offset 6, -16
 2690 10cf 4889E5   		movq	%rsp, %rbp
 2691              		.cfi_def_cfa_register 6
 2692 10d2 4154     		pushq	%r12
 2693 10d4 53       		pushq	%rbx
 2694 10d5 4881ECA0 		subq	$416, %rsp
 2694      010000
 2695              		.cfi_offset 12, -24
 2696              		.cfi_offset 3, -32
 2697 10dc 4889BD58 		movq	%rdi, -424(%rbp)
 2697      FEFFFF
 2698              	.LBB65:
 2699              		.loc 3 71 0
 2700 10e3 C6856FFE 		movb	$0, -401(%rbp)
 2700      FFFF00
 2701              	.LBB66:
 2702 10ea 488B8558 		movq	-424(%rbp), %rax
 2702      FEFFFF
 2703 10f1 488D5008 		leaq	8(%rax), %rdx
 2704 10f5 488D8580 		leaq	-384(%rbp), %rax
 2704      FEFFFF
 2705 10fc 4889D6   		movq	%rdx, %rsi
 2706 10ff 4889C7   		movq	%rax, %rdi
 2707              	.LEHB75:
 2708 1102 E845FFFF 		call	_ZN8UnitTest12_GLOBAL__N_165DeferredTestReporterFixtureReportFailureSavesFailureDetailsHelper
 2708      FF
 2709              	.LEHE75:
 2710              		.loc 3 71 0 is_stmt 0 discriminator 1
 2711 1107 C6856FFE 		movb	$1, -401(%rbp)
 2711      FFFF01
 2712 110e 488B8558 		movq	-424(%rbp), %rax
 2712      FEFFFF
 2713 1115 488D5008 		leaq	8(%rax), %rdx
 2714 1119 488D8580 		leaq	-384(%rbp), %rax
 2714      FEFFFF
 2715 1120 4889D6   		movq	%rdx, %rsi
 2716 1123 4889C7   		movq	%rax, %rdi
 2717              	.LEHB76:
 2718 1126 E83B1700 		call	_ZN8UnitTest11ExecuteTestINS_12_GLOBAL__N_165DeferredTestReporterFixtureReportFailureSavesFai
 2718      00
 2719              	.LEHE76:
 2720 112b 488D8580 		leaq	-384(%rbp), %rax
 2720      FEFFFF
 2721 1132 4889C7   		movq	%rax, %rdi
 2722              	.LEHB77:
 2723 1135 E87AFFFF 		call	_ZN8UnitTest12_GLOBAL__N_165DeferredTestReporterFixtureReportFailureSavesFailureDetailsHelper
 2723      FF
 2724              	.LEHE77:
 2725              	.LBE66:
 2726              	.LBE65:
 2727              		.loc 3 71 0
 2728 113a E9640200 		jmp	.L171
 2728      00
 2729              	.L165:
 2730 113f 4989C4   		movq	%rax, %r12
 2731 1142 4889D3   		movq	%rdx, %rbx
 2732              	.LBB74:
 2733              	.LBB67:
 2734 1145 488D8580 		leaq	-384(%rbp), %rax
 2734      FEFFFF
 2735 114c 4889C7   		movq	%rax, %rdi
 2736 114f E860FFFF 		call	_ZN8UnitTest12_GLOBAL__N_165DeferredTestReporterFixtureReportFailureSavesFailureDetailsHelper
 2736      FF
 2737 1154 4C89E0   		movq	%r12, %rax
 2738 1157 4889DA   		movq	%rbx, %rdx
 2739 115a EB00     		jmp	.L153
 2740              	.L164:
 2741              	.L153:
 2742 115c 4883FA01 		cmpq	$1, %rdx
 2743 1160 745C     		je	.L155
 2744 1162 4883FA02 		cmpq	$2, %rdx
 2745 1166 0F84F400 		je	.L156
 2745      0000
 2746 116c E9980100 		jmp	.L170
 2746      00
 2747              	.L166:
 2748 1171 4889C3   		movq	%rax, %rbx
 2749              	.LBE67:
 2750              	.LBB68:
 2751 1174 E8000000 		call	__cxa_end_catch
 2751      00
 2752 1179 4889D8   		movq	%rbx, %rax
 2753 117c 4889C7   		movq	%rax, %rdi
 2754              	.LEHB78:
 2755 117f E8000000 		call	_Unwind_Resume
 2755      00
 2756              	.LEHE78:
 2757              	.L167:
 2758 1184 4889C3   		movq	%rax, %rbx
 2759              	.LBE68:
 2760              	.LBB69:
 2761              	.LBB70:
 2762 1187 488D8580 		leaq	-384(%rbp), %rax
 2762      FEFFFF
 2763 118e 4889C7   		movq	%rax, %rdi
 2764 1191 E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 2764      00
 2765 1196 EB03     		jmp	.L159
 2766              	.L168:
 2767 1198 4889C3   		movq	%rax, %rbx
 2768              	.L159:
 2769              	.LBE70:
 2770 119b E8000000 		call	__cxa_end_catch
 2770      00
 2771 11a0 4889D8   		movq	%rbx, %rax
 2772 11a3 4889C7   		movq	%rax, %rdi
 2773              	.LEHB79:
 2774 11a6 E8000000 		call	_Unwind_Resume
 2774      00
 2775              	.LEHE79:
 2776              	.L169:
 2777 11ab 4889C3   		movq	%rax, %rbx
 2778              	.LBE69:
 2779 11ae E8000000 		call	__cxa_end_catch
 2779      00
 2780 11b3 4889D8   		movq	%rbx, %rax
 2781 11b6 4889C7   		movq	%rax, %rdi
 2782              	.LEHB80:
 2783 11b9 E8000000 		call	_Unwind_Resume
 2783      00
 2784              	.LEHE80:
 2785              	.L155:
 2786              	.LBB72:
 2787 11be 4889C7   		movq	%rax, %rdi
 2788 11c1 E8000000 		call	__cxa_begin_catch
 2788      00
 2789 11c6 48898570 		movq	%rax, -400(%rbp)
 2789      FEFFFF
 2790 11cd 488B8570 		movq	-400(%rbp), %rax
 2790      FEFFFF
 2791 11d4 488B00   		movq	(%rax), %rax
 2792 11d7 4883C010 		addq	$16, %rax
 2793 11db 488B00   		movq	(%rax), %rax
 2794 11de 488B9570 		movq	-400(%rbp), %rdx
 2794      FEFFFF
 2795 11e5 4889D7   		movq	%rdx, %rdi
 2796 11e8 FFD0     		call	*%rax
 2797 11ea 4889C3   		movq	%rax, %rbx
 2798 11ed 488B8570 		movq	-400(%rbp), %rax
 2798      FEFFFF
 2799 11f4 4889C7   		movq	%rax, %rdi
 2800              	.LEHB81:
 2801 11f7 E8000000 		call	_ZNK8UnitTest15AssertException10LineNumberEv
 2801      00
 2802 11fc 4189C4   		movl	%eax, %r12d
 2803 11ff 488B8570 		movq	-400(%rbp), %rax
 2803      FEFFFF
 2804 1206 4889C7   		movq	%rax, %rdi
 2805 1209 E8000000 		call	_ZNK8UnitTest15AssertException8FilenameEv
 2805      00
 2806              		.loc 3 71 0 discriminator 1
 2807 120e 4889C1   		movq	%rax, %rcx
 2808 1211 488B8558 		movq	-424(%rbp), %rax
 2808      FEFFFF
 2809 1218 488B5008 		movq	8(%rax), %rdx
 2810 121c 488B8558 		movq	-424(%rbp), %rax
 2810      FEFFFF
 2811 1223 488B7010 		movq	16(%rax), %rsi
 2812 1227 488D8580 		leaq	-384(%rbp), %rax
 2812      FEFFFF
 2813 122e 4589E0   		movl	%r12d, %r8d
 2814 1231 4889C7   		movq	%rax, %rdi
 2815 1234 E8000000 		call	_ZN8UnitTest11TestDetailsC1EPKcS2_S2_i
 2815      00
 2816              		.loc 3 71 0 discriminator 3
 2817 1239 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 2817      00
 2818 123e 488B00   		movq	(%rax), %rax
 2819 1241 488D8D80 		leaq	-384(%rbp), %rcx
 2819      FEFFFF
 2820 1248 4889DA   		movq	%rbx, %rdx
 2821 124b 4889CE   		movq	%rcx, %rsi
 2822 124e 4889C7   		movq	%rax, %rdi
 2823 1251 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 2823      00
 2824              	.LEHE81:
 2825              		.loc 3 71 0 discriminator 1
 2826 1256 E8000000 		call	__cxa_end_catch
 2826      00
 2827              	.LBE72:
 2828              	.LBE74:
 2829 125b E9430100 		jmp	.L171
 2829      00
 2830              	.L156:
 2831              	.LBB75:
 2832              	.LBB73:
 2833              		.loc 3 71 0
 2834 1260 4889C7   		movq	%rax, %rdi
 2835 1263 E8000000 		call	__cxa_begin_catch
 2835      00
 2836 1268 48898578 		movq	%rax, -392(%rbp)
 2836      FEFFFF
 2837              	.LBB71:
 2838 126f 488D8580 		leaq	-384(%rbp), %rax
 2838      FEFFFF
 2839 1276 4889C7   		movq	%rax, %rdi
 2840              	.LEHB82:
 2841 1279 E8000000 		call	_ZN8UnitTest15MemoryOutStreamC1Ev
 2841      00
 2842              	.LEHE82:
 2843              		.loc 3 71 0 discriminator 1
 2844 127e 488B8578 		movq	-392(%rbp), %rax
 2844      FEFFFF
 2845 1285 488B00   		movq	(%rax), %rax
 2846 1288 4883C010 		addq	$16, %rax
 2847 128c 488B00   		movq	(%rax), %rax
 2848 128f 488B9578 		movq	-392(%rbp), %rdx
 2848      FEFFFF
 2849 1296 4889D7   		movq	%rdx, %rdi
 2850 1299 FFD0     		call	*%rax
 2851 129b 4889C3   		movq	%rax, %rbx
 2852 129e 488D8580 		leaq	-384(%rbp), %rax
 2852      FEFFFF
 2853 12a5 BE000000 		movl	$.LC6, %esi
 2853      00
 2854 12aa 4889C7   		movq	%rax, %rdi
 2855              	.LEHB83:
 2856 12ad E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
 2856      00
 2857 12b2 4889DE   		movq	%rbx, %rsi
 2858 12b5 4889C7   		movq	%rax, %rdi
 2859 12b8 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
 2859      00
 2860 12bd 488D8580 		leaq	-384(%rbp), %rax
 2860      FEFFFF
 2861 12c4 4889C7   		movq	%rax, %rdi
 2862 12c7 E8000000 		call	_ZNK8UnitTest15MemoryOutStream7GetTextEv
 2862      00
 2863 12cc 4889C3   		movq	%rax, %rbx
 2864 12cf 488B8558 		movq	-424(%rbp), %rax
 2864      FEFFFF
 2865 12d6 4C8D6008 		leaq	8(%rax), %r12
 2866 12da E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 2866      00
 2867 12df 488B00   		movq	(%rax), %rax
 2868 12e2 4889DA   		movq	%rbx, %rdx
 2869 12e5 4C89E6   		movq	%r12, %rsi
 2870 12e8 4889C7   		movq	%rax, %rdi
 2871 12eb E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 2871      00
 2872              	.LEHE83:
 2873 12f0 488D8580 		leaq	-384(%rbp), %rax
 2873      FEFFFF
 2874 12f7 4889C7   		movq	%rax, %rdi
 2875              	.LEHB84:
 2876 12fa E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 2876      00
 2877              	.LEHE84:
 2878              	.LBE71:
 2879              		.loc 3 71 0
 2880 12ff E8000000 		call	__cxa_end_catch
 2880      00
 2881              	.LBE73:
 2882              	.LBE75:
 2883 1304 E99A0000 		jmp	.L171
 2883      00
 2884              	.L170:
 2885              	.LBB76:
 2886 1309 4889C7   		movq	%rax, %rdi
 2887 130c E8000000 		call	__cxa_begin_catch
 2887      00
 2888 1311 80BD6FFE 		cmpb	$0, -401(%rbp)
 2888      FFFF00
 2889 1318 7443     		je	.L162
 2890              		.loc 3 71 0 discriminator 1
 2891 131a 488B8558 		movq	-424(%rbp), %rax
 2891      FEFFFF
 2892 1321 488D4808 		leaq	8(%rax), %rcx
 2893 1325 488D8580 		leaq	-384(%rbp), %rax
 2893      FEFFFF
 2894 132c BA470000 		movl	$71, %edx
 2894      00
 2895 1331 4889CE   		movq	%rcx, %rsi
 2896 1334 4889C7   		movq	%rax, %rdi
 2897              	.LEHB85:
 2898 1337 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 2898      00
 2899 133c E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 2899      00
 2900 1341 488B00   		movq	(%rax), %rax
 2901 1344 488D8D80 		leaq	-384(%rbp), %rcx
 2901      FEFFFF
 2902 134b BA000000 		movl	$.LC7, %edx
 2902      00
 2903 1350 4889CE   		movq	%rcx, %rsi
 2904 1353 4889C7   		movq	%rax, %rdi
 2905 1356 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 2905      00
 2906 135b EB41     		jmp	.L163
 2907              	.L162:
 2908              		.loc 3 71 0 discriminator 2
 2909 135d 488B8558 		movq	-424(%rbp), %rax
 2909      FEFFFF
 2910 1364 488D4808 		leaq	8(%rax), %rcx
 2911 1368 488D8580 		leaq	-384(%rbp), %rax
 2911      FEFFFF
 2912 136f BA470000 		movl	$71, %edx
 2912      00
 2913 1374 4889CE   		movq	%rcx, %rsi
 2914 1377 4889C7   		movq	%rax, %rdi
 2915 137a E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 2915      00
 2916              		.loc 3 71 0 discriminator 1
 2917 137f E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 2917      00
 2918 1384 488B00   		movq	(%rax), %rax
 2919 1387 488D8D80 		leaq	-384(%rbp), %rcx
 2919      FEFFFF
 2920 138e BA000000 		movl	$.LC8, %edx
 2920      00
 2921 1393 4889CE   		movq	%rcx, %rsi
 2922 1396 4889C7   		movq	%rax, %rdi
 2923 1399 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 2923      00
 2924              	.LEHE85:
 2925              	.L163:
 2926              	.LEHB86:
 2927 139e E8000000 		call	__cxa_end_catch
 2927      00
 2928              	.LEHE86:
 2929              	.L171:
 2930              	.LBE76:
 2931              		.loc 3 71 0
 2932 13a3 90       		nop
 2933 13a4 4881C4A0 		addq	$416, %rsp
 2933      010000
 2934 13ab 5B       		popq	%rbx
 2935 13ac 415C     		popq	%r12
 2936 13ae 5D       		popq	%rbp
 2937              		.cfi_def_cfa 7, 8
 2938 13af C3       		ret
 2939              		.cfi_endproc
 2940              	.LFE1339:
 2941              		.section	.gcc_except_table
 2942              		.align 4
 2943              	.LLSDA1339:
 2944 01d4 FF       		.byte	0xff
 2945 01d5 03       		.byte	0x3
 2946 01d6 59       		.uleb128 .LLSDATT1339-.LLSDATTD1339
 2947              	.LLSDATTD1339:
 2948 01d7 01       		.byte	0x1
 2949 01d8 40       		.uleb128 .LLSDACSE1339-.LLSDACSB1339
 2950              	.LLSDACSB1339:
 2951 01d9 34       		.uleb128 .LEHB75-.LFB1339
 2952 01da 05       		.uleb128 .LEHE75-.LEHB75
 2953 01db 8E01     		.uleb128 .L164-.LFB1339
 2954 01dd 05       		.uleb128 0x5
 2955 01de 58       		.uleb128 .LEHB76-.LFB1339
 2956 01df 05       		.uleb128 .LEHE76-.LEHB76
 2957 01e0 71       		.uleb128 .L165-.LFB1339
 2958 01e1 07       		.uleb128 0x7
 2959 01e2 67       		.uleb128 .LEHB77-.LFB1339
 2960 01e3 05       		.uleb128 .LEHE77-.LEHB77
 2961 01e4 8E01     		.uleb128 .L164-.LFB1339
 2962 01e6 05       		.uleb128 0x5
 2963 01e7 B101     		.uleb128 .LEHB78-.LFB1339
 2964 01e9 05       		.uleb128 .LEHE78-.LEHB78
 2965 01ea 00       		.uleb128 0
 2966 01eb 00       		.uleb128 0
 2967 01ec D801     		.uleb128 .LEHB79-.LFB1339
 2968 01ee 05       		.uleb128 .LEHE79-.LEHB79
 2969 01ef 00       		.uleb128 0
 2970 01f0 00       		.uleb128 0
 2971 01f1 EB01     		.uleb128 .LEHB80-.LFB1339
 2972 01f3 05       		.uleb128 .LEHE80-.LEHB80
 2973 01f4 00       		.uleb128 0
 2974 01f5 00       		.uleb128 0
 2975 01f6 A902     		.uleb128 .LEHB81-.LFB1339
 2976 01f8 5F       		.uleb128 .LEHE81-.LEHB81
 2977 01f9 A301     		.uleb128 .L166-.LFB1339
 2978 01fb 00       		.uleb128 0
 2979 01fc AB03     		.uleb128 .LEHB82-.LFB1339
 2980 01fe 05       		.uleb128 .LEHE82-.LEHB82
 2981 01ff CA01     		.uleb128 .L168-.LFB1339
 2982 0201 00       		.uleb128 0
 2983 0202 DF03     		.uleb128 .LEHB83-.LFB1339
 2984 0204 43       		.uleb128 .LEHE83-.LEHB83
 2985 0205 B601     		.uleb128 .L167-.LFB1339
 2986 0207 00       		.uleb128 0
 2987 0208 AC04     		.uleb128 .LEHB84-.LFB1339
 2988 020a 05       		.uleb128 .LEHE84-.LEHB84
 2989 020b CA01     		.uleb128 .L168-.LFB1339
 2990 020d 00       		.uleb128 0
 2991 020e E904     		.uleb128 .LEHB85-.LFB1339
 2992 0210 67       		.uleb128 .LEHE85-.LEHB85
 2993 0211 DD01     		.uleb128 .L169-.LFB1339
 2994 0213 00       		.uleb128 0
 2995 0214 D005     		.uleb128 .LEHB86-.LFB1339
 2996 0216 05       		.uleb128 .LEHE86-.LEHB86
 2997 0217 00       		.uleb128 0
 2998 0218 00       		.uleb128 0
 2999              	.LLSDACSE1339:
 3000 0219 03       		.byte	0x3
 3001 021a 00       		.byte	0
 3002 021b 02       		.byte	0x2
 3003 021c 7D       		.byte	0x7d
 3004 021d 01       		.byte	0x1
 3005 021e 7D       		.byte	0x7d
 3006 021f 00       		.byte	0
 3007 0220 7D       		.byte	0x7d
 3008 0221 000000   		.align 4
 3009 0224 00000000 		.long	0
 3010              	
 3011 0228 00000000 		.long	_ZTISt9exception
 3012 022c 00000000 		.long	_ZTIN8UnitTest15AssertExceptionE
 3013              	.LLSDATT1339:
 3014              		.text
 3016              		.section	.rodata
 3017              	.LC18:
 3018 02c1 6661696C 		.string	"failure"
 3018      75726500 
 3019              	.LC19:
 3020 02c9 72657375 		.string	"result.failed == true"
 3020      6C742E66 
 3020      61696C65 
 3020      64203D3D 
 3020      20747275 
 3021 02df 00       		.align 8
 3022              	.LC20:
 3023 02e0 556E6861 		.string	"Unhandled exception in CHECK(result.failed == true)"
 3023      6E646C65 
 3023      64206578 
 3023      63657074 
 3023      696F6E20 
 3024 0314 00000000 		.align 8
 3025              	.LC21:
 3026 0318 556E6861 		.string	"Unhandled exception in CHECK_EQUAL(fileName.c_str(), result.failureFile)"
 3026      6E646C65 
 3026      64206578 
 3026      63657074 
 3026      696F6E20 
 3027              		.text
 3028              		.align 2
 3030              	_ZN8UnitTest12_GLOBAL__N_165DeferredTestReporterFixtureReportFailureSavesFailureDetailsHelper7RunIm
 3031              	.LFB1343:
  72:TestDeferredTestReporter.cpp **** {
 3032              		.loc 3 72 0 is_stmt 1
 3033              		.cfi_startproc
 3034              		.cfi_personality 0x3,__gxx_personality_v0
 3035              		.cfi_lsda 0x3,.LLSDA1343
 3036 13b0 55       		pushq	%rbp
 3037              		.cfi_def_cfa_offset 16
 3038              		.cfi_offset 6, -16
 3039 13b1 4889E5   		movq	%rsp, %rbp
 3040              		.cfi_def_cfa_register 6
 3041 13b4 53       		pushq	%rbx
 3042 13b5 4883EC58 		subq	$88, %rsp
 3043              		.cfi_offset 3, -24
 3044 13b9 48897DA8 		movq	%rdi, -88(%rbp)
 3045              	.LBB77:
  73:TestDeferredTestReporter.cpp ****     char const* failure = "failure";
 3046              		.loc 3 73 0
 3047 13bd 48C745C0 		movq	$.LC18, -64(%rbp)
 3047      00000000 
  74:TestDeferredTestReporter.cpp **** 
  75:TestDeferredTestReporter.cpp ****     reporter.ReportTestStart(details);
 3048              		.loc 3 75 0
 3049 13c5 488B45A8 		movq	-88(%rbp), %rax
 3050 13c9 488D5040 		leaq	64(%rax), %rdx
 3051 13cd 488B45A8 		movq	-88(%rbp), %rax
 3052 13d1 4889D6   		movq	%rdx, %rsi
 3053 13d4 4889C7   		movq	%rax, %rdi
 3054              	.LEHB87:
 3055 13d7 E8000000 		call	_ZN8UnitTest20DeferredTestReporter15ReportTestStartERKNS_11TestDetailsE
 3055      00
  76:TestDeferredTestReporter.cpp ****     reporter.ReportFailure(details, failure);
 3056              		.loc 3 76 0
 3057 13dc 488B45A8 		movq	-88(%rbp), %rax
 3058 13e0 488D4840 		leaq	64(%rax), %rcx
 3059 13e4 488B45A8 		movq	-88(%rbp), %rax
 3060 13e8 488B55C0 		movq	-64(%rbp), %rdx
 3061 13ec 4889CE   		movq	%rcx, %rsi
 3062 13ef 4889C7   		movq	%rax, %rdi
 3063 13f2 E8000000 		call	_ZN8UnitTest20DeferredTestReporter13ReportFailureERKNS_11TestDetailsEPKc
 3063      00
  77:TestDeferredTestReporter.cpp **** 
  78:TestDeferredTestReporter.cpp ****     DeferredTestResult const& result = reporter.GetResults().at(0);
 3064              		.loc 3 78 0
 3065 13f7 488B45A8 		movq	-88(%rbp), %rax
 3066 13fb 4889C7   		movq	%rax, %rdi
 3067 13fe E8000000 		call	_ZN8UnitTest20DeferredTestReporter10GetResultsEv
 3067      00
 3068 1403 BE000000 		movl	$0, %esi
 3068      00
 3069 1408 4889C7   		movq	%rax, %rdi
 3070 140b E8000000 		call	_ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EE2atEm
 3070      00
 3071              	.LEHE87:
 3072 1410 488945C8 		movq	%rax, -56(%rbp)
  79:TestDeferredTestReporter.cpp ****     CHECK(result.failed == true);
 3073              		.loc 3 79 0
 3074 1414 488B45C8 		movq	-56(%rbp), %rax
 3075 1418 0FB64034 		movzbl	52(%rax), %eax
 3076 141c 0FB6C0   		movzbl	%al, %eax
 3077 141f 89C7     		movl	%eax, %edi
 3078 1421 E8000000 		call	_ZN8UnitTest5CheckIbEEbT_
 3078      00
 3079 1426 83F001   		xorl	$1, %eax
 3080 1429 84C0     		testb	%al, %al
 3081 142b 7438     		je	.L173
 3082              	.LEHB88:
 3083              		.loc 3 79 0 is_stmt 0 discriminator 1
 3084 142d E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 3084      00
 3085 1432 488B08   		movq	(%rax), %rcx
 3086 1435 488D45D0 		leaq	-48(%rbp), %rax
 3087 1439 BA4F0000 		movl	$79, %edx
 3087      00
 3088 143e 4889CE   		movq	%rcx, %rsi
 3089 1441 4889C7   		movq	%rax, %rdi
 3090 1444 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 3090      00
 3091 1449 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 3091      00
 3092 144e 488B00   		movq	(%rax), %rax
 3093 1451 488D4DD0 		leaq	-48(%rbp), %rcx
 3094 1455 BA000000 		movl	$.LC19, %edx
 3094      00
 3095 145a 4889CE   		movq	%rcx, %rsi
 3096 145d 4889C7   		movq	%rax, %rdi
 3097 1460 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 3097      00
 3098              	.LEHE88:
 3099              	.L173:
 3100              	.LEHB89:
  80:TestDeferredTestReporter.cpp ****     CHECK_EQUAL(fileName.c_str(), result.failureFile);
 3101              		.loc 3 80 0 is_stmt 1
 3102 1465 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 3102      00
 3103 146a 488B08   		movq	(%rax), %rcx
 3104 146d 488D45D0 		leaq	-48(%rbp), %rax
 3105 1471 BA500000 		movl	$80, %edx
 3105      00
 3106 1476 4889CE   		movq	%rcx, %rsi
 3107 1479 4889C7   		movq	%rax, %rdi
 3108 147c E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 3108      00
 3109              		.loc 3 80 0 is_stmt 0 discriminator 1
 3110 1481 488B45C8 		movq	-56(%rbp), %rax
 3111 1485 488D5810 		leaq	16(%rax), %rbx
 3112 1489 488B45A8 		movq	-88(%rbp), %rax
 3113 148d 4883C030 		addq	$48, %rax
 3114 1491 4889C7   		movq	%rax, %rdi
 3115 1494 E8000000 		call	_ZNKSs5c_strEv
 3115      00
 3116 1499 488945B8 		movq	%rax, -72(%rbp)
 3117 149d E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 3117      00
 3118 14a2 488B00   		movq	(%rax), %rax
 3119 14a5 488D55D0 		leaq	-48(%rbp), %rdx
 3120 14a9 488D75B8 		leaq	-72(%rbp), %rsi
 3121 14ad 4889D1   		movq	%rdx, %rcx
 3122 14b0 4889DA   		movq	%rbx, %rdx
 3123 14b3 4889C7   		movq	%rax, %rdi
 3124 14b6 E8000000 		call	_ZN8UnitTest10CheckEqualIPKcSsEEvRNS_11TestResultsERKT_RKT0_RKNS_11TestDetailsE
 3124      00
 3125              	.LEHE89:
 3126              	.LBE77:
  81:TestDeferredTestReporter.cpp **** }
 3127              		.loc 3 81 0 is_stmt 1
 3128 14bb E9B50000 		jmp	.L183
 3128      00
 3129              	.L180:
 3130 14c0 4889C3   		movq	%rax, %rbx
 3131              	.LBB78:
  79:TestDeferredTestReporter.cpp ****     CHECK(result.failed == true);
 3132              		.loc 3 79 0
 3133 14c3 E8000000 		call	__cxa_end_catch
 3133      00
 3134 14c8 4889D8   		movq	%rbx, %rax
 3135 14cb 4889C7   		movq	%rax, %rdi
 3136              	.LEHB90:
 3137 14ce E8000000 		call	_Unwind_Resume
 3137      00
 3138              	.LEHE90:
 3139              	.L179:
 3140 14d3 4889C7   		movq	%rax, %rdi
 3141 14d6 E8000000 		call	__cxa_begin_catch
 3141      00
 3142              	.LEHB91:
 3143 14db E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 3143      00
 3144 14e0 488B08   		movq	(%rax), %rcx
 3145 14e3 488D45D0 		leaq	-48(%rbp), %rax
 3146 14e7 BA4F0000 		movl	$79, %edx
 3146      00
 3147 14ec 4889CE   		movq	%rcx, %rsi
 3148 14ef 4889C7   		movq	%rax, %rdi
 3149 14f2 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 3149      00
  79:TestDeferredTestReporter.cpp ****     CHECK(result.failed == true);
 3150              		.loc 3 79 0 is_stmt 0 discriminator 1
 3151 14f7 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 3151      00
 3152 14fc 488B00   		movq	(%rax), %rax
 3153 14ff 488D4DD0 		leaq	-48(%rbp), %rcx
 3154 1503 BA000000 		movl	$.LC20, %edx
 3154      00
 3155 1508 4889CE   		movq	%rcx, %rsi
 3156 150b 4889C7   		movq	%rax, %rdi
 3157 150e E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 3157      00
 3158              	.LEHE91:
 3159              	.LEHB92:
 3160 1513 E8000000 		call	__cxa_end_catch
 3160      00
 3161              	.LEHE92:
 3162 1518 E948FFFF 		jmp	.L173
 3162      FF
 3163              	.L182:
 3164 151d 4889C3   		movq	%rax, %rbx
  80:TestDeferredTestReporter.cpp ****     CHECK_EQUAL(fileName.c_str(), result.failureFile);
 3165              		.loc 3 80 0 is_stmt 1
 3166 1520 E8000000 		call	__cxa_end_catch
 3166      00
 3167 1525 4889D8   		movq	%rbx, %rax
 3168 1528 4889C7   		movq	%rax, %rdi
 3169              	.LEHB93:
 3170 152b E8000000 		call	_Unwind_Resume
 3170      00
 3171              	.LEHE93:
 3172              	.L181:
 3173 1530 4889C7   		movq	%rax, %rdi
 3174 1533 E8000000 		call	__cxa_begin_catch
 3174      00
 3175              	.LEHB94:
 3176 1538 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 3176      00
 3177 153d 488B08   		movq	(%rax), %rcx
 3178 1540 488D45D0 		leaq	-48(%rbp), %rax
 3179 1544 BA500000 		movl	$80, %edx
 3179      00
 3180 1549 4889CE   		movq	%rcx, %rsi
 3181 154c 4889C7   		movq	%rax, %rdi
 3182 154f E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 3182      00
  80:TestDeferredTestReporter.cpp ****     CHECK_EQUAL(fileName.c_str(), result.failureFile);
 3183              		.loc 3 80 0 is_stmt 0 discriminator 1
 3184 1554 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 3184      00
 3185 1559 488B00   		movq	(%rax), %rax
 3186 155c 488D4DD0 		leaq	-48(%rbp), %rcx
 3187 1560 BA000000 		movl	$.LC21, %edx
 3187      00
 3188 1565 4889CE   		movq	%rcx, %rsi
 3189 1568 4889C7   		movq	%rax, %rdi
 3190 156b E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 3190      00
 3191              	.LEHE94:
 3192              	.LEHB95:
 3193 1570 E8000000 		call	__cxa_end_catch
 3193      00
 3194              	.LEHE95:
 3195              	.L183:
 3196              	.LBE78:
 3197              		.loc 3 81 0 is_stmt 1
 3198 1575 90       		nop
 3199 1576 4883C458 		addq	$88, %rsp
 3200 157a 5B       		popq	%rbx
 3201 157b 5D       		popq	%rbp
 3202              		.cfi_def_cfa 7, 8
 3203 157c C3       		ret
 3204              		.cfi_endproc
 3205              	.LFE1343:
 3206              		.section	.gcc_except_table
 3207              		.align 4
 3208              	.LLSDA1343:
 3209 0230 FF       		.byte	0xff
 3210 0231 03       		.byte	0x3
 3211 0232 39       		.uleb128 .LLSDATT1343-.LLSDATTD1343
 3212              	.LLSDATTD1343:
 3213 0233 01       		.byte	0x1
 3214 0234 2F       		.uleb128 .LLSDACSE1343-.LLSDACSB1343
 3215              	.LLSDACSB1343:
 3216 0235 27       		.uleb128 .LEHB87-.LFB1343
 3217 0236 39       		.uleb128 .LEHE87-.LEHB87
 3218 0237 00       		.uleb128 0
 3219 0238 00       		.uleb128 0
 3220 0239 7D       		.uleb128 .LEHB88-.LFB1343
 3221 023a 38       		.uleb128 .LEHE88-.LEHB88
 3222 023b A302     		.uleb128 .L179-.LFB1343
 3223 023d 01       		.uleb128 0x1
 3224 023e B501     		.uleb128 .LEHB89-.LFB1343
 3225 0240 56       		.uleb128 .LEHE89-.LEHB89
 3226 0241 8003     		.uleb128 .L181-.LFB1343
 3227 0243 01       		.uleb128 0x1
 3228 0244 9E02     		.uleb128 .LEHB90-.LFB1343
 3229 0246 05       		.uleb128 .LEHE90-.LEHB90
 3230 0247 00       		.uleb128 0
 3231 0248 00       		.uleb128 0
 3232 0249 AB02     		.uleb128 .LEHB91-.LFB1343
 3233 024b 38       		.uleb128 .LEHE91-.LEHB91
 3234 024c 9002     		.uleb128 .L180-.LFB1343
 3235 024e 00       		.uleb128 0
 3236 024f E302     		.uleb128 .LEHB92-.LFB1343
 3237 0251 05       		.uleb128 .LEHE92-.LEHB92
 3238 0252 00       		.uleb128 0
 3239 0253 00       		.uleb128 0
 3240 0254 FB02     		.uleb128 .LEHB93-.LFB1343
 3241 0256 05       		.uleb128 .LEHE93-.LEHB93
 3242 0257 00       		.uleb128 0
 3243 0258 00       		.uleb128 0
 3244 0259 8803     		.uleb128 .LEHB94-.LFB1343
 3245 025b 38       		.uleb128 .LEHE94-.LEHB94
 3246 025c ED02     		.uleb128 .L182-.LFB1343
 3247 025e 00       		.uleb128 0
 3248 025f C003     		.uleb128 .LEHB95-.LFB1343
 3249 0261 05       		.uleb128 .LEHE95-.LEHB95
 3250 0262 00       		.uleb128 0
 3251 0263 00       		.uleb128 0
 3252              	.LLSDACSE1343:
 3253 0264 01       		.byte	0x1
 3254 0265 00       		.byte	0
 3255 0266 0000     		.align 4
 3256 0268 00000000 		.long	0
 3257              	
 3258              	.LLSDATT1343:
 3259              		.text
 3261 157d 90       		.align 2
 3263              	_ZN8UnitTest12_GLOBAL__N_184DeferredTestReporterFixtureReportFailureSavesFailureDetailsForMultipleF
 3264              	.LFB1345:
  82:TestDeferredTestReporter.cpp **** 
  83:TestDeferredTestReporter.cpp **** TEST_FIXTURE(DeferredTestReporterFixture, ReportFailureSavesFailureDetailsForMultipleFailures)
 3265              		.loc 3 83 0
 3266              		.cfi_startproc
 3267 157e 55       		pushq	%rbp
 3268              		.cfi_def_cfa_offset 16
 3269              		.cfi_offset 6, -16
 3270 157f 4889E5   		movq	%rsp, %rbp
 3271              		.cfi_def_cfa_register 6
 3272 1582 4883EC10 		subq	$16, %rsp
 3273 1586 48897DF8 		movq	%rdi, -8(%rbp)
 3274 158a 488975F0 		movq	%rsi, -16(%rbp)
 3275              	.LBB79:
 3276              		.loc 3 83 0
 3277 158e 488B45F8 		movq	-8(%rbp), %rax
 3278 1592 4889C7   		movq	%rax, %rdi
 3279 1595 E8A4EAFF 		call	_ZN8UnitTest12_GLOBAL__N_127DeferredTestReporterFixtureC2Ev
 3279      FF
 3280 159a 488B45F8 		movq	-8(%rbp), %rax
 3281 159e 488B55F0 		movq	-16(%rbp), %rdx
 3282 15a2 48895060 		movq	%rdx, 96(%rax)
 3283              	.LBE79:
 3284 15a6 C9       		leave
 3285              		.cfi_def_cfa 7, 8
 3286 15a7 C3       		ret
 3287              		.cfi_endproc
 3288              	.LFE1345:
 3290              		.set	_ZN8UnitTest12_GLOBAL__N_184DeferredTestReporterFixtureReportFailureSavesFailureDetailsForMul
 3291              		.section	.rodata
 3292 0361 00000000 		.align 8
 3292      000000
 3293              	.LC22:
 3294 0368 5265706F 		.string	"ReportFailureSavesFailureDetailsForMultipleFailures"
 3294      72744661 
 3294      696C7572 
 3294      65536176 
 3294      65734661 
 3295              		.text
 3296              		.align 2
 3298              	_ZN8UnitTest12_GLOBAL__N_182TestDeferredTestReporterFixtureReportFailureSavesFailureDetailsForMulti
 3299              	.LFB1348:
 3300              		.loc 3 83 0
 3301              		.cfi_startproc
 3302 15a8 55       		pushq	%rbp
 3303              		.cfi_def_cfa_offset 16
 3304              		.cfi_offset 6, -16
 3305 15a9 4889E5   		movq	%rsp, %rbp
 3306              		.cfi_def_cfa_register 6
 3307 15ac 4883EC10 		subq	$16, %rsp
 3308 15b0 48897DF8 		movq	%rdi, -8(%rbp)
 3309              	.LBB80:
 3310              		.loc 3 83 0
 3311 15b4 E8000000 		call	_ZN13UnitTestSuite12GetSuiteNameEv
 3311      00
 3312 15b9 4889C2   		movq	%rax, %rdx
 3313 15bc 488B45F8 		movq	-8(%rbp), %rax
 3314 15c0 41B85300 		movl	$83, %r8d
 3314      0000
 3315 15c6 B9000000 		movl	$.LC4, %ecx
 3315      00
 3316 15cb BE000000 		movl	$.LC22, %esi
 3316      00
 3317 15d0 4889C7   		movq	%rax, %rdi
 3318 15d3 E8000000 		call	_ZN8UnitTest4TestC2EPKcS2_S2_i
 3318      00
 3319 15d8 488B45F8 		movq	-8(%rbp), %rax
 3320 15dc 48C70000 		movq	$_ZTVN8UnitTest12_GLOBAL__N_182TestDeferredTestReporterFixtureReportFailureSavesFailureDetail
 3320      000000
 3321              	.LBE80:
 3322 15e3 C9       		leave
 3323              		.cfi_def_cfa 7, 8
 3324 15e4 C3       		ret
 3325              		.cfi_endproc
 3326              	.LFE1348:
 3328              		.set	_ZN8UnitTest12_GLOBAL__N_182TestDeferredTestReporterFixtureReportFailureSavesFailureDetailsFo
 3329              		.local	_ZN8UnitTest12_GLOBAL__N_190testDeferredTestReporterFixtureReportFailureSavesFailureDetails
 3330              		.comm	_ZN8UnitTest12_GLOBAL__N_190testDeferredTestReporterFixtureReportFailureSavesFailureDetailsF
 3331              		.local	_ZN8UnitTest12_GLOBAL__N_183adderDeferredTestReporterFixtureReportFailureSavesFailureDetail
 3332              		.comm	_ZN8UnitTest12_GLOBAL__N_183adderDeferredTestReporterFixtureReportFailureSavesFailureDetails
 3333 15e5 90       		.align 2
 3335              	_ZN8UnitTest12_GLOBAL__N_184DeferredTestReporterFixtureReportFailureSavesFailureDetailsForMultipleF
 3336              	.LFB1352:
 3337              		.loc 3 83 0
 3338              		.cfi_startproc
 3339 15e6 55       		pushq	%rbp
 3340              		.cfi_def_cfa_offset 16
 3341              		.cfi_offset 6, -16
 3342 15e7 4889E5   		movq	%rsp, %rbp
 3343              		.cfi_def_cfa_register 6
 3344 15ea 4883EC10 		subq	$16, %rsp
 3345 15ee 48897DF8 		movq	%rdi, -8(%rbp)
 3346              	.LBB81:
 3347              		.loc 3 83 0
 3348 15f2 488B45F8 		movq	-8(%rbp), %rax
 3349 15f6 4889C7   		movq	%rax, %rdi
 3350 15f9 E8E6EBFF 		call	_ZN8UnitTest12_GLOBAL__N_127DeferredTestReporterFixtureD2Ev
 3350      FF
 3351              	.LBE81:
 3352 15fe C9       		leave
 3353              		.cfi_def_cfa 7, 8
 3354 15ff C3       		ret
 3355              		.cfi_endproc
 3356              	.LFE1352:
 3358              		.set	_ZN8UnitTest12_GLOBAL__N_184DeferredTestReporterFixtureReportFailureSavesFailureDetailsForMul
 3359              		.align 2
 3361              	_ZNK8UnitTest12_GLOBAL__N_182TestDeferredTestReporterFixtureReportFailureSavesFailureDetailsForMult
 3362              	.LFB1350:
 3363              		.loc 3 83 0
 3364              		.cfi_startproc
 3365              		.cfi_personality 0x3,__gxx_personality_v0
 3366              		.cfi_lsda 0x3,.LLSDA1350
 3367 1600 55       		pushq	%rbp
 3368              		.cfi_def_cfa_offset 16
 3369              		.cfi_offset 6, -16
 3370 1601 4889E5   		movq	%rsp, %rbp
 3371              		.cfi_def_cfa_register 6
 3372 1604 4154     		pushq	%r12
 3373 1606 53       		pushq	%rbx
 3374 1607 4881ECA0 		subq	$416, %rsp
 3374      010000
 3375              		.cfi_offset 12, -24
 3376              		.cfi_offset 3, -32
 3377 160e 4889BD58 		movq	%rdi, -424(%rbp)
 3377      FEFFFF
 3378              	.LBB82:
 3379              		.loc 3 83 0
 3380 1615 C6856FFE 		movb	$0, -401(%rbp)
 3380      FFFF00
 3381              	.LBB83:
 3382 161c 488B8558 		movq	-424(%rbp), %rax
 3382      FEFFFF
 3383 1623 488D5008 		leaq	8(%rax), %rdx
 3384 1627 488D8580 		leaq	-384(%rbp), %rax
 3384      FEFFFF
 3385 162e 4889D6   		movq	%rdx, %rsi
 3386 1631 4889C7   		movq	%rax, %rdi
 3387              	.LEHB96:
 3388 1634 E845FFFF 		call	_ZN8UnitTest12_GLOBAL__N_184DeferredTestReporterFixtureReportFailureSavesFailureDetailsForMul
 3388      FF
 3389              	.LEHE96:
 3390              		.loc 3 83 0 is_stmt 0 discriminator 1
 3391 1639 C6856FFE 		movb	$1, -401(%rbp)
 3391      FFFF01
 3392 1640 488B8558 		movq	-424(%rbp), %rax
 3392      FEFFFF
 3393 1647 488D5008 		leaq	8(%rax), %rdx
 3394 164b 488D8580 		leaq	-384(%rbp), %rax
 3394      FEFFFF
 3395 1652 4889D6   		movq	%rdx, %rsi
 3396 1655 4889C7   		movq	%rax, %rdi
 3397              	.LEHB97:
 3398 1658 E8A11400 		call	_ZN8UnitTest11ExecuteTestINS_12_GLOBAL__N_184DeferredTestReporterFixtureReportFailureSavesFai
 3398      00
 3399              	.LEHE97:
 3400 165d 488D8580 		leaq	-384(%rbp), %rax
 3400      FEFFFF
 3401 1664 4889C7   		movq	%rax, %rdi
 3402              	.LEHB98:
 3403 1667 E87AFFFF 		call	_ZN8UnitTest12_GLOBAL__N_184DeferredTestReporterFixtureReportFailureSavesFailureDetailsForMul
 3403      FF
 3404              	.LEHE98:
 3405              	.LBE83:
 3406              	.LBE82:
 3407              		.loc 3 83 0
 3408 166c E9640200 		jmp	.L208
 3408      00
 3409              	.L202:
 3410 1671 4989C4   		movq	%rax, %r12
 3411 1674 4889D3   		movq	%rdx, %rbx
 3412              	.LBB91:
 3413              	.LBB84:
 3414 1677 488D8580 		leaq	-384(%rbp), %rax
 3414      FEFFFF
 3415 167e 4889C7   		movq	%rax, %rdi
 3416 1681 E860FFFF 		call	_ZN8UnitTest12_GLOBAL__N_184DeferredTestReporterFixtureReportFailureSavesFailureDetailsForMul
 3416      FF
 3417 1686 4C89E0   		movq	%r12, %rax
 3418 1689 4889DA   		movq	%rbx, %rdx
 3419 168c EB00     		jmp	.L190
 3420              	.L201:
 3421              	.L190:
 3422 168e 4883FA01 		cmpq	$1, %rdx
 3423 1692 745C     		je	.L192
 3424 1694 4883FA02 		cmpq	$2, %rdx
 3425 1698 0F84F400 		je	.L193
 3425      0000
 3426 169e E9980100 		jmp	.L207
 3426      00
 3427              	.L203:
 3428 16a3 4889C3   		movq	%rax, %rbx
 3429              	.LBE84:
 3430              	.LBB85:
 3431 16a6 E8000000 		call	__cxa_end_catch
 3431      00
 3432 16ab 4889D8   		movq	%rbx, %rax
 3433 16ae 4889C7   		movq	%rax, %rdi
 3434              	.LEHB99:
 3435 16b1 E8000000 		call	_Unwind_Resume
 3435      00
 3436              	.LEHE99:
 3437              	.L204:
 3438 16b6 4889C3   		movq	%rax, %rbx
 3439              	.LBE85:
 3440              	.LBB86:
 3441              	.LBB87:
 3442 16b9 488D8580 		leaq	-384(%rbp), %rax
 3442      FEFFFF
 3443 16c0 4889C7   		movq	%rax, %rdi
 3444 16c3 E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 3444      00
 3445 16c8 EB03     		jmp	.L196
 3446              	.L205:
 3447 16ca 4889C3   		movq	%rax, %rbx
 3448              	.L196:
 3449              	.LBE87:
 3450 16cd E8000000 		call	__cxa_end_catch
 3450      00
 3451 16d2 4889D8   		movq	%rbx, %rax
 3452 16d5 4889C7   		movq	%rax, %rdi
 3453              	.LEHB100:
 3454 16d8 E8000000 		call	_Unwind_Resume
 3454      00
 3455              	.LEHE100:
 3456              	.L206:
 3457 16dd 4889C3   		movq	%rax, %rbx
 3458              	.LBE86:
 3459 16e0 E8000000 		call	__cxa_end_catch
 3459      00
 3460 16e5 4889D8   		movq	%rbx, %rax
 3461 16e8 4889C7   		movq	%rax, %rdi
 3462              	.LEHB101:
 3463 16eb E8000000 		call	_Unwind_Resume
 3463      00
 3464              	.LEHE101:
 3465              	.L192:
 3466              	.LBB89:
 3467 16f0 4889C7   		movq	%rax, %rdi
 3468 16f3 E8000000 		call	__cxa_begin_catch
 3468      00
 3469 16f8 48898570 		movq	%rax, -400(%rbp)
 3469      FEFFFF
 3470 16ff 488B8570 		movq	-400(%rbp), %rax
 3470      FEFFFF
 3471 1706 488B00   		movq	(%rax), %rax
 3472 1709 4883C010 		addq	$16, %rax
 3473 170d 488B00   		movq	(%rax), %rax
 3474 1710 488B9570 		movq	-400(%rbp), %rdx
 3474      FEFFFF
 3475 1717 4889D7   		movq	%rdx, %rdi
 3476 171a FFD0     		call	*%rax
 3477 171c 4889C3   		movq	%rax, %rbx
 3478 171f 488B8570 		movq	-400(%rbp), %rax
 3478      FEFFFF
 3479 1726 4889C7   		movq	%rax, %rdi
 3480              	.LEHB102:
 3481 1729 E8000000 		call	_ZNK8UnitTest15AssertException10LineNumberEv
 3481      00
 3482 172e 4189C4   		movl	%eax, %r12d
 3483 1731 488B8570 		movq	-400(%rbp), %rax
 3483      FEFFFF
 3484 1738 4889C7   		movq	%rax, %rdi
 3485 173b E8000000 		call	_ZNK8UnitTest15AssertException8FilenameEv
 3485      00
 3486              		.loc 3 83 0 discriminator 1
 3487 1740 4889C1   		movq	%rax, %rcx
 3488 1743 488B8558 		movq	-424(%rbp), %rax
 3488      FEFFFF
 3489 174a 488B5008 		movq	8(%rax), %rdx
 3490 174e 488B8558 		movq	-424(%rbp), %rax
 3490      FEFFFF
 3491 1755 488B7010 		movq	16(%rax), %rsi
 3492 1759 488D8580 		leaq	-384(%rbp), %rax
 3492      FEFFFF
 3493 1760 4589E0   		movl	%r12d, %r8d
 3494 1763 4889C7   		movq	%rax, %rdi
 3495 1766 E8000000 		call	_ZN8UnitTest11TestDetailsC1EPKcS2_S2_i
 3495      00
 3496              		.loc 3 83 0 discriminator 3
 3497 176b E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 3497      00
 3498 1770 488B00   		movq	(%rax), %rax
 3499 1773 488D8D80 		leaq	-384(%rbp), %rcx
 3499      FEFFFF
 3500 177a 4889DA   		movq	%rbx, %rdx
 3501 177d 4889CE   		movq	%rcx, %rsi
 3502 1780 4889C7   		movq	%rax, %rdi
 3503 1783 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 3503      00
 3504              	.LEHE102:
 3505              		.loc 3 83 0 discriminator 1
 3506 1788 E8000000 		call	__cxa_end_catch
 3506      00
 3507              	.LBE89:
 3508              	.LBE91:
 3509 178d E9430100 		jmp	.L208
 3509      00
 3510              	.L193:
 3511              	.LBB92:
 3512              	.LBB90:
 3513              		.loc 3 83 0
 3514 1792 4889C7   		movq	%rax, %rdi
 3515 1795 E8000000 		call	__cxa_begin_catch
 3515      00
 3516 179a 48898578 		movq	%rax, -392(%rbp)
 3516      FEFFFF
 3517              	.LBB88:
 3518 17a1 488D8580 		leaq	-384(%rbp), %rax
 3518      FEFFFF
 3519 17a8 4889C7   		movq	%rax, %rdi
 3520              	.LEHB103:
 3521 17ab E8000000 		call	_ZN8UnitTest15MemoryOutStreamC1Ev
 3521      00
 3522              	.LEHE103:
 3523              		.loc 3 83 0 discriminator 1
 3524 17b0 488B8578 		movq	-392(%rbp), %rax
 3524      FEFFFF
 3525 17b7 488B00   		movq	(%rax), %rax
 3526 17ba 4883C010 		addq	$16, %rax
 3527 17be 488B00   		movq	(%rax), %rax
 3528 17c1 488B9578 		movq	-392(%rbp), %rdx
 3528      FEFFFF
 3529 17c8 4889D7   		movq	%rdx, %rdi
 3530 17cb FFD0     		call	*%rax
 3531 17cd 4889C3   		movq	%rax, %rbx
 3532 17d0 488D8580 		leaq	-384(%rbp), %rax
 3532      FEFFFF
 3533 17d7 BE000000 		movl	$.LC6, %esi
 3533      00
 3534 17dc 4889C7   		movq	%rax, %rdi
 3535              	.LEHB104:
 3536 17df E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
 3536      00
 3537 17e4 4889DE   		movq	%rbx, %rsi
 3538 17e7 4889C7   		movq	%rax, %rdi
 3539 17ea E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
 3539      00
 3540 17ef 488D8580 		leaq	-384(%rbp), %rax
 3540      FEFFFF
 3541 17f6 4889C7   		movq	%rax, %rdi
 3542 17f9 E8000000 		call	_ZNK8UnitTest15MemoryOutStream7GetTextEv
 3542      00
 3543 17fe 4889C3   		movq	%rax, %rbx
 3544 1801 488B8558 		movq	-424(%rbp), %rax
 3544      FEFFFF
 3545 1808 4C8D6008 		leaq	8(%rax), %r12
 3546 180c E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 3546      00
 3547 1811 488B00   		movq	(%rax), %rax
 3548 1814 4889DA   		movq	%rbx, %rdx
 3549 1817 4C89E6   		movq	%r12, %rsi
 3550 181a 4889C7   		movq	%rax, %rdi
 3551 181d E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 3551      00
 3552              	.LEHE104:
 3553 1822 488D8580 		leaq	-384(%rbp), %rax
 3553      FEFFFF
 3554 1829 4889C7   		movq	%rax, %rdi
 3555              	.LEHB105:
 3556 182c E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 3556      00
 3557              	.LEHE105:
 3558              	.LBE88:
 3559              		.loc 3 83 0
 3560 1831 E8000000 		call	__cxa_end_catch
 3560      00
 3561              	.LBE90:
 3562              	.LBE92:
 3563 1836 E99A0000 		jmp	.L208
 3563      00
 3564              	.L207:
 3565              	.LBB93:
 3566 183b 4889C7   		movq	%rax, %rdi
 3567 183e E8000000 		call	__cxa_begin_catch
 3567      00
 3568 1843 80BD6FFE 		cmpb	$0, -401(%rbp)
 3568      FFFF00
 3569 184a 7443     		je	.L199
 3570              		.loc 3 83 0 discriminator 1
 3571 184c 488B8558 		movq	-424(%rbp), %rax
 3571      FEFFFF
 3572 1853 488D4808 		leaq	8(%rax), %rcx
 3573 1857 488D8580 		leaq	-384(%rbp), %rax
 3573      FEFFFF
 3574 185e BA530000 		movl	$83, %edx
 3574      00
 3575 1863 4889CE   		movq	%rcx, %rsi
 3576 1866 4889C7   		movq	%rax, %rdi
 3577              	.LEHB106:
 3578 1869 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 3578      00
 3579 186e E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 3579      00
 3580 1873 488B00   		movq	(%rax), %rax
 3581 1876 488D8D80 		leaq	-384(%rbp), %rcx
 3581      FEFFFF
 3582 187d BA000000 		movl	$.LC7, %edx
 3582      00
 3583 1882 4889CE   		movq	%rcx, %rsi
 3584 1885 4889C7   		movq	%rax, %rdi
 3585 1888 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 3585      00
 3586 188d EB41     		jmp	.L200
 3587              	.L199:
 3588              		.loc 3 83 0 discriminator 2
 3589 188f 488B8558 		movq	-424(%rbp), %rax
 3589      FEFFFF
 3590 1896 488D4808 		leaq	8(%rax), %rcx
 3591 189a 488D8580 		leaq	-384(%rbp), %rax
 3591      FEFFFF
 3592 18a1 BA530000 		movl	$83, %edx
 3592      00
 3593 18a6 4889CE   		movq	%rcx, %rsi
 3594 18a9 4889C7   		movq	%rax, %rdi
 3595 18ac E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 3595      00
 3596              		.loc 3 83 0 discriminator 1
 3597 18b1 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 3597      00
 3598 18b6 488B00   		movq	(%rax), %rax
 3599 18b9 488D8D80 		leaq	-384(%rbp), %rcx
 3599      FEFFFF
 3600 18c0 BA000000 		movl	$.LC8, %edx
 3600      00
 3601 18c5 4889CE   		movq	%rcx, %rsi
 3602 18c8 4889C7   		movq	%rax, %rdi
 3603 18cb E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 3603      00
 3604              	.LEHE106:
 3605              	.L200:
 3606              	.LEHB107:
 3607 18d0 E8000000 		call	__cxa_end_catch
 3607      00
 3608              	.LEHE107:
 3609              	.L208:
 3610              	.LBE93:
 3611              		.loc 3 83 0
 3612 18d5 90       		nop
 3613 18d6 4881C4A0 		addq	$416, %rsp
 3613      010000
 3614 18dd 5B       		popq	%rbx
 3615 18de 415C     		popq	%r12
 3616 18e0 5D       		popq	%rbp
 3617              		.cfi_def_cfa 7, 8
 3618 18e1 C3       		ret
 3619              		.cfi_endproc
 3620              	.LFE1350:
 3621              		.section	.gcc_except_table
 3622              		.align 4
 3623              	.LLSDA1350:
 3624 026c FF       		.byte	0xff
 3625 026d 03       		.byte	0x3
 3626 026e 59       		.uleb128 .LLSDATT1350-.LLSDATTD1350
 3627              	.LLSDATTD1350:
 3628 026f 01       		.byte	0x1
 3629 0270 40       		.uleb128 .LLSDACSE1350-.LLSDACSB1350
 3630              	.LLSDACSB1350:
 3631 0271 34       		.uleb128 .LEHB96-.LFB1350
 3632 0272 05       		.uleb128 .LEHE96-.LEHB96
 3633 0273 8E01     		.uleb128 .L201-.LFB1350
 3634 0275 05       		.uleb128 0x5
 3635 0276 58       		.uleb128 .LEHB97-.LFB1350
 3636 0277 05       		.uleb128 .LEHE97-.LEHB97
 3637 0278 71       		.uleb128 .L202-.LFB1350
 3638 0279 07       		.uleb128 0x7
 3639 027a 67       		.uleb128 .LEHB98-.LFB1350
 3640 027b 05       		.uleb128 .LEHE98-.LEHB98
 3641 027c 8E01     		.uleb128 .L201-.LFB1350
 3642 027e 05       		.uleb128 0x5
 3643 027f B101     		.uleb128 .LEHB99-.LFB1350
 3644 0281 05       		.uleb128 .LEHE99-.LEHB99
 3645 0282 00       		.uleb128 0
 3646 0283 00       		.uleb128 0
 3647 0284 D801     		.uleb128 .LEHB100-.LFB1350
 3648 0286 05       		.uleb128 .LEHE100-.LEHB100
 3649 0287 00       		.uleb128 0
 3650 0288 00       		.uleb128 0
 3651 0289 EB01     		.uleb128 .LEHB101-.LFB1350
 3652 028b 05       		.uleb128 .LEHE101-.LEHB101
 3653 028c 00       		.uleb128 0
 3654 028d 00       		.uleb128 0
 3655 028e A902     		.uleb128 .LEHB102-.LFB1350
 3656 0290 5F       		.uleb128 .LEHE102-.LEHB102
 3657 0291 A301     		.uleb128 .L203-.LFB1350
 3658 0293 00       		.uleb128 0
 3659 0294 AB03     		.uleb128 .LEHB103-.LFB1350
 3660 0296 05       		.uleb128 .LEHE103-.LEHB103
 3661 0297 CA01     		.uleb128 .L205-.LFB1350
 3662 0299 00       		.uleb128 0
 3663 029a DF03     		.uleb128 .LEHB104-.LFB1350
 3664 029c 43       		.uleb128 .LEHE104-.LEHB104
 3665 029d B601     		.uleb128 .L204-.LFB1350
 3666 029f 00       		.uleb128 0
 3667 02a0 AC04     		.uleb128 .LEHB105-.LFB1350
 3668 02a2 05       		.uleb128 .LEHE105-.LEHB105
 3669 02a3 CA01     		.uleb128 .L205-.LFB1350
 3670 02a5 00       		.uleb128 0
 3671 02a6 E904     		.uleb128 .LEHB106-.LFB1350
 3672 02a8 67       		.uleb128 .LEHE106-.LEHB106
 3673 02a9 DD01     		.uleb128 .L206-.LFB1350
 3674 02ab 00       		.uleb128 0
 3675 02ac D005     		.uleb128 .LEHB107-.LFB1350
 3676 02ae 05       		.uleb128 .LEHE107-.LEHB107
 3677 02af 00       		.uleb128 0
 3678 02b0 00       		.uleb128 0
 3679              	.LLSDACSE1350:
 3680 02b1 03       		.byte	0x3
 3681 02b2 00       		.byte	0
 3682 02b3 02       		.byte	0x2
 3683 02b4 7D       		.byte	0x7d
 3684 02b5 01       		.byte	0x1
 3685 02b6 7D       		.byte	0x7d
 3686 02b7 00       		.byte	0
 3687 02b8 7D       		.byte	0x7d
 3688 02b9 000000   		.align 4
 3689 02bc 00000000 		.long	0
 3690              	
 3691 02c0 00000000 		.long	_ZTISt9exception
 3692 02c4 00000000 		.long	_ZTIN8UnitTest15AssertExceptionE
 3693              	.LLSDATT1350:
 3694              		.text
 3696              		.section	.rodata
 3697              	.LC23:
 3698 039c 6661696C 		.string	"failure 1"
 3698      75726520 
 3698      3100
 3699              	.LC24:
 3700 03a6 6661696C 		.string	"failure 2"
 3700      75726520 
 3700      3200
 3701              		.align 8
 3702              	.LC25:
 3703 03b0 556E6861 		.string	"Unhandled exception in CHECK_EQUAL(2, (int)result.failures.size())"
 3703      6E646C65 
 3703      64206578 
 3703      63657074 
 3703      696F6E20 
 3704 03f3 00000000 		.align 8
 3704      00
 3705              	.LC26:
 3706 03f8 556E6861 		.string	"Unhandled exception in CHECK_EQUAL(failure1, result.failures[0].second)"
 3706      6E646C65 
 3706      64206578 
 3706      63657074 
 3706      696F6E20 
 3707              		.align 8
 3708              	.LC27:
 3709 0440 556E6861 		.string	"Unhandled exception in CHECK_EQUAL(failure2, result.failures[1].second)"
 3709      6E646C65 
 3709      64206578 
 3709      63657074 
 3709      696F6E20 
 3710              		.text
 3711              		.align 2
 3713              	_ZN8UnitTest12_GLOBAL__N_184DeferredTestReporterFixtureReportFailureSavesFailureDetailsForMultipleF
 3714              	.LFB1354:
  84:TestDeferredTestReporter.cpp **** {
 3715              		.loc 3 84 0 is_stmt 1
 3716              		.cfi_startproc
 3717              		.cfi_personality 0x3,__gxx_personality_v0
 3718              		.cfi_lsda 0x3,.LLSDA1354
 3719 18e2 55       		pushq	%rbp
 3720              		.cfi_def_cfa_offset 16
 3721              		.cfi_offset 6, -16
 3722 18e3 4889E5   		movq	%rsp, %rbp
 3723              		.cfi_def_cfa_register 6
 3724 18e6 53       		pushq	%rbx
 3725 18e7 4883EC58 		subq	$88, %rsp
 3726              		.cfi_offset 3, -24
 3727 18eb 48897DA8 		movq	%rdi, -88(%rbp)
 3728              	.LBB94:
  85:TestDeferredTestReporter.cpp ****     char const* failure1 = "failure 1";
 3729              		.loc 3 85 0
 3730 18ef 48C745B8 		movq	$.LC23, -72(%rbp)
 3730      00000000 
  86:TestDeferredTestReporter.cpp ****     char const* failure2 = "failure 2";
 3731              		.loc 3 86 0
 3732 18f7 48C745C0 		movq	$.LC24, -64(%rbp)
 3732      00000000 
  87:TestDeferredTestReporter.cpp **** 
  88:TestDeferredTestReporter.cpp ****     reporter.ReportTestStart(details);
 3733              		.loc 3 88 0
 3734 18ff 488B45A8 		movq	-88(%rbp), %rax
 3735 1903 488D5040 		leaq	64(%rax), %rdx
 3736 1907 488B45A8 		movq	-88(%rbp), %rax
 3737 190b 4889D6   		movq	%rdx, %rsi
 3738 190e 4889C7   		movq	%rax, %rdi
 3739              	.LEHB108:
 3740 1911 E8000000 		call	_ZN8UnitTest20DeferredTestReporter15ReportTestStartERKNS_11TestDetailsE
 3740      00
  89:TestDeferredTestReporter.cpp ****     reporter.ReportFailure(details, failure1);
 3741              		.loc 3 89 0
 3742 1916 488B55B8 		movq	-72(%rbp), %rdx
 3743 191a 488B45A8 		movq	-88(%rbp), %rax
 3744 191e 488D4840 		leaq	64(%rax), %rcx
 3745 1922 488B45A8 		movq	-88(%rbp), %rax
 3746 1926 4889CE   		movq	%rcx, %rsi
 3747 1929 4889C7   		movq	%rax, %rdi
 3748 192c E8000000 		call	_ZN8UnitTest20DeferredTestReporter13ReportFailureERKNS_11TestDetailsEPKc
 3748      00
  90:TestDeferredTestReporter.cpp ****     reporter.ReportFailure(details, failure2);
 3749              		.loc 3 90 0
 3750 1931 488B55C0 		movq	-64(%rbp), %rdx
 3751 1935 488B45A8 		movq	-88(%rbp), %rax
 3752 1939 488D4840 		leaq	64(%rax), %rcx
 3753 193d 488B45A8 		movq	-88(%rbp), %rax
 3754 1941 4889CE   		movq	%rcx, %rsi
 3755 1944 4889C7   		movq	%rax, %rdi
 3756 1947 E8000000 		call	_ZN8UnitTest20DeferredTestReporter13ReportFailureERKNS_11TestDetailsEPKc
 3756      00
  91:TestDeferredTestReporter.cpp **** 
  92:TestDeferredTestReporter.cpp ****     DeferredTestResult const& result = reporter.GetResults().at(0);
 3757              		.loc 3 92 0
 3758 194c 488B45A8 		movq	-88(%rbp), %rax
 3759 1950 4889C7   		movq	%rax, %rdi
 3760 1953 E8000000 		call	_ZN8UnitTest20DeferredTestReporter10GetResultsEv
 3760      00
 3761 1958 BE000000 		movl	$0, %esi
 3761      00
 3762 195d 4889C7   		movq	%rax, %rdi
 3763 1960 E8000000 		call	_ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EE2atEm
 3763      00
 3764              	.LEHE108:
 3765 1965 488945C8 		movq	%rax, -56(%rbp)
 3766              	.LEHB109:
  93:TestDeferredTestReporter.cpp ****     CHECK_EQUAL(2, (int)result.failures.size());
 3767              		.loc 3 93 0
 3768 1969 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 3768      00
 3769 196e 488B08   		movq	(%rax), %rcx
 3770 1971 488D45D0 		leaq	-48(%rbp), %rax
 3771 1975 BA5D0000 		movl	$93, %edx
 3771      00
 3772 197a 4889CE   		movq	%rcx, %rsi
 3773 197d 4889C7   		movq	%rax, %rdi
 3774 1980 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 3774      00
 3775              		.loc 3 93 0 is_stmt 0 discriminator 1
 3776 1985 488B45C8 		movq	-56(%rbp), %rax
 3777 1989 4883C018 		addq	$24, %rax
 3778 198d 4889C7   		movq	%rax, %rdi
 3779 1990 E8000000 		call	_ZNKSt6vectorISt4pairIiSsESaIS1_EE4sizeEv
 3779      00
 3780 1995 8945B4   		movl	%eax, -76(%rbp)
 3781 1998 C745B002 		movl	$2, -80(%rbp)
 3781      000000
 3782 199f E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 3782      00
 3783 19a4 488B00   		movq	(%rax), %rax
 3784 19a7 488D4DD0 		leaq	-48(%rbp), %rcx
 3785 19ab 488D55B4 		leaq	-76(%rbp), %rdx
 3786 19af 488D75B0 		leaq	-80(%rbp), %rsi
 3787 19b3 4889C7   		movq	%rax, %rdi
 3788 19b6 E8000000 		call	_ZN8UnitTest10CheckEqualIiiEEvRNS_11TestResultsERKT_RKT0_RKNS_11TestDetailsE
 3788      00
 3789              	.LEHE109:
 3790              	.L212:
 3791              	.LEHB110:
  94:TestDeferredTestReporter.cpp ****     CHECK_EQUAL(failure1, result.failures[0].second);
 3792              		.loc 3 94 0 is_stmt 1
 3793 19bb E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 3793      00
 3794 19c0 488B08   		movq	(%rax), %rcx
 3795 19c3 488D45D0 		leaq	-48(%rbp), %rax
 3796 19c7 BA5E0000 		movl	$94, %edx
 3796      00
 3797 19cc 4889CE   		movq	%rcx, %rsi
 3798 19cf 4889C7   		movq	%rax, %rdi
 3799 19d2 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 3799      00
 3800              		.loc 3 94 0 is_stmt 0 discriminator 1
 3801 19d7 488B45C8 		movq	-56(%rbp), %rax
 3802 19db 4883C018 		addq	$24, %rax
 3803 19df BE000000 		movl	$0, %esi
 3803      00
 3804 19e4 4889C7   		movq	%rax, %rdi
 3805 19e7 E8000000 		call	_ZNKSt6vectorISt4pairIiSsESaIS1_EEixEm
 3805      00
 3806 19ec 488D5808 		leaq	8(%rax), %rbx
 3807 19f0 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 3807      00
 3808 19f5 488B00   		movq	(%rax), %rax
 3809 19f8 488D55D0 		leaq	-48(%rbp), %rdx
 3810 19fc 488D75B8 		leaq	-72(%rbp), %rsi
 3811 1a00 4889D1   		movq	%rdx, %rcx
 3812 1a03 4889DA   		movq	%rbx, %rdx
 3813 1a06 4889C7   		movq	%rax, %rdi
 3814 1a09 E8000000 		call	_ZN8UnitTest10CheckEqualIPKcSsEEvRNS_11TestResultsERKT_RKT0_RKNS_11TestDetailsE
 3814      00
 3815              	.LEHE110:
 3816              	.L215:
 3817              	.LEHB111:
  95:TestDeferredTestReporter.cpp ****     CHECK_EQUAL(failure2, result.failures[1].second);
 3818              		.loc 3 95 0 is_stmt 1
 3819 1a0e E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 3819      00
 3820 1a13 488B08   		movq	(%rax), %rcx
 3821 1a16 488D45D0 		leaq	-48(%rbp), %rax
 3822 1a1a BA5F0000 		movl	$95, %edx
 3822      00
 3823 1a1f 4889CE   		movq	%rcx, %rsi
 3824 1a22 4889C7   		movq	%rax, %rdi
 3825 1a25 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 3825      00
 3826              		.loc 3 95 0 is_stmt 0 discriminator 1
 3827 1a2a 488B45C8 		movq	-56(%rbp), %rax
 3828 1a2e 4883C018 		addq	$24, %rax
 3829 1a32 BE010000 		movl	$1, %esi
 3829      00
 3830 1a37 4889C7   		movq	%rax, %rdi
 3831 1a3a E8000000 		call	_ZNKSt6vectorISt4pairIiSsESaIS1_EEixEm
 3831      00
 3832 1a3f 488D5808 		leaq	8(%rax), %rbx
 3833 1a43 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 3833      00
 3834 1a48 488B00   		movq	(%rax), %rax
 3835 1a4b 488D55D0 		leaq	-48(%rbp), %rdx
 3836 1a4f 488D75C0 		leaq	-64(%rbp), %rsi
 3837 1a53 4889D1   		movq	%rdx, %rcx
 3838 1a56 4889DA   		movq	%rbx, %rdx
 3839 1a59 4889C7   		movq	%rax, %rdi
 3840 1a5c E8000000 		call	_ZN8UnitTest10CheckEqualIPKcSsEEvRNS_11TestResultsERKT_RKT0_RKNS_11TestDetailsE
 3840      00
 3841              	.LEHE111:
 3842              	.LBE94:
  96:TestDeferredTestReporter.cpp **** }
 3843              		.loc 3 96 0 is_stmt 1
 3844 1a61 E9120100 		jmp	.L225
 3844      00
 3845              	.L220:
 3846 1a66 4889C3   		movq	%rax, %rbx
 3847              	.LBB95:
  93:TestDeferredTestReporter.cpp ****     CHECK_EQUAL(failure1, result.failures[0].second);
 3848              		.loc 3 93 0
 3849 1a69 E8000000 		call	__cxa_end_catch
 3849      00
 3850 1a6e 4889D8   		movq	%rbx, %rax
 3851 1a71 4889C7   		movq	%rax, %rdi
 3852              	.LEHB112:
 3853 1a74 E8000000 		call	_Unwind_Resume
 3853      00
 3854              	.LEHE112:
 3855              	.L219:
 3856 1a79 4889C7   		movq	%rax, %rdi
 3857 1a7c E8000000 		call	__cxa_begin_catch
 3857      00
 3858              	.LEHB113:
 3859 1a81 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 3859      00
 3860 1a86 488B08   		movq	(%rax), %rcx
 3861 1a89 488D45D0 		leaq	-48(%rbp), %rax
 3862 1a8d BA5D0000 		movl	$93, %edx
 3862      00
 3863 1a92 4889CE   		movq	%rcx, %rsi
 3864 1a95 4889C7   		movq	%rax, %rdi
 3865 1a98 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 3865      00
  93:TestDeferredTestReporter.cpp ****     CHECK_EQUAL(failure1, result.failures[0].second);
 3866              		.loc 3 93 0 is_stmt 0 discriminator 1
 3867 1a9d E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 3867      00
 3868 1aa2 488B00   		movq	(%rax), %rax
 3869 1aa5 488D4DD0 		leaq	-48(%rbp), %rcx
 3870 1aa9 BA000000 		movl	$.LC25, %edx
 3870      00
 3871 1aae 4889CE   		movq	%rcx, %rsi
 3872 1ab1 4889C7   		movq	%rax, %rdi
 3873 1ab4 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 3873      00
 3874              	.LEHE113:
 3875              	.LEHB114:
 3876 1ab9 E8000000 		call	__cxa_end_catch
 3876      00
 3877              	.LEHE114:
 3878 1abe E9F8FEFF 		jmp	.L212
 3878      FF
 3879              	.L222:
 3880 1ac3 4889C3   		movq	%rax, %rbx
  94:TestDeferredTestReporter.cpp ****     CHECK_EQUAL(failure2, result.failures[1].second);
 3881              		.loc 3 94 0 is_stmt 1
 3882 1ac6 E8000000 		call	__cxa_end_catch
 3882      00
 3883 1acb 4889D8   		movq	%rbx, %rax
 3884 1ace 4889C7   		movq	%rax, %rdi
 3885              	.LEHB115:
 3886 1ad1 E8000000 		call	_Unwind_Resume
 3886      00
 3887              	.LEHE115:
 3888              	.L221:
 3889 1ad6 4889C7   		movq	%rax, %rdi
 3890 1ad9 E8000000 		call	__cxa_begin_catch
 3890      00
 3891              	.LEHB116:
 3892 1ade E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 3892      00
 3893 1ae3 488B08   		movq	(%rax), %rcx
 3894 1ae6 488D45D0 		leaq	-48(%rbp), %rax
 3895 1aea BA5E0000 		movl	$94, %edx
 3895      00
 3896 1aef 4889CE   		movq	%rcx, %rsi
 3897 1af2 4889C7   		movq	%rax, %rdi
 3898 1af5 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 3898      00
  94:TestDeferredTestReporter.cpp ****     CHECK_EQUAL(failure2, result.failures[1].second);
 3899              		.loc 3 94 0 is_stmt 0 discriminator 1
 3900 1afa E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 3900      00
 3901 1aff 488B00   		movq	(%rax), %rax
 3902 1b02 488D4DD0 		leaq	-48(%rbp), %rcx
 3903 1b06 BA000000 		movl	$.LC26, %edx
 3903      00
 3904 1b0b 4889CE   		movq	%rcx, %rsi
 3905 1b0e 4889C7   		movq	%rax, %rdi
 3906 1b11 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 3906      00
 3907              	.LEHE116:
 3908              	.LEHB117:
 3909 1b16 E8000000 		call	__cxa_end_catch
 3909      00
 3910              	.LEHE117:
 3911 1b1b E9EEFEFF 		jmp	.L215
 3911      FF
 3912              	.L224:
 3913 1b20 4889C3   		movq	%rax, %rbx
  95:TestDeferredTestReporter.cpp **** }
 3914              		.loc 3 95 0 is_stmt 1
 3915 1b23 E8000000 		call	__cxa_end_catch
 3915      00
 3916 1b28 4889D8   		movq	%rbx, %rax
 3917 1b2b 4889C7   		movq	%rax, %rdi
 3918              	.LEHB118:
 3919 1b2e E8000000 		call	_Unwind_Resume
 3919      00
 3920              	.LEHE118:
 3921              	.L223:
 3922 1b33 4889C7   		movq	%rax, %rdi
 3923 1b36 E8000000 		call	__cxa_begin_catch
 3923      00
 3924              	.LEHB119:
 3925 1b3b E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 3925      00
 3926 1b40 488B08   		movq	(%rax), %rcx
 3927 1b43 488D45D0 		leaq	-48(%rbp), %rax
 3928 1b47 BA5F0000 		movl	$95, %edx
 3928      00
 3929 1b4c 4889CE   		movq	%rcx, %rsi
 3930 1b4f 4889C7   		movq	%rax, %rdi
 3931 1b52 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 3931      00
  95:TestDeferredTestReporter.cpp **** }
 3932              		.loc 3 95 0 is_stmt 0 discriminator 1
 3933 1b57 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 3933      00
 3934 1b5c 488B00   		movq	(%rax), %rax
 3935 1b5f 488D4DD0 		leaq	-48(%rbp), %rcx
 3936 1b63 BA000000 		movl	$.LC27, %edx
 3936      00
 3937 1b68 4889CE   		movq	%rcx, %rsi
 3938 1b6b 4889C7   		movq	%rax, %rdi
 3939 1b6e E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 3939      00
 3940              	.LEHE119:
 3941              	.LEHB120:
 3942 1b73 E8000000 		call	__cxa_end_catch
 3942      00
 3943              	.LEHE120:
 3944              	.L225:
 3945              	.LBE95:
 3946              		.loc 3 96 0 is_stmt 1
 3947 1b78 90       		nop
 3948 1b79 4883C458 		addq	$88, %rsp
 3949 1b7d 5B       		popq	%rbx
 3950 1b7e 5D       		popq	%rbp
 3951              		.cfi_def_cfa 7, 8
 3952 1b7f C3       		ret
 3953              		.cfi_endproc
 3954              	.LFE1354:
 3955              		.section	.gcc_except_table
 3956              		.align 4
 3957              	.LLSDA1354:
 3958 02c8 FF       		.byte	0xff
 3959 02c9 03       		.byte	0x3
 3960 02ca 51       		.uleb128 .LLSDATT1354-.LLSDATTD1354
 3961              	.LLSDATTD1354:
 3962 02cb 01       		.byte	0x1
 3963 02cc 46       		.uleb128 .LLSDACSE1354-.LLSDACSB1354
 3964              	.LLSDACSB1354:
 3965 02cd 2F       		.uleb128 .LEHB108-.LFB1354
 3966 02ce 54       		.uleb128 .LEHE108-.LEHB108
 3967 02cf 00       		.uleb128 0
 3968 02d0 00       		.uleb128 0
 3969 02d1 8701     		.uleb128 .LEHB109-.LFB1354
 3970 02d3 52       		.uleb128 .LEHE109-.LEHB109
 3971 02d4 9703     		.uleb128 .L219-.LFB1354
 3972 02d6 01       		.uleb128 0x1
 3973 02d7 D901     		.uleb128 .LEHB110-.LFB1354
 3974 02d9 53       		.uleb128 .LEHE110-.LEHB110
 3975 02da F403     		.uleb128 .L221-.LFB1354
 3976 02dc 01       		.uleb128 0x1
 3977 02dd AC02     		.uleb128 .LEHB111-.LFB1354
 3978 02df 53       		.uleb128 .LEHE111-.LEHB111
 3979 02e0 D104     		.uleb128 .L223-.LFB1354
 3980 02e2 01       		.uleb128 0x1
 3981 02e3 9203     		.uleb128 .LEHB112-.LFB1354
 3982 02e5 05       		.uleb128 .LEHE112-.LEHB112
 3983 02e6 00       		.uleb128 0
 3984 02e7 00       		.uleb128 0
 3985 02e8 9F03     		.uleb128 .LEHB113-.LFB1354
 3986 02ea 38       		.uleb128 .LEHE113-.LEHB113
 3987 02eb 8403     		.uleb128 .L220-.LFB1354
 3988 02ed 00       		.uleb128 0
 3989 02ee D703     		.uleb128 .LEHB114-.LFB1354
 3990 02f0 05       		.uleb128 .LEHE114-.LEHB114
 3991 02f1 00       		.uleb128 0
 3992 02f2 00       		.uleb128 0
 3993 02f3 EF03     		.uleb128 .LEHB115-.LFB1354
 3994 02f5 05       		.uleb128 .LEHE115-.LEHB115
 3995 02f6 00       		.uleb128 0
 3996 02f7 00       		.uleb128 0
 3997 02f8 FC03     		.uleb128 .LEHB116-.LFB1354
 3998 02fa 38       		.uleb128 .LEHE116-.LEHB116
 3999 02fb E103     		.uleb128 .L222-.LFB1354
 4000 02fd 00       		.uleb128 0
 4001 02fe B404     		.uleb128 .LEHB117-.LFB1354
 4002 0300 05       		.uleb128 .LEHE117-.LEHB117
 4003 0301 00       		.uleb128 0
 4004 0302 00       		.uleb128 0
 4005 0303 CC04     		.uleb128 .LEHB118-.LFB1354
 4006 0305 05       		.uleb128 .LEHE118-.LEHB118
 4007 0306 00       		.uleb128 0
 4008 0307 00       		.uleb128 0
 4009 0308 D904     		.uleb128 .LEHB119-.LFB1354
 4010 030a 38       		.uleb128 .LEHE119-.LEHB119
 4011 030b BE04     		.uleb128 .L224-.LFB1354
 4012 030d 00       		.uleb128 0
 4013 030e 9105     		.uleb128 .LEHB120-.LFB1354
 4014 0310 05       		.uleb128 .LEHE120-.LEHB120
 4015 0311 00       		.uleb128 0
 4016 0312 00       		.uleb128 0
 4017              	.LLSDACSE1354:
 4018 0313 01       		.byte	0x1
 4019 0314 00       		.byte	0
 4020 0315 000000   		.align 4
 4021 0318 00000000 		.long	0
 4022              	
 4023              	.LLSDATT1354:
 4024              		.text
 4026              		.align 2
 4028              	_ZN8UnitTest12_GLOBAL__N_178DeferredTestReporterFixtureDeferredTestReporterTakesCopyOfFailureMessag
 4029              	.LFB1356:
  97:TestDeferredTestReporter.cpp **** 
  98:TestDeferredTestReporter.cpp **** TEST_FIXTURE(DeferredTestReporterFixture, DeferredTestReporterTakesCopyOfFailureMessage)
 4030              		.loc 3 98 0
 4031              		.cfi_startproc
 4032 1b80 55       		pushq	%rbp
 4033              		.cfi_def_cfa_offset 16
 4034              		.cfi_offset 6, -16
 4035 1b81 4889E5   		movq	%rsp, %rbp
 4036              		.cfi_def_cfa_register 6
 4037 1b84 4883EC10 		subq	$16, %rsp
 4038 1b88 48897DF8 		movq	%rdi, -8(%rbp)
 4039 1b8c 488975F0 		movq	%rsi, -16(%rbp)
 4040              	.LBB96:
 4041              		.loc 3 98 0
 4042 1b90 488B45F8 		movq	-8(%rbp), %rax
 4043 1b94 4889C7   		movq	%rax, %rdi
 4044 1b97 E8A2E4FF 		call	_ZN8UnitTest12_GLOBAL__N_127DeferredTestReporterFixtureC2Ev
 4044      FF
 4045 1b9c 488B45F8 		movq	-8(%rbp), %rax
 4046 1ba0 488B55F0 		movq	-16(%rbp), %rdx
 4047 1ba4 48895060 		movq	%rdx, 96(%rax)
 4048              	.LBE96:
 4049 1ba8 C9       		leave
 4050              		.cfi_def_cfa 7, 8
 4051 1ba9 C3       		ret
 4052              		.cfi_endproc
 4053              	.LFE1356:
 4055              		.set	_ZN8UnitTest12_GLOBAL__N_178DeferredTestReporterFixtureDeferredTestReporterTakesCopyOfFailure
 4056              		.section	.rodata
 4057              		.align 8
 4058              	.LC28:
 4059 0488 44656665 		.string	"DeferredTestReporterTakesCopyOfFailureMessage"
 4059      72726564 
 4059      54657374 
 4059      5265706F 
 4059      72746572 
 4060              		.text
 4061              		.align 2
 4063              	_ZN8UnitTest12_GLOBAL__N_176TestDeferredTestReporterFixtureDeferredTestReporterTakesCopyOfFailureMe
 4064              	.LFB1359:
 4065              		.loc 3 98 0
 4066              		.cfi_startproc
 4067 1baa 55       		pushq	%rbp
 4068              		.cfi_def_cfa_offset 16
 4069              		.cfi_offset 6, -16
 4070 1bab 4889E5   		movq	%rsp, %rbp
 4071              		.cfi_def_cfa_register 6
 4072 1bae 4883EC10 		subq	$16, %rsp
 4073 1bb2 48897DF8 		movq	%rdi, -8(%rbp)
 4074              	.LBB97:
 4075              		.loc 3 98 0
 4076 1bb6 E8000000 		call	_ZN13UnitTestSuite12GetSuiteNameEv
 4076      00
 4077 1bbb 4889C2   		movq	%rax, %rdx
 4078 1bbe 488B45F8 		movq	-8(%rbp), %rax
 4079 1bc2 41B86200 		movl	$98, %r8d
 4079      0000
 4080 1bc8 B9000000 		movl	$.LC4, %ecx
 4080      00
 4081 1bcd BE000000 		movl	$.LC28, %esi
 4081      00
 4082 1bd2 4889C7   		movq	%rax, %rdi
 4083 1bd5 E8000000 		call	_ZN8UnitTest4TestC2EPKcS2_S2_i
 4083      00
 4084 1bda 488B45F8 		movq	-8(%rbp), %rax
 4085 1bde 48C70000 		movq	$_ZTVN8UnitTest12_GLOBAL__N_176TestDeferredTestReporterFixtureDeferredTestReporterTakesCopyOf
 4085      000000
 4086              	.LBE97:
 4087 1be5 C9       		leave
 4088              		.cfi_def_cfa 7, 8
 4089 1be6 C3       		ret
 4090              		.cfi_endproc
 4091              	.LFE1359:
 4093              		.set	_ZN8UnitTest12_GLOBAL__N_176TestDeferredTestReporterFixtureDeferredTestReporterTakesCopyOfFai
 4094              		.local	_ZN8UnitTest12_GLOBAL__N_184testDeferredTestReporterFixtureDeferredTestReporterTakesCopyOfF
 4095              		.comm	_ZN8UnitTest12_GLOBAL__N_184testDeferredTestReporterFixtureDeferredTestReporterTakesCopyOfFa
 4096              		.local	_ZN8UnitTest12_GLOBAL__N_177adderDeferredTestReporterFixtureDeferredTestReporterTakesCopyOf
 4097              		.comm	_ZN8UnitTest12_GLOBAL__N_177adderDeferredTestReporterFixtureDeferredTestReporterTakesCopyOfF
 4098 1be7 90       		.align 2
 4100              	_ZN8UnitTest12_GLOBAL__N_178DeferredTestReporterFixtureDeferredTestReporterTakesCopyOfFailureMessag
 4101              	.LFB1363:
 4102              		.loc 3 98 0
 4103              		.cfi_startproc
 4104 1be8 55       		pushq	%rbp
 4105              		.cfi_def_cfa_offset 16
 4106              		.cfi_offset 6, -16
 4107 1be9 4889E5   		movq	%rsp, %rbp
 4108              		.cfi_def_cfa_register 6
 4109 1bec 4883EC10 		subq	$16, %rsp
 4110 1bf0 48897DF8 		movq	%rdi, -8(%rbp)
 4111              	.LBB98:
 4112              		.loc 3 98 0
 4113 1bf4 488B45F8 		movq	-8(%rbp), %rax
 4114 1bf8 4889C7   		movq	%rax, %rdi
 4115 1bfb E8E4E5FF 		call	_ZN8UnitTest12_GLOBAL__N_127DeferredTestReporterFixtureD2Ev
 4115      FF
 4116              	.LBE98:
 4117 1c00 C9       		leave
 4118              		.cfi_def_cfa 7, 8
 4119 1c01 C3       		ret
 4120              		.cfi_endproc
 4121              	.LFE1363:
 4123              		.set	_ZN8UnitTest12_GLOBAL__N_178DeferredTestReporterFixtureDeferredTestReporterTakesCopyOfFailure
 4124              		.align 2
 4126              	_ZNK8UnitTest12_GLOBAL__N_176TestDeferredTestReporterFixtureDeferredTestReporterTakesCopyOfFailureM
 4127              	.LFB1361:
 4128              		.loc 3 98 0
 4129              		.cfi_startproc
 4130              		.cfi_personality 0x3,__gxx_personality_v0
 4131              		.cfi_lsda 0x3,.LLSDA1361
 4132 1c02 55       		pushq	%rbp
 4133              		.cfi_def_cfa_offset 16
 4134              		.cfi_offset 6, -16
 4135 1c03 4889E5   		movq	%rsp, %rbp
 4136              		.cfi_def_cfa_register 6
 4137 1c06 4154     		pushq	%r12
 4138 1c08 53       		pushq	%rbx
 4139 1c09 4881ECA0 		subq	$416, %rsp
 4139      010000
 4140              		.cfi_offset 12, -24
 4141              		.cfi_offset 3, -32
 4142 1c10 4889BD58 		movq	%rdi, -424(%rbp)
 4142      FEFFFF
 4143              	.LBB99:
 4144              		.loc 3 98 0
 4145 1c17 C6856FFE 		movb	$0, -401(%rbp)
 4145      FFFF00
 4146              	.LBB100:
 4147 1c1e 488B8558 		movq	-424(%rbp), %rax
 4147      FEFFFF
 4148 1c25 488D5008 		leaq	8(%rax), %rdx
 4149 1c29 488D8580 		leaq	-384(%rbp), %rax
 4149      FEFFFF
 4150 1c30 4889D6   		movq	%rdx, %rsi
 4151 1c33 4889C7   		movq	%rax, %rdi
 4152              	.LEHB121:
 4153 1c36 E845FFFF 		call	_ZN8UnitTest12_GLOBAL__N_178DeferredTestReporterFixtureDeferredTestReporterTakesCopyOfFailure
 4153      FF
 4154              	.LEHE121:
 4155              		.loc 3 98 0 is_stmt 0 discriminator 1
 4156 1c3b C6856FFE 		movb	$1, -401(%rbp)
 4156      FFFF01
 4157 1c42 488B8558 		movq	-424(%rbp), %rax
 4157      FEFFFF
 4158 1c49 488D5008 		leaq	8(%rax), %rdx
 4159 1c4d 488D8580 		leaq	-384(%rbp), %rax
 4159      FEFFFF
 4160 1c54 4889D6   		movq	%rdx, %rsi
 4161 1c57 4889C7   		movq	%rax, %rdi
 4162              	.LEHB122:
 4163 1c5a E8371100 		call	_ZN8UnitTest11ExecuteTestINS_12_GLOBAL__N_178DeferredTestReporterFixtureDeferredTestReporterT
 4163      00
 4164              	.LEHE122:
 4165 1c5f 488D8580 		leaq	-384(%rbp), %rax
 4165      FEFFFF
 4166 1c66 4889C7   		movq	%rax, %rdi
 4167              	.LEHB123:
 4168 1c69 E87AFFFF 		call	_ZN8UnitTest12_GLOBAL__N_178DeferredTestReporterFixtureDeferredTestReporterTakesCopyOfFailure
 4168      FF
 4169              	.LEHE123:
 4170              	.LBE100:
 4171              	.LBE99:
 4172              		.loc 3 98 0
 4173 1c6e E9640200 		jmp	.L250
 4173      00
 4174              	.L244:
 4175 1c73 4989C4   		movq	%rax, %r12
 4176 1c76 4889D3   		movq	%rdx, %rbx
 4177              	.LBB108:
 4178              	.LBB101:
 4179 1c79 488D8580 		leaq	-384(%rbp), %rax
 4179      FEFFFF
 4180 1c80 4889C7   		movq	%rax, %rdi
 4181 1c83 E860FFFF 		call	_ZN8UnitTest12_GLOBAL__N_178DeferredTestReporterFixtureDeferredTestReporterTakesCopyOfFailure
 4181      FF
 4182 1c88 4C89E0   		movq	%r12, %rax
 4183 1c8b 4889DA   		movq	%rbx, %rdx
 4184 1c8e EB00     		jmp	.L232
 4185              	.L243:
 4186              	.L232:
 4187 1c90 4883FA01 		cmpq	$1, %rdx
 4188 1c94 745C     		je	.L234
 4189 1c96 4883FA02 		cmpq	$2, %rdx
 4190 1c9a 0F84F400 		je	.L235
 4190      0000
 4191 1ca0 E9980100 		jmp	.L249
 4191      00
 4192              	.L245:
 4193 1ca5 4889C3   		movq	%rax, %rbx
 4194              	.LBE101:
 4195              	.LBB102:
 4196 1ca8 E8000000 		call	__cxa_end_catch
 4196      00
 4197 1cad 4889D8   		movq	%rbx, %rax
 4198 1cb0 4889C7   		movq	%rax, %rdi
 4199              	.LEHB124:
 4200 1cb3 E8000000 		call	_Unwind_Resume
 4200      00
 4201              	.LEHE124:
 4202              	.L246:
 4203 1cb8 4889C3   		movq	%rax, %rbx
 4204              	.LBE102:
 4205              	.LBB103:
 4206              	.LBB104:
 4207 1cbb 488D8580 		leaq	-384(%rbp), %rax
 4207      FEFFFF
 4208 1cc2 4889C7   		movq	%rax, %rdi
 4209 1cc5 E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 4209      00
 4210 1cca EB03     		jmp	.L238
 4211              	.L247:
 4212 1ccc 4889C3   		movq	%rax, %rbx
 4213              	.L238:
 4214              	.LBE104:
 4215 1ccf E8000000 		call	__cxa_end_catch
 4215      00
 4216 1cd4 4889D8   		movq	%rbx, %rax
 4217 1cd7 4889C7   		movq	%rax, %rdi
 4218              	.LEHB125:
 4219 1cda E8000000 		call	_Unwind_Resume
 4219      00
 4220              	.LEHE125:
 4221              	.L248:
 4222 1cdf 4889C3   		movq	%rax, %rbx
 4223              	.LBE103:
 4224 1ce2 E8000000 		call	__cxa_end_catch
 4224      00
 4225 1ce7 4889D8   		movq	%rbx, %rax
 4226 1cea 4889C7   		movq	%rax, %rdi
 4227              	.LEHB126:
 4228 1ced E8000000 		call	_Unwind_Resume
 4228      00
 4229              	.LEHE126:
 4230              	.L234:
 4231              	.LBB106:
 4232 1cf2 4889C7   		movq	%rax, %rdi
 4233 1cf5 E8000000 		call	__cxa_begin_catch
 4233      00
 4234 1cfa 48898570 		movq	%rax, -400(%rbp)
 4234      FEFFFF
 4235 1d01 488B8570 		movq	-400(%rbp), %rax
 4235      FEFFFF
 4236 1d08 488B00   		movq	(%rax), %rax
 4237 1d0b 4883C010 		addq	$16, %rax
 4238 1d0f 488B00   		movq	(%rax), %rax
 4239 1d12 488B9570 		movq	-400(%rbp), %rdx
 4239      FEFFFF
 4240 1d19 4889D7   		movq	%rdx, %rdi
 4241 1d1c FFD0     		call	*%rax
 4242 1d1e 4889C3   		movq	%rax, %rbx
 4243 1d21 488B8570 		movq	-400(%rbp), %rax
 4243      FEFFFF
 4244 1d28 4889C7   		movq	%rax, %rdi
 4245              	.LEHB127:
 4246 1d2b E8000000 		call	_ZNK8UnitTest15AssertException10LineNumberEv
 4246      00
 4247 1d30 4189C4   		movl	%eax, %r12d
 4248 1d33 488B8570 		movq	-400(%rbp), %rax
 4248      FEFFFF
 4249 1d3a 4889C7   		movq	%rax, %rdi
 4250 1d3d E8000000 		call	_ZNK8UnitTest15AssertException8FilenameEv
 4250      00
 4251              		.loc 3 98 0 discriminator 1
 4252 1d42 4889C1   		movq	%rax, %rcx
 4253 1d45 488B8558 		movq	-424(%rbp), %rax
 4253      FEFFFF
 4254 1d4c 488B5008 		movq	8(%rax), %rdx
 4255 1d50 488B8558 		movq	-424(%rbp), %rax
 4255      FEFFFF
 4256 1d57 488B7010 		movq	16(%rax), %rsi
 4257 1d5b 488D8580 		leaq	-384(%rbp), %rax
 4257      FEFFFF
 4258 1d62 4589E0   		movl	%r12d, %r8d
 4259 1d65 4889C7   		movq	%rax, %rdi
 4260 1d68 E8000000 		call	_ZN8UnitTest11TestDetailsC1EPKcS2_S2_i
 4260      00
 4261              		.loc 3 98 0 discriminator 3
 4262 1d6d E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 4262      00
 4263 1d72 488B00   		movq	(%rax), %rax
 4264 1d75 488D8D80 		leaq	-384(%rbp), %rcx
 4264      FEFFFF
 4265 1d7c 4889DA   		movq	%rbx, %rdx
 4266 1d7f 4889CE   		movq	%rcx, %rsi
 4267 1d82 4889C7   		movq	%rax, %rdi
 4268 1d85 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 4268      00
 4269              	.LEHE127:
 4270              		.loc 3 98 0 discriminator 1
 4271 1d8a E8000000 		call	__cxa_end_catch
 4271      00
 4272              	.LBE106:
 4273              	.LBE108:
 4274 1d8f E9430100 		jmp	.L250
 4274      00
 4275              	.L235:
 4276              	.LBB109:
 4277              	.LBB107:
 4278              		.loc 3 98 0
 4279 1d94 4889C7   		movq	%rax, %rdi
 4280 1d97 E8000000 		call	__cxa_begin_catch
 4280      00
 4281 1d9c 48898578 		movq	%rax, -392(%rbp)
 4281      FEFFFF
 4282              	.LBB105:
 4283 1da3 488D8580 		leaq	-384(%rbp), %rax
 4283      FEFFFF
 4284 1daa 4889C7   		movq	%rax, %rdi
 4285              	.LEHB128:
 4286 1dad E8000000 		call	_ZN8UnitTest15MemoryOutStreamC1Ev
 4286      00
 4287              	.LEHE128:
 4288              		.loc 3 98 0 discriminator 1
 4289 1db2 488B8578 		movq	-392(%rbp), %rax
 4289      FEFFFF
 4290 1db9 488B00   		movq	(%rax), %rax
 4291 1dbc 4883C010 		addq	$16, %rax
 4292 1dc0 488B00   		movq	(%rax), %rax
 4293 1dc3 488B9578 		movq	-392(%rbp), %rdx
 4293      FEFFFF
 4294 1dca 4889D7   		movq	%rdx, %rdi
 4295 1dcd FFD0     		call	*%rax
 4296 1dcf 4889C3   		movq	%rax, %rbx
 4297 1dd2 488D8580 		leaq	-384(%rbp), %rax
 4297      FEFFFF
 4298 1dd9 BE000000 		movl	$.LC6, %esi
 4298      00
 4299 1dde 4889C7   		movq	%rax, %rdi
 4300              	.LEHB129:
 4301 1de1 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
 4301      00
 4302 1de6 4889DE   		movq	%rbx, %rsi
 4303 1de9 4889C7   		movq	%rax, %rdi
 4304 1dec E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
 4304      00
 4305 1df1 488D8580 		leaq	-384(%rbp), %rax
 4305      FEFFFF
 4306 1df8 4889C7   		movq	%rax, %rdi
 4307 1dfb E8000000 		call	_ZNK8UnitTest15MemoryOutStream7GetTextEv
 4307      00
 4308 1e00 4889C3   		movq	%rax, %rbx
 4309 1e03 488B8558 		movq	-424(%rbp), %rax
 4309      FEFFFF
 4310 1e0a 4C8D6008 		leaq	8(%rax), %r12
 4311 1e0e E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 4311      00
 4312 1e13 488B00   		movq	(%rax), %rax
 4313 1e16 4889DA   		movq	%rbx, %rdx
 4314 1e19 4C89E6   		movq	%r12, %rsi
 4315 1e1c 4889C7   		movq	%rax, %rdi
 4316 1e1f E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 4316      00
 4317              	.LEHE129:
 4318 1e24 488D8580 		leaq	-384(%rbp), %rax
 4318      FEFFFF
 4319 1e2b 4889C7   		movq	%rax, %rdi
 4320              	.LEHB130:
 4321 1e2e E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 4321      00
 4322              	.LEHE130:
 4323              	.LBE105:
 4324              		.loc 3 98 0
 4325 1e33 E8000000 		call	__cxa_end_catch
 4325      00
 4326              	.LBE107:
 4327              	.LBE109:
 4328 1e38 E99A0000 		jmp	.L250
 4328      00
 4329              	.L249:
 4330              	.LBB110:
 4331 1e3d 4889C7   		movq	%rax, %rdi
 4332 1e40 E8000000 		call	__cxa_begin_catch
 4332      00
 4333 1e45 80BD6FFE 		cmpb	$0, -401(%rbp)
 4333      FFFF00
 4334 1e4c 7443     		je	.L241
 4335              		.loc 3 98 0 discriminator 1
 4336 1e4e 488B8558 		movq	-424(%rbp), %rax
 4336      FEFFFF
 4337 1e55 488D4808 		leaq	8(%rax), %rcx
 4338 1e59 488D8580 		leaq	-384(%rbp), %rax
 4338      FEFFFF
 4339 1e60 BA620000 		movl	$98, %edx
 4339      00
 4340 1e65 4889CE   		movq	%rcx, %rsi
 4341 1e68 4889C7   		movq	%rax, %rdi
 4342              	.LEHB131:
 4343 1e6b E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 4343      00
 4344 1e70 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 4344      00
 4345 1e75 488B00   		movq	(%rax), %rax
 4346 1e78 488D8D80 		leaq	-384(%rbp), %rcx
 4346      FEFFFF
 4347 1e7f BA000000 		movl	$.LC7, %edx
 4347      00
 4348 1e84 4889CE   		movq	%rcx, %rsi
 4349 1e87 4889C7   		movq	%rax, %rdi
 4350 1e8a E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 4350      00
 4351 1e8f EB41     		jmp	.L242
 4352              	.L241:
 4353              		.loc 3 98 0 discriminator 2
 4354 1e91 488B8558 		movq	-424(%rbp), %rax
 4354      FEFFFF
 4355 1e98 488D4808 		leaq	8(%rax), %rcx
 4356 1e9c 488D8580 		leaq	-384(%rbp), %rax
 4356      FEFFFF
 4357 1ea3 BA620000 		movl	$98, %edx
 4357      00
 4358 1ea8 4889CE   		movq	%rcx, %rsi
 4359 1eab 4889C7   		movq	%rax, %rdi
 4360 1eae E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 4360      00
 4361              		.loc 3 98 0 discriminator 1
 4362 1eb3 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 4362      00
 4363 1eb8 488B00   		movq	(%rax), %rax
 4364 1ebb 488D8D80 		leaq	-384(%rbp), %rcx
 4364      FEFFFF
 4365 1ec2 BA000000 		movl	$.LC8, %edx
 4365      00
 4366 1ec7 4889CE   		movq	%rcx, %rsi
 4367 1eca 4889C7   		movq	%rax, %rdi
 4368 1ecd E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 4368      00
 4369              	.LEHE131:
 4370              	.L242:
 4371              	.LEHB132:
 4372 1ed2 E8000000 		call	__cxa_end_catch
 4372      00
 4373              	.LEHE132:
 4374              	.L250:
 4375              	.LBE110:
 4376              		.loc 3 98 0
 4377 1ed7 90       		nop
 4378 1ed8 4881C4A0 		addq	$416, %rsp
 4378      010000
 4379 1edf 5B       		popq	%rbx
 4380 1ee0 415C     		popq	%r12
 4381 1ee2 5D       		popq	%rbp
 4382              		.cfi_def_cfa 7, 8
 4383 1ee3 C3       		ret
 4384              		.cfi_endproc
 4385              	.LFE1361:
 4386              		.section	.gcc_except_table
 4387              		.align 4
 4388              	.LLSDA1361:
 4389 031c FF       		.byte	0xff
 4390 031d 03       		.byte	0x3
 4391 031e 59       		.uleb128 .LLSDATT1361-.LLSDATTD1361
 4392              	.LLSDATTD1361:
 4393 031f 01       		.byte	0x1
 4394 0320 40       		.uleb128 .LLSDACSE1361-.LLSDACSB1361
 4395              	.LLSDACSB1361:
 4396 0321 34       		.uleb128 .LEHB121-.LFB1361
 4397 0322 05       		.uleb128 .LEHE121-.LEHB121
 4398 0323 8E01     		.uleb128 .L243-.LFB1361
 4399 0325 05       		.uleb128 0x5
 4400 0326 58       		.uleb128 .LEHB122-.LFB1361
 4401 0327 05       		.uleb128 .LEHE122-.LEHB122
 4402 0328 71       		.uleb128 .L244-.LFB1361
 4403 0329 07       		.uleb128 0x7
 4404 032a 67       		.uleb128 .LEHB123-.LFB1361
 4405 032b 05       		.uleb128 .LEHE123-.LEHB123
 4406 032c 8E01     		.uleb128 .L243-.LFB1361
 4407 032e 05       		.uleb128 0x5
 4408 032f B101     		.uleb128 .LEHB124-.LFB1361
 4409 0331 05       		.uleb128 .LEHE124-.LEHB124
 4410 0332 00       		.uleb128 0
 4411 0333 00       		.uleb128 0
 4412 0334 D801     		.uleb128 .LEHB125-.LFB1361
 4413 0336 05       		.uleb128 .LEHE125-.LEHB125
 4414 0337 00       		.uleb128 0
 4415 0338 00       		.uleb128 0
 4416 0339 EB01     		.uleb128 .LEHB126-.LFB1361
 4417 033b 05       		.uleb128 .LEHE126-.LEHB126
 4418 033c 00       		.uleb128 0
 4419 033d 00       		.uleb128 0
 4420 033e A902     		.uleb128 .LEHB127-.LFB1361
 4421 0340 5F       		.uleb128 .LEHE127-.LEHB127
 4422 0341 A301     		.uleb128 .L245-.LFB1361
 4423 0343 00       		.uleb128 0
 4424 0344 AB03     		.uleb128 .LEHB128-.LFB1361
 4425 0346 05       		.uleb128 .LEHE128-.LEHB128
 4426 0347 CA01     		.uleb128 .L247-.LFB1361
 4427 0349 00       		.uleb128 0
 4428 034a DF03     		.uleb128 .LEHB129-.LFB1361
 4429 034c 43       		.uleb128 .LEHE129-.LEHB129
 4430 034d B601     		.uleb128 .L246-.LFB1361
 4431 034f 00       		.uleb128 0
 4432 0350 AC04     		.uleb128 .LEHB130-.LFB1361
 4433 0352 05       		.uleb128 .LEHE130-.LEHB130
 4434 0353 CA01     		.uleb128 .L247-.LFB1361
 4435 0355 00       		.uleb128 0
 4436 0356 E904     		.uleb128 .LEHB131-.LFB1361
 4437 0358 67       		.uleb128 .LEHE131-.LEHB131
 4438 0359 DD01     		.uleb128 .L248-.LFB1361
 4439 035b 00       		.uleb128 0
 4440 035c D005     		.uleb128 .LEHB132-.LFB1361
 4441 035e 05       		.uleb128 .LEHE132-.LEHB132
 4442 035f 00       		.uleb128 0
 4443 0360 00       		.uleb128 0
 4444              	.LLSDACSE1361:
 4445 0361 03       		.byte	0x3
 4446 0362 00       		.byte	0
 4447 0363 02       		.byte	0x2
 4448 0364 7D       		.byte	0x7d
 4449 0365 01       		.byte	0x1
 4450 0366 7D       		.byte	0x7d
 4451 0367 00       		.byte	0
 4452 0368 7D       		.byte	0x7d
 4453 0369 000000   		.align 4
 4454 036c 00000000 		.long	0
 4455              	
 4456 0370 00000000 		.long	_ZTISt9exception
 4457 0374 00000000 		.long	_ZTIN8UnitTest15AssertExceptionE
 4458              	.LLSDATT1361:
 4459              		.text
 4461              		.section	.rodata
 4462              	.LC29:
 4463 04b6 5265616C 		.string	"Real failure message"
 4463      20666169 
 4463      6C757265 
 4463      206D6573 
 4463      73616765 
 4464              	.LC30:
 4465 04cb 426F6775 		.string	"Bogus failure message"
 4465      73206661 
 4465      696C7572 
 4465      65206D65 
 4465      73736167 
 4466 04e1 00000000 		.align 8
 4466      000000
 4467              	.LC31:
 4468 04e8 556E6861 		.string	"Unhandled exception in CHECK_EQUAL(goodStr, failure.second)"
 4468      6E646C65 
 4468      64206578 
 4468      63657074 
 4468      696F6E20 
 4469              		.text
 4470              		.align 2
 4472              	_ZN8UnitTest12_GLOBAL__N_178DeferredTestReporterFixtureDeferredTestReporterTakesCopyOfFailureMessag
 4473              	.LFB1365:
  99:TestDeferredTestReporter.cpp **** {
 4474              		.loc 3 99 0 is_stmt 1
 4475              		.cfi_startproc
 4476              		.cfi_personality 0x3,__gxx_personality_v0
 4477              		.cfi_lsda 0x3,.LLSDA1365
 4478 1ee4 55       		pushq	%rbp
 4479              		.cfi_def_cfa_offset 16
 4480              		.cfi_offset 6, -16
 4481 1ee5 4889E5   		movq	%rsp, %rbp
 4482              		.cfi_def_cfa_register 6
 4483 1ee8 53       		pushq	%rbx
 4484 1ee9 4881ECE8 		subq	$232, %rsp
 4484      000000
 4485              		.cfi_offset 3, -24
 4486 1ef0 4889BD18 		movq	%rdi, -232(%rbp)
 4486      FFFFFF
 4487              		.loc 3 99 0
 4488 1ef7 64488B04 		movq	%fs:40, %rax
 4488      25280000 
 4488      00
 4489 1f00 488945E8 		movq	%rax, -24(%rbp)
 4490 1f04 31C0     		xorl	%eax, %eax
 4491              	.LBB111:
 100:TestDeferredTestReporter.cpp ****     reporter.ReportTestStart(details);
 4492              		.loc 3 100 0
 4493 1f06 488B8518 		movq	-232(%rbp), %rax
 4493      FFFFFF
 4494 1f0d 488D5040 		leaq	64(%rax), %rdx
 4495 1f11 488B8518 		movq	-232(%rbp), %rax
 4495      FFFFFF
 4496 1f18 4889D6   		movq	%rdx, %rsi
 4497 1f1b 4889C7   		movq	%rax, %rdi
 4498              	.LEHB133:
 4499 1f1e E8000000 		call	_ZN8UnitTest20DeferredTestReporter15ReportTestStartERKNS_11TestDetailsE
 4499      00
 101:TestDeferredTestReporter.cpp **** 
 102:TestDeferredTestReporter.cpp ****     char failureMessage[128];
 103:TestDeferredTestReporter.cpp ****     char const* goodStr = "Real failure message";
 4500              		.loc 3 103 0
 4501 1f23 48C78520 		movq	$.LC29, -224(%rbp)
 4501      FFFFFF00 
 4501      000000
 104:TestDeferredTestReporter.cpp ****     char const* badStr = "Bogus failure message";
 4502              		.loc 3 104 0
 4503 1f2e 48C78528 		movq	$.LC30, -216(%rbp)
 4503      FFFFFF00 
 4503      000000
 105:TestDeferredTestReporter.cpp ****     
 106:TestDeferredTestReporter.cpp **** 	using namespace std;
 107:TestDeferredTestReporter.cpp **** 
 108:TestDeferredTestReporter.cpp ****     strcpy(failureMessage, goodStr);
 4504              		.loc 3 108 0
 4505 1f39 488B9520 		movq	-224(%rbp), %rdx
 4505      FFFFFF
 4506 1f40 488D8560 		leaq	-160(%rbp), %rax
 4506      FFFFFF
 4507 1f47 4889D6   		movq	%rdx, %rsi
 4508 1f4a 4889C7   		movq	%rax, %rdi
 4509 1f4d E8000000 		call	strcpy
 4509      00
 109:TestDeferredTestReporter.cpp ****     reporter.ReportFailure(details, failureMessage);
 4510              		.loc 3 109 0
 4511 1f52 488B8518 		movq	-232(%rbp), %rax
 4511      FFFFFF
 4512 1f59 488D4840 		leaq	64(%rax), %rcx
 4513 1f5d 488B8518 		movq	-232(%rbp), %rax
 4513      FFFFFF
 4514 1f64 488D9560 		leaq	-160(%rbp), %rdx
 4514      FFFFFF
 4515 1f6b 4889CE   		movq	%rcx, %rsi
 4516 1f6e 4889C7   		movq	%rax, %rdi
 4517 1f71 E8000000 		call	_ZN8UnitTest20DeferredTestReporter13ReportFailureERKNS_11TestDetailsEPKc
 4517      00
 110:TestDeferredTestReporter.cpp ****     strcpy(failureMessage, badStr);
 4518              		.loc 3 110 0
 4519 1f76 488B9528 		movq	-216(%rbp), %rdx
 4519      FFFFFF
 4520 1f7d 488D8560 		leaq	-160(%rbp), %rax
 4520      FFFFFF
 4521 1f84 4889D6   		movq	%rdx, %rsi
 4522 1f87 4889C7   		movq	%rax, %rdi
 4523 1f8a E8000000 		call	strcpy
 4523      00
 111:TestDeferredTestReporter.cpp **** 
 112:TestDeferredTestReporter.cpp ****     DeferredTestResult const& result = reporter.GetResults().at(0);
 4524              		.loc 3 112 0
 4525 1f8f 488B8518 		movq	-232(%rbp), %rax
 4525      FFFFFF
 4526 1f96 4889C7   		movq	%rax, %rdi
 4527 1f99 E8000000 		call	_ZN8UnitTest20DeferredTestReporter10GetResultsEv
 4527      00
 4528 1f9e BE000000 		movl	$0, %esi
 4528      00
 4529 1fa3 4889C7   		movq	%rax, %rdi
 4530 1fa6 E8000000 		call	_ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EE2atEm
 4530      00
 4531 1fab 48898530 		movq	%rax, -208(%rbp)
 4531      FFFFFF
 113:TestDeferredTestReporter.cpp ****     DeferredTestResult::Failure const& failure = result.failures.at(0);
 4532              		.loc 3 113 0
 4533 1fb2 488B8530 		movq	-208(%rbp), %rax
 4533      FFFFFF
 4534 1fb9 4883C018 		addq	$24, %rax
 4535 1fbd BE000000 		movl	$0, %esi
 4535      00
 4536 1fc2 4889C7   		movq	%rax, %rdi
 4537 1fc5 E8000000 		call	_ZNKSt6vectorISt4pairIiSsESaIS1_EE2atEm
 4537      00
 4538              	.LEHE133:
 4539 1fca 48898538 		movq	%rax, -200(%rbp)
 4539      FFFFFF
 4540              	.LEHB134:
 114:TestDeferredTestReporter.cpp ****     CHECK_EQUAL(goodStr, failure.second);
 4541              		.loc 3 114 0
 4542 1fd1 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 4542      00
 4543 1fd6 488B08   		movq	(%rax), %rcx
 4544 1fd9 488D8540 		leaq	-192(%rbp), %rax
 4544      FFFFFF
 4545 1fe0 BA720000 		movl	$114, %edx
 4545      00
 4546 1fe5 4889CE   		movq	%rcx, %rsi
 4547 1fe8 4889C7   		movq	%rax, %rdi
 4548 1feb E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 4548      00
 4549              		.loc 3 114 0 is_stmt 0 discriminator 1
 4550 1ff0 488B8538 		movq	-200(%rbp), %rax
 4550      FFFFFF
 4551 1ff7 488D5808 		leaq	8(%rax), %rbx
 4552 1ffb E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 4552      00
 4553 2000 488B00   		movq	(%rax), %rax
 4554 2003 488D9540 		leaq	-192(%rbp), %rdx
 4554      FFFFFF
 4555 200a 488DB520 		leaq	-224(%rbp), %rsi
 4555      FFFFFF
 4556 2011 4889D1   		movq	%rdx, %rcx
 4557 2014 4889DA   		movq	%rbx, %rdx
 4558 2017 4889C7   		movq	%rax, %rdi
 4559 201a E8000000 		call	_ZN8UnitTest10CheckEqualIPKcSsEEvRNS_11TestResultsERKT_RKT0_RKNS_11TestDetailsE
 4559      00
 4560              	.LEHE134:
 4561              	.LBE111:
 115:TestDeferredTestReporter.cpp **** }
 4562              		.loc 3 115 0 is_stmt 1
 4563 201f EB5E     		jmp	.L258
 4564              	.L257:
 4565 2021 4889C3   		movq	%rax, %rbx
 4566              	.LBB112:
 114:TestDeferredTestReporter.cpp ****     CHECK_EQUAL(goodStr, failure.second);
 4567              		.loc 3 114 0
 4568 2024 E8000000 		call	__cxa_end_catch
 4568      00
 4569 2029 4889D8   		movq	%rbx, %rax
 4570 202c 4889C7   		movq	%rax, %rdi
 4571              	.LEHB135:
 4572 202f E8000000 		call	_Unwind_Resume
 4572      00
 4573              	.LEHE135:
 4574              	.L256:
 4575 2034 4889C7   		movq	%rax, %rdi
 4576 2037 E8000000 		call	__cxa_begin_catch
 4576      00
 4577              	.LEHB136:
 4578 203c E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 4578      00
 4579 2041 488B08   		movq	(%rax), %rcx
 4580 2044 488D8540 		leaq	-192(%rbp), %rax
 4580      FFFFFF
 4581 204b BA720000 		movl	$114, %edx
 4581      00
 4582 2050 4889CE   		movq	%rcx, %rsi
 4583 2053 4889C7   		movq	%rax, %rdi
 4584 2056 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 4584      00
 114:TestDeferredTestReporter.cpp ****     CHECK_EQUAL(goodStr, failure.second);
 4585              		.loc 3 114 0 is_stmt 0 discriminator 1
 4586 205b E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 4586      00
 4587 2060 488B00   		movq	(%rax), %rax
 4588 2063 488D8D40 		leaq	-192(%rbp), %rcx
 4588      FFFFFF
 4589 206a BA000000 		movl	$.LC31, %edx
 4589      00
 4590 206f 4889CE   		movq	%rcx, %rsi
 4591 2072 4889C7   		movq	%rax, %rdi
 4592 2075 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 4592      00
 4593              	.LEHE136:
 4594              	.LEHB137:
 4595 207a E8000000 		call	__cxa_end_catch
 4595      00
 4596              	.LEHE137:
 4597              	.L258:
 4598              	.LBE112:
 4599              		.loc 3 115 0 is_stmt 1
 4600 207f 90       		nop
 4601 2080 488B45E8 		movq	-24(%rbp), %rax
 4602 2084 64483304 		xorq	%fs:40, %rax
 4602      25280000 
 4602      00
 4603 208d 7405     		je	.L255
 4604 208f E8000000 		call	__stack_chk_fail
 4604      00
 4605              	.L255:
 4606 2094 4881C4E8 		addq	$232, %rsp
 4606      000000
 4607 209b 5B       		popq	%rbx
 4608 209c 5D       		popq	%rbp
 4609              		.cfi_def_cfa 7, 8
 4610 209d C3       		ret
 4611              		.cfi_endproc
 4612              	.LFE1365:
 4613              		.section	.gcc_except_table
 4614              		.align 4
 4615              	.LLSDA1365:
 4616 0378 FF       		.byte	0xff
 4617 0379 03       		.byte	0x3
 4618 037a 25       		.uleb128 .LLSDATT1365-.LLSDATTD1365
 4619              	.LLSDATTD1365:
 4620 037b 01       		.byte	0x1
 4621 037c 1B       		.uleb128 .LLSDACSE1365-.LLSDACSB1365
 4622              	.LLSDACSB1365:
 4623 037d 3A       		.uleb128 .LEHB133-.LFB1365
 4624 037e AC01     		.uleb128 .LEHE133-.LEHB133
 4625 0380 00       		.uleb128 0
 4626 0381 00       		.uleb128 0
 4627 0382 ED01     		.uleb128 .LEHB134-.LFB1365
 4628 0384 4E       		.uleb128 .LEHE134-.LEHB134
 4629 0385 D002     		.uleb128 .L256-.LFB1365
 4630 0387 01       		.uleb128 0x1
 4631 0388 CB02     		.uleb128 .LEHB135-.LFB1365
 4632 038a 05       		.uleb128 .LEHE135-.LEHB135
 4633 038b 00       		.uleb128 0
 4634 038c 00       		.uleb128 0
 4635 038d D802     		.uleb128 .LEHB136-.LFB1365
 4636 038f 3E       		.uleb128 .LEHE136-.LEHB136
 4637 0390 BD02     		.uleb128 .L257-.LFB1365
 4638 0392 00       		.uleb128 0
 4639 0393 9603     		.uleb128 .LEHB137-.LFB1365
 4640 0395 05       		.uleb128 .LEHE137-.LEHB137
 4641 0396 00       		.uleb128 0
 4642 0397 00       		.uleb128 0
 4643              	.LLSDACSE1365:
 4644 0398 01       		.byte	0x1
 4645 0399 00       		.byte	0
 4646 039a 0000     		.align 4
 4647 039c 00000000 		.long	0
 4648              	
 4649              	.LLSDATT1365:
 4650              		.text
 4652              		.section	.text._ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EEC2Ev,"axG",@progbits,_ZNSt6vect
 4653              		.align 2
 4654              		.weak	_ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EEC2Ev
 4656              	_ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EEC2Ev:
 4657              	.LFB1396:
 4658              		.file 6 "/usr/include/c++/4.8/bits/stl_vector.h"
   1:/usr/include/c++/4.8/bits/stl_vector.h **** // Vector implementation -*- C++ -*-
   2:/usr/include/c++/4.8/bits/stl_vector.h **** 
   3:/usr/include/c++/4.8/bits/stl_vector.h **** // Copyright (C) 2001-2013 Free Software Foundation, Inc.
   4:/usr/include/c++/4.8/bits/stl_vector.h **** //
   5:/usr/include/c++/4.8/bits/stl_vector.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/c++/4.8/bits/stl_vector.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/4.8/bits/stl_vector.h **** // terms of the GNU General Public License as published by the
   8:/usr/include/c++/4.8/bits/stl_vector.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/4.8/bits/stl_vector.h **** // any later version.
  10:/usr/include/c++/4.8/bits/stl_vector.h **** 
  11:/usr/include/c++/4.8/bits/stl_vector.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/c++/4.8/bits/stl_vector.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/c++/4.8/bits/stl_vector.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/4.8/bits/stl_vector.h **** // GNU General Public License for more details.
  15:/usr/include/c++/4.8/bits/stl_vector.h **** 
  16:/usr/include/c++/4.8/bits/stl_vector.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/c++/4.8/bits/stl_vector.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/4.8/bits/stl_vector.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/4.8/bits/stl_vector.h **** 
  20:/usr/include/c++/4.8/bits/stl_vector.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/c++/4.8/bits/stl_vector.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/c++/4.8/bits/stl_vector.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/4.8/bits/stl_vector.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/c++/4.8/bits/stl_vector.h **** 
  25:/usr/include/c++/4.8/bits/stl_vector.h **** /*
  26:/usr/include/c++/4.8/bits/stl_vector.h ****  *
  27:/usr/include/c++/4.8/bits/stl_vector.h ****  * Copyright (c) 1994
  28:/usr/include/c++/4.8/bits/stl_vector.h ****  * Hewlett-Packard Company
  29:/usr/include/c++/4.8/bits/stl_vector.h ****  *
  30:/usr/include/c++/4.8/bits/stl_vector.h ****  * Permission to use, copy, modify, distribute and sell this software
  31:/usr/include/c++/4.8/bits/stl_vector.h ****  * and its documentation for any purpose is hereby granted without fee,
  32:/usr/include/c++/4.8/bits/stl_vector.h ****  * provided that the above copyright notice appear in all copies and
  33:/usr/include/c++/4.8/bits/stl_vector.h ****  * that both that copyright notice and this permission notice appear
  34:/usr/include/c++/4.8/bits/stl_vector.h ****  * in supporting documentation.  Hewlett-Packard Company makes no
  35:/usr/include/c++/4.8/bits/stl_vector.h ****  * representations about the suitability of this software for any
  36:/usr/include/c++/4.8/bits/stl_vector.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  37:/usr/include/c++/4.8/bits/stl_vector.h ****  *
  38:/usr/include/c++/4.8/bits/stl_vector.h ****  *
  39:/usr/include/c++/4.8/bits/stl_vector.h ****  * Copyright (c) 1996
  40:/usr/include/c++/4.8/bits/stl_vector.h ****  * Silicon Graphics Computer Systems, Inc.
  41:/usr/include/c++/4.8/bits/stl_vector.h ****  *
  42:/usr/include/c++/4.8/bits/stl_vector.h ****  * Permission to use, copy, modify, distribute and sell this software
  43:/usr/include/c++/4.8/bits/stl_vector.h ****  * and its documentation for any purpose is hereby granted without fee,
  44:/usr/include/c++/4.8/bits/stl_vector.h ****  * provided that the above copyright notice appear in all copies and
  45:/usr/include/c++/4.8/bits/stl_vector.h ****  * that both that copyright notice and this permission notice appear
  46:/usr/include/c++/4.8/bits/stl_vector.h ****  * in supporting documentation.  Silicon Graphics makes no
  47:/usr/include/c++/4.8/bits/stl_vector.h ****  * representations about the suitability of this  software for any
  48:/usr/include/c++/4.8/bits/stl_vector.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  49:/usr/include/c++/4.8/bits/stl_vector.h ****  */
  50:/usr/include/c++/4.8/bits/stl_vector.h **** 
  51:/usr/include/c++/4.8/bits/stl_vector.h **** /** @file bits/stl_vector.h
  52:/usr/include/c++/4.8/bits/stl_vector.h ****  *  This is an internal header file, included by other library headers.
  53:/usr/include/c++/4.8/bits/stl_vector.h ****  *  Do not attempt to use it directly. @headername{vector}
  54:/usr/include/c++/4.8/bits/stl_vector.h ****  */
  55:/usr/include/c++/4.8/bits/stl_vector.h **** 
  56:/usr/include/c++/4.8/bits/stl_vector.h **** #ifndef _STL_VECTOR_H
  57:/usr/include/c++/4.8/bits/stl_vector.h **** #define _STL_VECTOR_H 1
  58:/usr/include/c++/4.8/bits/stl_vector.h **** 
  59:/usr/include/c++/4.8/bits/stl_vector.h **** #include <bits/stl_iterator_base_funcs.h>
  60:/usr/include/c++/4.8/bits/stl_vector.h **** #include <bits/functexcept.h>
  61:/usr/include/c++/4.8/bits/stl_vector.h **** #include <bits/concept_check.h>
  62:/usr/include/c++/4.8/bits/stl_vector.h **** #if __cplusplus >= 201103L
  63:/usr/include/c++/4.8/bits/stl_vector.h **** #include <initializer_list>
  64:/usr/include/c++/4.8/bits/stl_vector.h **** #endif
  65:/usr/include/c++/4.8/bits/stl_vector.h **** 
  66:/usr/include/c++/4.8/bits/stl_vector.h **** namespace std _GLIBCXX_VISIBILITY(default)
  67:/usr/include/c++/4.8/bits/stl_vector.h **** {
  68:/usr/include/c++/4.8/bits/stl_vector.h **** _GLIBCXX_BEGIN_NAMESPACE_CONTAINER
  69:/usr/include/c++/4.8/bits/stl_vector.h **** 
  70:/usr/include/c++/4.8/bits/stl_vector.h ****   /// See bits/stl_deque.h's _Deque_base for an explanation.
  71:/usr/include/c++/4.8/bits/stl_vector.h ****   template<typename _Tp, typename _Alloc>
  72:/usr/include/c++/4.8/bits/stl_vector.h ****     struct _Vector_base
  73:/usr/include/c++/4.8/bits/stl_vector.h ****     {
  74:/usr/include/c++/4.8/bits/stl_vector.h ****       typedef typename __gnu_cxx::__alloc_traits<_Alloc>::template
  75:/usr/include/c++/4.8/bits/stl_vector.h ****         rebind<_Tp>::other _Tp_alloc_type;
  76:/usr/include/c++/4.8/bits/stl_vector.h ****       typedef typename __gnu_cxx::__alloc_traits<_Tp_alloc_type>::pointer
  77:/usr/include/c++/4.8/bits/stl_vector.h ****        	pointer;
  78:/usr/include/c++/4.8/bits/stl_vector.h **** 
  79:/usr/include/c++/4.8/bits/stl_vector.h ****       struct _Vector_impl 
  80:/usr/include/c++/4.8/bits/stl_vector.h ****       : public _Tp_alloc_type
  81:/usr/include/c++/4.8/bits/stl_vector.h ****       {
  82:/usr/include/c++/4.8/bits/stl_vector.h **** 	pointer _M_start;
  83:/usr/include/c++/4.8/bits/stl_vector.h **** 	pointer _M_finish;
  84:/usr/include/c++/4.8/bits/stl_vector.h **** 	pointer _M_end_of_storage;
  85:/usr/include/c++/4.8/bits/stl_vector.h **** 
  86:/usr/include/c++/4.8/bits/stl_vector.h **** 	_Vector_impl()
  87:/usr/include/c++/4.8/bits/stl_vector.h **** 	: _Tp_alloc_type(), _M_start(0), _M_finish(0), _M_end_of_storage(0)
  88:/usr/include/c++/4.8/bits/stl_vector.h **** 	{ }
  89:/usr/include/c++/4.8/bits/stl_vector.h **** 
  90:/usr/include/c++/4.8/bits/stl_vector.h **** 	_Vector_impl(_Tp_alloc_type const& __a)
  91:/usr/include/c++/4.8/bits/stl_vector.h **** 	: _Tp_alloc_type(__a), _M_start(0), _M_finish(0), _M_end_of_storage(0)
  92:/usr/include/c++/4.8/bits/stl_vector.h **** 	{ }
  93:/usr/include/c++/4.8/bits/stl_vector.h **** 
  94:/usr/include/c++/4.8/bits/stl_vector.h **** #if __cplusplus >= 201103L
  95:/usr/include/c++/4.8/bits/stl_vector.h **** 	_Vector_impl(_Tp_alloc_type&& __a)
  96:/usr/include/c++/4.8/bits/stl_vector.h **** 	: _Tp_alloc_type(std::move(__a)),
  97:/usr/include/c++/4.8/bits/stl_vector.h **** 	  _M_start(0), _M_finish(0), _M_end_of_storage(0)
  98:/usr/include/c++/4.8/bits/stl_vector.h **** 	{ }
  99:/usr/include/c++/4.8/bits/stl_vector.h **** #endif
 100:/usr/include/c++/4.8/bits/stl_vector.h **** 
 101:/usr/include/c++/4.8/bits/stl_vector.h **** 	void _M_swap_data(_Vector_impl& __x)
 102:/usr/include/c++/4.8/bits/stl_vector.h **** 	{
 103:/usr/include/c++/4.8/bits/stl_vector.h **** 	  std::swap(_M_start, __x._M_start);
 104:/usr/include/c++/4.8/bits/stl_vector.h **** 	  std::swap(_M_finish, __x._M_finish);
 105:/usr/include/c++/4.8/bits/stl_vector.h **** 	  std::swap(_M_end_of_storage, __x._M_end_of_storage);
 106:/usr/include/c++/4.8/bits/stl_vector.h **** 	}
 107:/usr/include/c++/4.8/bits/stl_vector.h ****       };
 108:/usr/include/c++/4.8/bits/stl_vector.h ****       
 109:/usr/include/c++/4.8/bits/stl_vector.h ****     public:
 110:/usr/include/c++/4.8/bits/stl_vector.h ****       typedef _Alloc allocator_type;
 111:/usr/include/c++/4.8/bits/stl_vector.h **** 
 112:/usr/include/c++/4.8/bits/stl_vector.h ****       _Tp_alloc_type&
 113:/usr/include/c++/4.8/bits/stl_vector.h ****       _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
 114:/usr/include/c++/4.8/bits/stl_vector.h ****       { return *static_cast<_Tp_alloc_type*>(&this->_M_impl); }
 115:/usr/include/c++/4.8/bits/stl_vector.h **** 
 116:/usr/include/c++/4.8/bits/stl_vector.h ****       const _Tp_alloc_type&
 117:/usr/include/c++/4.8/bits/stl_vector.h ****       _M_get_Tp_allocator() const _GLIBCXX_NOEXCEPT
 118:/usr/include/c++/4.8/bits/stl_vector.h ****       { return *static_cast<const _Tp_alloc_type*>(&this->_M_impl); }
 119:/usr/include/c++/4.8/bits/stl_vector.h **** 
 120:/usr/include/c++/4.8/bits/stl_vector.h ****       allocator_type
 121:/usr/include/c++/4.8/bits/stl_vector.h ****       get_allocator() const _GLIBCXX_NOEXCEPT
 122:/usr/include/c++/4.8/bits/stl_vector.h ****       { return allocator_type(_M_get_Tp_allocator()); }
 123:/usr/include/c++/4.8/bits/stl_vector.h **** 
 124:/usr/include/c++/4.8/bits/stl_vector.h ****       _Vector_base()
 125:/usr/include/c++/4.8/bits/stl_vector.h ****       : _M_impl() { }
 126:/usr/include/c++/4.8/bits/stl_vector.h **** 
 127:/usr/include/c++/4.8/bits/stl_vector.h ****       _Vector_base(const allocator_type& __a)
 128:/usr/include/c++/4.8/bits/stl_vector.h ****       : _M_impl(__a) { }
 129:/usr/include/c++/4.8/bits/stl_vector.h **** 
 130:/usr/include/c++/4.8/bits/stl_vector.h ****       _Vector_base(size_t __n)
 131:/usr/include/c++/4.8/bits/stl_vector.h ****       : _M_impl()
 132:/usr/include/c++/4.8/bits/stl_vector.h ****       { _M_create_storage(__n); }
 133:/usr/include/c++/4.8/bits/stl_vector.h **** 
 134:/usr/include/c++/4.8/bits/stl_vector.h ****       _Vector_base(size_t __n, const allocator_type& __a)
 135:/usr/include/c++/4.8/bits/stl_vector.h ****       : _M_impl(__a)
 136:/usr/include/c++/4.8/bits/stl_vector.h ****       { _M_create_storage(__n); }
 137:/usr/include/c++/4.8/bits/stl_vector.h **** 
 138:/usr/include/c++/4.8/bits/stl_vector.h **** #if __cplusplus >= 201103L
 139:/usr/include/c++/4.8/bits/stl_vector.h ****       _Vector_base(_Tp_alloc_type&& __a)
 140:/usr/include/c++/4.8/bits/stl_vector.h ****       : _M_impl(std::move(__a)) { }
 141:/usr/include/c++/4.8/bits/stl_vector.h **** 
 142:/usr/include/c++/4.8/bits/stl_vector.h ****       _Vector_base(_Vector_base&& __x)
 143:/usr/include/c++/4.8/bits/stl_vector.h ****       : _M_impl(std::move(__x._M_get_Tp_allocator()))
 144:/usr/include/c++/4.8/bits/stl_vector.h ****       { this->_M_impl._M_swap_data(__x._M_impl); }
 145:/usr/include/c++/4.8/bits/stl_vector.h **** 
 146:/usr/include/c++/4.8/bits/stl_vector.h ****       _Vector_base(_Vector_base&& __x, const allocator_type& __a)
 147:/usr/include/c++/4.8/bits/stl_vector.h ****       : _M_impl(__a)
 148:/usr/include/c++/4.8/bits/stl_vector.h ****       {
 149:/usr/include/c++/4.8/bits/stl_vector.h **** 	if (__x.get_allocator() == __a)
 150:/usr/include/c++/4.8/bits/stl_vector.h **** 	  this->_M_impl._M_swap_data(__x._M_impl);
 151:/usr/include/c++/4.8/bits/stl_vector.h **** 	else
 152:/usr/include/c++/4.8/bits/stl_vector.h **** 	  {
 153:/usr/include/c++/4.8/bits/stl_vector.h **** 	    size_t __n = __x._M_impl._M_finish - __x._M_impl._M_start;
 154:/usr/include/c++/4.8/bits/stl_vector.h **** 	    _M_create_storage(__n);
 155:/usr/include/c++/4.8/bits/stl_vector.h **** 	  }
 156:/usr/include/c++/4.8/bits/stl_vector.h ****       }
 157:/usr/include/c++/4.8/bits/stl_vector.h **** #endif
 158:/usr/include/c++/4.8/bits/stl_vector.h **** 
 159:/usr/include/c++/4.8/bits/stl_vector.h ****       ~_Vector_base()
 160:/usr/include/c++/4.8/bits/stl_vector.h ****       { _M_deallocate(this->_M_impl._M_start, this->_M_impl._M_end_of_storage
 161:/usr/include/c++/4.8/bits/stl_vector.h **** 		      - this->_M_impl._M_start); }
 162:/usr/include/c++/4.8/bits/stl_vector.h **** 
 163:/usr/include/c++/4.8/bits/stl_vector.h ****     public:
 164:/usr/include/c++/4.8/bits/stl_vector.h ****       _Vector_impl _M_impl;
 165:/usr/include/c++/4.8/bits/stl_vector.h **** 
 166:/usr/include/c++/4.8/bits/stl_vector.h ****       pointer
 167:/usr/include/c++/4.8/bits/stl_vector.h ****       _M_allocate(size_t __n)
 168:/usr/include/c++/4.8/bits/stl_vector.h ****       { return __n != 0 ? _M_impl.allocate(__n) : 0; }
 169:/usr/include/c++/4.8/bits/stl_vector.h **** 
 170:/usr/include/c++/4.8/bits/stl_vector.h ****       void
 171:/usr/include/c++/4.8/bits/stl_vector.h ****       _M_deallocate(pointer __p, size_t __n)
 172:/usr/include/c++/4.8/bits/stl_vector.h ****       {
 173:/usr/include/c++/4.8/bits/stl_vector.h **** 	if (__p)
 174:/usr/include/c++/4.8/bits/stl_vector.h **** 	  _M_impl.deallocate(__p, __n);
 175:/usr/include/c++/4.8/bits/stl_vector.h ****       }
 176:/usr/include/c++/4.8/bits/stl_vector.h **** 
 177:/usr/include/c++/4.8/bits/stl_vector.h ****     private:
 178:/usr/include/c++/4.8/bits/stl_vector.h ****       void
 179:/usr/include/c++/4.8/bits/stl_vector.h ****       _M_create_storage(size_t __n)
 180:/usr/include/c++/4.8/bits/stl_vector.h ****       {
 181:/usr/include/c++/4.8/bits/stl_vector.h **** 	this->_M_impl._M_start = this->_M_allocate(__n);
 182:/usr/include/c++/4.8/bits/stl_vector.h **** 	this->_M_impl._M_finish = this->_M_impl._M_start;
 183:/usr/include/c++/4.8/bits/stl_vector.h **** 	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
 184:/usr/include/c++/4.8/bits/stl_vector.h ****       }
 185:/usr/include/c++/4.8/bits/stl_vector.h ****     };
 186:/usr/include/c++/4.8/bits/stl_vector.h **** 
 187:/usr/include/c++/4.8/bits/stl_vector.h **** 
 188:/usr/include/c++/4.8/bits/stl_vector.h ****   /**
 189:/usr/include/c++/4.8/bits/stl_vector.h ****    *  @brief A standard container which offers fixed time access to
 190:/usr/include/c++/4.8/bits/stl_vector.h ****    *  individual elements in any order.
 191:/usr/include/c++/4.8/bits/stl_vector.h ****    *
 192:/usr/include/c++/4.8/bits/stl_vector.h ****    *  @ingroup sequences
 193:/usr/include/c++/4.8/bits/stl_vector.h ****    *
 194:/usr/include/c++/4.8/bits/stl_vector.h ****    *  @tparam _Tp  Type of element.
 195:/usr/include/c++/4.8/bits/stl_vector.h ****    *  @tparam _Alloc  Allocator type, defaults to allocator<_Tp>.
 196:/usr/include/c++/4.8/bits/stl_vector.h ****    *
 197:/usr/include/c++/4.8/bits/stl_vector.h ****    *  Meets the requirements of a <a href="tables.html#65">container</a>, a
 198:/usr/include/c++/4.8/bits/stl_vector.h ****    *  <a href="tables.html#66">reversible container</a>, and a
 199:/usr/include/c++/4.8/bits/stl_vector.h ****    *  <a href="tables.html#67">sequence</a>, including the
 200:/usr/include/c++/4.8/bits/stl_vector.h ****    *  <a href="tables.html#68">optional sequence requirements</a> with the
 201:/usr/include/c++/4.8/bits/stl_vector.h ****    *  %exception of @c push_front and @c pop_front.
 202:/usr/include/c++/4.8/bits/stl_vector.h ****    *
 203:/usr/include/c++/4.8/bits/stl_vector.h ****    *  In some terminology a %vector can be described as a dynamic
 204:/usr/include/c++/4.8/bits/stl_vector.h ****    *  C-style array, it offers fast and efficient access to individual
 205:/usr/include/c++/4.8/bits/stl_vector.h ****    *  elements in any order and saves the user from worrying about
 206:/usr/include/c++/4.8/bits/stl_vector.h ****    *  memory and size allocation.  Subscripting ( @c [] ) access is
 207:/usr/include/c++/4.8/bits/stl_vector.h ****    *  also provided as with C-style arrays.
 208:/usr/include/c++/4.8/bits/stl_vector.h ****   */
 209:/usr/include/c++/4.8/bits/stl_vector.h ****   template<typename _Tp, typename _Alloc = std::allocator<_Tp> >
 210:/usr/include/c++/4.8/bits/stl_vector.h ****     class vector : protected _Vector_base<_Tp, _Alloc>
 211:/usr/include/c++/4.8/bits/stl_vector.h ****     {
 212:/usr/include/c++/4.8/bits/stl_vector.h ****       // Concept requirements.
 213:/usr/include/c++/4.8/bits/stl_vector.h ****       typedef typename _Alloc::value_type                _Alloc_value_type;
 214:/usr/include/c++/4.8/bits/stl_vector.h ****       __glibcxx_class_requires(_Tp, _SGIAssignableConcept)
 215:/usr/include/c++/4.8/bits/stl_vector.h ****       __glibcxx_class_requires2(_Tp, _Alloc_value_type, _SameTypeConcept)
 216:/usr/include/c++/4.8/bits/stl_vector.h ****       
 217:/usr/include/c++/4.8/bits/stl_vector.h ****       typedef _Vector_base<_Tp, _Alloc>			 _Base;
 218:/usr/include/c++/4.8/bits/stl_vector.h ****       typedef typename _Base::_Tp_alloc_type		 _Tp_alloc_type;
 219:/usr/include/c++/4.8/bits/stl_vector.h ****       typedef __gnu_cxx::__alloc_traits<_Tp_alloc_type>  _Alloc_traits;
 220:/usr/include/c++/4.8/bits/stl_vector.h **** 
 221:/usr/include/c++/4.8/bits/stl_vector.h ****     public:
 222:/usr/include/c++/4.8/bits/stl_vector.h ****       typedef _Tp					 value_type;
 223:/usr/include/c++/4.8/bits/stl_vector.h ****       typedef typename _Base::pointer                    pointer;
 224:/usr/include/c++/4.8/bits/stl_vector.h ****       typedef typename _Alloc_traits::const_pointer      const_pointer;
 225:/usr/include/c++/4.8/bits/stl_vector.h ****       typedef typename _Alloc_traits::reference          reference;
 226:/usr/include/c++/4.8/bits/stl_vector.h ****       typedef typename _Alloc_traits::const_reference    const_reference;
 227:/usr/include/c++/4.8/bits/stl_vector.h ****       typedef __gnu_cxx::__normal_iterator<pointer, vector> iterator;
 228:/usr/include/c++/4.8/bits/stl_vector.h ****       typedef __gnu_cxx::__normal_iterator<const_pointer, vector>
 229:/usr/include/c++/4.8/bits/stl_vector.h ****       const_iterator;
 230:/usr/include/c++/4.8/bits/stl_vector.h ****       typedef std::reverse_iterator<const_iterator>  const_reverse_iterator;
 231:/usr/include/c++/4.8/bits/stl_vector.h ****       typedef std::reverse_iterator<iterator>		 reverse_iterator;
 232:/usr/include/c++/4.8/bits/stl_vector.h ****       typedef size_t					 size_type;
 233:/usr/include/c++/4.8/bits/stl_vector.h ****       typedef ptrdiff_t					 difference_type;
 234:/usr/include/c++/4.8/bits/stl_vector.h ****       typedef _Alloc                        		 allocator_type;
 235:/usr/include/c++/4.8/bits/stl_vector.h **** 
 236:/usr/include/c++/4.8/bits/stl_vector.h ****     protected:
 237:/usr/include/c++/4.8/bits/stl_vector.h ****       using _Base::_M_allocate;
 238:/usr/include/c++/4.8/bits/stl_vector.h ****       using _Base::_M_deallocate;
 239:/usr/include/c++/4.8/bits/stl_vector.h ****       using _Base::_M_impl;
 240:/usr/include/c++/4.8/bits/stl_vector.h ****       using _Base::_M_get_Tp_allocator;
 241:/usr/include/c++/4.8/bits/stl_vector.h **** 
 242:/usr/include/c++/4.8/bits/stl_vector.h ****     public:
 243:/usr/include/c++/4.8/bits/stl_vector.h ****       // [23.2.4.1] construct/copy/destroy
 244:/usr/include/c++/4.8/bits/stl_vector.h ****       // (assign() and get_allocator() are also listed in this section)
 245:/usr/include/c++/4.8/bits/stl_vector.h ****       /**
 246:/usr/include/c++/4.8/bits/stl_vector.h ****        *  @brief  Default constructor creates no elements.
 247:/usr/include/c++/4.8/bits/stl_vector.h ****        */
 248:/usr/include/c++/4.8/bits/stl_vector.h ****       vector()
 4659              		.loc 6 248 0
 4660              		.cfi_startproc
 4661 0000 55       		pushq	%rbp
 4662              		.cfi_def_cfa_offset 16
 4663              		.cfi_offset 6, -16
 4664 0001 4889E5   		movq	%rsp, %rbp
 4665              		.cfi_def_cfa_register 6
 4666 0004 4883EC10 		subq	$16, %rsp
 4667 0008 48897DF8 		movq	%rdi, -8(%rbp)
 4668              	.LBB113:
 249:/usr/include/c++/4.8/bits/stl_vector.h ****       : _Base() { }
 4669              		.loc 6 249 0
 4670 000c 488B45F8 		movq	-8(%rbp), %rax
 4671 0010 4889C7   		movq	%rax, %rdi
 4672 0013 E8000000 		call	_ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EEC2Ev
 4672      00
 4673              	.LBE113:
 4674 0018 C9       		leave
 4675              		.cfi_def_cfa 7, 8
 4676 0019 C3       		ret
 4677              		.cfi_endproc
 4678              	.LFE1396:
 4680              		.weak	_ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EEC1Ev
 4681              		.set	_ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EEC1Ev,_ZNSt6vectorIN8UnitTest18DeferredTes
 4682              		.section	.text._ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EED2Ev,"axG",@progbits,_ZNSt6vect
 4683              		.align 2
 4684              		.weak	_ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EED2Ev
 4686              	_ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EED2Ev:
 4687              	.LFB1399:
 250:/usr/include/c++/4.8/bits/stl_vector.h **** 
 251:/usr/include/c++/4.8/bits/stl_vector.h ****       /**
 252:/usr/include/c++/4.8/bits/stl_vector.h ****        *  @brief  Creates a %vector with no elements.
 253:/usr/include/c++/4.8/bits/stl_vector.h ****        *  @param  __a  An allocator object.
 254:/usr/include/c++/4.8/bits/stl_vector.h ****        */
 255:/usr/include/c++/4.8/bits/stl_vector.h ****       explicit
 256:/usr/include/c++/4.8/bits/stl_vector.h ****       vector(const allocator_type& __a)
 257:/usr/include/c++/4.8/bits/stl_vector.h ****       : _Base(__a) { }
 258:/usr/include/c++/4.8/bits/stl_vector.h **** 
 259:/usr/include/c++/4.8/bits/stl_vector.h **** #if __cplusplus >= 201103L
 260:/usr/include/c++/4.8/bits/stl_vector.h ****       /**
 261:/usr/include/c++/4.8/bits/stl_vector.h ****        *  @brief  Creates a %vector with default constructed elements.
 262:/usr/include/c++/4.8/bits/stl_vector.h ****        *  @param  __n  The number of elements to initially create.
 263:/usr/include/c++/4.8/bits/stl_vector.h ****        *  @param  __a  An allocator.
 264:/usr/include/c++/4.8/bits/stl_vector.h ****        *
 265:/usr/include/c++/4.8/bits/stl_vector.h ****        *  This constructor fills the %vector with @a __n default
 266:/usr/include/c++/4.8/bits/stl_vector.h ****        *  constructed elements.
 267:/usr/include/c++/4.8/bits/stl_vector.h ****        */
 268:/usr/include/c++/4.8/bits/stl_vector.h ****       explicit
 269:/usr/include/c++/4.8/bits/stl_vector.h ****       vector(size_type __n, const allocator_type& __a = allocator_type())
 270:/usr/include/c++/4.8/bits/stl_vector.h ****       : _Base(__n, __a)
 271:/usr/include/c++/4.8/bits/stl_vector.h ****       { _M_default_initialize(__n); }
 272:/usr/include/c++/4.8/bits/stl_vector.h **** 
 273:/usr/include/c++/4.8/bits/stl_vector.h ****       /**
 274:/usr/include/c++/4.8/bits/stl_vector.h ****        *  @brief  Creates a %vector with copies of an exemplar element.
 275:/usr/include/c++/4.8/bits/stl_vector.h ****        *  @param  __n  The number of elements to initially create.
 276:/usr/include/c++/4.8/bits/stl_vector.h ****        *  @param  __value  An element to copy.
 277:/usr/include/c++/4.8/bits/stl_vector.h ****        *  @param  __a  An allocator.
 278:/usr/include/c++/4.8/bits/stl_vector.h ****        *
 279:/usr/include/c++/4.8/bits/stl_vector.h ****        *  This constructor fills the %vector with @a __n copies of @a __value.
 280:/usr/include/c++/4.8/bits/stl_vector.h ****        */
 281:/usr/include/c++/4.8/bits/stl_vector.h ****       vector(size_type __n, const value_type& __value,
 282:/usr/include/c++/4.8/bits/stl_vector.h **** 	     const allocator_type& __a = allocator_type())
 283:/usr/include/c++/4.8/bits/stl_vector.h ****       : _Base(__n, __a)
 284:/usr/include/c++/4.8/bits/stl_vector.h ****       { _M_fill_initialize(__n, __value); }
 285:/usr/include/c++/4.8/bits/stl_vector.h **** #else
 286:/usr/include/c++/4.8/bits/stl_vector.h ****       /**
 287:/usr/include/c++/4.8/bits/stl_vector.h ****        *  @brief  Creates a %vector with copies of an exemplar element.
 288:/usr/include/c++/4.8/bits/stl_vector.h ****        *  @param  __n  The number of elements to initially create.
 289:/usr/include/c++/4.8/bits/stl_vector.h ****        *  @param  __value  An element to copy.
 290:/usr/include/c++/4.8/bits/stl_vector.h ****        *  @param  __a  An allocator.
 291:/usr/include/c++/4.8/bits/stl_vector.h ****        *
 292:/usr/include/c++/4.8/bits/stl_vector.h ****        *  This constructor fills the %vector with @a __n copies of @a __value.
 293:/usr/include/c++/4.8/bits/stl_vector.h ****        */
 294:/usr/include/c++/4.8/bits/stl_vector.h ****       explicit
 295:/usr/include/c++/4.8/bits/stl_vector.h ****       vector(size_type __n, const value_type& __value = value_type(),
 296:/usr/include/c++/4.8/bits/stl_vector.h **** 	     const allocator_type& __a = allocator_type())
 297:/usr/include/c++/4.8/bits/stl_vector.h ****       : _Base(__n, __a)
 298:/usr/include/c++/4.8/bits/stl_vector.h ****       { _M_fill_initialize(__n, __value); }
 299:/usr/include/c++/4.8/bits/stl_vector.h **** #endif
 300:/usr/include/c++/4.8/bits/stl_vector.h **** 
 301:/usr/include/c++/4.8/bits/stl_vector.h ****       /**
 302:/usr/include/c++/4.8/bits/stl_vector.h ****        *  @brief  %Vector copy constructor.
 303:/usr/include/c++/4.8/bits/stl_vector.h ****        *  @param  __x  A %vector of identical element and allocator types.
 304:/usr/include/c++/4.8/bits/stl_vector.h ****        *
 305:/usr/include/c++/4.8/bits/stl_vector.h ****        *  The newly-created %vector uses a copy of the allocation
 306:/usr/include/c++/4.8/bits/stl_vector.h ****        *  object used by @a __x.  All the elements of @a __x are copied,
 307:/usr/include/c++/4.8/bits/stl_vector.h ****        *  but any extra memory in
 308:/usr/include/c++/4.8/bits/stl_vector.h ****        *  @a __x (for fast expansion) will not be copied.
 309:/usr/include/c++/4.8/bits/stl_vector.h ****        */
 310:/usr/include/c++/4.8/bits/stl_vector.h ****       vector(const vector& __x)
 311:/usr/include/c++/4.8/bits/stl_vector.h ****       : _Base(__x.size(),
 312:/usr/include/c++/4.8/bits/stl_vector.h ****         _Alloc_traits::_S_select_on_copy(__x._M_get_Tp_allocator()))
 313:/usr/include/c++/4.8/bits/stl_vector.h ****       { this->_M_impl._M_finish =
 314:/usr/include/c++/4.8/bits/stl_vector.h **** 	  std::__uninitialized_copy_a(__x.begin(), __x.end(),
 315:/usr/include/c++/4.8/bits/stl_vector.h **** 				      this->_M_impl._M_start,
 316:/usr/include/c++/4.8/bits/stl_vector.h **** 				      _M_get_Tp_allocator());
 317:/usr/include/c++/4.8/bits/stl_vector.h ****       }
 318:/usr/include/c++/4.8/bits/stl_vector.h **** 
 319:/usr/include/c++/4.8/bits/stl_vector.h **** #if __cplusplus >= 201103L
 320:/usr/include/c++/4.8/bits/stl_vector.h ****       /**
 321:/usr/include/c++/4.8/bits/stl_vector.h ****        *  @brief  %Vector move constructor.
 322:/usr/include/c++/4.8/bits/stl_vector.h ****        *  @param  __x  A %vector of identical element and allocator types.
 323:/usr/include/c++/4.8/bits/stl_vector.h ****        *
 324:/usr/include/c++/4.8/bits/stl_vector.h ****        *  The newly-created %vector contains the exact contents of @a __x.
 325:/usr/include/c++/4.8/bits/stl_vector.h ****        *  The contents of @a __x are a valid, but unspecified %vector.
 326:/usr/include/c++/4.8/bits/stl_vector.h ****        */
 327:/usr/include/c++/4.8/bits/stl_vector.h ****       vector(vector&& __x) noexcept
 328:/usr/include/c++/4.8/bits/stl_vector.h ****       : _Base(std::move(__x)) { }
 329:/usr/include/c++/4.8/bits/stl_vector.h **** 
 330:/usr/include/c++/4.8/bits/stl_vector.h ****       /// Copy constructor with alternative allocator
 331:/usr/include/c++/4.8/bits/stl_vector.h ****       vector(const vector& __x, const allocator_type& __a)
 332:/usr/include/c++/4.8/bits/stl_vector.h ****       : _Base(__x.size(), __a)
 333:/usr/include/c++/4.8/bits/stl_vector.h ****       { this->_M_impl._M_finish =
 334:/usr/include/c++/4.8/bits/stl_vector.h **** 	  std::__uninitialized_copy_a(__x.begin(), __x.end(),
 335:/usr/include/c++/4.8/bits/stl_vector.h **** 				      this->_M_impl._M_start,
 336:/usr/include/c++/4.8/bits/stl_vector.h **** 				      _M_get_Tp_allocator());
 337:/usr/include/c++/4.8/bits/stl_vector.h ****       }
 338:/usr/include/c++/4.8/bits/stl_vector.h **** 
 339:/usr/include/c++/4.8/bits/stl_vector.h ****       /// Move constructor with alternative allocator
 340:/usr/include/c++/4.8/bits/stl_vector.h ****       vector(vector&& __rv, const allocator_type& __m)
 341:/usr/include/c++/4.8/bits/stl_vector.h ****       : _Base(std::move(__rv), __m)
 342:/usr/include/c++/4.8/bits/stl_vector.h ****       {
 343:/usr/include/c++/4.8/bits/stl_vector.h **** 	if (__rv.get_allocator() != __m)
 344:/usr/include/c++/4.8/bits/stl_vector.h **** 	  {
 345:/usr/include/c++/4.8/bits/stl_vector.h **** 	    this->_M_impl._M_finish =
 346:/usr/include/c++/4.8/bits/stl_vector.h **** 	      std::__uninitialized_move_a(__rv.begin(), __rv.end(),
 347:/usr/include/c++/4.8/bits/stl_vector.h **** 					  this->_M_impl._M_start,
 348:/usr/include/c++/4.8/bits/stl_vector.h **** 					  _M_get_Tp_allocator());
 349:/usr/include/c++/4.8/bits/stl_vector.h **** 	    __rv.clear();
 350:/usr/include/c++/4.8/bits/stl_vector.h **** 	  }
 351:/usr/include/c++/4.8/bits/stl_vector.h ****       }
 352:/usr/include/c++/4.8/bits/stl_vector.h **** 
 353:/usr/include/c++/4.8/bits/stl_vector.h ****       /**
 354:/usr/include/c++/4.8/bits/stl_vector.h ****        *  @brief  Builds a %vector from an initializer list.
 355:/usr/include/c++/4.8/bits/stl_vector.h ****        *  @param  __l  An initializer_list.
 356:/usr/include/c++/4.8/bits/stl_vector.h ****        *  @param  __a  An allocator.
 357:/usr/include/c++/4.8/bits/stl_vector.h ****        *
 358:/usr/include/c++/4.8/bits/stl_vector.h ****        *  Create a %vector consisting of copies of the elements in the
 359:/usr/include/c++/4.8/bits/stl_vector.h ****        *  initializer_list @a __l.
 360:/usr/include/c++/4.8/bits/stl_vector.h ****        *
 361:/usr/include/c++/4.8/bits/stl_vector.h ****        *  This will call the element type's copy constructor N times
 362:/usr/include/c++/4.8/bits/stl_vector.h ****        *  (where N is @a __l.size()) and do no memory reallocation.
 363:/usr/include/c++/4.8/bits/stl_vector.h ****        */
 364:/usr/include/c++/4.8/bits/stl_vector.h ****       vector(initializer_list<value_type> __l,
 365:/usr/include/c++/4.8/bits/stl_vector.h **** 	     const allocator_type& __a = allocator_type())
 366:/usr/include/c++/4.8/bits/stl_vector.h ****       : _Base(__a)
 367:/usr/include/c++/4.8/bits/stl_vector.h ****       {
 368:/usr/include/c++/4.8/bits/stl_vector.h **** 	_M_range_initialize(__l.begin(), __l.end(),
 369:/usr/include/c++/4.8/bits/stl_vector.h **** 			    random_access_iterator_tag());
 370:/usr/include/c++/4.8/bits/stl_vector.h ****       }
 371:/usr/include/c++/4.8/bits/stl_vector.h **** #endif
 372:/usr/include/c++/4.8/bits/stl_vector.h **** 
 373:/usr/include/c++/4.8/bits/stl_vector.h ****       /**
 374:/usr/include/c++/4.8/bits/stl_vector.h ****        *  @brief  Builds a %vector from a range.
 375:/usr/include/c++/4.8/bits/stl_vector.h ****        *  @param  __first  An input iterator.
 376:/usr/include/c++/4.8/bits/stl_vector.h ****        *  @param  __last  An input iterator.
 377:/usr/include/c++/4.8/bits/stl_vector.h ****        *  @param  __a  An allocator.
 378:/usr/include/c++/4.8/bits/stl_vector.h ****        *
 379:/usr/include/c++/4.8/bits/stl_vector.h ****        *  Create a %vector consisting of copies of the elements from
 380:/usr/include/c++/4.8/bits/stl_vector.h ****        *  [first,last).
 381:/usr/include/c++/4.8/bits/stl_vector.h ****        *
 382:/usr/include/c++/4.8/bits/stl_vector.h ****        *  If the iterators are forward, bidirectional, or
 383:/usr/include/c++/4.8/bits/stl_vector.h ****        *  random-access, then this will call the elements' copy
 384:/usr/include/c++/4.8/bits/stl_vector.h ****        *  constructor N times (where N is distance(first,last)) and do
 385:/usr/include/c++/4.8/bits/stl_vector.h ****        *  no memory reallocation.  But if only input iterators are
 386:/usr/include/c++/4.8/bits/stl_vector.h ****        *  used, then this will do at most 2N calls to the copy
 387:/usr/include/c++/4.8/bits/stl_vector.h ****        *  constructor, and logN memory reallocations.
 388:/usr/include/c++/4.8/bits/stl_vector.h ****        */
 389:/usr/include/c++/4.8/bits/stl_vector.h **** #if __cplusplus >= 201103L
 390:/usr/include/c++/4.8/bits/stl_vector.h ****       template<typename _InputIterator,
 391:/usr/include/c++/4.8/bits/stl_vector.h **** 	       typename = std::_RequireInputIter<_InputIterator>>
 392:/usr/include/c++/4.8/bits/stl_vector.h ****         vector(_InputIterator __first, _InputIterator __last,
 393:/usr/include/c++/4.8/bits/stl_vector.h **** 	       const allocator_type& __a = allocator_type())
 394:/usr/include/c++/4.8/bits/stl_vector.h **** 	: _Base(__a)
 395:/usr/include/c++/4.8/bits/stl_vector.h ****         { _M_initialize_dispatch(__first, __last, __false_type()); }
 396:/usr/include/c++/4.8/bits/stl_vector.h **** #else
 397:/usr/include/c++/4.8/bits/stl_vector.h ****       template<typename _InputIterator>
 398:/usr/include/c++/4.8/bits/stl_vector.h ****         vector(_InputIterator __first, _InputIterator __last,
 399:/usr/include/c++/4.8/bits/stl_vector.h **** 	       const allocator_type& __a = allocator_type())
 400:/usr/include/c++/4.8/bits/stl_vector.h **** 	: _Base(__a)
 401:/usr/include/c++/4.8/bits/stl_vector.h ****         {
 402:/usr/include/c++/4.8/bits/stl_vector.h **** 	  // Check whether it's an integral type.  If so, it's not an iterator.
 403:/usr/include/c++/4.8/bits/stl_vector.h **** 	  typedef typename std::__is_integer<_InputIterator>::__type _Integral;
 404:/usr/include/c++/4.8/bits/stl_vector.h **** 	  _M_initialize_dispatch(__first, __last, _Integral());
 405:/usr/include/c++/4.8/bits/stl_vector.h **** 	}
 406:/usr/include/c++/4.8/bits/stl_vector.h **** #endif
 407:/usr/include/c++/4.8/bits/stl_vector.h **** 
 408:/usr/include/c++/4.8/bits/stl_vector.h ****       /**
 409:/usr/include/c++/4.8/bits/stl_vector.h ****        *  The dtor only erases the elements, and note that if the
 410:/usr/include/c++/4.8/bits/stl_vector.h ****        *  elements themselves are pointers, the pointed-to memory is
 411:/usr/include/c++/4.8/bits/stl_vector.h ****        *  not touched in any way.  Managing the pointer is the user's
 412:/usr/include/c++/4.8/bits/stl_vector.h ****        *  responsibility.
 413:/usr/include/c++/4.8/bits/stl_vector.h ****        */
 414:/usr/include/c++/4.8/bits/stl_vector.h ****       ~vector() _GLIBCXX_NOEXCEPT
 4688              		.loc 6 414 0
 4689              		.cfi_startproc
 4690              		.cfi_personality 0x3,__gxx_personality_v0
 4691              		.cfi_lsda 0x3,.LLSDA1399
 4692 0000 55       		pushq	%rbp
 4693              		.cfi_def_cfa_offset 16
 4694              		.cfi_offset 6, -16
 4695 0001 4889E5   		movq	%rsp, %rbp
 4696              		.cfi_def_cfa_register 6
 4697 0004 53       		pushq	%rbx
 4698 0005 4883EC18 		subq	$24, %rsp
 4699              		.cfi_offset 3, -24
 4700 0009 48897DE8 		movq	%rdi, -24(%rbp)
 4701              	.LBB114:
 415:/usr/include/c++/4.8/bits/stl_vector.h ****       { std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
 416:/usr/include/c++/4.8/bits/stl_vector.h **** 		      _M_get_Tp_allocator()); }
 4702              		.loc 6 416 0
 4703 000d 488B45E8 		movq	-24(%rbp), %rax
 4704 0011 4889C7   		movq	%rax, %rdi
 4705 0014 E8000000 		call	_ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE19_M_get_Tp_allocatorEv
 4705      00
 4706 0019 4889C2   		movq	%rax, %rdx
 4707 001c 488B45E8 		movq	-24(%rbp), %rax
 4708 0020 488B4808 		movq	8(%rax), %rcx
 4709 0024 488B45E8 		movq	-24(%rbp), %rax
 4710 0028 488B00   		movq	(%rax), %rax
 415:/usr/include/c++/4.8/bits/stl_vector.h ****       { std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
 4711              		.loc 6 415 0
 4712 002b 4889CE   		movq	%rcx, %rsi
 4713 002e 4889C7   		movq	%rax, %rdi
 4714              	.LEHB138:
 4715 0031 E8000000 		call	_ZSt8_DestroyIPN8UnitTest18DeferredTestResultES1_EvT_S3_RSaIT0_E
 4715      00
 4716              	.LEHE138:
 4717              		.loc 6 416 0
 4718 0036 488B45E8 		movq	-24(%rbp), %rax
 4719 003a 4889C7   		movq	%rax, %rdi
 4720              	.LEHB139:
 4721 003d E8000000 		call	_ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EED2Ev
 4721      00
 4722              	.LEHE139:
 4723 0042 EB1A     		jmp	.L264
 4724              	.L263:
 4725 0044 4889C3   		movq	%rax, %rbx
 4726 0047 488B45E8 		movq	-24(%rbp), %rax
 4727 004b 4889C7   		movq	%rax, %rdi
 4728 004e E8000000 		call	_ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EED2Ev
 4728      00
 4729 0053 4889D8   		movq	%rbx, %rax
 4730 0056 4889C7   		movq	%rax, %rdi
 4731              	.LEHB140:
 4732 0059 E8000000 		call	_Unwind_Resume
 4732      00
 4733              	.LEHE140:
 4734              	.L264:
 4735              	.LBE114:
 4736 005e 4883C418 		addq	$24, %rsp
 4737 0062 5B       		popq	%rbx
 4738 0063 5D       		popq	%rbp
 4739              		.cfi_def_cfa 7, 8
 4740 0064 C3       		ret
 4741              		.cfi_endproc
 4742              	.LFE1399:
 4743              		.section	.gcc_except_table
 4744              	.LLSDA1399:
 4745 03a0 FF       		.byte	0xff
 4746 03a1 FF       		.byte	0xff
 4747 03a2 01       		.byte	0x1
 4748 03a3 0C       		.uleb128 .LLSDACSE1399-.LLSDACSB1399
 4749              	.LLSDACSB1399:
 4750 03a4 31       		.uleb128 .LEHB138-.LFB1399
 4751 03a5 05       		.uleb128 .LEHE138-.LEHB138
 4752 03a6 44       		.uleb128 .L263-.LFB1399
 4753 03a7 00       		.uleb128 0
 4754 03a8 3D       		.uleb128 .LEHB139-.LFB1399
 4755 03a9 05       		.uleb128 .LEHE139-.LEHB139
 4756 03aa 00       		.uleb128 0
 4757 03ab 00       		.uleb128 0
 4758 03ac 59       		.uleb128 .LEHB140-.LFB1399
 4759 03ad 05       		.uleb128 .LEHE140-.LEHB140
 4760 03ae 00       		.uleb128 0
 4761 03af 00       		.uleb128 0
 4762              	.LLSDACSE1399:
 4763              		.section	.text._ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EED2Ev,"axG",@progbits,_ZNSt6vect
 4765              		.weak	_ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EED1Ev
 4766              		.set	_ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EED1Ev,_ZNSt6vectorIN8UnitTest18DeferredTes
 4767              		.section	.rodata
 4768              	.LC32:
 4769 0524 556E6861 		.string	"Unhandled system exception"
 4769      6E646C65 
 4769      64207379 
 4769      7374656D 
 4769      20657863 
 4770              	.LC33:
 4771 053f 556E6861 		.string	"Unhandled exception: Crash!"
 4771      6E646C65 
 4771      64206578 
 4771      63657074 
 4771      696F6E3A 
 4772              		.text
 4774              	_ZN8UnitTest11ExecuteTestINS_12_GLOBAL__N_171DeferredTestReporterFixtureReportTestStartCreatesANewD
 4775              	.LFB1407:
 4776              		.file 7 "../ExecuteTest.h"
   1:../ExecuteTest.h **** #ifndef UNITTEST_EXECUTE_TEST_H
   2:../ExecuteTest.h **** #define UNITTEST_EXECUTE_TEST_H
   3:../ExecuteTest.h **** 
   4:../ExecuteTest.h **** #include "TestDetails.h"
   5:../ExecuteTest.h **** #include "MemoryOutStream.h"
   6:../ExecuteTest.h **** #include "AssertException.h"
   7:../ExecuteTest.h **** #include "CurrentTest.h"
   8:../ExecuteTest.h **** 
   9:../ExecuteTest.h **** #ifdef UNITTEST_POSIX
  10:../ExecuteTest.h **** 	#include "PosixUtils/SignalTranslator.h"
  11:../ExecuteTest.h **** #endif
  12:../ExecuteTest.h **** 
  13:../ExecuteTest.h **** namespace UnitTest {
  14:../ExecuteTest.h **** 
  15:../ExecuteTest.h **** template< typename T >
  16:../ExecuteTest.h **** void ExecuteTest(T& testObject, TestDetails const& details)
 4777              		.loc 7 16 0
 4778              		.cfi_startproc
 4779              		.cfi_personality 0x3,__gxx_personality_v0
 4780              		.cfi_lsda 0x3,.LLSDA1407
 4781 209e 55       		pushq	%rbp
 4782              		.cfi_def_cfa_offset 16
 4783              		.cfi_offset 6, -16
 4784 209f 4889E5   		movq	%rsp, %rbp
 4785              		.cfi_def_cfa_register 6
 4786 20a2 4154     		pushq	%r12
 4787 20a4 53       		pushq	%rbx
 4788 20a5 4881EC80 		subq	$1152, %rsp
 4788      040000
 4789              		.cfi_offset 12, -24
 4790              		.cfi_offset 3, -32
 4791 20ac 4889BD78 		movq	%rdi, -1160(%rbp)
 4791      FBFFFF
 4792 20b3 4889B570 		movq	%rsi, -1168(%rbp)
 4792      FBFFFF
 4793              	.LEHB141:
 4794              	.LBB115:
  17:../ExecuteTest.h **** {
  18:../ExecuteTest.h **** 	CurrentTest::Details() = &details;
 4795              		.loc 7 18 0
 4796 20ba E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 4796      00
 4797              	.LEHE141:
 4798 20bf 488B9570 		movq	-1168(%rbp), %rdx
 4798      FBFFFF
 4799 20c6 488910   		movq	%rdx, (%rax)
 4800              	.LBB116:
  19:../ExecuteTest.h **** 
  20:../ExecuteTest.h **** 	try
  21:../ExecuteTest.h **** 	{
  22:../ExecuteTest.h **** #ifdef UNITTEST_POSIX
  23:../ExecuteTest.h **** 		UNITTEST_THROW_SIGNALS
 4801              		.loc 7 23 0
 4802 20c9 488D8590 		leaq	-1136(%rbp), %rax
 4802      FBFFFF
 4803 20d0 4889C7   		movq	%rax, %rdi
 4804              	.LEHB142:
 4805 20d3 E8000000 		call	_ZN8UnitTest16SignalTranslatorC1Ev
 4805      00
 4806              	.LEHE142:
 4807              		.loc 7 23 0 is_stmt 0 discriminator 1
 4808 20d8 488B0500 		movq	_ZN8UnitTest16SignalTranslator12s_jumpTargetE(%rip), %rax
 4808      000000
 4809 20df BE010000 		movl	$1, %esi
 4809      00
 4810 20e4 4889C7   		movq	%rax, %rdi
 4811 20e7 E8000000 		call	__sigsetjmp
 4811      00
 4812 20ec 85C0     		testl	%eax, %eax
 4813 20ee 0F95C0   		setne	%al
 4814 20f1 84C0     		testb	%al, %al
 4815 20f3 7423     		je	.L266
 4816 20f5 BF080000 		movl	$8, %edi
 4816      00
 4817 20fa E8000000 		call	__cxa_allocate_exception
 4817      00
 4818 20ff 48C70000 		movq	$.LC32, (%rax)
 4818      000000
 4819 2106 BA000000 		movl	$0, %edx
 4819      00
 4820 210b BE000000 		movl	$_ZTIPKc, %esi
 4820      00
 4821 2110 4889C7   		movq	%rax, %rdi
 4822              	.LEHB143:
 4823 2113 E8000000 		call	__cxa_throw
 4823      00
 4824              	.L266:
  24:../ExecuteTest.h **** #endif
  25:../ExecuteTest.h **** 		testObject.RunImpl();
 4825              		.loc 7 25 0 is_stmt 1
 4826 2118 488B8578 		movq	-1160(%rbp), %rax
 4826      FBFFFF
 4827 211f 4889C7   		movq	%rax, %rdi
 4828 2122 E8B7E4FF 		call	_ZN8UnitTest12_GLOBAL__N_171DeferredTestReporterFixtureReportTestStartCreatesANewDeferredTest
 4828      FF
 4829              	.LEHE143:
 4830              		.loc 7 25 0 is_stmt 0 discriminator 1
 4831 2127 488D8590 		leaq	-1136(%rbp), %rax
 4831      FBFFFF
 4832 212e 4889C7   		movq	%rax, %rdi
 4833              	.LEHB144:
 4834 2131 E8000000 		call	_ZN8UnitTest16SignalTranslatorD1Ev
 4834      00
 4835              	.LEHE144:
 4836              	.LBE116:
 4837              	.LBE115:
  26:../ExecuteTest.h **** 	}
  27:../ExecuteTest.h **** 	catch (AssertException const& e)
  28:../ExecuteTest.h **** 	{
  29:../ExecuteTest.h **** 		CurrentTest::Results()->OnTestFailure(
  30:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
  31:../ExecuteTest.h **** 	}
  32:../ExecuteTest.h **** 	catch (std::exception const& e)
  33:../ExecuteTest.h **** 	{
  34:../ExecuteTest.h **** 		MemoryOutStream stream;
  35:../ExecuteTest.h **** 		stream << "Unhandled exception: " << e.what();
  36:../ExecuteTest.h **** 		CurrentTest::Results()->OnTestFailure(details, stream.GetText());
  37:../ExecuteTest.h **** 	}
  38:../ExecuteTest.h **** 	catch (...)
  39:../ExecuteTest.h **** 	{
  40:../ExecuteTest.h **** 		CurrentTest::Results()->OnTestFailure(details, "Unhandled exception: Crash!");
  41:../ExecuteTest.h **** 	}
  42:../ExecuteTest.h **** }
 4838              		.loc 7 42 0 is_stmt 1
 4839 2136 E9EE0100 		jmp	.L284
 4839      00
 4840              	.L277:
 4841 213b 4989C4   		movq	%rax, %r12
 4842 213e 4889D3   		movq	%rdx, %rbx
 4843              	.LBB124:
 4844              	.LBB117:
  25:../ExecuteTest.h **** 	}
 4845              		.loc 7 25 0
 4846 2141 488D8590 		leaq	-1136(%rbp), %rax
 4846      FBFFFF
 4847 2148 4889C7   		movq	%rax, %rdi
 4848 214b E8000000 		call	_ZN8UnitTest16SignalTranslatorD1Ev
 4848      00
 4849 2150 4C89E0   		movq	%r12, %rax
 4850 2153 4889DA   		movq	%rbx, %rdx
 4851 2156 EB4D     		jmp	.L268
 4852              	.L279:
 4853 2158 4889C3   		movq	%rax, %rbx
 4854              	.LBE117:
 4855              	.LBB118:
  27:../ExecuteTest.h **** 	{
 4856              		.loc 7 27 0
 4857 215b E8000000 		call	__cxa_end_catch
 4857      00
 4858 2160 4889D8   		movq	%rbx, %rax
 4859 2163 4889C7   		movq	%rax, %rdi
 4860              	.LEHB145:
 4861 2166 E8000000 		call	_Unwind_Resume
 4861      00
 4862              	.LEHE145:
 4863              	.L280:
 4864 216b 4889C3   		movq	%rax, %rbx
 4865              	.LBE118:
 4866              	.LBB119:
 4867              	.LBB120:
  36:../ExecuteTest.h **** 	}
 4868              		.loc 7 36 0
 4869 216e 488D8590 		leaq	-1136(%rbp), %rax
 4869      FBFFFF
 4870 2175 4889C7   		movq	%rax, %rdi
 4871 2178 E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 4871      00
 4872 217d EB03     		jmp	.L271
 4873              	.L281:
 4874 217f 4889C3   		movq	%rax, %rbx
 4875              	.L271:
 4876              	.LBE120:
  32:../ExecuteTest.h **** 	{
 4877              		.loc 7 32 0
 4878 2182 E8000000 		call	__cxa_end_catch
 4878      00
 4879 2187 4889D8   		movq	%rbx, %rax
 4880 218a 4889C7   		movq	%rax, %rdi
 4881              	.LEHB146:
 4882 218d E8000000 		call	_Unwind_Resume
 4882      00
 4883              	.LEHE146:
 4884              	.L282:
 4885 2192 4889C3   		movq	%rax, %rbx
 4886              	.LBE119:
  38:../ExecuteTest.h **** 	{
 4887              		.loc 7 38 0
 4888 2195 E8000000 		call	__cxa_end_catch
 4888      00
 4889 219a 4889D8   		movq	%rbx, %rax
 4890 219d 4889C7   		movq	%rax, %rdi
 4891              	.LEHB147:
 4892 21a0 E8000000 		call	_Unwind_Resume
 4892      00
 4893              	.LEHE147:
 4894              	.L278:
 4895              	.L268:
 4896 21a5 4883FA01 		cmpq	$1, %rdx
 4897 21a9 740F     		je	.L274
 4898 21ab 4883FA02 		cmpq	$2, %rdx
 4899 21af 0F84A600 		je	.L275
 4899      0000
 4900 21b5 E9430100 		jmp	.L283
 4900      00
 4901              	.L274:
 4902              	.LBB122:
  27:../ExecuteTest.h **** 	{
 4903              		.loc 7 27 0
 4904 21ba 4889C7   		movq	%rax, %rdi
 4905 21bd E8000000 		call	__cxa_begin_catch
 4905      00
 4906 21c2 48898580 		movq	%rax, -1152(%rbp)
 4906      FBFFFF
  30:../ExecuteTest.h **** 	}
 4907              		.loc 7 30 0
 4908 21c9 488B8580 		movq	-1152(%rbp), %rax
 4908      FBFFFF
 4909 21d0 488B00   		movq	(%rax), %rax
 4910 21d3 4883C010 		addq	$16, %rax
 4911 21d7 488B00   		movq	(%rax), %rax
 4912 21da 488B9580 		movq	-1152(%rbp), %rdx
 4912      FBFFFF
 4913 21e1 4889D7   		movq	%rdx, %rdi
 4914 21e4 FFD0     		call	*%rax
 4915 21e6 4889C3   		movq	%rax, %rbx
 4916 21e9 488B8580 		movq	-1152(%rbp), %rax
 4916      FBFFFF
 4917 21f0 4889C7   		movq	%rax, %rdi
 4918              	.LEHB148:
 4919 21f3 E8000000 		call	_ZNK8UnitTest15AssertException10LineNumberEv
 4919      00
 4920 21f8 4189C4   		movl	%eax, %r12d
 4921 21fb 488B8580 		movq	-1152(%rbp), %rax
 4921      FBFFFF
 4922 2202 4889C7   		movq	%rax, %rdi
 4923 2205 E8000000 		call	_ZNK8UnitTest15AssertException8FilenameEv
 4923      00
  30:../ExecuteTest.h **** 	}
 4924              		.loc 7 30 0 is_stmt 0 discriminator 1
 4925 220a 4889C1   		movq	%rax, %rcx
 4926 220d 488B8570 		movq	-1168(%rbp), %rax
 4926      FBFFFF
 4927 2214 488B10   		movq	(%rax), %rdx
 4928 2217 488B8570 		movq	-1168(%rbp), %rax
 4928      FBFFFF
 4929 221e 488B7008 		movq	8(%rax), %rsi
 4930 2222 488D8590 		leaq	-1136(%rbp), %rax
 4930      FBFFFF
 4931 2229 4589E0   		movl	%r12d, %r8d
 4932 222c 4889C7   		movq	%rax, %rdi
 4933 222f E8000000 		call	_ZN8UnitTest11TestDetailsC1EPKcS2_S2_i
 4933      00
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 4934              		.loc 7 29 0 is_stmt 1
 4935 2234 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 4935      00
  30:../ExecuteTest.h **** 	}
 4936              		.loc 7 30 0
 4937 2239 488B00   		movq	(%rax), %rax
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 4938              		.loc 7 29 0
 4939 223c 488D8D90 		leaq	-1136(%rbp), %rcx
 4939      FBFFFF
 4940 2243 4889DA   		movq	%rbx, %rdx
 4941 2246 4889CE   		movq	%rcx, %rsi
 4942 2249 4889C7   		movq	%rax, %rdi
 4943 224c E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 4943      00
 4944              	.LEHE148:
  27:../ExecuteTest.h **** 	{
 4945              		.loc 7 27 0
 4946 2251 E8000000 		call	__cxa_end_catch
 4946      00
 4947              	.LBE122:
 4948              	.LBE124:
 4949              		.loc 7 42 0
 4950 2256 E9CE0000 		jmp	.L284
 4950      00
 4951              	.L275:
 4952              	.LBB125:
 4953              	.LBB123:
  32:../ExecuteTest.h **** 	{
 4954              		.loc 7 32 0
 4955 225b 4889C7   		movq	%rax, %rdi
 4956 225e E8000000 		call	__cxa_begin_catch
 4956      00
 4957 2263 48898588 		movq	%rax, -1144(%rbp)
 4957      FBFFFF
 4958              	.LBB121:
  34:../ExecuteTest.h **** 		stream << "Unhandled exception: " << e.what();
 4959              		.loc 7 34 0
 4960 226a 488D8590 		leaq	-1136(%rbp), %rax
 4960      FBFFFF
 4961 2271 4889C7   		movq	%rax, %rdi
 4962              	.LEHB149:
 4963 2274 E8000000 		call	_ZN8UnitTest15MemoryOutStreamC1Ev
 4963      00
 4964              	.LEHE149:
  35:../ExecuteTest.h **** 		CurrentTest::Results()->OnTestFailure(details, stream.GetText());
 4965              		.loc 7 35 0
 4966 2279 488B8588 		movq	-1144(%rbp), %rax
 4966      FBFFFF
 4967 2280 488B00   		movq	(%rax), %rax
 4968 2283 4883C010 		addq	$16, %rax
 4969 2287 488B00   		movq	(%rax), %rax
 4970 228a 488B9588 		movq	-1144(%rbp), %rdx
 4970      FBFFFF
 4971 2291 4889D7   		movq	%rdx, %rdi
 4972 2294 FFD0     		call	*%rax
 4973 2296 4889C3   		movq	%rax, %rbx
 4974 2299 488D8590 		leaq	-1136(%rbp), %rax
 4974      FBFFFF
 4975 22a0 BE000000 		movl	$.LC6, %esi
 4975      00
 4976 22a5 4889C7   		movq	%rax, %rdi
 4977              	.LEHB150:
 4978 22a8 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
 4978      00
 4979 22ad 4889DE   		movq	%rbx, %rsi
 4980 22b0 4889C7   		movq	%rax, %rdi
 4981 22b3 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
 4981      00
  36:../ExecuteTest.h **** 	}
 4982              		.loc 7 36 0
 4983 22b8 488D8590 		leaq	-1136(%rbp), %rax
 4983      FBFFFF
 4984 22bf 4889C7   		movq	%rax, %rdi
 4985 22c2 E8000000 		call	_ZNK8UnitTest15MemoryOutStream7GetTextEv
 4985      00
 4986 22c7 4889C3   		movq	%rax, %rbx
 4987 22ca E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 4987      00
  36:../ExecuteTest.h **** 	}
 4988              		.loc 7 36 0 is_stmt 0 discriminator 1
 4989 22cf 488B00   		movq	(%rax), %rax
 4990 22d2 488B8D70 		movq	-1168(%rbp), %rcx
 4990      FBFFFF
 4991 22d9 4889DA   		movq	%rbx, %rdx
 4992 22dc 4889CE   		movq	%rcx, %rsi
 4993 22df 4889C7   		movq	%rax, %rdi
 4994 22e2 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 4994      00
 4995              	.LEHE150:
 4996 22e7 488D8590 		leaq	-1136(%rbp), %rax
 4996      FBFFFF
 4997 22ee 4889C7   		movq	%rax, %rdi
 4998              	.LEHB151:
 4999 22f1 E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 4999      00
 5000              	.LEHE151:
 5001              	.LBE121:
  32:../ExecuteTest.h **** 	{
 5002              		.loc 7 32 0 is_stmt 1
 5003 22f6 E8000000 		call	__cxa_end_catch
 5003      00
 5004              	.LBE123:
 5005              	.LBE125:
 5006              		.loc 7 42 0
 5007 22fb EB2C     		jmp	.L284
 5008              	.L283:
 5009              	.LBB126:
  38:../ExecuteTest.h **** 	{
 5010              		.loc 7 38 0
 5011 22fd 4889C7   		movq	%rax, %rdi
 5012 2300 E8000000 		call	__cxa_begin_catch
 5012      00
 5013              	.LEHB152:
  40:../ExecuteTest.h **** 	}
 5014              		.loc 7 40 0
 5015 2305 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 5015      00
 5016 230a 488B00   		movq	(%rax), %rax
 5017 230d 488B8D70 		movq	-1168(%rbp), %rcx
 5017      FBFFFF
 5018 2314 BA000000 		movl	$.LC33, %edx
 5018      00
 5019 2319 4889CE   		movq	%rcx, %rsi
 5020 231c 4889C7   		movq	%rax, %rdi
 5021 231f E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 5021      00
 5022              	.LEHE152:
 5023              	.LEHB153:
  38:../ExecuteTest.h **** 	{
 5024              		.loc 7 38 0
 5025 2324 E8000000 		call	__cxa_end_catch
 5025      00
 5026              	.LEHE153:
 5027              	.L284:
 5028              	.LBE126:
 5029              		.loc 7 42 0
 5030 2329 90       		nop
 5031 232a 4881C480 		addq	$1152, %rsp
 5031      040000
 5032 2331 5B       		popq	%rbx
 5033 2332 415C     		popq	%r12
 5034 2334 5D       		popq	%rbp
 5035              		.cfi_def_cfa 7, 8
 5036 2335 C3       		ret
 5037              		.cfi_endproc
 5038              	.LFE1407:
 5039              		.section	.gcc_except_table
 5040              		.align 4
 5041              	.LLSDA1407:
 5042 03b0 FF       		.byte	0xff
 5043 03b1 03       		.byte	0x3
 5044 03b2 5D       		.uleb128 .LLSDATT1407-.LLSDATTD1407
 5045              	.LLSDATTD1407:
 5046 03b3 01       		.byte	0x1
 5047 03b4 46       		.uleb128 .LLSDACSE1407-.LLSDACSB1407
 5048              	.LLSDACSB1407:
 5049 03b5 1C       		.uleb128 .LEHB141-.LFB1407
 5050 03b6 05       		.uleb128 .LEHE141-.LEHB141
 5051 03b7 00       		.uleb128 0
 5052 03b8 00       		.uleb128 0
 5053 03b9 35       		.uleb128 .LEHB142-.LFB1407
 5054 03ba 05       		.uleb128 .LEHE142-.LEHB142
 5055 03bb 8702     		.uleb128 .L278-.LFB1407
 5056 03bd 05       		.uleb128 0x5
 5057 03be 75       		.uleb128 .LEHB143-.LFB1407
 5058 03bf 14       		.uleb128 .LEHE143-.LEHB143
 5059 03c0 9D01     		.uleb128 .L277-.LFB1407
 5060 03c2 07       		.uleb128 0x7
 5061 03c3 9301     		.uleb128 .LEHB144-.LFB1407
 5062 03c5 05       		.uleb128 .LEHE144-.LEHB144
 5063 03c6 8702     		.uleb128 .L278-.LFB1407
 5064 03c8 05       		.uleb128 0x5
 5065 03c9 C801     		.uleb128 .LEHB145-.LFB1407
 5066 03cb 05       		.uleb128 .LEHE145-.LEHB145
 5067 03cc 00       		.uleb128 0
 5068 03cd 00       		.uleb128 0
 5069 03ce EF01     		.uleb128 .LEHB146-.LFB1407
 5070 03d0 05       		.uleb128 .LEHE146-.LEHB146
 5071 03d1 00       		.uleb128 0
 5072 03d2 00       		.uleb128 0
 5073 03d3 8202     		.uleb128 .LEHB147-.LFB1407
 5074 03d5 05       		.uleb128 .LEHE147-.LEHB147
 5075 03d6 00       		.uleb128 0
 5076 03d7 00       		.uleb128 0
 5077 03d8 D502     		.uleb128 .LEHB148-.LFB1407
 5078 03da 5E       		.uleb128 .LEHE148-.LEHB148
 5079 03db BA01     		.uleb128 .L279-.LFB1407
 5080 03dd 00       		.uleb128 0
 5081 03de D603     		.uleb128 .LEHB149-.LFB1407
 5082 03e0 05       		.uleb128 .LEHE149-.LEHB149
 5083 03e1 E101     		.uleb128 .L281-.LFB1407
 5084 03e3 00       		.uleb128 0
 5085 03e4 8A04     		.uleb128 .LEHB150-.LFB1407
 5086 03e6 3F       		.uleb128 .LEHE150-.LEHB150
 5087 03e7 CD01     		.uleb128 .L280-.LFB1407
 5088 03e9 00       		.uleb128 0
 5089 03ea D304     		.uleb128 .LEHB151-.LFB1407
 5090 03ec 05       		.uleb128 .LEHE151-.LEHB151
 5091 03ed E101     		.uleb128 .L281-.LFB1407
 5092 03ef 00       		.uleb128 0
 5093 03f0 E704     		.uleb128 .LEHB152-.LFB1407
 5094 03f2 1F       		.uleb128 .LEHE152-.LEHB152
 5095 03f3 F401     		.uleb128 .L282-.LFB1407
 5096 03f5 00       		.uleb128 0
 5097 03f6 8605     		.uleb128 .LEHB153-.LFB1407
 5098 03f8 05       		.uleb128 .LEHE153-.LEHB153
 5099 03f9 00       		.uleb128 0
 5100 03fa 00       		.uleb128 0
 5101              	.LLSDACSE1407:
 5102 03fb 03       		.byte	0x3
 5103 03fc 00       		.byte	0
 5104 03fd 02       		.byte	0x2
 5105 03fe 7D       		.byte	0x7d
 5106 03ff 01       		.byte	0x1
 5107 0400 7D       		.byte	0x7d
 5108 0401 00       		.byte	0
 5109 0402 7D       		.byte	0x7d
 5110 0403 00       		.align 4
 5111 0404 00000000 		.long	0
 5112              	
 5113 0408 00000000 		.long	_ZTISt9exception
 5114 040c 00000000 		.long	_ZTIN8UnitTest15AssertExceptionE
 5115              	.LLSDATT1407:
 5116              		.text
 5118              		.section	.text._ZNKSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EE4sizeEv,"axG",@progbits,_ZNKSt
 5119              		.align 2
 5120              		.weak	_ZNKSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EE4sizeEv
 5122              	_ZNKSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EE4sizeEv:
 5123              	.LFB1409:
 417:/usr/include/c++/4.8/bits/stl_vector.h **** 
 418:/usr/include/c++/4.8/bits/stl_vector.h ****       /**
 419:/usr/include/c++/4.8/bits/stl_vector.h ****        *  @brief  %Vector assignment operator.
 420:/usr/include/c++/4.8/bits/stl_vector.h ****        *  @param  __x  A %vector of identical element and allocator types.
 421:/usr/include/c++/4.8/bits/stl_vector.h ****        *
 422:/usr/include/c++/4.8/bits/stl_vector.h ****        *  All the elements of @a __x are copied, but any extra memory in
 423:/usr/include/c++/4.8/bits/stl_vector.h ****        *  @a __x (for fast expansion) will not be copied.  Unlike the
 424:/usr/include/c++/4.8/bits/stl_vector.h ****        *  copy constructor, the allocator object is not copied.
 425:/usr/include/c++/4.8/bits/stl_vector.h ****        */
 426:/usr/include/c++/4.8/bits/stl_vector.h ****       vector&
 427:/usr/include/c++/4.8/bits/stl_vector.h ****       operator=(const vector& __x);
 428:/usr/include/c++/4.8/bits/stl_vector.h **** 
 429:/usr/include/c++/4.8/bits/stl_vector.h **** #if __cplusplus >= 201103L
 430:/usr/include/c++/4.8/bits/stl_vector.h ****       /**
 431:/usr/include/c++/4.8/bits/stl_vector.h ****        *  @brief  %Vector move assignment operator.
 432:/usr/include/c++/4.8/bits/stl_vector.h ****        *  @param  __x  A %vector of identical element and allocator types.
 433:/usr/include/c++/4.8/bits/stl_vector.h ****        *
 434:/usr/include/c++/4.8/bits/stl_vector.h ****        *  The contents of @a __x are moved into this %vector (without copying,
 435:/usr/include/c++/4.8/bits/stl_vector.h ****        *  if the allocators permit it).
 436:/usr/include/c++/4.8/bits/stl_vector.h ****        *  @a __x is a valid, but unspecified %vector.
 437:/usr/include/c++/4.8/bits/stl_vector.h ****        */
 438:/usr/include/c++/4.8/bits/stl_vector.h ****       vector&
 439:/usr/include/c++/4.8/bits/stl_vector.h ****       operator=(vector&& __x) noexcept(_Alloc_traits::_S_nothrow_move())
 440:/usr/include/c++/4.8/bits/stl_vector.h ****       {
 441:/usr/include/c++/4.8/bits/stl_vector.h ****         constexpr bool __move_storage =
 442:/usr/include/c++/4.8/bits/stl_vector.h ****           _Alloc_traits::_S_propagate_on_move_assign()
 443:/usr/include/c++/4.8/bits/stl_vector.h ****           || _Alloc_traits::_S_always_equal();
 444:/usr/include/c++/4.8/bits/stl_vector.h ****         _M_move_assign(std::move(__x),
 445:/usr/include/c++/4.8/bits/stl_vector.h ****                        integral_constant<bool, __move_storage>());
 446:/usr/include/c++/4.8/bits/stl_vector.h **** 	return *this;
 447:/usr/include/c++/4.8/bits/stl_vector.h ****       }
 448:/usr/include/c++/4.8/bits/stl_vector.h **** 
 449:/usr/include/c++/4.8/bits/stl_vector.h ****       /**
 450:/usr/include/c++/4.8/bits/stl_vector.h ****        *  @brief  %Vector list assignment operator.
 451:/usr/include/c++/4.8/bits/stl_vector.h ****        *  @param  __l  An initializer_list.
 452:/usr/include/c++/4.8/bits/stl_vector.h ****        *
 453:/usr/include/c++/4.8/bits/stl_vector.h ****        *  This function fills a %vector with copies of the elements in the
 454:/usr/include/c++/4.8/bits/stl_vector.h ****        *  initializer list @a __l.
 455:/usr/include/c++/4.8/bits/stl_vector.h ****        *
 456:/usr/include/c++/4.8/bits/stl_vector.h ****        *  Note that the assignment completely changes the %vector and
 457:/usr/include/c++/4.8/bits/stl_vector.h ****        *  that the resulting %vector's size is the same as the number
 458:/usr/include/c++/4.8/bits/stl_vector.h ****        *  of elements assigned.  Old data may be lost.
 459:/usr/include/c++/4.8/bits/stl_vector.h ****        */
 460:/usr/include/c++/4.8/bits/stl_vector.h ****       vector&
 461:/usr/include/c++/4.8/bits/stl_vector.h ****       operator=(initializer_list<value_type> __l)
 462:/usr/include/c++/4.8/bits/stl_vector.h ****       {
 463:/usr/include/c++/4.8/bits/stl_vector.h **** 	this->assign(__l.begin(), __l.end());
 464:/usr/include/c++/4.8/bits/stl_vector.h **** 	return *this;
 465:/usr/include/c++/4.8/bits/stl_vector.h ****       }
 466:/usr/include/c++/4.8/bits/stl_vector.h **** #endif
 467:/usr/include/c++/4.8/bits/stl_vector.h **** 
 468:/usr/include/c++/4.8/bits/stl_vector.h ****       /**
 469:/usr/include/c++/4.8/bits/stl_vector.h ****        *  @brief  Assigns a given value to a %vector.
 470:/usr/include/c++/4.8/bits/stl_vector.h ****        *  @param  __n  Number of elements to be assigned.
 471:/usr/include/c++/4.8/bits/stl_vector.h ****        *  @param  __val  Value to be assigned.
 472:/usr/include/c++/4.8/bits/stl_vector.h ****        *
 473:/usr/include/c++/4.8/bits/stl_vector.h ****        *  This function fills a %vector with @a __n copies of the given
 474:/usr/include/c++/4.8/bits/stl_vector.h ****        *  value.  Note that the assignment completely changes the
 475:/usr/include/c++/4.8/bits/stl_vector.h ****        *  %vector and that the resulting %vector's size is the same as
 476:/usr/include/c++/4.8/bits/stl_vector.h ****        *  the number of elements assigned.  Old data may be lost.
 477:/usr/include/c++/4.8/bits/stl_vector.h ****        */
 478:/usr/include/c++/4.8/bits/stl_vector.h ****       void
 479:/usr/include/c++/4.8/bits/stl_vector.h ****       assign(size_type __n, const value_type& __val)
 480:/usr/include/c++/4.8/bits/stl_vector.h ****       { _M_fill_assign(__n, __val); }
 481:/usr/include/c++/4.8/bits/stl_vector.h **** 
 482:/usr/include/c++/4.8/bits/stl_vector.h ****       /**
 483:/usr/include/c++/4.8/bits/stl_vector.h ****        *  @brief  Assigns a range to a %vector.
 484:/usr/include/c++/4.8/bits/stl_vector.h ****        *  @param  __first  An input iterator.
 485:/usr/include/c++/4.8/bits/stl_vector.h ****        *  @param  __last   An input iterator.
 486:/usr/include/c++/4.8/bits/stl_vector.h ****        *
 487:/usr/include/c++/4.8/bits/stl_vector.h ****        *  This function fills a %vector with copies of the elements in the
 488:/usr/include/c++/4.8/bits/stl_vector.h ****        *  range [__first,__last).
 489:/usr/include/c++/4.8/bits/stl_vector.h ****        *
 490:/usr/include/c++/4.8/bits/stl_vector.h ****        *  Note that the assignment completely changes the %vector and
 491:/usr/include/c++/4.8/bits/stl_vector.h ****        *  that the resulting %vector's size is the same as the number
 492:/usr/include/c++/4.8/bits/stl_vector.h ****        *  of elements assigned.  Old data may be lost.
 493:/usr/include/c++/4.8/bits/stl_vector.h ****        */
 494:/usr/include/c++/4.8/bits/stl_vector.h **** #if __cplusplus >= 201103L
 495:/usr/include/c++/4.8/bits/stl_vector.h ****       template<typename _InputIterator,
 496:/usr/include/c++/4.8/bits/stl_vector.h **** 	       typename = std::_RequireInputIter<_InputIterator>>
 497:/usr/include/c++/4.8/bits/stl_vector.h ****         void
 498:/usr/include/c++/4.8/bits/stl_vector.h ****         assign(_InputIterator __first, _InputIterator __last)
 499:/usr/include/c++/4.8/bits/stl_vector.h ****         { _M_assign_dispatch(__first, __last, __false_type()); }
 500:/usr/include/c++/4.8/bits/stl_vector.h **** #else
 501:/usr/include/c++/4.8/bits/stl_vector.h ****       template<typename _InputIterator>
 502:/usr/include/c++/4.8/bits/stl_vector.h ****         void
 503:/usr/include/c++/4.8/bits/stl_vector.h ****         assign(_InputIterator __first, _InputIterator __last)
 504:/usr/include/c++/4.8/bits/stl_vector.h ****         {
 505:/usr/include/c++/4.8/bits/stl_vector.h **** 	  // Check whether it's an integral type.  If so, it's not an iterator.
 506:/usr/include/c++/4.8/bits/stl_vector.h **** 	  typedef typename std::__is_integer<_InputIterator>::__type _Integral;
 507:/usr/include/c++/4.8/bits/stl_vector.h **** 	  _M_assign_dispatch(__first, __last, _Integral());
 508:/usr/include/c++/4.8/bits/stl_vector.h **** 	}
 509:/usr/include/c++/4.8/bits/stl_vector.h **** #endif
 510:/usr/include/c++/4.8/bits/stl_vector.h **** 
 511:/usr/include/c++/4.8/bits/stl_vector.h **** #if __cplusplus >= 201103L
 512:/usr/include/c++/4.8/bits/stl_vector.h ****       /**
 513:/usr/include/c++/4.8/bits/stl_vector.h ****        *  @brief  Assigns an initializer list to a %vector.
 514:/usr/include/c++/4.8/bits/stl_vector.h ****        *  @param  __l  An initializer_list.
 515:/usr/include/c++/4.8/bits/stl_vector.h ****        *
 516:/usr/include/c++/4.8/bits/stl_vector.h ****        *  This function fills a %vector with copies of the elements in the
 517:/usr/include/c++/4.8/bits/stl_vector.h ****        *  initializer list @a __l.
 518:/usr/include/c++/4.8/bits/stl_vector.h ****        *
 519:/usr/include/c++/4.8/bits/stl_vector.h ****        *  Note that the assignment completely changes the %vector and
 520:/usr/include/c++/4.8/bits/stl_vector.h ****        *  that the resulting %vector's size is the same as the number
 521:/usr/include/c++/4.8/bits/stl_vector.h ****        *  of elements assigned.  Old data may be lost.
 522:/usr/include/c++/4.8/bits/stl_vector.h ****        */
 523:/usr/include/c++/4.8/bits/stl_vector.h ****       void
 524:/usr/include/c++/4.8/bits/stl_vector.h ****       assign(initializer_list<value_type> __l)
 525:/usr/include/c++/4.8/bits/stl_vector.h ****       { this->assign(__l.begin(), __l.end()); }
 526:/usr/include/c++/4.8/bits/stl_vector.h **** #endif
 527:/usr/include/c++/4.8/bits/stl_vector.h **** 
 528:/usr/include/c++/4.8/bits/stl_vector.h ****       /// Get a copy of the memory allocation object.
 529:/usr/include/c++/4.8/bits/stl_vector.h ****       using _Base::get_allocator;
 530:/usr/include/c++/4.8/bits/stl_vector.h **** 
 531:/usr/include/c++/4.8/bits/stl_vector.h ****       // iterators
 532:/usr/include/c++/4.8/bits/stl_vector.h ****       /**
 533:/usr/include/c++/4.8/bits/stl_vector.h ****        *  Returns a read/write iterator that points to the first
 534:/usr/include/c++/4.8/bits/stl_vector.h ****        *  element in the %vector.  Iteration is done in ordinary
 535:/usr/include/c++/4.8/bits/stl_vector.h ****        *  element order.
 536:/usr/include/c++/4.8/bits/stl_vector.h ****        */
 537:/usr/include/c++/4.8/bits/stl_vector.h ****       iterator
 538:/usr/include/c++/4.8/bits/stl_vector.h ****       begin() _GLIBCXX_NOEXCEPT
 539:/usr/include/c++/4.8/bits/stl_vector.h ****       { return iterator(this->_M_impl._M_start); }
 540:/usr/include/c++/4.8/bits/stl_vector.h **** 
 541:/usr/include/c++/4.8/bits/stl_vector.h ****       /**
 542:/usr/include/c++/4.8/bits/stl_vector.h ****        *  Returns a read-only (constant) iterator that points to the
 543:/usr/include/c++/4.8/bits/stl_vector.h ****        *  first element in the %vector.  Iteration is done in ordinary
 544:/usr/include/c++/4.8/bits/stl_vector.h ****        *  element order.
 545:/usr/include/c++/4.8/bits/stl_vector.h ****        */
 546:/usr/include/c++/4.8/bits/stl_vector.h ****       const_iterator
 547:/usr/include/c++/4.8/bits/stl_vector.h ****       begin() const _GLIBCXX_NOEXCEPT
 548:/usr/include/c++/4.8/bits/stl_vector.h ****       { return const_iterator(this->_M_impl._M_start); }
 549:/usr/include/c++/4.8/bits/stl_vector.h **** 
 550:/usr/include/c++/4.8/bits/stl_vector.h ****       /**
 551:/usr/include/c++/4.8/bits/stl_vector.h ****        *  Returns a read/write iterator that points one past the last
 552:/usr/include/c++/4.8/bits/stl_vector.h ****        *  element in the %vector.  Iteration is done in ordinary
 553:/usr/include/c++/4.8/bits/stl_vector.h ****        *  element order.
 554:/usr/include/c++/4.8/bits/stl_vector.h ****        */
 555:/usr/include/c++/4.8/bits/stl_vector.h ****       iterator
 556:/usr/include/c++/4.8/bits/stl_vector.h ****       end() _GLIBCXX_NOEXCEPT
 557:/usr/include/c++/4.8/bits/stl_vector.h ****       { return iterator(this->_M_impl._M_finish); }
 558:/usr/include/c++/4.8/bits/stl_vector.h **** 
 559:/usr/include/c++/4.8/bits/stl_vector.h ****       /**
 560:/usr/include/c++/4.8/bits/stl_vector.h ****        *  Returns a read-only (constant) iterator that points one past
 561:/usr/include/c++/4.8/bits/stl_vector.h ****        *  the last element in the %vector.  Iteration is done in
 562:/usr/include/c++/4.8/bits/stl_vector.h ****        *  ordinary element order.
 563:/usr/include/c++/4.8/bits/stl_vector.h ****        */
 564:/usr/include/c++/4.8/bits/stl_vector.h ****       const_iterator
 565:/usr/include/c++/4.8/bits/stl_vector.h ****       end() const _GLIBCXX_NOEXCEPT
 566:/usr/include/c++/4.8/bits/stl_vector.h ****       { return const_iterator(this->_M_impl._M_finish); }
 567:/usr/include/c++/4.8/bits/stl_vector.h **** 
 568:/usr/include/c++/4.8/bits/stl_vector.h ****       /**
 569:/usr/include/c++/4.8/bits/stl_vector.h ****        *  Returns a read/write reverse iterator that points to the
 570:/usr/include/c++/4.8/bits/stl_vector.h ****        *  last element in the %vector.  Iteration is done in reverse
 571:/usr/include/c++/4.8/bits/stl_vector.h ****        *  element order.
 572:/usr/include/c++/4.8/bits/stl_vector.h ****        */
 573:/usr/include/c++/4.8/bits/stl_vector.h ****       reverse_iterator
 574:/usr/include/c++/4.8/bits/stl_vector.h ****       rbegin() _GLIBCXX_NOEXCEPT
 575:/usr/include/c++/4.8/bits/stl_vector.h ****       { return reverse_iterator(end()); }
 576:/usr/include/c++/4.8/bits/stl_vector.h **** 
 577:/usr/include/c++/4.8/bits/stl_vector.h ****       /**
 578:/usr/include/c++/4.8/bits/stl_vector.h ****        *  Returns a read-only (constant) reverse iterator that points
 579:/usr/include/c++/4.8/bits/stl_vector.h ****        *  to the last element in the %vector.  Iteration is done in
 580:/usr/include/c++/4.8/bits/stl_vector.h ****        *  reverse element order.
 581:/usr/include/c++/4.8/bits/stl_vector.h ****        */
 582:/usr/include/c++/4.8/bits/stl_vector.h ****       const_reverse_iterator
 583:/usr/include/c++/4.8/bits/stl_vector.h ****       rbegin() const _GLIBCXX_NOEXCEPT
 584:/usr/include/c++/4.8/bits/stl_vector.h ****       { return const_reverse_iterator(end()); }
 585:/usr/include/c++/4.8/bits/stl_vector.h **** 
 586:/usr/include/c++/4.8/bits/stl_vector.h ****       /**
 587:/usr/include/c++/4.8/bits/stl_vector.h ****        *  Returns a read/write reverse iterator that points to one
 588:/usr/include/c++/4.8/bits/stl_vector.h ****        *  before the first element in the %vector.  Iteration is done
 589:/usr/include/c++/4.8/bits/stl_vector.h ****        *  in reverse element order.
 590:/usr/include/c++/4.8/bits/stl_vector.h ****        */
 591:/usr/include/c++/4.8/bits/stl_vector.h ****       reverse_iterator
 592:/usr/include/c++/4.8/bits/stl_vector.h ****       rend() _GLIBCXX_NOEXCEPT
 593:/usr/include/c++/4.8/bits/stl_vector.h ****       { return reverse_iterator(begin()); }
 594:/usr/include/c++/4.8/bits/stl_vector.h **** 
 595:/usr/include/c++/4.8/bits/stl_vector.h ****       /**
 596:/usr/include/c++/4.8/bits/stl_vector.h ****        *  Returns a read-only (constant) reverse iterator that points
 597:/usr/include/c++/4.8/bits/stl_vector.h ****        *  to one before the first element in the %vector.  Iteration
 598:/usr/include/c++/4.8/bits/stl_vector.h ****        *  is done in reverse element order.
 599:/usr/include/c++/4.8/bits/stl_vector.h ****        */
 600:/usr/include/c++/4.8/bits/stl_vector.h ****       const_reverse_iterator
 601:/usr/include/c++/4.8/bits/stl_vector.h ****       rend() const _GLIBCXX_NOEXCEPT
 602:/usr/include/c++/4.8/bits/stl_vector.h ****       { return const_reverse_iterator(begin()); }
 603:/usr/include/c++/4.8/bits/stl_vector.h **** 
 604:/usr/include/c++/4.8/bits/stl_vector.h **** #if __cplusplus >= 201103L
 605:/usr/include/c++/4.8/bits/stl_vector.h ****       /**
 606:/usr/include/c++/4.8/bits/stl_vector.h ****        *  Returns a read-only (constant) iterator that points to the
 607:/usr/include/c++/4.8/bits/stl_vector.h ****        *  first element in the %vector.  Iteration is done in ordinary
 608:/usr/include/c++/4.8/bits/stl_vector.h ****        *  element order.
 609:/usr/include/c++/4.8/bits/stl_vector.h ****        */
 610:/usr/include/c++/4.8/bits/stl_vector.h ****       const_iterator
 611:/usr/include/c++/4.8/bits/stl_vector.h ****       cbegin() const noexcept
 612:/usr/include/c++/4.8/bits/stl_vector.h ****       { return const_iterator(this->_M_impl._M_start); }
 613:/usr/include/c++/4.8/bits/stl_vector.h **** 
 614:/usr/include/c++/4.8/bits/stl_vector.h ****       /**
 615:/usr/include/c++/4.8/bits/stl_vector.h ****        *  Returns a read-only (constant) iterator that points one past
 616:/usr/include/c++/4.8/bits/stl_vector.h ****        *  the last element in the %vector.  Iteration is done in
 617:/usr/include/c++/4.8/bits/stl_vector.h ****        *  ordinary element order.
 618:/usr/include/c++/4.8/bits/stl_vector.h ****        */
 619:/usr/include/c++/4.8/bits/stl_vector.h ****       const_iterator
 620:/usr/include/c++/4.8/bits/stl_vector.h ****       cend() const noexcept
 621:/usr/include/c++/4.8/bits/stl_vector.h ****       { return const_iterator(this->_M_impl._M_finish); }
 622:/usr/include/c++/4.8/bits/stl_vector.h **** 
 623:/usr/include/c++/4.8/bits/stl_vector.h ****       /**
 624:/usr/include/c++/4.8/bits/stl_vector.h ****        *  Returns a read-only (constant) reverse iterator that points
 625:/usr/include/c++/4.8/bits/stl_vector.h ****        *  to the last element in the %vector.  Iteration is done in
 626:/usr/include/c++/4.8/bits/stl_vector.h ****        *  reverse element order.
 627:/usr/include/c++/4.8/bits/stl_vector.h ****        */
 628:/usr/include/c++/4.8/bits/stl_vector.h ****       const_reverse_iterator
 629:/usr/include/c++/4.8/bits/stl_vector.h ****       crbegin() const noexcept
 630:/usr/include/c++/4.8/bits/stl_vector.h ****       { return const_reverse_iterator(end()); }
 631:/usr/include/c++/4.8/bits/stl_vector.h **** 
 632:/usr/include/c++/4.8/bits/stl_vector.h ****       /**
 633:/usr/include/c++/4.8/bits/stl_vector.h ****        *  Returns a read-only (constant) reverse iterator that points
 634:/usr/include/c++/4.8/bits/stl_vector.h ****        *  to one before the first element in the %vector.  Iteration
 635:/usr/include/c++/4.8/bits/stl_vector.h ****        *  is done in reverse element order.
 636:/usr/include/c++/4.8/bits/stl_vector.h ****        */
 637:/usr/include/c++/4.8/bits/stl_vector.h ****       const_reverse_iterator
 638:/usr/include/c++/4.8/bits/stl_vector.h ****       crend() const noexcept
 639:/usr/include/c++/4.8/bits/stl_vector.h ****       { return const_reverse_iterator(begin()); }
 640:/usr/include/c++/4.8/bits/stl_vector.h **** #endif
 641:/usr/include/c++/4.8/bits/stl_vector.h **** 
 642:/usr/include/c++/4.8/bits/stl_vector.h ****       // [23.2.4.2] capacity
 643:/usr/include/c++/4.8/bits/stl_vector.h ****       /**  Returns the number of elements in the %vector.  */
 644:/usr/include/c++/4.8/bits/stl_vector.h ****       size_type
 645:/usr/include/c++/4.8/bits/stl_vector.h ****       size() const _GLIBCXX_NOEXCEPT
 5124              		.loc 6 645 0
 5125              		.cfi_startproc
 5126 0000 55       		pushq	%rbp
 5127              		.cfi_def_cfa_offset 16
 5128              		.cfi_offset 6, -16
 5129 0001 4889E5   		movq	%rsp, %rbp
 5130              		.cfi_def_cfa_register 6
 5131 0004 48897DF8 		movq	%rdi, -8(%rbp)
 646:/usr/include/c++/4.8/bits/stl_vector.h ****       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
 5132              		.loc 6 646 0
 5133 0008 488B45F8 		movq	-8(%rbp), %rax
 5134 000c 488B4008 		movq	8(%rax), %rax
 5135 0010 4889C2   		movq	%rax, %rdx
 5136 0013 488B45F8 		movq	-8(%rbp), %rax
 5137 0017 488B00   		movq	(%rax), %rax
 5138 001a 4829C2   		subq	%rax, %rdx
 5139 001d 4889D0   		movq	%rdx, %rax
 5140 0020 48C1F803 		sarq	$3, %rax
 5141 0024 4889C2   		movq	%rax, %rdx
 5142 0027 48B8B76D 		movabsq	$7905747460161236407, %rax
 5142      DBB66DDB 
 5142      B66D
 5143 0031 480FAFC2 		imulq	%rdx, %rax
 5144 0035 5D       		popq	%rbp
 5145              		.cfi_def_cfa 7, 8
 5146 0036 C3       		ret
 5147              		.cfi_endproc
 5148              	.LFE1409:
 5150              		.section	.rodata
 5151              	.LC34:
 5152 055b 45787065 		.string	"Expected "
 5152      63746564 
 5152      2000
 5153              	.LC35:
 5154 0565 20627574 		.string	" but was "
 5154      20776173 
 5154      2000
 5155              		.section	.text._ZN8UnitTest10CheckEqualIiiEEvRNS_11TestResultsERKT_RKT0_RKNS_11TestDetailsE,"axG",
 5156              		.weak	_ZN8UnitTest10CheckEqualIiiEEvRNS_11TestResultsERKT_RKT0_RKNS_11TestDetailsE
 5158              	_ZN8UnitTest10CheckEqualIiiEEvRNS_11TestResultsERKT_RKT0_RKNS_11TestDetailsE:
 5159              	.LFB1410:
 5160              		.file 8 "../Checks.h"
   1:../Checks.h   **** #ifndef UNITTEST_CHECKS_H
   2:../Checks.h   **** #define UNITTEST_CHECKS_H
   3:../Checks.h   **** 
   4:../Checks.h   **** #include "Config.h"
   5:../Checks.h   **** #include "TestResults.h"
   6:../Checks.h   **** #include "MemoryOutStream.h"
   7:../Checks.h   **** 
   8:../Checks.h   **** namespace UnitTest {
   9:../Checks.h   **** 
  10:../Checks.h   **** 
  11:../Checks.h   **** template< typename Value >
  12:../Checks.h   **** bool Check(Value const value)
  13:../Checks.h   **** {
  14:../Checks.h   ****     return !!value; // doing double negative to avoid silly VS warnings
  15:../Checks.h   **** }
  16:../Checks.h   **** 
  17:../Checks.h   **** 
  18:../Checks.h   **** template< typename Expected, typename Actual >
  19:../Checks.h   **** void CheckEqual(TestResults& results, Expected const& expected, Actual const& actual, TestDetails c
 5161              		.loc 8 19 0
 5162              		.cfi_startproc
 5163              		.cfi_personality 0x3,__gxx_personality_v0
 5164              		.cfi_lsda 0x3,.LLSDA1410
 5165 0000 55       		pushq	%rbp
 5166              		.cfi_def_cfa_offset 16
 5167              		.cfi_offset 6, -16
 5168 0001 4889E5   		movq	%rsp, %rbp
 5169              		.cfi_def_cfa_register 6
 5170 0004 4154     		pushq	%r12
 5171 0006 53       		pushq	%rbx
 5172 0007 4881EC90 		subq	$400, %rsp
 5172      010000
 5173              		.cfi_offset 12, -24
 5174              		.cfi_offset 3, -32
 5175 000e 4889BD78 		movq	%rdi, -392(%rbp)
 5175      FEFFFF
 5176 0015 4889B570 		movq	%rsi, -400(%rbp)
 5176      FEFFFF
 5177 001c 48899568 		movq	%rdx, -408(%rbp)
 5177      FEFFFF
 5178 0023 48898D60 		movq	%rcx, -416(%rbp)
 5178      FEFFFF
 5179              	.LBB127:
 5180              	.LBB128:
  20:../Checks.h   **** {
  21:../Checks.h   ****     if (!(expected == actual))
 5181              		.loc 8 21 0
 5182 002a 488B8570 		movq	-400(%rbp), %rax
 5182      FEFFFF
 5183 0031 8B10     		movl	(%rax), %edx
 5184 0033 488B8568 		movq	-408(%rbp), %rax
 5184      FEFFFF
 5185 003a 8B00     		movl	(%rax), %eax
 5186 003c 39C2     		cmpl	%eax, %edx
 5187 003e 0F84B100 		je	.L291
 5187      0000
 5188              	.LBB129:
  22:../Checks.h   ****     {
  23:../Checks.h   ****         UnitTest::MemoryOutStream stream;
 5189              		.loc 8 23 0
 5190 0044 488D8580 		leaq	-384(%rbp), %rax
 5190      FEFFFF
 5191 004b 4889C7   		movq	%rax, %rdi
 5192              	.LEHB154:
 5193 004e E8000000 		call	_ZN8UnitTest15MemoryOutStreamC1Ev
 5193      00
 5194              	.LEHE154:
  24:../Checks.h   ****         stream << "Expected " << expected << " but was " << actual;
 5195              		.loc 8 24 0
 5196 0053 488B8568 		movq	-408(%rbp), %rax
 5196      FEFFFF
 5197 005a 8B18     		movl	(%rax), %ebx
 5198 005c 488B8570 		movq	-400(%rbp), %rax
 5198      FEFFFF
 5199 0063 448B20   		movl	(%rax), %r12d
 5200 0066 488D8580 		leaq	-384(%rbp), %rax
 5200      FEFFFF
 5201 006d BE000000 		movl	$.LC34, %esi
 5201      00
 5202 0072 4889C7   		movq	%rax, %rdi
 5203              	.LEHB155:
 5204 0075 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
 5204      00
 5205 007a 4489E6   		movl	%r12d, %esi
 5206 007d 4889C7   		movq	%rax, %rdi
 5207 0080 E8000000 		call	_ZNSolsEi
 5207      00
 5208              		.loc 8 24 0 is_stmt 0 discriminator 1
 5209 0085 BE000000 		movl	$.LC35, %esi
 5209      00
 5210 008a 4889C7   		movq	%rax, %rdi
 5211 008d E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
 5211      00
 5212 0092 89DE     		movl	%ebx, %esi
 5213 0094 4889C7   		movq	%rax, %rdi
 5214 0097 E8000000 		call	_ZNSolsEi
 5214      00
  25:../Checks.h   **** 
  26:../Checks.h   ****         results.OnTestFailure(details, stream.GetText());
 5215              		.loc 8 26 0 is_stmt 1
 5216 009c 488D8580 		leaq	-384(%rbp), %rax
 5216      FEFFFF
 5217 00a3 4889C7   		movq	%rax, %rdi
 5218 00a6 E8000000 		call	_ZNK8UnitTest15MemoryOutStream7GetTextEv
 5218      00
 5219 00ab 4889C2   		movq	%rax, %rdx
 5220 00ae 488B8D60 		movq	-416(%rbp), %rcx
 5220      FEFFFF
 5221 00b5 488B8578 		movq	-392(%rbp), %rax
 5221      FEFFFF
 5222 00bc 4889CE   		movq	%rcx, %rsi
 5223 00bf 4889C7   		movq	%rax, %rdi
 5224 00c2 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 5224      00
 5225              	.LEHE155:
 5226              		.loc 8 26 0 is_stmt 0 discriminator 1
 5227 00c7 488D8580 		leaq	-384(%rbp), %rax
 5227      FEFFFF
 5228 00ce 4889C7   		movq	%rax, %rdi
 5229              	.LEHB156:
 5230 00d1 E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 5230      00
 5231              	.LEHE156:
 5232              	.LBE129:
 5233 00d6 EB1D     		jmp	.L291
 5234              	.L290:
 5235 00d8 4889C3   		movq	%rax, %rbx
 5236              	.LBB130:
 5237              		.loc 8 26 0
 5238 00db 488D8580 		leaq	-384(%rbp), %rax
 5238      FEFFFF
 5239 00e2 4889C7   		movq	%rax, %rdi
 5240 00e5 E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 5240      00
 5241 00ea 4889D8   		movq	%rbx, %rax
 5242 00ed 4889C7   		movq	%rax, %rdi
 5243              	.LEHB157:
 5244 00f0 E8000000 		call	_Unwind_Resume
 5244      00
 5245              	.LEHE157:
 5246              	.L291:
 5247              	.LBE130:
 5248              	.LBE128:
 5249              	.LBE127:
  27:../Checks.h   ****     }
  28:../Checks.h   **** }
 5250              		.loc 8 28 0 is_stmt 1
 5251 00f5 4881C490 		addq	$400, %rsp
 5251      010000
 5252 00fc 5B       		popq	%rbx
 5253 00fd 415C     		popq	%r12
 5254 00ff 5D       		popq	%rbp
 5255              		.cfi_def_cfa 7, 8
 5256 0100 C3       		ret
 5257              		.cfi_endproc
 5258              	.LFE1410:
 5259              		.section	.gcc_except_table
 5260              	.LLSDA1410:
 5261 0410 FF       		.byte	0xff
 5262 0411 FF       		.byte	0xff
 5263 0412 01       		.byte	0x1
 5264 0413 13       		.uleb128 .LLSDACSE1410-.LLSDACSB1410
 5265              	.LLSDACSB1410:
 5266 0414 4E       		.uleb128 .LEHB154-.LFB1410
 5267 0415 05       		.uleb128 .LEHE154-.LEHB154
 5268 0416 00       		.uleb128 0
 5269 0417 00       		.uleb128 0
 5270 0418 75       		.uleb128 .LEHB155-.LFB1410
 5271 0419 52       		.uleb128 .LEHE155-.LEHB155
 5272 041a D801     		.uleb128 .L290-.LFB1410
 5273 041c 00       		.uleb128 0
 5274 041d D101     		.uleb128 .LEHB156-.LFB1410
 5275 041f 05       		.uleb128 .LEHE156-.LEHB156
 5276 0420 00       		.uleb128 0
 5277 0421 00       		.uleb128 0
 5278 0422 F001     		.uleb128 .LEHB157-.LFB1410
 5279 0424 05       		.uleb128 .LEHE157-.LEHB157
 5280 0425 00       		.uleb128 0
 5281 0426 00       		.uleb128 0
 5282              	.LLSDACSE1410:
 5283              		.section	.text._ZN8UnitTest10CheckEqualIiiEEvRNS_11TestResultsERKT_RKT0_RKNS_11TestDetailsE,"axG",
 5285              		.text
 5287              	_ZN8UnitTest11ExecuteTestINS_12_GLOBAL__N_172DeferredTestReporterFixtureReportTestStartCapturesTest
 5288              	.LFB1411:
  16:../ExecuteTest.h **** {
 5289              		.loc 7 16 0
 5290              		.cfi_startproc
 5291              		.cfi_personality 0x3,__gxx_personality_v0
 5292              		.cfi_lsda 0x3,.LLSDA1411
 5293 2336 55       		pushq	%rbp
 5294              		.cfi_def_cfa_offset 16
 5295              		.cfi_offset 6, -16
 5296 2337 4889E5   		movq	%rsp, %rbp
 5297              		.cfi_def_cfa_register 6
 5298 233a 4154     		pushq	%r12
 5299 233c 53       		pushq	%rbx
 5300 233d 4881EC80 		subq	$1152, %rsp
 5300      040000
 5301              		.cfi_offset 12, -24
 5302              		.cfi_offset 3, -32
 5303 2344 4889BD78 		movq	%rdi, -1160(%rbp)
 5303      FBFFFF
 5304 234b 4889B570 		movq	%rsi, -1168(%rbp)
 5304      FBFFFF
 5305              	.LEHB158:
 5306              	.LBB131:
  18:../ExecuteTest.h **** 
 5307              		.loc 7 18 0
 5308 2352 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 5308      00
 5309              	.LEHE158:
 5310 2357 488B9570 		movq	-1168(%rbp), %rdx
 5310      FBFFFF
 5311 235e 488910   		movq	%rdx, (%rax)
 5312              	.LBB132:
  23:../ExecuteTest.h **** #endif
 5313              		.loc 7 23 0
 5314 2361 488D8590 		leaq	-1136(%rbp), %rax
 5314      FBFFFF
 5315 2368 4889C7   		movq	%rax, %rdi
 5316              	.LEHB159:
 5317 236b E8000000 		call	_ZN8UnitTest16SignalTranslatorC1Ev
 5317      00
 5318              	.LEHE159:
  23:../ExecuteTest.h **** #endif
 5319              		.loc 7 23 0 is_stmt 0 discriminator 1
 5320 2370 488B0500 		movq	_ZN8UnitTest16SignalTranslator12s_jumpTargetE(%rip), %rax
 5320      000000
 5321 2377 BE010000 		movl	$1, %esi
 5321      00
 5322 237c 4889C7   		movq	%rax, %rdi
 5323 237f E8000000 		call	__sigsetjmp
 5323      00
 5324 2384 85C0     		testl	%eax, %eax
 5325 2386 0F95C0   		setne	%al
 5326 2389 84C0     		testb	%al, %al
 5327 238b 7423     		je	.L293
 5328 238d BF080000 		movl	$8, %edi
 5328      00
 5329 2392 E8000000 		call	__cxa_allocate_exception
 5329      00
 5330 2397 48C70000 		movq	$.LC32, (%rax)
 5330      000000
 5331 239e BA000000 		movl	$0, %edx
 5331      00
 5332 23a3 BE000000 		movl	$_ZTIPKc, %esi
 5332      00
 5333 23a8 4889C7   		movq	%rax, %rdi
 5334              	.LEHB160:
 5335 23ab E8000000 		call	__cxa_throw
 5335      00
 5336              	.L293:
  25:../ExecuteTest.h **** 	}
 5337              		.loc 7 25 0 is_stmt 1
 5338 23b0 488B8578 		movq	-1160(%rbp), %rax
 5338      FBFFFF
 5339 23b7 4889C7   		movq	%rax, %rdi
 5340 23ba E85FE6FF 		call	_ZN8UnitTest12_GLOBAL__N_172DeferredTestReporterFixtureReportTestStartCapturesTestNameAndSuit
 5340      FF
 5341              	.LEHE160:
  25:../ExecuteTest.h **** 	}
 5342              		.loc 7 25 0 is_stmt 0 discriminator 1
 5343 23bf 488D8590 		leaq	-1136(%rbp), %rax
 5343      FBFFFF
 5344 23c6 4889C7   		movq	%rax, %rdi
 5345              	.LEHB161:
 5346 23c9 E8000000 		call	_ZN8UnitTest16SignalTranslatorD1Ev
 5346      00
 5347              	.LEHE161:
 5348              	.LBE132:
 5349              	.LBE131:
 5350              		.loc 7 42 0 is_stmt 1
 5351 23ce E9EE0100 		jmp	.L311
 5351      00
 5352              	.L304:
 5353 23d3 4989C4   		movq	%rax, %r12
 5354 23d6 4889D3   		movq	%rdx, %rbx
 5355              	.LBB140:
 5356              	.LBB133:
  25:../ExecuteTest.h **** 	}
 5357              		.loc 7 25 0
 5358 23d9 488D8590 		leaq	-1136(%rbp), %rax
 5358      FBFFFF
 5359 23e0 4889C7   		movq	%rax, %rdi
 5360 23e3 E8000000 		call	_ZN8UnitTest16SignalTranslatorD1Ev
 5360      00
 5361 23e8 4C89E0   		movq	%r12, %rax
 5362 23eb 4889DA   		movq	%rbx, %rdx
 5363 23ee EB4D     		jmp	.L295
 5364              	.L306:
 5365 23f0 4889C3   		movq	%rax, %rbx
 5366              	.LBE133:
 5367              	.LBB134:
  27:../ExecuteTest.h **** 	{
 5368              		.loc 7 27 0
 5369 23f3 E8000000 		call	__cxa_end_catch
 5369      00
 5370 23f8 4889D8   		movq	%rbx, %rax
 5371 23fb 4889C7   		movq	%rax, %rdi
 5372              	.LEHB162:
 5373 23fe E8000000 		call	_Unwind_Resume
 5373      00
 5374              	.LEHE162:
 5375              	.L307:
 5376 2403 4889C3   		movq	%rax, %rbx
 5377              	.LBE134:
 5378              	.LBB135:
 5379              	.LBB136:
  36:../ExecuteTest.h **** 	}
 5380              		.loc 7 36 0
 5381 2406 488D8590 		leaq	-1136(%rbp), %rax
 5381      FBFFFF
 5382 240d 4889C7   		movq	%rax, %rdi
 5383 2410 E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 5383      00
 5384 2415 EB03     		jmp	.L298
 5385              	.L308:
 5386 2417 4889C3   		movq	%rax, %rbx
 5387              	.L298:
 5388              	.LBE136:
  32:../ExecuteTest.h **** 	{
 5389              		.loc 7 32 0
 5390 241a E8000000 		call	__cxa_end_catch
 5390      00
 5391 241f 4889D8   		movq	%rbx, %rax
 5392 2422 4889C7   		movq	%rax, %rdi
 5393              	.LEHB163:
 5394 2425 E8000000 		call	_Unwind_Resume
 5394      00
 5395              	.LEHE163:
 5396              	.L309:
 5397 242a 4889C3   		movq	%rax, %rbx
 5398              	.LBE135:
  38:../ExecuteTest.h **** 	{
 5399              		.loc 7 38 0
 5400 242d E8000000 		call	__cxa_end_catch
 5400      00
 5401 2432 4889D8   		movq	%rbx, %rax
 5402 2435 4889C7   		movq	%rax, %rdi
 5403              	.LEHB164:
 5404 2438 E8000000 		call	_Unwind_Resume
 5404      00
 5405              	.LEHE164:
 5406              	.L305:
 5407              	.L295:
 5408 243d 4883FA01 		cmpq	$1, %rdx
 5409 2441 740F     		je	.L301
 5410 2443 4883FA02 		cmpq	$2, %rdx
 5411 2447 0F84A600 		je	.L302
 5411      0000
 5412 244d E9430100 		jmp	.L310
 5412      00
 5413              	.L301:
 5414              	.LBB138:
  27:../ExecuteTest.h **** 	{
 5415              		.loc 7 27 0
 5416 2452 4889C7   		movq	%rax, %rdi
 5417 2455 E8000000 		call	__cxa_begin_catch
 5417      00
 5418 245a 48898580 		movq	%rax, -1152(%rbp)
 5418      FBFFFF
  30:../ExecuteTest.h **** 	}
 5419              		.loc 7 30 0
 5420 2461 488B8580 		movq	-1152(%rbp), %rax
 5420      FBFFFF
 5421 2468 488B00   		movq	(%rax), %rax
 5422 246b 4883C010 		addq	$16, %rax
 5423 246f 488B00   		movq	(%rax), %rax
 5424 2472 488B9580 		movq	-1152(%rbp), %rdx
 5424      FBFFFF
 5425 2479 4889D7   		movq	%rdx, %rdi
 5426 247c FFD0     		call	*%rax
 5427 247e 4889C3   		movq	%rax, %rbx
 5428 2481 488B8580 		movq	-1152(%rbp), %rax
 5428      FBFFFF
 5429 2488 4889C7   		movq	%rax, %rdi
 5430              	.LEHB165:
 5431 248b E8000000 		call	_ZNK8UnitTest15AssertException10LineNumberEv
 5431      00
 5432 2490 4189C4   		movl	%eax, %r12d
 5433 2493 488B8580 		movq	-1152(%rbp), %rax
 5433      FBFFFF
 5434 249a 4889C7   		movq	%rax, %rdi
 5435 249d E8000000 		call	_ZNK8UnitTest15AssertException8FilenameEv
 5435      00
  30:../ExecuteTest.h **** 	}
 5436              		.loc 7 30 0 is_stmt 0 discriminator 1
 5437 24a2 4889C1   		movq	%rax, %rcx
 5438 24a5 488B8570 		movq	-1168(%rbp), %rax
 5438      FBFFFF
 5439 24ac 488B10   		movq	(%rax), %rdx
 5440 24af 488B8570 		movq	-1168(%rbp), %rax
 5440      FBFFFF
 5441 24b6 488B7008 		movq	8(%rax), %rsi
 5442 24ba 488D8590 		leaq	-1136(%rbp), %rax
 5442      FBFFFF
 5443 24c1 4589E0   		movl	%r12d, %r8d
 5444 24c4 4889C7   		movq	%rax, %rdi
 5445 24c7 E8000000 		call	_ZN8UnitTest11TestDetailsC1EPKcS2_S2_i
 5445      00
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 5446              		.loc 7 29 0 is_stmt 1
 5447 24cc E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 5447      00
  30:../ExecuteTest.h **** 	}
 5448              		.loc 7 30 0
 5449 24d1 488B00   		movq	(%rax), %rax
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 5450              		.loc 7 29 0
 5451 24d4 488D8D90 		leaq	-1136(%rbp), %rcx
 5451      FBFFFF
 5452 24db 4889DA   		movq	%rbx, %rdx
 5453 24de 4889CE   		movq	%rcx, %rsi
 5454 24e1 4889C7   		movq	%rax, %rdi
 5455 24e4 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 5455      00
 5456              	.LEHE165:
  27:../ExecuteTest.h **** 	{
 5457              		.loc 7 27 0
 5458 24e9 E8000000 		call	__cxa_end_catch
 5458      00
 5459              	.LBE138:
 5460              	.LBE140:
 5461              		.loc 7 42 0
 5462 24ee E9CE0000 		jmp	.L311
 5462      00
 5463              	.L302:
 5464              	.LBB141:
 5465              	.LBB139:
  32:../ExecuteTest.h **** 	{
 5466              		.loc 7 32 0
 5467 24f3 4889C7   		movq	%rax, %rdi
 5468 24f6 E8000000 		call	__cxa_begin_catch
 5468      00
 5469 24fb 48898588 		movq	%rax, -1144(%rbp)
 5469      FBFFFF
 5470              	.LBB137:
  34:../ExecuteTest.h **** 		stream << "Unhandled exception: " << e.what();
 5471              		.loc 7 34 0
 5472 2502 488D8590 		leaq	-1136(%rbp), %rax
 5472      FBFFFF
 5473 2509 4889C7   		movq	%rax, %rdi
 5474              	.LEHB166:
 5475 250c E8000000 		call	_ZN8UnitTest15MemoryOutStreamC1Ev
 5475      00
 5476              	.LEHE166:
  35:../ExecuteTest.h **** 		CurrentTest::Results()->OnTestFailure(details, stream.GetText());
 5477              		.loc 7 35 0
 5478 2511 488B8588 		movq	-1144(%rbp), %rax
 5478      FBFFFF
 5479 2518 488B00   		movq	(%rax), %rax
 5480 251b 4883C010 		addq	$16, %rax
 5481 251f 488B00   		movq	(%rax), %rax
 5482 2522 488B9588 		movq	-1144(%rbp), %rdx
 5482      FBFFFF
 5483 2529 4889D7   		movq	%rdx, %rdi
 5484 252c FFD0     		call	*%rax
 5485 252e 4889C3   		movq	%rax, %rbx
 5486 2531 488D8590 		leaq	-1136(%rbp), %rax
 5486      FBFFFF
 5487 2538 BE000000 		movl	$.LC6, %esi
 5487      00
 5488 253d 4889C7   		movq	%rax, %rdi
 5489              	.LEHB167:
 5490 2540 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
 5490      00
 5491 2545 4889DE   		movq	%rbx, %rsi
 5492 2548 4889C7   		movq	%rax, %rdi
 5493 254b E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
 5493      00
  36:../ExecuteTest.h **** 	}
 5494              		.loc 7 36 0
 5495 2550 488D8590 		leaq	-1136(%rbp), %rax
 5495      FBFFFF
 5496 2557 4889C7   		movq	%rax, %rdi
 5497 255a E8000000 		call	_ZNK8UnitTest15MemoryOutStream7GetTextEv
 5497      00
 5498 255f 4889C3   		movq	%rax, %rbx
 5499 2562 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 5499      00
  36:../ExecuteTest.h **** 	}
 5500              		.loc 7 36 0 is_stmt 0 discriminator 1
 5501 2567 488B00   		movq	(%rax), %rax
 5502 256a 488B8D70 		movq	-1168(%rbp), %rcx
 5502      FBFFFF
 5503 2571 4889DA   		movq	%rbx, %rdx
 5504 2574 4889CE   		movq	%rcx, %rsi
 5505 2577 4889C7   		movq	%rax, %rdi
 5506 257a E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 5506      00
 5507              	.LEHE167:
 5508 257f 488D8590 		leaq	-1136(%rbp), %rax
 5508      FBFFFF
 5509 2586 4889C7   		movq	%rax, %rdi
 5510              	.LEHB168:
 5511 2589 E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 5511      00
 5512              	.LEHE168:
 5513              	.LBE137:
  32:../ExecuteTest.h **** 	{
 5514              		.loc 7 32 0 is_stmt 1
 5515 258e E8000000 		call	__cxa_end_catch
 5515      00
 5516              	.LBE139:
 5517              	.LBE141:
 5518              		.loc 7 42 0
 5519 2593 EB2C     		jmp	.L311
 5520              	.L310:
 5521              	.LBB142:
  38:../ExecuteTest.h **** 	{
 5522              		.loc 7 38 0
 5523 2595 4889C7   		movq	%rax, %rdi
 5524 2598 E8000000 		call	__cxa_begin_catch
 5524      00
 5525              	.LEHB169:
  40:../ExecuteTest.h **** 	}
 5526              		.loc 7 40 0
 5527 259d E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 5527      00
 5528 25a2 488B00   		movq	(%rax), %rax
 5529 25a5 488B8D70 		movq	-1168(%rbp), %rcx
 5529      FBFFFF
 5530 25ac BA000000 		movl	$.LC33, %edx
 5530      00
 5531 25b1 4889CE   		movq	%rcx, %rsi
 5532 25b4 4889C7   		movq	%rax, %rdi
 5533 25b7 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 5533      00
 5534              	.LEHE169:
 5535              	.LEHB170:
  38:../ExecuteTest.h **** 	{
 5536              		.loc 7 38 0
 5537 25bc E8000000 		call	__cxa_end_catch
 5537      00
 5538              	.LEHE170:
 5539              	.L311:
 5540              	.LBE142:
 5541              		.loc 7 42 0
 5542 25c1 90       		nop
 5543 25c2 4881C480 		addq	$1152, %rsp
 5543      040000
 5544 25c9 5B       		popq	%rbx
 5545 25ca 415C     		popq	%r12
 5546 25cc 5D       		popq	%rbp
 5547              		.cfi_def_cfa 7, 8
 5548 25cd C3       		ret
 5549              		.cfi_endproc
 5550              	.LFE1411:
 5551              		.section	.gcc_except_table
 5552 0427 00       		.align 4
 5553              	.LLSDA1411:
 5554 0428 FF       		.byte	0xff
 5555 0429 03       		.byte	0x3
 5556 042a 5D       		.uleb128 .LLSDATT1411-.LLSDATTD1411
 5557              	.LLSDATTD1411:
 5558 042b 01       		.byte	0x1
 5559 042c 46       		.uleb128 .LLSDACSE1411-.LLSDACSB1411
 5560              	.LLSDACSB1411:
 5561 042d 1C       		.uleb128 .LEHB158-.LFB1411
 5562 042e 05       		.uleb128 .LEHE158-.LEHB158
 5563 042f 00       		.uleb128 0
 5564 0430 00       		.uleb128 0
 5565 0431 35       		.uleb128 .LEHB159-.LFB1411
 5566 0432 05       		.uleb128 .LEHE159-.LEHB159
 5567 0433 8702     		.uleb128 .L305-.LFB1411
 5568 0435 05       		.uleb128 0x5
 5569 0436 75       		.uleb128 .LEHB160-.LFB1411
 5570 0437 14       		.uleb128 .LEHE160-.LEHB160
 5571 0438 9D01     		.uleb128 .L304-.LFB1411
 5572 043a 07       		.uleb128 0x7
 5573 043b 9301     		.uleb128 .LEHB161-.LFB1411
 5574 043d 05       		.uleb128 .LEHE161-.LEHB161
 5575 043e 8702     		.uleb128 .L305-.LFB1411
 5576 0440 05       		.uleb128 0x5
 5577 0441 C801     		.uleb128 .LEHB162-.LFB1411
 5578 0443 05       		.uleb128 .LEHE162-.LEHB162
 5579 0444 00       		.uleb128 0
 5580 0445 00       		.uleb128 0
 5581 0446 EF01     		.uleb128 .LEHB163-.LFB1411
 5582 0448 05       		.uleb128 .LEHE163-.LEHB163
 5583 0449 00       		.uleb128 0
 5584 044a 00       		.uleb128 0
 5585 044b 8202     		.uleb128 .LEHB164-.LFB1411
 5586 044d 05       		.uleb128 .LEHE164-.LEHB164
 5587 044e 00       		.uleb128 0
 5588 044f 00       		.uleb128 0
 5589 0450 D502     		.uleb128 .LEHB165-.LFB1411
 5590 0452 5E       		.uleb128 .LEHE165-.LEHB165
 5591 0453 BA01     		.uleb128 .L306-.LFB1411
 5592 0455 00       		.uleb128 0
 5593 0456 D603     		.uleb128 .LEHB166-.LFB1411
 5594 0458 05       		.uleb128 .LEHE166-.LEHB166
 5595 0459 E101     		.uleb128 .L308-.LFB1411
 5596 045b 00       		.uleb128 0
 5597 045c 8A04     		.uleb128 .LEHB167-.LFB1411
 5598 045e 3F       		.uleb128 .LEHE167-.LEHB167
 5599 045f CD01     		.uleb128 .L307-.LFB1411
 5600 0461 00       		.uleb128 0
 5601 0462 D304     		.uleb128 .LEHB168-.LFB1411
 5602 0464 05       		.uleb128 .LEHE168-.LEHB168
 5603 0465 E101     		.uleb128 .L308-.LFB1411
 5604 0467 00       		.uleb128 0
 5605 0468 E704     		.uleb128 .LEHB169-.LFB1411
 5606 046a 1F       		.uleb128 .LEHE169-.LEHB169
 5607 046b F401     		.uleb128 .L309-.LFB1411
 5608 046d 00       		.uleb128 0
 5609 046e 8605     		.uleb128 .LEHB170-.LFB1411
 5610 0470 05       		.uleb128 .LEHE170-.LEHB170
 5611 0471 00       		.uleb128 0
 5612 0472 00       		.uleb128 0
 5613              	.LLSDACSE1411:
 5614 0473 03       		.byte	0x3
 5615 0474 00       		.byte	0
 5616 0475 02       		.byte	0x2
 5617 0476 7D       		.byte	0x7d
 5618 0477 01       		.byte	0x1
 5619 0478 7D       		.byte	0x7d
 5620 0479 00       		.byte	0
 5621 047a 7D       		.byte	0x7d
 5622 047b 00       		.align 4
 5623 047c 00000000 		.long	0
 5624              	
 5625 0480 00000000 		.long	_ZTISt9exception
 5626 0484 00000000 		.long	_ZTIN8UnitTest15AssertExceptionE
 5627              	.LLSDATT1411:
 5628              		.text
 5630              		.section	.text._ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EE2atEm,"axG",@progbits,_ZNSt6vec
 5631              		.align 2
 5632              		.weak	_ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EE2atEm
 5634              	_ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EE2atEm:
 5635              	.LFB1412:
 647:/usr/include/c++/4.8/bits/stl_vector.h **** 
 648:/usr/include/c++/4.8/bits/stl_vector.h ****       /**  Returns the size() of the largest possible %vector.  */
 649:/usr/include/c++/4.8/bits/stl_vector.h ****       size_type
 650:/usr/include/c++/4.8/bits/stl_vector.h ****       max_size() const _GLIBCXX_NOEXCEPT
 651:/usr/include/c++/4.8/bits/stl_vector.h ****       { return _Alloc_traits::max_size(_M_get_Tp_allocator()); }
 652:/usr/include/c++/4.8/bits/stl_vector.h **** 
 653:/usr/include/c++/4.8/bits/stl_vector.h **** #if __cplusplus >= 201103L
 654:/usr/include/c++/4.8/bits/stl_vector.h ****       /**
 655:/usr/include/c++/4.8/bits/stl_vector.h ****        *  @brief  Resizes the %vector to the specified number of elements.
 656:/usr/include/c++/4.8/bits/stl_vector.h ****        *  @param  __new_size  Number of elements the %vector should contain.
 657:/usr/include/c++/4.8/bits/stl_vector.h ****        *
 658:/usr/include/c++/4.8/bits/stl_vector.h ****        *  This function will %resize the %vector to the specified
 659:/usr/include/c++/4.8/bits/stl_vector.h ****        *  number of elements.  If the number is smaller than the
 660:/usr/include/c++/4.8/bits/stl_vector.h ****        *  %vector's current size the %vector is truncated, otherwise
 661:/usr/include/c++/4.8/bits/stl_vector.h ****        *  default constructed elements are appended.
 662:/usr/include/c++/4.8/bits/stl_vector.h ****        */
 663:/usr/include/c++/4.8/bits/stl_vector.h ****       void
 664:/usr/include/c++/4.8/bits/stl_vector.h ****       resize(size_type __new_size)
 665:/usr/include/c++/4.8/bits/stl_vector.h ****       {
 666:/usr/include/c++/4.8/bits/stl_vector.h **** 	if (__new_size > size())
 667:/usr/include/c++/4.8/bits/stl_vector.h **** 	  _M_default_append(__new_size - size());
 668:/usr/include/c++/4.8/bits/stl_vector.h **** 	else if (__new_size < size())
 669:/usr/include/c++/4.8/bits/stl_vector.h **** 	  _M_erase_at_end(this->_M_impl._M_start + __new_size);
 670:/usr/include/c++/4.8/bits/stl_vector.h ****       }
 671:/usr/include/c++/4.8/bits/stl_vector.h **** 
 672:/usr/include/c++/4.8/bits/stl_vector.h ****       /**
 673:/usr/include/c++/4.8/bits/stl_vector.h ****        *  @brief  Resizes the %vector to the specified number of elements.
 674:/usr/include/c++/4.8/bits/stl_vector.h ****        *  @param  __new_size  Number of elements the %vector should contain.
 675:/usr/include/c++/4.8/bits/stl_vector.h ****        *  @param  __x  Data with which new elements should be populated.
 676:/usr/include/c++/4.8/bits/stl_vector.h ****        *
 677:/usr/include/c++/4.8/bits/stl_vector.h ****        *  This function will %resize the %vector to the specified
 678:/usr/include/c++/4.8/bits/stl_vector.h ****        *  number of elements.  If the number is smaller than the
 679:/usr/include/c++/4.8/bits/stl_vector.h ****        *  %vector's current size the %vector is truncated, otherwise
 680:/usr/include/c++/4.8/bits/stl_vector.h ****        *  the %vector is extended and new elements are populated with
 681:/usr/include/c++/4.8/bits/stl_vector.h ****        *  given data.
 682:/usr/include/c++/4.8/bits/stl_vector.h ****        */
 683:/usr/include/c++/4.8/bits/stl_vector.h ****       void
 684:/usr/include/c++/4.8/bits/stl_vector.h ****       resize(size_type __new_size, const value_type& __x)
 685:/usr/include/c++/4.8/bits/stl_vector.h ****       {
 686:/usr/include/c++/4.8/bits/stl_vector.h **** 	if (__new_size > size())
 687:/usr/include/c++/4.8/bits/stl_vector.h **** 	  insert(end(), __new_size - size(), __x);
 688:/usr/include/c++/4.8/bits/stl_vector.h **** 	else if (__new_size < size())
 689:/usr/include/c++/4.8/bits/stl_vector.h **** 	  _M_erase_at_end(this->_M_impl._M_start + __new_size);
 690:/usr/include/c++/4.8/bits/stl_vector.h ****       }
 691:/usr/include/c++/4.8/bits/stl_vector.h **** #else
 692:/usr/include/c++/4.8/bits/stl_vector.h ****       /**
 693:/usr/include/c++/4.8/bits/stl_vector.h ****        *  @brief  Resizes the %vector to the specified number of elements.
 694:/usr/include/c++/4.8/bits/stl_vector.h ****        *  @param  __new_size  Number of elements the %vector should contain.
 695:/usr/include/c++/4.8/bits/stl_vector.h ****        *  @param  __x  Data with which new elements should be populated.
 696:/usr/include/c++/4.8/bits/stl_vector.h ****        *
 697:/usr/include/c++/4.8/bits/stl_vector.h ****        *  This function will %resize the %vector to the specified
 698:/usr/include/c++/4.8/bits/stl_vector.h ****        *  number of elements.  If the number is smaller than the
 699:/usr/include/c++/4.8/bits/stl_vector.h ****        *  %vector's current size the %vector is truncated, otherwise
 700:/usr/include/c++/4.8/bits/stl_vector.h ****        *  the %vector is extended and new elements are populated with
 701:/usr/include/c++/4.8/bits/stl_vector.h ****        *  given data.
 702:/usr/include/c++/4.8/bits/stl_vector.h ****        */
 703:/usr/include/c++/4.8/bits/stl_vector.h ****       void
 704:/usr/include/c++/4.8/bits/stl_vector.h ****       resize(size_type __new_size, value_type __x = value_type())
 705:/usr/include/c++/4.8/bits/stl_vector.h ****       {
 706:/usr/include/c++/4.8/bits/stl_vector.h **** 	if (__new_size > size())
 707:/usr/include/c++/4.8/bits/stl_vector.h **** 	  insert(end(), __new_size - size(), __x);
 708:/usr/include/c++/4.8/bits/stl_vector.h **** 	else if (__new_size < size())
 709:/usr/include/c++/4.8/bits/stl_vector.h **** 	  _M_erase_at_end(this->_M_impl._M_start + __new_size);
 710:/usr/include/c++/4.8/bits/stl_vector.h ****       }
 711:/usr/include/c++/4.8/bits/stl_vector.h **** #endif
 712:/usr/include/c++/4.8/bits/stl_vector.h **** 
 713:/usr/include/c++/4.8/bits/stl_vector.h **** #if __cplusplus >= 201103L
 714:/usr/include/c++/4.8/bits/stl_vector.h ****       /**  A non-binding request to reduce capacity() to size().  */
 715:/usr/include/c++/4.8/bits/stl_vector.h ****       void
 716:/usr/include/c++/4.8/bits/stl_vector.h ****       shrink_to_fit()
 717:/usr/include/c++/4.8/bits/stl_vector.h ****       { _M_shrink_to_fit(); }
 718:/usr/include/c++/4.8/bits/stl_vector.h **** #endif
 719:/usr/include/c++/4.8/bits/stl_vector.h **** 
 720:/usr/include/c++/4.8/bits/stl_vector.h ****       /**
 721:/usr/include/c++/4.8/bits/stl_vector.h ****        *  Returns the total number of elements that the %vector can
 722:/usr/include/c++/4.8/bits/stl_vector.h ****        *  hold before needing to allocate more memory.
 723:/usr/include/c++/4.8/bits/stl_vector.h ****        */
 724:/usr/include/c++/4.8/bits/stl_vector.h ****       size_type
 725:/usr/include/c++/4.8/bits/stl_vector.h ****       capacity() const _GLIBCXX_NOEXCEPT
 726:/usr/include/c++/4.8/bits/stl_vector.h ****       { return size_type(this->_M_impl._M_end_of_storage
 727:/usr/include/c++/4.8/bits/stl_vector.h **** 			 - this->_M_impl._M_start); }
 728:/usr/include/c++/4.8/bits/stl_vector.h **** 
 729:/usr/include/c++/4.8/bits/stl_vector.h ****       /**
 730:/usr/include/c++/4.8/bits/stl_vector.h ****        *  Returns true if the %vector is empty.  (Thus begin() would
 731:/usr/include/c++/4.8/bits/stl_vector.h ****        *  equal end().)
 732:/usr/include/c++/4.8/bits/stl_vector.h ****        */
 733:/usr/include/c++/4.8/bits/stl_vector.h ****       bool
 734:/usr/include/c++/4.8/bits/stl_vector.h ****       empty() const _GLIBCXX_NOEXCEPT
 735:/usr/include/c++/4.8/bits/stl_vector.h ****       { return begin() == end(); }
 736:/usr/include/c++/4.8/bits/stl_vector.h **** 
 737:/usr/include/c++/4.8/bits/stl_vector.h ****       /**
 738:/usr/include/c++/4.8/bits/stl_vector.h ****        *  @brief  Attempt to preallocate enough memory for specified number of
 739:/usr/include/c++/4.8/bits/stl_vector.h ****        *          elements.
 740:/usr/include/c++/4.8/bits/stl_vector.h ****        *  @param  __n  Number of elements required.
 741:/usr/include/c++/4.8/bits/stl_vector.h ****        *  @throw  std::length_error  If @a n exceeds @c max_size().
 742:/usr/include/c++/4.8/bits/stl_vector.h ****        *
 743:/usr/include/c++/4.8/bits/stl_vector.h ****        *  This function attempts to reserve enough memory for the
 744:/usr/include/c++/4.8/bits/stl_vector.h ****        *  %vector to hold the specified number of elements.  If the
 745:/usr/include/c++/4.8/bits/stl_vector.h ****        *  number requested is more than max_size(), length_error is
 746:/usr/include/c++/4.8/bits/stl_vector.h ****        *  thrown.
 747:/usr/include/c++/4.8/bits/stl_vector.h ****        *
 748:/usr/include/c++/4.8/bits/stl_vector.h ****        *  The advantage of this function is that if optimal code is a
 749:/usr/include/c++/4.8/bits/stl_vector.h ****        *  necessity and the user can determine the number of elements
 750:/usr/include/c++/4.8/bits/stl_vector.h ****        *  that will be required, the user can reserve the memory in
 751:/usr/include/c++/4.8/bits/stl_vector.h ****        *  %advance, and thus prevent a possible reallocation of memory
 752:/usr/include/c++/4.8/bits/stl_vector.h ****        *  and copying of %vector data.
 753:/usr/include/c++/4.8/bits/stl_vector.h ****        */
 754:/usr/include/c++/4.8/bits/stl_vector.h ****       void
 755:/usr/include/c++/4.8/bits/stl_vector.h ****       reserve(size_type __n);
 756:/usr/include/c++/4.8/bits/stl_vector.h **** 
 757:/usr/include/c++/4.8/bits/stl_vector.h ****       // element access
 758:/usr/include/c++/4.8/bits/stl_vector.h ****       /**
 759:/usr/include/c++/4.8/bits/stl_vector.h ****        *  @brief  Subscript access to the data contained in the %vector.
 760:/usr/include/c++/4.8/bits/stl_vector.h ****        *  @param __n The index of the element for which data should be
 761:/usr/include/c++/4.8/bits/stl_vector.h ****        *  accessed.
 762:/usr/include/c++/4.8/bits/stl_vector.h ****        *  @return  Read/write reference to data.
 763:/usr/include/c++/4.8/bits/stl_vector.h ****        *
 764:/usr/include/c++/4.8/bits/stl_vector.h ****        *  This operator allows for easy, array-style, data access.
 765:/usr/include/c++/4.8/bits/stl_vector.h ****        *  Note that data access with this operator is unchecked and
 766:/usr/include/c++/4.8/bits/stl_vector.h ****        *  out_of_range lookups are not defined. (For checked lookups
 767:/usr/include/c++/4.8/bits/stl_vector.h ****        *  see at().)
 768:/usr/include/c++/4.8/bits/stl_vector.h ****        */
 769:/usr/include/c++/4.8/bits/stl_vector.h ****       reference
 770:/usr/include/c++/4.8/bits/stl_vector.h ****       operator[](size_type __n)
 771:/usr/include/c++/4.8/bits/stl_vector.h ****       { return *(this->_M_impl._M_start + __n); }
 772:/usr/include/c++/4.8/bits/stl_vector.h **** 
 773:/usr/include/c++/4.8/bits/stl_vector.h ****       /**
 774:/usr/include/c++/4.8/bits/stl_vector.h ****        *  @brief  Subscript access to the data contained in the %vector.
 775:/usr/include/c++/4.8/bits/stl_vector.h ****        *  @param __n The index of the element for which data should be
 776:/usr/include/c++/4.8/bits/stl_vector.h ****        *  accessed.
 777:/usr/include/c++/4.8/bits/stl_vector.h ****        *  @return  Read-only (constant) reference to data.
 778:/usr/include/c++/4.8/bits/stl_vector.h ****        *
 779:/usr/include/c++/4.8/bits/stl_vector.h ****        *  This operator allows for easy, array-style, data access.
 780:/usr/include/c++/4.8/bits/stl_vector.h ****        *  Note that data access with this operator is unchecked and
 781:/usr/include/c++/4.8/bits/stl_vector.h ****        *  out_of_range lookups are not defined. (For checked lookups
 782:/usr/include/c++/4.8/bits/stl_vector.h ****        *  see at().)
 783:/usr/include/c++/4.8/bits/stl_vector.h ****        */
 784:/usr/include/c++/4.8/bits/stl_vector.h ****       const_reference
 785:/usr/include/c++/4.8/bits/stl_vector.h ****       operator[](size_type __n) const
 786:/usr/include/c++/4.8/bits/stl_vector.h ****       { return *(this->_M_impl._M_start + __n); }
 787:/usr/include/c++/4.8/bits/stl_vector.h **** 
 788:/usr/include/c++/4.8/bits/stl_vector.h ****     protected:
 789:/usr/include/c++/4.8/bits/stl_vector.h ****       /// Safety check used only from at().
 790:/usr/include/c++/4.8/bits/stl_vector.h ****       void
 791:/usr/include/c++/4.8/bits/stl_vector.h ****       _M_range_check(size_type __n) const
 792:/usr/include/c++/4.8/bits/stl_vector.h ****       {
 793:/usr/include/c++/4.8/bits/stl_vector.h **** 	if (__n >= this->size())
 794:/usr/include/c++/4.8/bits/stl_vector.h **** 	  __throw_out_of_range(__N("vector::_M_range_check"));
 795:/usr/include/c++/4.8/bits/stl_vector.h ****       }
 796:/usr/include/c++/4.8/bits/stl_vector.h **** 
 797:/usr/include/c++/4.8/bits/stl_vector.h ****     public:
 798:/usr/include/c++/4.8/bits/stl_vector.h ****       /**
 799:/usr/include/c++/4.8/bits/stl_vector.h ****        *  @brief  Provides access to the data contained in the %vector.
 800:/usr/include/c++/4.8/bits/stl_vector.h ****        *  @param __n The index of the element for which data should be
 801:/usr/include/c++/4.8/bits/stl_vector.h ****        *  accessed.
 802:/usr/include/c++/4.8/bits/stl_vector.h ****        *  @return  Read/write reference to data.
 803:/usr/include/c++/4.8/bits/stl_vector.h ****        *  @throw  std::out_of_range  If @a __n is an invalid index.
 804:/usr/include/c++/4.8/bits/stl_vector.h ****        *
 805:/usr/include/c++/4.8/bits/stl_vector.h ****        *  This function provides for safer data access.  The parameter
 806:/usr/include/c++/4.8/bits/stl_vector.h ****        *  is first checked that it is in the range of the vector.  The
 807:/usr/include/c++/4.8/bits/stl_vector.h ****        *  function throws out_of_range if the check fails.
 808:/usr/include/c++/4.8/bits/stl_vector.h ****        */
 809:/usr/include/c++/4.8/bits/stl_vector.h ****       reference
 810:/usr/include/c++/4.8/bits/stl_vector.h ****       at(size_type __n)
 5636              		.loc 6 810 0
 5637              		.cfi_startproc
 5638 0000 55       		pushq	%rbp
 5639              		.cfi_def_cfa_offset 16
 5640              		.cfi_offset 6, -16
 5641 0001 4889E5   		movq	%rsp, %rbp
 5642              		.cfi_def_cfa_register 6
 5643 0004 4883EC10 		subq	$16, %rsp
 5644 0008 48897DF8 		movq	%rdi, -8(%rbp)
 5645 000c 488975F0 		movq	%rsi, -16(%rbp)
 811:/usr/include/c++/4.8/bits/stl_vector.h ****       {
 812:/usr/include/c++/4.8/bits/stl_vector.h **** 	_M_range_check(__n);
 5646              		.loc 6 812 0
 5647 0010 488B55F0 		movq	-16(%rbp), %rdx
 5648 0014 488B45F8 		movq	-8(%rbp), %rax
 5649 0018 4889D6   		movq	%rdx, %rsi
 5650 001b 4889C7   		movq	%rax, %rdi
 5651 001e E8000000 		call	_ZNKSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EE14_M_range_checkEm
 5651      00
 813:/usr/include/c++/4.8/bits/stl_vector.h **** 	return (*this)[__n]; 
 5652              		.loc 6 813 0
 5653 0023 488B55F0 		movq	-16(%rbp), %rdx
 5654 0027 488B45F8 		movq	-8(%rbp), %rax
 5655 002b 4889D6   		movq	%rdx, %rsi
 5656 002e 4889C7   		movq	%rax, %rdi
 5657 0031 E8000000 		call	_ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EEixEm
 5657      00
 814:/usr/include/c++/4.8/bits/stl_vector.h ****       }
 5658              		.loc 6 814 0
 5659 0036 C9       		leave
 5660              		.cfi_def_cfa 7, 8
 5661 0037 C3       		ret
 5662              		.cfi_endproc
 5663              	.LFE1412:
 5665              		.section	.text._ZN8UnitTest10CheckEqualIPKcSsEEvRNS_11TestResultsERKT_RKT0_RKNS_11TestDetailsE,"ax
 5666              		.weak	_ZN8UnitTest10CheckEqualIPKcSsEEvRNS_11TestResultsERKT_RKT0_RKNS_11TestDetailsE
 5668              	_ZN8UnitTest10CheckEqualIPKcSsEEvRNS_11TestResultsERKT_RKT0_RKNS_11TestDetailsE:
 5669              	.LFB1413:
  19:../Checks.h   **** {
 5670              		.loc 8 19 0
 5671              		.cfi_startproc
 5672              		.cfi_personality 0x3,__gxx_personality_v0
 5673              		.cfi_lsda 0x3,.LLSDA1413
 5674 0000 55       		pushq	%rbp
 5675              		.cfi_def_cfa_offset 16
 5676              		.cfi_offset 6, -16
 5677 0001 4889E5   		movq	%rsp, %rbp
 5678              		.cfi_def_cfa_register 6
 5679 0004 53       		pushq	%rbx
 5680 0005 4881EC98 		subq	$408, %rsp
 5680      010000
 5681              		.cfi_offset 3, -24
 5682 000c 4889BD78 		movq	%rdi, -392(%rbp)
 5682      FEFFFF
 5683 0013 4889B570 		movq	%rsi, -400(%rbp)
 5683      FEFFFF
 5684 001a 48899568 		movq	%rdx, -408(%rbp)
 5684      FEFFFF
 5685 0021 48898D60 		movq	%rcx, -416(%rbp)
 5685      FEFFFF
 5686              	.LBB143:
 5687              	.LBB144:
  21:../Checks.h   ****     {
 5688              		.loc 8 21 0
 5689 0028 488B8570 		movq	-400(%rbp), %rax
 5689      FEFFFF
 5690 002f 488B00   		movq	(%rax), %rax
 5691 0032 488B9568 		movq	-408(%rbp), %rdx
 5691      FEFFFF
 5692 0039 4889D6   		movq	%rdx, %rsi
 5693 003c 4889C7   		movq	%rax, %rdi
 5694              	.LEHB171:
 5695 003f E8000000 		call	_ZSteqIcSt11char_traitsIcESaIcEEbPKT_RKSbIS3_T0_T1_E
 5695      00
 5696 0044 83F001   		xorl	$1, %eax
 5697 0047 84C0     		testb	%al, %al
 5698 0049 0F84B000 		je	.L318
 5698      0000
 5699              	.LBB145:
  23:../Checks.h   ****         stream << "Expected " << expected << " but was " << actual;
 5700              		.loc 8 23 0
 5701 004f 488D8580 		leaq	-384(%rbp), %rax
 5701      FEFFFF
 5702 0056 4889C7   		movq	%rax, %rdi
 5703 0059 E8000000 		call	_ZN8UnitTest15MemoryOutStreamC1Ev
 5703      00
 5704              	.LEHE171:
  24:../Checks.h   **** 
 5705              		.loc 8 24 0
 5706 005e 488B8570 		movq	-400(%rbp), %rax
 5706      FEFFFF
 5707 0065 488B18   		movq	(%rax), %rbx
 5708 0068 488D8580 		leaq	-384(%rbp), %rax
 5708      FEFFFF
 5709 006f BE000000 		movl	$.LC34, %esi
 5709      00
 5710 0074 4889C7   		movq	%rax, %rdi
 5711              	.LEHB172:
 5712 0077 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
 5712      00
 5713 007c 4889DE   		movq	%rbx, %rsi
 5714 007f 4889C7   		movq	%rax, %rdi
 5715 0082 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
 5715      00
  24:../Checks.h   **** 
 5716              		.loc 8 24 0 is_stmt 0 discriminator 1
 5717 0087 BE000000 		movl	$.LC35, %esi
 5717      00
 5718 008c 4889C7   		movq	%rax, %rdi
 5719 008f E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
 5719      00
 5720 0094 488B9568 		movq	-408(%rbp), %rdx
 5720      FEFFFF
 5721 009b 4889D6   		movq	%rdx, %rsi
 5722 009e 4889C7   		movq	%rax, %rdi
 5723 00a1 E8000000 		call	_ZStlsIcSt11char_traitsIcESaIcEERSt13basic_ostreamIT_T0_ES7_RKSbIS4_S5_T1_E
 5723      00
  26:../Checks.h   ****     }
 5724              		.loc 8 26 0 is_stmt 1
 5725 00a6 488D8580 		leaq	-384(%rbp), %rax
 5725      FEFFFF
 5726 00ad 4889C7   		movq	%rax, %rdi
 5727 00b0 E8000000 		call	_ZNK8UnitTest15MemoryOutStream7GetTextEv
 5727      00
 5728 00b5 4889C2   		movq	%rax, %rdx
 5729 00b8 488B8D60 		movq	-416(%rbp), %rcx
 5729      FEFFFF
 5730 00bf 488B8578 		movq	-392(%rbp), %rax
 5730      FEFFFF
 5731 00c6 4889CE   		movq	%rcx, %rsi
 5732 00c9 4889C7   		movq	%rax, %rdi
 5733 00cc E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 5733      00
 5734              	.LEHE172:
  26:../Checks.h   ****     }
 5735              		.loc 8 26 0 is_stmt 0 discriminator 1
 5736 00d1 488D8580 		leaq	-384(%rbp), %rax
 5736      FEFFFF
 5737 00d8 4889C7   		movq	%rax, %rdi
 5738              	.LEHB173:
 5739 00db E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 5739      00
 5740              	.LEHE173:
 5741              	.LBE145:
 5742 00e0 EB1D     		jmp	.L318
 5743              	.L317:
 5744 00e2 4889C3   		movq	%rax, %rbx
 5745              	.LBB146:
  26:../Checks.h   ****     }
 5746              		.loc 8 26 0
 5747 00e5 488D8580 		leaq	-384(%rbp), %rax
 5747      FEFFFF
 5748 00ec 4889C7   		movq	%rax, %rdi
 5749 00ef E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 5749      00
 5750 00f4 4889D8   		movq	%rbx, %rax
 5751 00f7 4889C7   		movq	%rax, %rdi
 5752              	.LEHB174:
 5753 00fa E8000000 		call	_Unwind_Resume
 5753      00
 5754              	.LEHE174:
 5755              	.L318:
 5756              	.LBE146:
 5757              	.LBE144:
 5758              	.LBE143:
 5759              		.loc 8 28 0 is_stmt 1
 5760 00ff 4881C498 		addq	$408, %rsp
 5760      010000
 5761 0106 5B       		popq	%rbx
 5762 0107 5D       		popq	%rbp
 5763              		.cfi_def_cfa 7, 8
 5764 0108 C3       		ret
 5765              		.cfi_endproc
 5766              	.LFE1413:
 5767              		.section	.gcc_except_table
 5768              	.LLSDA1413:
 5769 0488 FF       		.byte	0xff
 5770 0489 FF       		.byte	0xff
 5771 048a 01       		.byte	0x1
 5772 048b 13       		.uleb128 .LLSDACSE1413-.LLSDACSB1413
 5773              	.LLSDACSB1413:
 5774 048c 3F       		.uleb128 .LEHB171-.LFB1413
 5775 048d 1F       		.uleb128 .LEHE171-.LEHB171
 5776 048e 00       		.uleb128 0
 5777 048f 00       		.uleb128 0
 5778 0490 77       		.uleb128 .LEHB172-.LFB1413
 5779 0491 5A       		.uleb128 .LEHE172-.LEHB172
 5780 0492 E201     		.uleb128 .L317-.LFB1413
 5781 0494 00       		.uleb128 0
 5782 0495 DB01     		.uleb128 .LEHB173-.LFB1413
 5783 0497 05       		.uleb128 .LEHE173-.LEHB173
 5784 0498 00       		.uleb128 0
 5785 0499 00       		.uleb128 0
 5786 049a FA01     		.uleb128 .LEHB174-.LFB1413
 5787 049c 05       		.uleb128 .LEHE174-.LEHB174
 5788 049d 00       		.uleb128 0
 5789 049e 00       		.uleb128 0
 5790              	.LLSDACSE1413:
 5791              		.section	.text._ZN8UnitTest10CheckEqualIPKcSsEEvRNS_11TestResultsERKT_RKT0_RKNS_11TestDetailsE,"ax
 5793              		.text
 5795              	_ZN8UnitTest11ExecuteTestINS_12_GLOBAL__N_162DeferredTestReporterFixtureReportTestEndCapturesTestTi
 5796              	.LFB1414:
  16:../ExecuteTest.h **** {
 5797              		.loc 7 16 0
 5798              		.cfi_startproc
 5799              		.cfi_personality 0x3,__gxx_personality_v0
 5800              		.cfi_lsda 0x3,.LLSDA1414
 5801 25ce 55       		pushq	%rbp
 5802              		.cfi_def_cfa_offset 16
 5803              		.cfi_offset 6, -16
 5804 25cf 4889E5   		movq	%rsp, %rbp
 5805              		.cfi_def_cfa_register 6
 5806 25d2 4154     		pushq	%r12
 5807 25d4 53       		pushq	%rbx
 5808 25d5 4881EC80 		subq	$1152, %rsp
 5808      040000
 5809              		.cfi_offset 12, -24
 5810              		.cfi_offset 3, -32
 5811 25dc 4889BD78 		movq	%rdi, -1160(%rbp)
 5811      FBFFFF
 5812 25e3 4889B570 		movq	%rsi, -1168(%rbp)
 5812      FBFFFF
 5813              	.LEHB175:
 5814              	.LBB147:
  18:../ExecuteTest.h **** 
 5815              		.loc 7 18 0
 5816 25ea E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 5816      00
 5817              	.LEHE175:
 5818 25ef 488B9570 		movq	-1168(%rbp), %rdx
 5818      FBFFFF
 5819 25f6 488910   		movq	%rdx, (%rax)
 5820              	.LBB148:
  23:../ExecuteTest.h **** #endif
 5821              		.loc 7 23 0
 5822 25f9 488D8590 		leaq	-1136(%rbp), %rax
 5822      FBFFFF
 5823 2600 4889C7   		movq	%rax, %rdi
 5824              	.LEHB176:
 5825 2603 E8000000 		call	_ZN8UnitTest16SignalTranslatorC1Ev
 5825      00
 5826              	.LEHE176:
  23:../ExecuteTest.h **** #endif
 5827              		.loc 7 23 0 is_stmt 0 discriminator 1
 5828 2608 488B0500 		movq	_ZN8UnitTest16SignalTranslator12s_jumpTargetE(%rip), %rax
 5828      000000
 5829 260f BE010000 		movl	$1, %esi
 5829      00
 5830 2614 4889C7   		movq	%rax, %rdi
 5831 2617 E8000000 		call	__sigsetjmp
 5831      00
 5832 261c 85C0     		testl	%eax, %eax
 5833 261e 0F95C0   		setne	%al
 5834 2621 84C0     		testb	%al, %al
 5835 2623 7423     		je	.L320
 5836 2625 BF080000 		movl	$8, %edi
 5836      00
 5837 262a E8000000 		call	__cxa_allocate_exception
 5837      00
 5838 262f 48C70000 		movq	$.LC32, (%rax)
 5838      000000
 5839 2636 BA000000 		movl	$0, %edx
 5839      00
 5840 263b BE000000 		movl	$_ZTIPKc, %esi
 5840      00
 5841 2640 4889C7   		movq	%rax, %rdi
 5842              	.LEHB177:
 5843 2643 E8000000 		call	__cxa_throw
 5843      00
 5844              	.L320:
  25:../ExecuteTest.h **** 	}
 5845              		.loc 7 25 0 is_stmt 1
 5846 2648 488B8578 		movq	-1160(%rbp), %rax
 5846      FBFFFF
 5847 264f 4889C7   		movq	%rax, %rdi
 5848 2652 E8D7E8FF 		call	_ZN8UnitTest12_GLOBAL__N_162DeferredTestReporterFixtureReportTestEndCapturesTestTimeHelper7Ru
 5848      FF
 5849              	.LEHE177:
  25:../ExecuteTest.h **** 	}
 5850              		.loc 7 25 0 is_stmt 0 discriminator 1
 5851 2657 488D8590 		leaq	-1136(%rbp), %rax
 5851      FBFFFF
 5852 265e 4889C7   		movq	%rax, %rdi
 5853              	.LEHB178:
 5854 2661 E8000000 		call	_ZN8UnitTest16SignalTranslatorD1Ev
 5854      00
 5855              	.LEHE178:
 5856              	.LBE148:
 5857              	.LBE147:
 5858              		.loc 7 42 0 is_stmt 1
 5859 2666 E9EE0100 		jmp	.L338
 5859      00
 5860              	.L331:
 5861 266b 4989C4   		movq	%rax, %r12
 5862 266e 4889D3   		movq	%rdx, %rbx
 5863              	.LBB156:
 5864              	.LBB149:
  25:../ExecuteTest.h **** 	}
 5865              		.loc 7 25 0
 5866 2671 488D8590 		leaq	-1136(%rbp), %rax
 5866      FBFFFF
 5867 2678 4889C7   		movq	%rax, %rdi
 5868 267b E8000000 		call	_ZN8UnitTest16SignalTranslatorD1Ev
 5868      00
 5869 2680 4C89E0   		movq	%r12, %rax
 5870 2683 4889DA   		movq	%rbx, %rdx
 5871 2686 EB4D     		jmp	.L322
 5872              	.L333:
 5873 2688 4889C3   		movq	%rax, %rbx
 5874              	.LBE149:
 5875              	.LBB150:
  27:../ExecuteTest.h **** 	{
 5876              		.loc 7 27 0
 5877 268b E8000000 		call	__cxa_end_catch
 5877      00
 5878 2690 4889D8   		movq	%rbx, %rax
 5879 2693 4889C7   		movq	%rax, %rdi
 5880              	.LEHB179:
 5881 2696 E8000000 		call	_Unwind_Resume
 5881      00
 5882              	.LEHE179:
 5883              	.L334:
 5884 269b 4889C3   		movq	%rax, %rbx
 5885              	.LBE150:
 5886              	.LBB151:
 5887              	.LBB152:
  36:../ExecuteTest.h **** 	}
 5888              		.loc 7 36 0
 5889 269e 488D8590 		leaq	-1136(%rbp), %rax
 5889      FBFFFF
 5890 26a5 4889C7   		movq	%rax, %rdi
 5891 26a8 E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 5891      00
 5892 26ad EB03     		jmp	.L325
 5893              	.L335:
 5894 26af 4889C3   		movq	%rax, %rbx
 5895              	.L325:
 5896              	.LBE152:
  32:../ExecuteTest.h **** 	{
 5897              		.loc 7 32 0
 5898 26b2 E8000000 		call	__cxa_end_catch
 5898      00
 5899 26b7 4889D8   		movq	%rbx, %rax
 5900 26ba 4889C7   		movq	%rax, %rdi
 5901              	.LEHB180:
 5902 26bd E8000000 		call	_Unwind_Resume
 5902      00
 5903              	.LEHE180:
 5904              	.L336:
 5905 26c2 4889C3   		movq	%rax, %rbx
 5906              	.LBE151:
  38:../ExecuteTest.h **** 	{
 5907              		.loc 7 38 0
 5908 26c5 E8000000 		call	__cxa_end_catch
 5908      00
 5909 26ca 4889D8   		movq	%rbx, %rax
 5910 26cd 4889C7   		movq	%rax, %rdi
 5911              	.LEHB181:
 5912 26d0 E8000000 		call	_Unwind_Resume
 5912      00
 5913              	.LEHE181:
 5914              	.L332:
 5915              	.L322:
 5916 26d5 4883FA01 		cmpq	$1, %rdx
 5917 26d9 740F     		je	.L328
 5918 26db 4883FA02 		cmpq	$2, %rdx
 5919 26df 0F84A600 		je	.L329
 5919      0000
 5920 26e5 E9430100 		jmp	.L337
 5920      00
 5921              	.L328:
 5922              	.LBB154:
  27:../ExecuteTest.h **** 	{
 5923              		.loc 7 27 0
 5924 26ea 4889C7   		movq	%rax, %rdi
 5925 26ed E8000000 		call	__cxa_begin_catch
 5925      00
 5926 26f2 48898580 		movq	%rax, -1152(%rbp)
 5926      FBFFFF
  30:../ExecuteTest.h **** 	}
 5927              		.loc 7 30 0
 5928 26f9 488B8580 		movq	-1152(%rbp), %rax
 5928      FBFFFF
 5929 2700 488B00   		movq	(%rax), %rax
 5930 2703 4883C010 		addq	$16, %rax
 5931 2707 488B00   		movq	(%rax), %rax
 5932 270a 488B9580 		movq	-1152(%rbp), %rdx
 5932      FBFFFF
 5933 2711 4889D7   		movq	%rdx, %rdi
 5934 2714 FFD0     		call	*%rax
 5935 2716 4889C3   		movq	%rax, %rbx
 5936 2719 488B8580 		movq	-1152(%rbp), %rax
 5936      FBFFFF
 5937 2720 4889C7   		movq	%rax, %rdi
 5938              	.LEHB182:
 5939 2723 E8000000 		call	_ZNK8UnitTest15AssertException10LineNumberEv
 5939      00
 5940 2728 4189C4   		movl	%eax, %r12d
 5941 272b 488B8580 		movq	-1152(%rbp), %rax
 5941      FBFFFF
 5942 2732 4889C7   		movq	%rax, %rdi
 5943 2735 E8000000 		call	_ZNK8UnitTest15AssertException8FilenameEv
 5943      00
  30:../ExecuteTest.h **** 	}
 5944              		.loc 7 30 0 is_stmt 0 discriminator 1
 5945 273a 4889C1   		movq	%rax, %rcx
 5946 273d 488B8570 		movq	-1168(%rbp), %rax
 5946      FBFFFF
 5947 2744 488B10   		movq	(%rax), %rdx
 5948 2747 488B8570 		movq	-1168(%rbp), %rax
 5948      FBFFFF
 5949 274e 488B7008 		movq	8(%rax), %rsi
 5950 2752 488D8590 		leaq	-1136(%rbp), %rax
 5950      FBFFFF
 5951 2759 4589E0   		movl	%r12d, %r8d
 5952 275c 4889C7   		movq	%rax, %rdi
 5953 275f E8000000 		call	_ZN8UnitTest11TestDetailsC1EPKcS2_S2_i
 5953      00
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 5954              		.loc 7 29 0 is_stmt 1
 5955 2764 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 5955      00
  30:../ExecuteTest.h **** 	}
 5956              		.loc 7 30 0
 5957 2769 488B00   		movq	(%rax), %rax
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 5958              		.loc 7 29 0
 5959 276c 488D8D90 		leaq	-1136(%rbp), %rcx
 5959      FBFFFF
 5960 2773 4889DA   		movq	%rbx, %rdx
 5961 2776 4889CE   		movq	%rcx, %rsi
 5962 2779 4889C7   		movq	%rax, %rdi
 5963 277c E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 5963      00
 5964              	.LEHE182:
  27:../ExecuteTest.h **** 	{
 5965              		.loc 7 27 0
 5966 2781 E8000000 		call	__cxa_end_catch
 5966      00
 5967              	.LBE154:
 5968              	.LBE156:
 5969              		.loc 7 42 0
 5970 2786 E9CE0000 		jmp	.L338
 5970      00
 5971              	.L329:
 5972              	.LBB157:
 5973              	.LBB155:
  32:../ExecuteTest.h **** 	{
 5974              		.loc 7 32 0
 5975 278b 4889C7   		movq	%rax, %rdi
 5976 278e E8000000 		call	__cxa_begin_catch
 5976      00
 5977 2793 48898588 		movq	%rax, -1144(%rbp)
 5977      FBFFFF
 5978              	.LBB153:
  34:../ExecuteTest.h **** 		stream << "Unhandled exception: " << e.what();
 5979              		.loc 7 34 0
 5980 279a 488D8590 		leaq	-1136(%rbp), %rax
 5980      FBFFFF
 5981 27a1 4889C7   		movq	%rax, %rdi
 5982              	.LEHB183:
 5983 27a4 E8000000 		call	_ZN8UnitTest15MemoryOutStreamC1Ev
 5983      00
 5984              	.LEHE183:
  35:../ExecuteTest.h **** 		CurrentTest::Results()->OnTestFailure(details, stream.GetText());
 5985              		.loc 7 35 0
 5986 27a9 488B8588 		movq	-1144(%rbp), %rax
 5986      FBFFFF
 5987 27b0 488B00   		movq	(%rax), %rax
 5988 27b3 4883C010 		addq	$16, %rax
 5989 27b7 488B00   		movq	(%rax), %rax
 5990 27ba 488B9588 		movq	-1144(%rbp), %rdx
 5990      FBFFFF
 5991 27c1 4889D7   		movq	%rdx, %rdi
 5992 27c4 FFD0     		call	*%rax
 5993 27c6 4889C3   		movq	%rax, %rbx
 5994 27c9 488D8590 		leaq	-1136(%rbp), %rax
 5994      FBFFFF
 5995 27d0 BE000000 		movl	$.LC6, %esi
 5995      00
 5996 27d5 4889C7   		movq	%rax, %rdi
 5997              	.LEHB184:
 5998 27d8 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
 5998      00
 5999 27dd 4889DE   		movq	%rbx, %rsi
 6000 27e0 4889C7   		movq	%rax, %rdi
 6001 27e3 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
 6001      00
  36:../ExecuteTest.h **** 	}
 6002              		.loc 7 36 0
 6003 27e8 488D8590 		leaq	-1136(%rbp), %rax
 6003      FBFFFF
 6004 27ef 4889C7   		movq	%rax, %rdi
 6005 27f2 E8000000 		call	_ZNK8UnitTest15MemoryOutStream7GetTextEv
 6005      00
 6006 27f7 4889C3   		movq	%rax, %rbx
 6007 27fa E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 6007      00
  36:../ExecuteTest.h **** 	}
 6008              		.loc 7 36 0 is_stmt 0 discriminator 1
 6009 27ff 488B00   		movq	(%rax), %rax
 6010 2802 488B8D70 		movq	-1168(%rbp), %rcx
 6010      FBFFFF
 6011 2809 4889DA   		movq	%rbx, %rdx
 6012 280c 4889CE   		movq	%rcx, %rsi
 6013 280f 4889C7   		movq	%rax, %rdi
 6014 2812 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 6014      00
 6015              	.LEHE184:
 6016 2817 488D8590 		leaq	-1136(%rbp), %rax
 6016      FBFFFF
 6017 281e 4889C7   		movq	%rax, %rdi
 6018              	.LEHB185:
 6019 2821 E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 6019      00
 6020              	.LEHE185:
 6021              	.LBE153:
  32:../ExecuteTest.h **** 	{
 6022              		.loc 7 32 0 is_stmt 1
 6023 2826 E8000000 		call	__cxa_end_catch
 6023      00
 6024              	.LBE155:
 6025              	.LBE157:
 6026              		.loc 7 42 0
 6027 282b EB2C     		jmp	.L338
 6028              	.L337:
 6029              	.LBB158:
  38:../ExecuteTest.h **** 	{
 6030              		.loc 7 38 0
 6031 282d 4889C7   		movq	%rax, %rdi
 6032 2830 E8000000 		call	__cxa_begin_catch
 6032      00
 6033              	.LEHB186:
  40:../ExecuteTest.h **** 	}
 6034              		.loc 7 40 0
 6035 2835 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 6035      00
 6036 283a 488B00   		movq	(%rax), %rax
 6037 283d 488B8D70 		movq	-1168(%rbp), %rcx
 6037      FBFFFF
 6038 2844 BA000000 		movl	$.LC33, %edx
 6038      00
 6039 2849 4889CE   		movq	%rcx, %rsi
 6040 284c 4889C7   		movq	%rax, %rdi
 6041 284f E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 6041      00
 6042              	.LEHE186:
 6043              	.LEHB187:
  38:../ExecuteTest.h **** 	{
 6044              		.loc 7 38 0
 6045 2854 E8000000 		call	__cxa_end_catch
 6045      00
 6046              	.LEHE187:
 6047              	.L338:
 6048              	.LBE158:
 6049              		.loc 7 42 0
 6050 2859 90       		nop
 6051 285a 4881C480 		addq	$1152, %rsp
 6051      040000
 6052 2861 5B       		popq	%rbx
 6053 2862 415C     		popq	%r12
 6054 2864 5D       		popq	%rbp
 6055              		.cfi_def_cfa 7, 8
 6056 2865 C3       		ret
 6057              		.cfi_endproc
 6058              	.LFE1414:
 6059              		.section	.gcc_except_table
 6060 049f 00       		.align 4
 6061              	.LLSDA1414:
 6062 04a0 FF       		.byte	0xff
 6063 04a1 03       		.byte	0x3
 6064 04a2 5D       		.uleb128 .LLSDATT1414-.LLSDATTD1414
 6065              	.LLSDATTD1414:
 6066 04a3 01       		.byte	0x1
 6067 04a4 46       		.uleb128 .LLSDACSE1414-.LLSDACSB1414
 6068              	.LLSDACSB1414:
 6069 04a5 1C       		.uleb128 .LEHB175-.LFB1414
 6070 04a6 05       		.uleb128 .LEHE175-.LEHB175
 6071 04a7 00       		.uleb128 0
 6072 04a8 00       		.uleb128 0
 6073 04a9 35       		.uleb128 .LEHB176-.LFB1414
 6074 04aa 05       		.uleb128 .LEHE176-.LEHB176
 6075 04ab 8702     		.uleb128 .L332-.LFB1414
 6076 04ad 05       		.uleb128 0x5
 6077 04ae 75       		.uleb128 .LEHB177-.LFB1414
 6078 04af 14       		.uleb128 .LEHE177-.LEHB177
 6079 04b0 9D01     		.uleb128 .L331-.LFB1414
 6080 04b2 07       		.uleb128 0x7
 6081 04b3 9301     		.uleb128 .LEHB178-.LFB1414
 6082 04b5 05       		.uleb128 .LEHE178-.LEHB178
 6083 04b6 8702     		.uleb128 .L332-.LFB1414
 6084 04b8 05       		.uleb128 0x5
 6085 04b9 C801     		.uleb128 .LEHB179-.LFB1414
 6086 04bb 05       		.uleb128 .LEHE179-.LEHB179
 6087 04bc 00       		.uleb128 0
 6088 04bd 00       		.uleb128 0
 6089 04be EF01     		.uleb128 .LEHB180-.LFB1414
 6090 04c0 05       		.uleb128 .LEHE180-.LEHB180
 6091 04c1 00       		.uleb128 0
 6092 04c2 00       		.uleb128 0
 6093 04c3 8202     		.uleb128 .LEHB181-.LFB1414
 6094 04c5 05       		.uleb128 .LEHE181-.LEHB181
 6095 04c6 00       		.uleb128 0
 6096 04c7 00       		.uleb128 0
 6097 04c8 D502     		.uleb128 .LEHB182-.LFB1414
 6098 04ca 5E       		.uleb128 .LEHE182-.LEHB182
 6099 04cb BA01     		.uleb128 .L333-.LFB1414
 6100 04cd 00       		.uleb128 0
 6101 04ce D603     		.uleb128 .LEHB183-.LFB1414
 6102 04d0 05       		.uleb128 .LEHE183-.LEHB183
 6103 04d1 E101     		.uleb128 .L335-.LFB1414
 6104 04d3 00       		.uleb128 0
 6105 04d4 8A04     		.uleb128 .LEHB184-.LFB1414
 6106 04d6 3F       		.uleb128 .LEHE184-.LEHB184
 6107 04d7 CD01     		.uleb128 .L334-.LFB1414
 6108 04d9 00       		.uleb128 0
 6109 04da D304     		.uleb128 .LEHB185-.LFB1414
 6110 04dc 05       		.uleb128 .LEHE185-.LEHB185
 6111 04dd E101     		.uleb128 .L335-.LFB1414
 6112 04df 00       		.uleb128 0
 6113 04e0 E704     		.uleb128 .LEHB186-.LFB1414
 6114 04e2 1F       		.uleb128 .LEHE186-.LEHB186
 6115 04e3 F401     		.uleb128 .L336-.LFB1414
 6116 04e5 00       		.uleb128 0
 6117 04e6 8605     		.uleb128 .LEHB187-.LFB1414
 6118 04e8 05       		.uleb128 .LEHE187-.LEHB187
 6119 04e9 00       		.uleb128 0
 6120 04ea 00       		.uleb128 0
 6121              	.LLSDACSE1414:
 6122 04eb 03       		.byte	0x3
 6123 04ec 00       		.byte	0
 6124 04ed 02       		.byte	0x2
 6125 04ee 7D       		.byte	0x7d
 6126 04ef 01       		.byte	0x1
 6127 04f0 7D       		.byte	0x7d
 6128 04f1 00       		.byte	0
 6129 04f2 7D       		.byte	0x7d
 6130 04f3 00       		.align 4
 6131 04f4 00000000 		.long	0
 6132              	
 6133 04f8 00000000 		.long	_ZTISt9exception
 6134 04fc 00000000 		.long	_ZTIN8UnitTest15AssertExceptionE
 6135              	.LLSDATT1414:
 6136              		.text
 6138              		.section	.rodata
 6139              	.LC36:
 6140 056f 202B2F2D 		.string	" +/- "
 6140      2000
 6141              		.section	.text._ZN8UnitTest10CheckCloseIfffEEvRNS_11TestResultsERKT_RKT0_RKT1_RKNS_11TestDetailsE,
 6142              		.weak	_ZN8UnitTest10CheckCloseIfffEEvRNS_11TestResultsERKT_RKT0_RKT1_RKNS_11TestDetailsE
 6144              	_ZN8UnitTest10CheckCloseIfffEEvRNS_11TestResultsERKT_RKT0_RKT1_RKNS_11TestDetailsE:
 6145              	.LFB1415:
  29:../Checks.h   **** 
  30:../Checks.h   **** void CheckEqual(TestResults& results, char const* expected, char const* actual, TestDetails const& 
  31:../Checks.h   **** 
  32:../Checks.h   **** void CheckEqual(TestResults& results, char* expected, char* actual, TestDetails const& details);
  33:../Checks.h   **** 
  34:../Checks.h   **** void CheckEqual(TestResults& results, char* expected, char const* actual, TestDetails const& detail
  35:../Checks.h   **** 
  36:../Checks.h   **** void CheckEqual(TestResults& results, char const* expected, char* actual, TestDetails const& detail
  37:../Checks.h   **** 
  38:../Checks.h   **** template< typename Expected, typename Actual, typename Tolerance >
  39:../Checks.h   **** bool AreClose(Expected const& expected, Actual const& actual, Tolerance const& tolerance)
  40:../Checks.h   **** {
  41:../Checks.h   ****     return (actual >= (expected - tolerance)) && (actual <= (expected + tolerance));
  42:../Checks.h   **** }
  43:../Checks.h   **** 
  44:../Checks.h   **** template< typename Expected, typename Actual, typename Tolerance >
  45:../Checks.h   **** void CheckClose(TestResults& results, Expected const& expected, Actual const& actual, Tolerance con
 6146              		.loc 8 45 0
 6147              		.cfi_startproc
 6148              		.cfi_personality 0x3,__gxx_personality_v0
 6149              		.cfi_lsda 0x3,.LLSDA1415
 6150 0000 55       		pushq	%rbp
 6151              		.cfi_def_cfa_offset 16
 6152              		.cfi_offset 6, -16
 6153 0001 4889E5   		movq	%rsp, %rbp
 6154              		.cfi_def_cfa_register 6
 6155 0004 4155     		pushq	%r13
 6156 0006 4154     		pushq	%r12
 6157 0008 53       		pushq	%rbx
 6158 0009 4881ECA8 		subq	$424, %rsp
 6158      010000
 6159              		.cfi_offset 13, -24
 6160              		.cfi_offset 12, -32
 6161              		.cfi_offset 3, -40
 6162 0010 4889BD68 		movq	%rdi, -408(%rbp)
 6162      FEFFFF
 6163 0017 4889B560 		movq	%rsi, -416(%rbp)
 6163      FEFFFF
 6164 001e 48899558 		movq	%rdx, -424(%rbp)
 6164      FEFFFF
 6165 0025 48898D50 		movq	%rcx, -432(%rbp)
 6165      FEFFFF
 6166 002c 4C898548 		movq	%r8, -440(%rbp)
 6166      FEFFFF
 6167              	.LBB159:
 6168              	.LBB160:
  46:../Checks.h   ****                 TestDetails const& details)
  47:../Checks.h   **** {
  48:../Checks.h   ****     if (!AreClose(expected, actual, tolerance))
 6169              		.loc 8 48 0
 6170 0033 488B9550 		movq	-432(%rbp), %rdx
 6170      FEFFFF
 6171 003a 488B8D58 		movq	-424(%rbp), %rcx
 6171      FEFFFF
 6172 0041 488B8560 		movq	-416(%rbp), %rax
 6172      FEFFFF
 6173 0048 4889CE   		movq	%rcx, %rsi
 6174 004b 4889C7   		movq	%rax, %rdi
 6175 004e E8000000 		call	_ZN8UnitTest8AreCloseIfffEEbRKT_RKT0_RKT1_
 6175      00
 6176 0053 83F001   		xorl	$1, %eax
 6177 0056 84C0     		testb	%al, %al
 6178 0058 0F84F700 		je	.L343
 6178      0000
 6179              	.LBB161:
  49:../Checks.h   ****     { 
  50:../Checks.h   ****         UnitTest::MemoryOutStream stream;
 6180              		.loc 8 50 0
 6181 005e 488D8570 		leaq	-400(%rbp), %rax
 6181      FEFFFF
 6182 0065 4889C7   		movq	%rax, %rdi
 6183              	.LEHB188:
 6184 0068 E8000000 		call	_ZN8UnitTest15MemoryOutStreamC1Ev
 6184      00
 6185              	.LEHE188:
  51:../Checks.h   ****         stream << "Expected " << expected << " +/- " << tolerance << " but was " << actual;
 6186              		.loc 8 51 0
 6187 006d 488B8558 		movq	-424(%rbp), %rax
 6187      FEFFFF
 6188 0074 8B18     		movl	(%rax), %ebx
 6189 0076 488B8550 		movq	-432(%rbp), %rax
 6189      FEFFFF
 6190 007d 448B20   		movl	(%rax), %r12d
 6191 0080 488B8560 		movq	-416(%rbp), %rax
 6191      FEFFFF
 6192 0087 448B28   		movl	(%rax), %r13d
 6193 008a 488D8570 		leaq	-400(%rbp), %rax
 6193      FEFFFF
 6194 0091 BE000000 		movl	$.LC34, %esi
 6194      00
 6195 0096 4889C7   		movq	%rax, %rdi
 6196              	.LEHB189:
 6197 0099 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
 6197      00
 6198 009e 4489AD44 		movl	%r13d, -444(%rbp)
 6198      FEFFFF
 6199 00a5 F30F1085 		movss	-444(%rbp), %xmm0
 6199      44FEFFFF 
 6200 00ad 4889C7   		movq	%rax, %rdi
 6201 00b0 E8000000 		call	_ZNSolsEf
 6201      00
 6202              		.loc 8 51 0 is_stmt 0 discriminator 1
 6203 00b5 BE000000 		movl	$.LC36, %esi
 6203      00
 6204 00ba 4889C7   		movq	%rax, %rdi
 6205 00bd E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
 6205      00
 6206 00c2 4489A544 		movl	%r12d, -444(%rbp)
 6206      FEFFFF
 6207 00c9 F30F1085 		movss	-444(%rbp), %xmm0
 6207      44FEFFFF 
 6208 00d1 4889C7   		movq	%rax, %rdi
 6209 00d4 E8000000 		call	_ZNSolsEf
 6209      00
 6210 00d9 BE000000 		movl	$.LC35, %esi
 6210      00
 6211 00de 4889C7   		movq	%rax, %rdi
 6212 00e1 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
 6212      00
 6213 00e6 899D44FE 		movl	%ebx, -444(%rbp)
 6213      FFFF
 6214 00ec F30F1085 		movss	-444(%rbp), %xmm0
 6214      44FEFFFF 
 6215 00f4 4889C7   		movq	%rax, %rdi
 6216 00f7 E8000000 		call	_ZNSolsEf
 6216      00
  52:../Checks.h   **** 
  53:../Checks.h   ****         results.OnTestFailure(details, stream.GetText());
 6217              		.loc 8 53 0 is_stmt 1
 6218 00fc 488D8570 		leaq	-400(%rbp), %rax
 6218      FEFFFF
 6219 0103 4889C7   		movq	%rax, %rdi
 6220 0106 E8000000 		call	_ZNK8UnitTest15MemoryOutStream7GetTextEv
 6220      00
 6221 010b 4889C2   		movq	%rax, %rdx
 6222 010e 488B8D48 		movq	-440(%rbp), %rcx
 6222      FEFFFF
 6223 0115 488B8568 		movq	-408(%rbp), %rax
 6223      FEFFFF
 6224 011c 4889CE   		movq	%rcx, %rsi
 6225 011f 4889C7   		movq	%rax, %rdi
 6226 0122 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 6226      00
 6227              	.LEHE189:
 6228              		.loc 8 53 0 is_stmt 0 discriminator 1
 6229 0127 488D8570 		leaq	-400(%rbp), %rax
 6229      FEFFFF
 6230 012e 4889C7   		movq	%rax, %rdi
 6231              	.LEHB190:
 6232 0131 E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 6232      00
 6233              	.LEHE190:
 6234              	.LBE161:
 6235 0136 EB1D     		jmp	.L343
 6236              	.L342:
 6237 0138 4889C3   		movq	%rax, %rbx
 6238              	.LBB162:
 6239              		.loc 8 53 0
 6240 013b 488D8570 		leaq	-400(%rbp), %rax
 6240      FEFFFF
 6241 0142 4889C7   		movq	%rax, %rdi
 6242 0145 E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 6242      00
 6243 014a 4889D8   		movq	%rbx, %rax
 6244 014d 4889C7   		movq	%rax, %rdi
 6245              	.LEHB191:
 6246 0150 E8000000 		call	_Unwind_Resume
 6246      00
 6247              	.LEHE191:
 6248              	.L343:
 6249              	.LBE162:
 6250              	.LBE160:
 6251              	.LBE159:
  54:../Checks.h   ****     }
  55:../Checks.h   **** }
 6252              		.loc 8 55 0 is_stmt 1
 6253 0155 4881C4A8 		addq	$424, %rsp
 6253      010000
 6254 015c 5B       		popq	%rbx
 6255 015d 415C     		popq	%r12
 6256 015f 415D     		popq	%r13
 6257 0161 5D       		popq	%rbp
 6258              		.cfi_def_cfa 7, 8
 6259 0162 C3       		ret
 6260              		.cfi_endproc
 6261              	.LFE1415:
 6262              		.section	.gcc_except_table
 6263              	.LLSDA1415:
 6264 0500 FF       		.byte	0xff
 6265 0501 FF       		.byte	0xff
 6266 0502 01       		.byte	0x1
 6267 0503 15       		.uleb128 .LLSDACSE1415-.LLSDACSB1415
 6268              	.LLSDACSB1415:
 6269 0504 68       		.uleb128 .LEHB188-.LFB1415
 6270 0505 05       		.uleb128 .LEHE188-.LEHB188
 6271 0506 00       		.uleb128 0
 6272 0507 00       		.uleb128 0
 6273 0508 9901     		.uleb128 .LEHB189-.LFB1415
 6274 050a 8E01     		.uleb128 .LEHE189-.LEHB189
 6275 050c B802     		.uleb128 .L342-.LFB1415
 6276 050e 00       		.uleb128 0
 6277 050f B102     		.uleb128 .LEHB190-.LFB1415
 6278 0511 05       		.uleb128 .LEHE190-.LEHB190
 6279 0512 00       		.uleb128 0
 6280 0513 00       		.uleb128 0
 6281 0514 D002     		.uleb128 .LEHB191-.LFB1415
 6282 0516 05       		.uleb128 .LEHE191-.LEHB191
 6283 0517 00       		.uleb128 0
 6284 0518 00       		.uleb128 0
 6285              	.LLSDACSE1415:
 6286              		.section	.text._ZN8UnitTest10CheckCloseIfffEEvRNS_11TestResultsERKT_RKT0_RKT1_RKNS_11TestDetailsE,
 6288              		.text
 6290              	_ZN8UnitTest11ExecuteTestINS_12_GLOBAL__N_165DeferredTestReporterFixtureReportFailureSavesFailureDe
 6291              	.LFB1416:
  16:../ExecuteTest.h **** {
 6292              		.loc 7 16 0
 6293              		.cfi_startproc
 6294              		.cfi_personality 0x3,__gxx_personality_v0
 6295              		.cfi_lsda 0x3,.LLSDA1416
 6296 2866 55       		pushq	%rbp
 6297              		.cfi_def_cfa_offset 16
 6298              		.cfi_offset 6, -16
 6299 2867 4889E5   		movq	%rsp, %rbp
 6300              		.cfi_def_cfa_register 6
 6301 286a 4154     		pushq	%r12
 6302 286c 53       		pushq	%rbx
 6303 286d 4881EC80 		subq	$1152, %rsp
 6303      040000
 6304              		.cfi_offset 12, -24
 6305              		.cfi_offset 3, -32
 6306 2874 4889BD78 		movq	%rdi, -1160(%rbp)
 6306      FBFFFF
 6307 287b 4889B570 		movq	%rsi, -1168(%rbp)
 6307      FBFFFF
 6308              	.LEHB192:
 6309              	.LBB163:
  18:../ExecuteTest.h **** 
 6310              		.loc 7 18 0
 6311 2882 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 6311      00
 6312              	.LEHE192:
 6313 2887 488B9570 		movq	-1168(%rbp), %rdx
 6313      FBFFFF
 6314 288e 488910   		movq	%rdx, (%rax)
 6315              	.LBB164:
  23:../ExecuteTest.h **** #endif
 6316              		.loc 7 23 0
 6317 2891 488D8590 		leaq	-1136(%rbp), %rax
 6317      FBFFFF
 6318 2898 4889C7   		movq	%rax, %rdi
 6319              	.LEHB193:
 6320 289b E8000000 		call	_ZN8UnitTest16SignalTranslatorC1Ev
 6320      00
 6321              	.LEHE193:
  23:../ExecuteTest.h **** #endif
 6322              		.loc 7 23 0 is_stmt 0 discriminator 1
 6323 28a0 488B0500 		movq	_ZN8UnitTest16SignalTranslator12s_jumpTargetE(%rip), %rax
 6323      000000
 6324 28a7 BE010000 		movl	$1, %esi
 6324      00
 6325 28ac 4889C7   		movq	%rax, %rdi
 6326 28af E8000000 		call	__sigsetjmp
 6326      00
 6327 28b4 85C0     		testl	%eax, %eax
 6328 28b6 0F95C0   		setne	%al
 6329 28b9 84C0     		testb	%al, %al
 6330 28bb 7423     		je	.L345
 6331 28bd BF080000 		movl	$8, %edi
 6331      00
 6332 28c2 E8000000 		call	__cxa_allocate_exception
 6332      00
 6333 28c7 48C70000 		movq	$.LC32, (%rax)
 6333      000000
 6334 28ce BA000000 		movl	$0, %edx
 6334      00
 6335 28d3 BE000000 		movl	$_ZTIPKc, %esi
 6335      00
 6336 28d8 4889C7   		movq	%rax, %rdi
 6337              	.LEHB194:
 6338 28db E8000000 		call	__cxa_throw
 6338      00
 6339              	.L345:
  25:../ExecuteTest.h **** 	}
 6340              		.loc 7 25 0 is_stmt 1
 6341 28e0 488B8578 		movq	-1160(%rbp), %rax
 6341      FBFFFF
 6342 28e7 4889C7   		movq	%rax, %rdi
 6343 28ea E8C1EAFF 		call	_ZN8UnitTest12_GLOBAL__N_165DeferredTestReporterFixtureReportFailureSavesFailureDetailsHelper
 6343      FF
 6344              	.LEHE194:
  25:../ExecuteTest.h **** 	}
 6345              		.loc 7 25 0 is_stmt 0 discriminator 1
 6346 28ef 488D8590 		leaq	-1136(%rbp), %rax
 6346      FBFFFF
 6347 28f6 4889C7   		movq	%rax, %rdi
 6348              	.LEHB195:
 6349 28f9 E8000000 		call	_ZN8UnitTest16SignalTranslatorD1Ev
 6349      00
 6350              	.LEHE195:
 6351              	.LBE164:
 6352              	.LBE163:
 6353              		.loc 7 42 0 is_stmt 1
 6354 28fe E9EE0100 		jmp	.L363
 6354      00
 6355              	.L356:
 6356 2903 4989C4   		movq	%rax, %r12
 6357 2906 4889D3   		movq	%rdx, %rbx
 6358              	.LBB172:
 6359              	.LBB165:
  25:../ExecuteTest.h **** 	}
 6360              		.loc 7 25 0
 6361 2909 488D8590 		leaq	-1136(%rbp), %rax
 6361      FBFFFF
 6362 2910 4889C7   		movq	%rax, %rdi
 6363 2913 E8000000 		call	_ZN8UnitTest16SignalTranslatorD1Ev
 6363      00
 6364 2918 4C89E0   		movq	%r12, %rax
 6365 291b 4889DA   		movq	%rbx, %rdx
 6366 291e EB4D     		jmp	.L347
 6367              	.L358:
 6368 2920 4889C3   		movq	%rax, %rbx
 6369              	.LBE165:
 6370              	.LBB166:
  27:../ExecuteTest.h **** 	{
 6371              		.loc 7 27 0
 6372 2923 E8000000 		call	__cxa_end_catch
 6372      00
 6373 2928 4889D8   		movq	%rbx, %rax
 6374 292b 4889C7   		movq	%rax, %rdi
 6375              	.LEHB196:
 6376 292e E8000000 		call	_Unwind_Resume
 6376      00
 6377              	.LEHE196:
 6378              	.L359:
 6379 2933 4889C3   		movq	%rax, %rbx
 6380              	.LBE166:
 6381              	.LBB167:
 6382              	.LBB168:
  36:../ExecuteTest.h **** 	}
 6383              		.loc 7 36 0
 6384 2936 488D8590 		leaq	-1136(%rbp), %rax
 6384      FBFFFF
 6385 293d 4889C7   		movq	%rax, %rdi
 6386 2940 E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 6386      00
 6387 2945 EB03     		jmp	.L350
 6388              	.L360:
 6389 2947 4889C3   		movq	%rax, %rbx
 6390              	.L350:
 6391              	.LBE168:
  32:../ExecuteTest.h **** 	{
 6392              		.loc 7 32 0
 6393 294a E8000000 		call	__cxa_end_catch
 6393      00
 6394 294f 4889D8   		movq	%rbx, %rax
 6395 2952 4889C7   		movq	%rax, %rdi
 6396              	.LEHB197:
 6397 2955 E8000000 		call	_Unwind_Resume
 6397      00
 6398              	.LEHE197:
 6399              	.L361:
 6400 295a 4889C3   		movq	%rax, %rbx
 6401              	.LBE167:
  38:../ExecuteTest.h **** 	{
 6402              		.loc 7 38 0
 6403 295d E8000000 		call	__cxa_end_catch
 6403      00
 6404 2962 4889D8   		movq	%rbx, %rax
 6405 2965 4889C7   		movq	%rax, %rdi
 6406              	.LEHB198:
 6407 2968 E8000000 		call	_Unwind_Resume
 6407      00
 6408              	.LEHE198:
 6409              	.L357:
 6410              	.L347:
 6411 296d 4883FA01 		cmpq	$1, %rdx
 6412 2971 740F     		je	.L353
 6413 2973 4883FA02 		cmpq	$2, %rdx
 6414 2977 0F84A600 		je	.L354
 6414      0000
 6415 297d E9430100 		jmp	.L362
 6415      00
 6416              	.L353:
 6417              	.LBB170:
  27:../ExecuteTest.h **** 	{
 6418              		.loc 7 27 0
 6419 2982 4889C7   		movq	%rax, %rdi
 6420 2985 E8000000 		call	__cxa_begin_catch
 6420      00
 6421 298a 48898580 		movq	%rax, -1152(%rbp)
 6421      FBFFFF
  30:../ExecuteTest.h **** 	}
 6422              		.loc 7 30 0
 6423 2991 488B8580 		movq	-1152(%rbp), %rax
 6423      FBFFFF
 6424 2998 488B00   		movq	(%rax), %rax
 6425 299b 4883C010 		addq	$16, %rax
 6426 299f 488B00   		movq	(%rax), %rax
 6427 29a2 488B9580 		movq	-1152(%rbp), %rdx
 6427      FBFFFF
 6428 29a9 4889D7   		movq	%rdx, %rdi
 6429 29ac FFD0     		call	*%rax
 6430 29ae 4889C3   		movq	%rax, %rbx
 6431 29b1 488B8580 		movq	-1152(%rbp), %rax
 6431      FBFFFF
 6432 29b8 4889C7   		movq	%rax, %rdi
 6433              	.LEHB199:
 6434 29bb E8000000 		call	_ZNK8UnitTest15AssertException10LineNumberEv
 6434      00
 6435 29c0 4189C4   		movl	%eax, %r12d
 6436 29c3 488B8580 		movq	-1152(%rbp), %rax
 6436      FBFFFF
 6437 29ca 4889C7   		movq	%rax, %rdi
 6438 29cd E8000000 		call	_ZNK8UnitTest15AssertException8FilenameEv
 6438      00
  30:../ExecuteTest.h **** 	}
 6439              		.loc 7 30 0 is_stmt 0 discriminator 1
 6440 29d2 4889C1   		movq	%rax, %rcx
 6441 29d5 488B8570 		movq	-1168(%rbp), %rax
 6441      FBFFFF
 6442 29dc 488B10   		movq	(%rax), %rdx
 6443 29df 488B8570 		movq	-1168(%rbp), %rax
 6443      FBFFFF
 6444 29e6 488B7008 		movq	8(%rax), %rsi
 6445 29ea 488D8590 		leaq	-1136(%rbp), %rax
 6445      FBFFFF
 6446 29f1 4589E0   		movl	%r12d, %r8d
 6447 29f4 4889C7   		movq	%rax, %rdi
 6448 29f7 E8000000 		call	_ZN8UnitTest11TestDetailsC1EPKcS2_S2_i
 6448      00
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 6449              		.loc 7 29 0 is_stmt 1
 6450 29fc E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 6450      00
  30:../ExecuteTest.h **** 	}
 6451              		.loc 7 30 0
 6452 2a01 488B00   		movq	(%rax), %rax
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 6453              		.loc 7 29 0
 6454 2a04 488D8D90 		leaq	-1136(%rbp), %rcx
 6454      FBFFFF
 6455 2a0b 4889DA   		movq	%rbx, %rdx
 6456 2a0e 4889CE   		movq	%rcx, %rsi
 6457 2a11 4889C7   		movq	%rax, %rdi
 6458 2a14 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 6458      00
 6459              	.LEHE199:
  27:../ExecuteTest.h **** 	{
 6460              		.loc 7 27 0
 6461 2a19 E8000000 		call	__cxa_end_catch
 6461      00
 6462              	.LBE170:
 6463              	.LBE172:
 6464              		.loc 7 42 0
 6465 2a1e E9CE0000 		jmp	.L363
 6465      00
 6466              	.L354:
 6467              	.LBB173:
 6468              	.LBB171:
  32:../ExecuteTest.h **** 	{
 6469              		.loc 7 32 0
 6470 2a23 4889C7   		movq	%rax, %rdi
 6471 2a26 E8000000 		call	__cxa_begin_catch
 6471      00
 6472 2a2b 48898588 		movq	%rax, -1144(%rbp)
 6472      FBFFFF
 6473              	.LBB169:
  34:../ExecuteTest.h **** 		stream << "Unhandled exception: " << e.what();
 6474              		.loc 7 34 0
 6475 2a32 488D8590 		leaq	-1136(%rbp), %rax
 6475      FBFFFF
 6476 2a39 4889C7   		movq	%rax, %rdi
 6477              	.LEHB200:
 6478 2a3c E8000000 		call	_ZN8UnitTest15MemoryOutStreamC1Ev
 6478      00
 6479              	.LEHE200:
  35:../ExecuteTest.h **** 		CurrentTest::Results()->OnTestFailure(details, stream.GetText());
 6480              		.loc 7 35 0
 6481 2a41 488B8588 		movq	-1144(%rbp), %rax
 6481      FBFFFF
 6482 2a48 488B00   		movq	(%rax), %rax
 6483 2a4b 4883C010 		addq	$16, %rax
 6484 2a4f 488B00   		movq	(%rax), %rax
 6485 2a52 488B9588 		movq	-1144(%rbp), %rdx
 6485      FBFFFF
 6486 2a59 4889D7   		movq	%rdx, %rdi
 6487 2a5c FFD0     		call	*%rax
 6488 2a5e 4889C3   		movq	%rax, %rbx
 6489 2a61 488D8590 		leaq	-1136(%rbp), %rax
 6489      FBFFFF
 6490 2a68 BE000000 		movl	$.LC6, %esi
 6490      00
 6491 2a6d 4889C7   		movq	%rax, %rdi
 6492              	.LEHB201:
 6493 2a70 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
 6493      00
 6494 2a75 4889DE   		movq	%rbx, %rsi
 6495 2a78 4889C7   		movq	%rax, %rdi
 6496 2a7b E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
 6496      00
  36:../ExecuteTest.h **** 	}
 6497              		.loc 7 36 0
 6498 2a80 488D8590 		leaq	-1136(%rbp), %rax
 6498      FBFFFF
 6499 2a87 4889C7   		movq	%rax, %rdi
 6500 2a8a E8000000 		call	_ZNK8UnitTest15MemoryOutStream7GetTextEv
 6500      00
 6501 2a8f 4889C3   		movq	%rax, %rbx
 6502 2a92 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 6502      00
  36:../ExecuteTest.h **** 	}
 6503              		.loc 7 36 0 is_stmt 0 discriminator 1
 6504 2a97 488B00   		movq	(%rax), %rax
 6505 2a9a 488B8D70 		movq	-1168(%rbp), %rcx
 6505      FBFFFF
 6506 2aa1 4889DA   		movq	%rbx, %rdx
 6507 2aa4 4889CE   		movq	%rcx, %rsi
 6508 2aa7 4889C7   		movq	%rax, %rdi
 6509 2aaa E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 6509      00
 6510              	.LEHE201:
 6511 2aaf 488D8590 		leaq	-1136(%rbp), %rax
 6511      FBFFFF
 6512 2ab6 4889C7   		movq	%rax, %rdi
 6513              	.LEHB202:
 6514 2ab9 E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 6514      00
 6515              	.LEHE202:
 6516              	.LBE169:
  32:../ExecuteTest.h **** 	{
 6517              		.loc 7 32 0 is_stmt 1
 6518 2abe E8000000 		call	__cxa_end_catch
 6518      00
 6519              	.LBE171:
 6520              	.LBE173:
 6521              		.loc 7 42 0
 6522 2ac3 EB2C     		jmp	.L363
 6523              	.L362:
 6524              	.LBB174:
  38:../ExecuteTest.h **** 	{
 6525              		.loc 7 38 0
 6526 2ac5 4889C7   		movq	%rax, %rdi
 6527 2ac8 E8000000 		call	__cxa_begin_catch
 6527      00
 6528              	.LEHB203:
  40:../ExecuteTest.h **** 	}
 6529              		.loc 7 40 0
 6530 2acd E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 6530      00
 6531 2ad2 488B00   		movq	(%rax), %rax
 6532 2ad5 488B8D70 		movq	-1168(%rbp), %rcx
 6532      FBFFFF
 6533 2adc BA000000 		movl	$.LC33, %edx
 6533      00
 6534 2ae1 4889CE   		movq	%rcx, %rsi
 6535 2ae4 4889C7   		movq	%rax, %rdi
 6536 2ae7 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 6536      00
 6537              	.LEHE203:
 6538              	.LEHB204:
  38:../ExecuteTest.h **** 	{
 6539              		.loc 7 38 0
 6540 2aec E8000000 		call	__cxa_end_catch
 6540      00
 6541              	.LEHE204:
 6542              	.L363:
 6543              	.LBE174:
 6544              		.loc 7 42 0
 6545 2af1 90       		nop
 6546 2af2 4881C480 		addq	$1152, %rsp
 6546      040000
 6547 2af9 5B       		popq	%rbx
 6548 2afa 415C     		popq	%r12
 6549 2afc 5D       		popq	%rbp
 6550              		.cfi_def_cfa 7, 8
 6551 2afd C3       		ret
 6552              		.cfi_endproc
 6553              	.LFE1416:
 6554              		.section	.gcc_except_table
 6555 0519 000000   		.align 4
 6556              	.LLSDA1416:
 6557 051c FF       		.byte	0xff
 6558 051d 03       		.byte	0x3
 6559 051e 5D       		.uleb128 .LLSDATT1416-.LLSDATTD1416
 6560              	.LLSDATTD1416:
 6561 051f 01       		.byte	0x1
 6562 0520 46       		.uleb128 .LLSDACSE1416-.LLSDACSB1416
 6563              	.LLSDACSB1416:
 6564 0521 1C       		.uleb128 .LEHB192-.LFB1416
 6565 0522 05       		.uleb128 .LEHE192-.LEHB192
 6566 0523 00       		.uleb128 0
 6567 0524 00       		.uleb128 0
 6568 0525 35       		.uleb128 .LEHB193-.LFB1416
 6569 0526 05       		.uleb128 .LEHE193-.LEHB193
 6570 0527 8702     		.uleb128 .L357-.LFB1416
 6571 0529 05       		.uleb128 0x5
 6572 052a 75       		.uleb128 .LEHB194-.LFB1416
 6573 052b 14       		.uleb128 .LEHE194-.LEHB194
 6574 052c 9D01     		.uleb128 .L356-.LFB1416
 6575 052e 07       		.uleb128 0x7
 6576 052f 9301     		.uleb128 .LEHB195-.LFB1416
 6577 0531 05       		.uleb128 .LEHE195-.LEHB195
 6578 0532 8702     		.uleb128 .L357-.LFB1416
 6579 0534 05       		.uleb128 0x5
 6580 0535 C801     		.uleb128 .LEHB196-.LFB1416
 6581 0537 05       		.uleb128 .LEHE196-.LEHB196
 6582 0538 00       		.uleb128 0
 6583 0539 00       		.uleb128 0
 6584 053a EF01     		.uleb128 .LEHB197-.LFB1416
 6585 053c 05       		.uleb128 .LEHE197-.LEHB197
 6586 053d 00       		.uleb128 0
 6587 053e 00       		.uleb128 0
 6588 053f 8202     		.uleb128 .LEHB198-.LFB1416
 6589 0541 05       		.uleb128 .LEHE198-.LEHB198
 6590 0542 00       		.uleb128 0
 6591 0543 00       		.uleb128 0
 6592 0544 D502     		.uleb128 .LEHB199-.LFB1416
 6593 0546 5E       		.uleb128 .LEHE199-.LEHB199
 6594 0547 BA01     		.uleb128 .L358-.LFB1416
 6595 0549 00       		.uleb128 0
 6596 054a D603     		.uleb128 .LEHB200-.LFB1416
 6597 054c 05       		.uleb128 .LEHE200-.LEHB200
 6598 054d E101     		.uleb128 .L360-.LFB1416
 6599 054f 00       		.uleb128 0
 6600 0550 8A04     		.uleb128 .LEHB201-.LFB1416
 6601 0552 3F       		.uleb128 .LEHE201-.LEHB201
 6602 0553 CD01     		.uleb128 .L359-.LFB1416
 6603 0555 00       		.uleb128 0
 6604 0556 D304     		.uleb128 .LEHB202-.LFB1416
 6605 0558 05       		.uleb128 .LEHE202-.LEHB202
 6606 0559 E101     		.uleb128 .L360-.LFB1416
 6607 055b 00       		.uleb128 0
 6608 055c E704     		.uleb128 .LEHB203-.LFB1416
 6609 055e 1F       		.uleb128 .LEHE203-.LEHB203
 6610 055f F401     		.uleb128 .L361-.LFB1416
 6611 0561 00       		.uleb128 0
 6612 0562 8605     		.uleb128 .LEHB204-.LFB1416
 6613 0564 05       		.uleb128 .LEHE204-.LEHB204
 6614 0565 00       		.uleb128 0
 6615 0566 00       		.uleb128 0
 6616              	.LLSDACSE1416:
 6617 0567 03       		.byte	0x3
 6618 0568 00       		.byte	0
 6619 0569 02       		.byte	0x2
 6620 056a 7D       		.byte	0x7d
 6621 056b 01       		.byte	0x1
 6622 056c 7D       		.byte	0x7d
 6623 056d 00       		.byte	0
 6624 056e 7D       		.byte	0x7d
 6625 056f 00       		.align 4
 6626 0570 00000000 		.long	0
 6627              	
 6628 0574 00000000 		.long	_ZTISt9exception
 6629 0578 00000000 		.long	_ZTIN8UnitTest15AssertExceptionE
 6630              	.LLSDATT1416:
 6631              		.text
 6633              		.section	.text._ZN8UnitTest5CheckIbEEbT_,"axG",@progbits,_ZN8UnitTest5CheckIbEEbT_,comdat
 6634              		.weak	_ZN8UnitTest5CheckIbEEbT_
 6636              	_ZN8UnitTest5CheckIbEEbT_:
 6637              	.LFB1417:
  12:../Checks.h   **** {
 6638              		.loc 8 12 0
 6639              		.cfi_startproc
 6640 0000 55       		pushq	%rbp
 6641              		.cfi_def_cfa_offset 16
 6642              		.cfi_offset 6, -16
 6643 0001 4889E5   		movq	%rsp, %rbp
 6644              		.cfi_def_cfa_register 6
 6645 0004 89F8     		movl	%edi, %eax
 6646 0006 8845FC   		movb	%al, -4(%rbp)
  14:../Checks.h   **** }
 6647              		.loc 8 14 0
 6648 0009 0FB645FC 		movzbl	-4(%rbp), %eax
  15:../Checks.h   **** 
 6649              		.loc 8 15 0
 6650 000d 5D       		popq	%rbp
 6651              		.cfi_def_cfa 7, 8
 6652 000e C3       		ret
 6653              		.cfi_endproc
 6654              	.LFE1417:
 6656              		.text
 6658              	_ZN8UnitTest11ExecuteTestINS_12_GLOBAL__N_184DeferredTestReporterFixtureReportFailureSavesFailureDe
 6659              	.LFB1418:
  16:../ExecuteTest.h **** {
 6660              		.loc 7 16 0
 6661              		.cfi_startproc
 6662              		.cfi_personality 0x3,__gxx_personality_v0
 6663              		.cfi_lsda 0x3,.LLSDA1418
 6664 2afe 55       		pushq	%rbp
 6665              		.cfi_def_cfa_offset 16
 6666              		.cfi_offset 6, -16
 6667 2aff 4889E5   		movq	%rsp, %rbp
 6668              		.cfi_def_cfa_register 6
 6669 2b02 4154     		pushq	%r12
 6670 2b04 53       		pushq	%rbx
 6671 2b05 4881EC80 		subq	$1152, %rsp
 6671      040000
 6672              		.cfi_offset 12, -24
 6673              		.cfi_offset 3, -32
 6674 2b0c 4889BD78 		movq	%rdi, -1160(%rbp)
 6674      FBFFFF
 6675 2b13 4889B570 		movq	%rsi, -1168(%rbp)
 6675      FBFFFF
 6676              	.LEHB205:
 6677              	.LBB175:
  18:../ExecuteTest.h **** 
 6678              		.loc 7 18 0
 6679 2b1a E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 6679      00
 6680              	.LEHE205:
 6681 2b1f 488B9570 		movq	-1168(%rbp), %rdx
 6681      FBFFFF
 6682 2b26 488910   		movq	%rdx, (%rax)
 6683              	.LBB176:
  23:../ExecuteTest.h **** #endif
 6684              		.loc 7 23 0
 6685 2b29 488D8590 		leaq	-1136(%rbp), %rax
 6685      FBFFFF
 6686 2b30 4889C7   		movq	%rax, %rdi
 6687              	.LEHB206:
 6688 2b33 E8000000 		call	_ZN8UnitTest16SignalTranslatorC1Ev
 6688      00
 6689              	.LEHE206:
  23:../ExecuteTest.h **** #endif
 6690              		.loc 7 23 0 is_stmt 0 discriminator 1
 6691 2b38 488B0500 		movq	_ZN8UnitTest16SignalTranslator12s_jumpTargetE(%rip), %rax
 6691      000000
 6692 2b3f BE010000 		movl	$1, %esi
 6692      00
 6693 2b44 4889C7   		movq	%rax, %rdi
 6694 2b47 E8000000 		call	__sigsetjmp
 6694      00
 6695 2b4c 85C0     		testl	%eax, %eax
 6696 2b4e 0F95C0   		setne	%al
 6697 2b51 84C0     		testb	%al, %al
 6698 2b53 7423     		je	.L367
 6699 2b55 BF080000 		movl	$8, %edi
 6699      00
 6700 2b5a E8000000 		call	__cxa_allocate_exception
 6700      00
 6701 2b5f 48C70000 		movq	$.LC32, (%rax)
 6701      000000
 6702 2b66 BA000000 		movl	$0, %edx
 6702      00
 6703 2b6b BE000000 		movl	$_ZTIPKc, %esi
 6703      00
 6704 2b70 4889C7   		movq	%rax, %rdi
 6705              	.LEHB207:
 6706 2b73 E8000000 		call	__cxa_throw
 6706      00
 6707              	.L367:
  25:../ExecuteTest.h **** 	}
 6708              		.loc 7 25 0 is_stmt 1
 6709 2b78 488B8578 		movq	-1160(%rbp), %rax
 6709      FBFFFF
 6710 2b7f 4889C7   		movq	%rax, %rdi
 6711 2b82 E85BEDFF 		call	_ZN8UnitTest12_GLOBAL__N_184DeferredTestReporterFixtureReportFailureSavesFailureDetailsForMul
 6711      FF
 6712              	.LEHE207:
  25:../ExecuteTest.h **** 	}
 6713              		.loc 7 25 0 is_stmt 0 discriminator 1
 6714 2b87 488D8590 		leaq	-1136(%rbp), %rax
 6714      FBFFFF
 6715 2b8e 4889C7   		movq	%rax, %rdi
 6716              	.LEHB208:
 6717 2b91 E8000000 		call	_ZN8UnitTest16SignalTranslatorD1Ev
 6717      00
 6718              	.LEHE208:
 6719              	.LBE176:
 6720              	.LBE175:
 6721              		.loc 7 42 0 is_stmt 1
 6722 2b96 E9EE0100 		jmp	.L385
 6722      00
 6723              	.L378:
 6724 2b9b 4989C4   		movq	%rax, %r12
 6725 2b9e 4889D3   		movq	%rdx, %rbx
 6726              	.LBB184:
 6727              	.LBB177:
  25:../ExecuteTest.h **** 	}
 6728              		.loc 7 25 0
 6729 2ba1 488D8590 		leaq	-1136(%rbp), %rax
 6729      FBFFFF
 6730 2ba8 4889C7   		movq	%rax, %rdi
 6731 2bab E8000000 		call	_ZN8UnitTest16SignalTranslatorD1Ev
 6731      00
 6732 2bb0 4C89E0   		movq	%r12, %rax
 6733 2bb3 4889DA   		movq	%rbx, %rdx
 6734 2bb6 EB4D     		jmp	.L369
 6735              	.L380:
 6736 2bb8 4889C3   		movq	%rax, %rbx
 6737              	.LBE177:
 6738              	.LBB178:
  27:../ExecuteTest.h **** 	{
 6739              		.loc 7 27 0
 6740 2bbb E8000000 		call	__cxa_end_catch
 6740      00
 6741 2bc0 4889D8   		movq	%rbx, %rax
 6742 2bc3 4889C7   		movq	%rax, %rdi
 6743              	.LEHB209:
 6744 2bc6 E8000000 		call	_Unwind_Resume
 6744      00
 6745              	.LEHE209:
 6746              	.L381:
 6747 2bcb 4889C3   		movq	%rax, %rbx
 6748              	.LBE178:
 6749              	.LBB179:
 6750              	.LBB180:
  36:../ExecuteTest.h **** 	}
 6751              		.loc 7 36 0
 6752 2bce 488D8590 		leaq	-1136(%rbp), %rax
 6752      FBFFFF
 6753 2bd5 4889C7   		movq	%rax, %rdi
 6754 2bd8 E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 6754      00
 6755 2bdd EB03     		jmp	.L372
 6756              	.L382:
 6757 2bdf 4889C3   		movq	%rax, %rbx
 6758              	.L372:
 6759              	.LBE180:
  32:../ExecuteTest.h **** 	{
 6760              		.loc 7 32 0
 6761 2be2 E8000000 		call	__cxa_end_catch
 6761      00
 6762 2be7 4889D8   		movq	%rbx, %rax
 6763 2bea 4889C7   		movq	%rax, %rdi
 6764              	.LEHB210:
 6765 2bed E8000000 		call	_Unwind_Resume
 6765      00
 6766              	.LEHE210:
 6767              	.L383:
 6768 2bf2 4889C3   		movq	%rax, %rbx
 6769              	.LBE179:
  38:../ExecuteTest.h **** 	{
 6770              		.loc 7 38 0
 6771 2bf5 E8000000 		call	__cxa_end_catch
 6771      00
 6772 2bfa 4889D8   		movq	%rbx, %rax
 6773 2bfd 4889C7   		movq	%rax, %rdi
 6774              	.LEHB211:
 6775 2c00 E8000000 		call	_Unwind_Resume
 6775      00
 6776              	.LEHE211:
 6777              	.L379:
 6778              	.L369:
 6779 2c05 4883FA01 		cmpq	$1, %rdx
 6780 2c09 740F     		je	.L375
 6781 2c0b 4883FA02 		cmpq	$2, %rdx
 6782 2c0f 0F84A600 		je	.L376
 6782      0000
 6783 2c15 E9430100 		jmp	.L384
 6783      00
 6784              	.L375:
 6785              	.LBB182:
  27:../ExecuteTest.h **** 	{
 6786              		.loc 7 27 0
 6787 2c1a 4889C7   		movq	%rax, %rdi
 6788 2c1d E8000000 		call	__cxa_begin_catch
 6788      00
 6789 2c22 48898580 		movq	%rax, -1152(%rbp)
 6789      FBFFFF
  30:../ExecuteTest.h **** 	}
 6790              		.loc 7 30 0
 6791 2c29 488B8580 		movq	-1152(%rbp), %rax
 6791      FBFFFF
 6792 2c30 488B00   		movq	(%rax), %rax
 6793 2c33 4883C010 		addq	$16, %rax
 6794 2c37 488B00   		movq	(%rax), %rax
 6795 2c3a 488B9580 		movq	-1152(%rbp), %rdx
 6795      FBFFFF
 6796 2c41 4889D7   		movq	%rdx, %rdi
 6797 2c44 FFD0     		call	*%rax
 6798 2c46 4889C3   		movq	%rax, %rbx
 6799 2c49 488B8580 		movq	-1152(%rbp), %rax
 6799      FBFFFF
 6800 2c50 4889C7   		movq	%rax, %rdi
 6801              	.LEHB212:
 6802 2c53 E8000000 		call	_ZNK8UnitTest15AssertException10LineNumberEv
 6802      00
 6803 2c58 4189C4   		movl	%eax, %r12d
 6804 2c5b 488B8580 		movq	-1152(%rbp), %rax
 6804      FBFFFF
 6805 2c62 4889C7   		movq	%rax, %rdi
 6806 2c65 E8000000 		call	_ZNK8UnitTest15AssertException8FilenameEv
 6806      00
  30:../ExecuteTest.h **** 	}
 6807              		.loc 7 30 0 is_stmt 0 discriminator 1
 6808 2c6a 4889C1   		movq	%rax, %rcx
 6809 2c6d 488B8570 		movq	-1168(%rbp), %rax
 6809      FBFFFF
 6810 2c74 488B10   		movq	(%rax), %rdx
 6811 2c77 488B8570 		movq	-1168(%rbp), %rax
 6811      FBFFFF
 6812 2c7e 488B7008 		movq	8(%rax), %rsi
 6813 2c82 488D8590 		leaq	-1136(%rbp), %rax
 6813      FBFFFF
 6814 2c89 4589E0   		movl	%r12d, %r8d
 6815 2c8c 4889C7   		movq	%rax, %rdi
 6816 2c8f E8000000 		call	_ZN8UnitTest11TestDetailsC1EPKcS2_S2_i
 6816      00
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 6817              		.loc 7 29 0 is_stmt 1
 6818 2c94 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 6818      00
  30:../ExecuteTest.h **** 	}
 6819              		.loc 7 30 0
 6820 2c99 488B00   		movq	(%rax), %rax
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 6821              		.loc 7 29 0
 6822 2c9c 488D8D90 		leaq	-1136(%rbp), %rcx
 6822      FBFFFF
 6823 2ca3 4889DA   		movq	%rbx, %rdx
 6824 2ca6 4889CE   		movq	%rcx, %rsi
 6825 2ca9 4889C7   		movq	%rax, %rdi
 6826 2cac E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 6826      00
 6827              	.LEHE212:
  27:../ExecuteTest.h **** 	{
 6828              		.loc 7 27 0
 6829 2cb1 E8000000 		call	__cxa_end_catch
 6829      00
 6830              	.LBE182:
 6831              	.LBE184:
 6832              		.loc 7 42 0
 6833 2cb6 E9CE0000 		jmp	.L385
 6833      00
 6834              	.L376:
 6835              	.LBB185:
 6836              	.LBB183:
  32:../ExecuteTest.h **** 	{
 6837              		.loc 7 32 0
 6838 2cbb 4889C7   		movq	%rax, %rdi
 6839 2cbe E8000000 		call	__cxa_begin_catch
 6839      00
 6840 2cc3 48898588 		movq	%rax, -1144(%rbp)
 6840      FBFFFF
 6841              	.LBB181:
  34:../ExecuteTest.h **** 		stream << "Unhandled exception: " << e.what();
 6842              		.loc 7 34 0
 6843 2cca 488D8590 		leaq	-1136(%rbp), %rax
 6843      FBFFFF
 6844 2cd1 4889C7   		movq	%rax, %rdi
 6845              	.LEHB213:
 6846 2cd4 E8000000 		call	_ZN8UnitTest15MemoryOutStreamC1Ev
 6846      00
 6847              	.LEHE213:
  35:../ExecuteTest.h **** 		CurrentTest::Results()->OnTestFailure(details, stream.GetText());
 6848              		.loc 7 35 0
 6849 2cd9 488B8588 		movq	-1144(%rbp), %rax
 6849      FBFFFF
 6850 2ce0 488B00   		movq	(%rax), %rax
 6851 2ce3 4883C010 		addq	$16, %rax
 6852 2ce7 488B00   		movq	(%rax), %rax
 6853 2cea 488B9588 		movq	-1144(%rbp), %rdx
 6853      FBFFFF
 6854 2cf1 4889D7   		movq	%rdx, %rdi
 6855 2cf4 FFD0     		call	*%rax
 6856 2cf6 4889C3   		movq	%rax, %rbx
 6857 2cf9 488D8590 		leaq	-1136(%rbp), %rax
 6857      FBFFFF
 6858 2d00 BE000000 		movl	$.LC6, %esi
 6858      00
 6859 2d05 4889C7   		movq	%rax, %rdi
 6860              	.LEHB214:
 6861 2d08 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
 6861      00
 6862 2d0d 4889DE   		movq	%rbx, %rsi
 6863 2d10 4889C7   		movq	%rax, %rdi
 6864 2d13 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
 6864      00
  36:../ExecuteTest.h **** 	}
 6865              		.loc 7 36 0
 6866 2d18 488D8590 		leaq	-1136(%rbp), %rax
 6866      FBFFFF
 6867 2d1f 4889C7   		movq	%rax, %rdi
 6868 2d22 E8000000 		call	_ZNK8UnitTest15MemoryOutStream7GetTextEv
 6868      00
 6869 2d27 4889C3   		movq	%rax, %rbx
 6870 2d2a E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 6870      00
  36:../ExecuteTest.h **** 	}
 6871              		.loc 7 36 0 is_stmt 0 discriminator 1
 6872 2d2f 488B00   		movq	(%rax), %rax
 6873 2d32 488B8D70 		movq	-1168(%rbp), %rcx
 6873      FBFFFF
 6874 2d39 4889DA   		movq	%rbx, %rdx
 6875 2d3c 4889CE   		movq	%rcx, %rsi
 6876 2d3f 4889C7   		movq	%rax, %rdi
 6877 2d42 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 6877      00
 6878              	.LEHE214:
 6879 2d47 488D8590 		leaq	-1136(%rbp), %rax
 6879      FBFFFF
 6880 2d4e 4889C7   		movq	%rax, %rdi
 6881              	.LEHB215:
 6882 2d51 E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 6882      00
 6883              	.LEHE215:
 6884              	.LBE181:
  32:../ExecuteTest.h **** 	{
 6885              		.loc 7 32 0 is_stmt 1
 6886 2d56 E8000000 		call	__cxa_end_catch
 6886      00
 6887              	.LBE183:
 6888              	.LBE185:
 6889              		.loc 7 42 0
 6890 2d5b EB2C     		jmp	.L385
 6891              	.L384:
 6892              	.LBB186:
  38:../ExecuteTest.h **** 	{
 6893              		.loc 7 38 0
 6894 2d5d 4889C7   		movq	%rax, %rdi
 6895 2d60 E8000000 		call	__cxa_begin_catch
 6895      00
 6896              	.LEHB216:
  40:../ExecuteTest.h **** 	}
 6897              		.loc 7 40 0
 6898 2d65 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 6898      00
 6899 2d6a 488B00   		movq	(%rax), %rax
 6900 2d6d 488B8D70 		movq	-1168(%rbp), %rcx
 6900      FBFFFF
 6901 2d74 BA000000 		movl	$.LC33, %edx
 6901      00
 6902 2d79 4889CE   		movq	%rcx, %rsi
 6903 2d7c 4889C7   		movq	%rax, %rdi
 6904 2d7f E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 6904      00
 6905              	.LEHE216:
 6906              	.LEHB217:
  38:../ExecuteTest.h **** 	{
 6907              		.loc 7 38 0
 6908 2d84 E8000000 		call	__cxa_end_catch
 6908      00
 6909              	.LEHE217:
 6910              	.L385:
 6911              	.LBE186:
 6912              		.loc 7 42 0
 6913 2d89 90       		nop
 6914 2d8a 4881C480 		addq	$1152, %rsp
 6914      040000
 6915 2d91 5B       		popq	%rbx
 6916 2d92 415C     		popq	%r12
 6917 2d94 5D       		popq	%rbp
 6918              		.cfi_def_cfa 7, 8
 6919 2d95 C3       		ret
 6920              		.cfi_endproc
 6921              	.LFE1418:
 6922              		.section	.gcc_except_table
 6923              		.align 4
 6924              	.LLSDA1418:
 6925 057c FF       		.byte	0xff
 6926 057d 03       		.byte	0x3
 6927 057e 5D       		.uleb128 .LLSDATT1418-.LLSDATTD1418
 6928              	.LLSDATTD1418:
 6929 057f 01       		.byte	0x1
 6930 0580 46       		.uleb128 .LLSDACSE1418-.LLSDACSB1418
 6931              	.LLSDACSB1418:
 6932 0581 1C       		.uleb128 .LEHB205-.LFB1418
 6933 0582 05       		.uleb128 .LEHE205-.LEHB205
 6934 0583 00       		.uleb128 0
 6935 0584 00       		.uleb128 0
 6936 0585 35       		.uleb128 .LEHB206-.LFB1418
 6937 0586 05       		.uleb128 .LEHE206-.LEHB206
 6938 0587 8702     		.uleb128 .L379-.LFB1418
 6939 0589 05       		.uleb128 0x5
 6940 058a 75       		.uleb128 .LEHB207-.LFB1418
 6941 058b 14       		.uleb128 .LEHE207-.LEHB207
 6942 058c 9D01     		.uleb128 .L378-.LFB1418
 6943 058e 07       		.uleb128 0x7
 6944 058f 9301     		.uleb128 .LEHB208-.LFB1418
 6945 0591 05       		.uleb128 .LEHE208-.LEHB208
 6946 0592 8702     		.uleb128 .L379-.LFB1418
 6947 0594 05       		.uleb128 0x5
 6948 0595 C801     		.uleb128 .LEHB209-.LFB1418
 6949 0597 05       		.uleb128 .LEHE209-.LEHB209
 6950 0598 00       		.uleb128 0
 6951 0599 00       		.uleb128 0
 6952 059a EF01     		.uleb128 .LEHB210-.LFB1418
 6953 059c 05       		.uleb128 .LEHE210-.LEHB210
 6954 059d 00       		.uleb128 0
 6955 059e 00       		.uleb128 0
 6956 059f 8202     		.uleb128 .LEHB211-.LFB1418
 6957 05a1 05       		.uleb128 .LEHE211-.LEHB211
 6958 05a2 00       		.uleb128 0
 6959 05a3 00       		.uleb128 0
 6960 05a4 D502     		.uleb128 .LEHB212-.LFB1418
 6961 05a6 5E       		.uleb128 .LEHE212-.LEHB212
 6962 05a7 BA01     		.uleb128 .L380-.LFB1418
 6963 05a9 00       		.uleb128 0
 6964 05aa D603     		.uleb128 .LEHB213-.LFB1418
 6965 05ac 05       		.uleb128 .LEHE213-.LEHB213
 6966 05ad E101     		.uleb128 .L382-.LFB1418
 6967 05af 00       		.uleb128 0
 6968 05b0 8A04     		.uleb128 .LEHB214-.LFB1418
 6969 05b2 3F       		.uleb128 .LEHE214-.LEHB214
 6970 05b3 CD01     		.uleb128 .L381-.LFB1418
 6971 05b5 00       		.uleb128 0
 6972 05b6 D304     		.uleb128 .LEHB215-.LFB1418
 6973 05b8 05       		.uleb128 .LEHE215-.LEHB215
 6974 05b9 E101     		.uleb128 .L382-.LFB1418
 6975 05bb 00       		.uleb128 0
 6976 05bc E704     		.uleb128 .LEHB216-.LFB1418
 6977 05be 1F       		.uleb128 .LEHE216-.LEHB216
 6978 05bf F401     		.uleb128 .L383-.LFB1418
 6979 05c1 00       		.uleb128 0
 6980 05c2 8605     		.uleb128 .LEHB217-.LFB1418
 6981 05c4 05       		.uleb128 .LEHE217-.LEHB217
 6982 05c5 00       		.uleb128 0
 6983 05c6 00       		.uleb128 0
 6984              	.LLSDACSE1418:
 6985 05c7 03       		.byte	0x3
 6986 05c8 00       		.byte	0
 6987 05c9 02       		.byte	0x2
 6988 05ca 7D       		.byte	0x7d
 6989 05cb 01       		.byte	0x1
 6990 05cc 7D       		.byte	0x7d
 6991 05cd 00       		.byte	0
 6992 05ce 7D       		.byte	0x7d
 6993 05cf 00       		.align 4
 6994 05d0 00000000 		.long	0
 6995              	
 6996 05d4 00000000 		.long	_ZTISt9exception
 6997 05d8 00000000 		.long	_ZTIN8UnitTest15AssertExceptionE
 6998              	.LLSDATT1418:
 6999              		.text
 7001              		.section	.text._ZNKSt6vectorISt4pairIiSsESaIS1_EE4sizeEv,"axG",@progbits,_ZNKSt6vectorISt4pairIiSs
 7002              		.align 2
 7003              		.weak	_ZNKSt6vectorISt4pairIiSsESaIS1_EE4sizeEv
 7005              	_ZNKSt6vectorISt4pairIiSsESaIS1_EE4sizeEv:
 7006              	.LFB1419:
 645:/usr/include/c++/4.8/bits/stl_vector.h ****       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
 7007              		.loc 6 645 0
 7008              		.cfi_startproc
 7009 0000 55       		pushq	%rbp
 7010              		.cfi_def_cfa_offset 16
 7011              		.cfi_offset 6, -16
 7012 0001 4889E5   		movq	%rsp, %rbp
 7013              		.cfi_def_cfa_register 6
 7014 0004 48897DF8 		movq	%rdi, -8(%rbp)
 646:/usr/include/c++/4.8/bits/stl_vector.h **** 
 7015              		.loc 6 646 0
 7016 0008 488B45F8 		movq	-8(%rbp), %rax
 7017 000c 488B4008 		movq	8(%rax), %rax
 7018 0010 4889C2   		movq	%rax, %rdx
 7019 0013 488B45F8 		movq	-8(%rbp), %rax
 7020 0017 488B00   		movq	(%rax), %rax
 7021 001a 4829C2   		subq	%rax, %rdx
 7022 001d 4889D0   		movq	%rdx, %rax
 7023 0020 48C1F804 		sarq	$4, %rax
 7024 0024 5D       		popq	%rbp
 7025              		.cfi_def_cfa 7, 8
 7026 0025 C3       		ret
 7027              		.cfi_endproc
 7028              	.LFE1419:
 7030              		.section	.text._ZNKSt6vectorISt4pairIiSsESaIS1_EEixEm,"axG",@progbits,_ZNKSt6vectorISt4pairIiSsESa
 7031              		.align 2
 7032              		.weak	_ZNKSt6vectorISt4pairIiSsESaIS1_EEixEm
 7034              	_ZNKSt6vectorISt4pairIiSsESaIS1_EEixEm:
 7035              	.LFB1420:
 785:/usr/include/c++/4.8/bits/stl_vector.h ****       { return *(this->_M_impl._M_start + __n); }
 7036              		.loc 6 785 0
 7037              		.cfi_startproc
 7038 0000 55       		pushq	%rbp
 7039              		.cfi_def_cfa_offset 16
 7040              		.cfi_offset 6, -16
 7041 0001 4889E5   		movq	%rsp, %rbp
 7042              		.cfi_def_cfa_register 6
 7043 0004 48897DF8 		movq	%rdi, -8(%rbp)
 7044 0008 488975F0 		movq	%rsi, -16(%rbp)
 786:/usr/include/c++/4.8/bits/stl_vector.h **** 
 7045              		.loc 6 786 0
 7046 000c 488B45F8 		movq	-8(%rbp), %rax
 7047 0010 488B00   		movq	(%rax), %rax
 7048 0013 488B55F0 		movq	-16(%rbp), %rdx
 7049 0017 48C1E204 		salq	$4, %rdx
 7050 001b 4801D0   		addq	%rdx, %rax
 7051 001e 5D       		popq	%rbp
 7052              		.cfi_def_cfa 7, 8
 7053 001f C3       		ret
 7054              		.cfi_endproc
 7055              	.LFE1420:
 7057              		.text
 7059              	_ZN8UnitTest11ExecuteTestINS_12_GLOBAL__N_178DeferredTestReporterFixtureDeferredTestReporterTakesCo
 7060              	.LFB1421:
  16:../ExecuteTest.h **** {
 7061              		.loc 7 16 0
 7062              		.cfi_startproc
 7063              		.cfi_personality 0x3,__gxx_personality_v0
 7064              		.cfi_lsda 0x3,.LLSDA1421
 7065 2d96 55       		pushq	%rbp
 7066              		.cfi_def_cfa_offset 16
 7067              		.cfi_offset 6, -16
 7068 2d97 4889E5   		movq	%rsp, %rbp
 7069              		.cfi_def_cfa_register 6
 7070 2d9a 4154     		pushq	%r12
 7071 2d9c 53       		pushq	%rbx
 7072 2d9d 4881EC80 		subq	$1152, %rsp
 7072      040000
 7073              		.cfi_offset 12, -24
 7074              		.cfi_offset 3, -32
 7075 2da4 4889BD78 		movq	%rdi, -1160(%rbp)
 7075      FBFFFF
 7076 2dab 4889B570 		movq	%rsi, -1168(%rbp)
 7076      FBFFFF
 7077              	.LEHB218:
 7078              	.LBB187:
  18:../ExecuteTest.h **** 
 7079              		.loc 7 18 0
 7080 2db2 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 7080      00
 7081              	.LEHE218:
 7082 2db7 488B9570 		movq	-1168(%rbp), %rdx
 7082      FBFFFF
 7083 2dbe 488910   		movq	%rdx, (%rax)
 7084              	.LBB188:
  23:../ExecuteTest.h **** #endif
 7085              		.loc 7 23 0
 7086 2dc1 488D8590 		leaq	-1136(%rbp), %rax
 7086      FBFFFF
 7087 2dc8 4889C7   		movq	%rax, %rdi
 7088              	.LEHB219:
 7089 2dcb E8000000 		call	_ZN8UnitTest16SignalTranslatorC1Ev
 7089      00
 7090              	.LEHE219:
  23:../ExecuteTest.h **** #endif
 7091              		.loc 7 23 0 is_stmt 0 discriminator 1
 7092 2dd0 488B0500 		movq	_ZN8UnitTest16SignalTranslator12s_jumpTargetE(%rip), %rax
 7092      000000
 7093 2dd7 BE010000 		movl	$1, %esi
 7093      00
 7094 2ddc 4889C7   		movq	%rax, %rdi
 7095 2ddf E8000000 		call	__sigsetjmp
 7095      00
 7096 2de4 85C0     		testl	%eax, %eax
 7097 2de6 0F95C0   		setne	%al
 7098 2de9 84C0     		testb	%al, %al
 7099 2deb 7423     		je	.L391
 7100 2ded BF080000 		movl	$8, %edi
 7100      00
 7101 2df2 E8000000 		call	__cxa_allocate_exception
 7101      00
 7102 2df7 48C70000 		movq	$.LC32, (%rax)
 7102      000000
 7103 2dfe BA000000 		movl	$0, %edx
 7103      00
 7104 2e03 BE000000 		movl	$_ZTIPKc, %esi
 7104      00
 7105 2e08 4889C7   		movq	%rax, %rdi
 7106              	.LEHB220:
 7107 2e0b E8000000 		call	__cxa_throw
 7107      00
 7108              	.L391:
  25:../ExecuteTest.h **** 	}
 7109              		.loc 7 25 0 is_stmt 1
 7110 2e10 488B8578 		movq	-1160(%rbp), %rax
 7110      FBFFFF
 7111 2e17 4889C7   		movq	%rax, %rdi
 7112 2e1a E8C5F0FF 		call	_ZN8UnitTest12_GLOBAL__N_178DeferredTestReporterFixtureDeferredTestReporterTakesCopyOfFailure
 7112      FF
 7113              	.LEHE220:
  25:../ExecuteTest.h **** 	}
 7114              		.loc 7 25 0 is_stmt 0 discriminator 1
 7115 2e1f 488D8590 		leaq	-1136(%rbp), %rax
 7115      FBFFFF
 7116 2e26 4889C7   		movq	%rax, %rdi
 7117              	.LEHB221:
 7118 2e29 E8000000 		call	_ZN8UnitTest16SignalTranslatorD1Ev
 7118      00
 7119              	.LEHE221:
 7120              	.LBE188:
 7121              	.LBE187:
 7122              		.loc 7 42 0 is_stmt 1
 7123 2e2e E9EE0100 		jmp	.L409
 7123      00
 7124              	.L402:
 7125 2e33 4989C4   		movq	%rax, %r12
 7126 2e36 4889D3   		movq	%rdx, %rbx
 7127              	.LBB196:
 7128              	.LBB189:
  25:../ExecuteTest.h **** 	}
 7129              		.loc 7 25 0
 7130 2e39 488D8590 		leaq	-1136(%rbp), %rax
 7130      FBFFFF
 7131 2e40 4889C7   		movq	%rax, %rdi
 7132 2e43 E8000000 		call	_ZN8UnitTest16SignalTranslatorD1Ev
 7132      00
 7133 2e48 4C89E0   		movq	%r12, %rax
 7134 2e4b 4889DA   		movq	%rbx, %rdx
 7135 2e4e EB4D     		jmp	.L393
 7136              	.L404:
 7137 2e50 4889C3   		movq	%rax, %rbx
 7138              	.LBE189:
 7139              	.LBB190:
  27:../ExecuteTest.h **** 	{
 7140              		.loc 7 27 0
 7141 2e53 E8000000 		call	__cxa_end_catch
 7141      00
 7142 2e58 4889D8   		movq	%rbx, %rax
 7143 2e5b 4889C7   		movq	%rax, %rdi
 7144              	.LEHB222:
 7145 2e5e E8000000 		call	_Unwind_Resume
 7145      00
 7146              	.LEHE222:
 7147              	.L405:
 7148 2e63 4889C3   		movq	%rax, %rbx
 7149              	.LBE190:
 7150              	.LBB191:
 7151              	.LBB192:
  36:../ExecuteTest.h **** 	}
 7152              		.loc 7 36 0
 7153 2e66 488D8590 		leaq	-1136(%rbp), %rax
 7153      FBFFFF
 7154 2e6d 4889C7   		movq	%rax, %rdi
 7155 2e70 E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 7155      00
 7156 2e75 EB03     		jmp	.L396
 7157              	.L406:
 7158 2e77 4889C3   		movq	%rax, %rbx
 7159              	.L396:
 7160              	.LBE192:
  32:../ExecuteTest.h **** 	{
 7161              		.loc 7 32 0
 7162 2e7a E8000000 		call	__cxa_end_catch
 7162      00
 7163 2e7f 4889D8   		movq	%rbx, %rax
 7164 2e82 4889C7   		movq	%rax, %rdi
 7165              	.LEHB223:
 7166 2e85 E8000000 		call	_Unwind_Resume
 7166      00
 7167              	.LEHE223:
 7168              	.L407:
 7169 2e8a 4889C3   		movq	%rax, %rbx
 7170              	.LBE191:
  38:../ExecuteTest.h **** 	{
 7171              		.loc 7 38 0
 7172 2e8d E8000000 		call	__cxa_end_catch
 7172      00
 7173 2e92 4889D8   		movq	%rbx, %rax
 7174 2e95 4889C7   		movq	%rax, %rdi
 7175              	.LEHB224:
 7176 2e98 E8000000 		call	_Unwind_Resume
 7176      00
 7177              	.LEHE224:
 7178              	.L403:
 7179              	.L393:
 7180 2e9d 4883FA01 		cmpq	$1, %rdx
 7181 2ea1 740F     		je	.L399
 7182 2ea3 4883FA02 		cmpq	$2, %rdx
 7183 2ea7 0F84A600 		je	.L400
 7183      0000
 7184 2ead E9430100 		jmp	.L408
 7184      00
 7185              	.L399:
 7186              	.LBB194:
  27:../ExecuteTest.h **** 	{
 7187              		.loc 7 27 0
 7188 2eb2 4889C7   		movq	%rax, %rdi
 7189 2eb5 E8000000 		call	__cxa_begin_catch
 7189      00
 7190 2eba 48898580 		movq	%rax, -1152(%rbp)
 7190      FBFFFF
  30:../ExecuteTest.h **** 	}
 7191              		.loc 7 30 0
 7192 2ec1 488B8580 		movq	-1152(%rbp), %rax
 7192      FBFFFF
 7193 2ec8 488B00   		movq	(%rax), %rax
 7194 2ecb 4883C010 		addq	$16, %rax
 7195 2ecf 488B00   		movq	(%rax), %rax
 7196 2ed2 488B9580 		movq	-1152(%rbp), %rdx
 7196      FBFFFF
 7197 2ed9 4889D7   		movq	%rdx, %rdi
 7198 2edc FFD0     		call	*%rax
 7199 2ede 4889C3   		movq	%rax, %rbx
 7200 2ee1 488B8580 		movq	-1152(%rbp), %rax
 7200      FBFFFF
 7201 2ee8 4889C7   		movq	%rax, %rdi
 7202              	.LEHB225:
 7203 2eeb E8000000 		call	_ZNK8UnitTest15AssertException10LineNumberEv
 7203      00
 7204 2ef0 4189C4   		movl	%eax, %r12d
 7205 2ef3 488B8580 		movq	-1152(%rbp), %rax
 7205      FBFFFF
 7206 2efa 4889C7   		movq	%rax, %rdi
 7207 2efd E8000000 		call	_ZNK8UnitTest15AssertException8FilenameEv
 7207      00
  30:../ExecuteTest.h **** 	}
 7208              		.loc 7 30 0 is_stmt 0 discriminator 1
 7209 2f02 4889C1   		movq	%rax, %rcx
 7210 2f05 488B8570 		movq	-1168(%rbp), %rax
 7210      FBFFFF
 7211 2f0c 488B10   		movq	(%rax), %rdx
 7212 2f0f 488B8570 		movq	-1168(%rbp), %rax
 7212      FBFFFF
 7213 2f16 488B7008 		movq	8(%rax), %rsi
 7214 2f1a 488D8590 		leaq	-1136(%rbp), %rax
 7214      FBFFFF
 7215 2f21 4589E0   		movl	%r12d, %r8d
 7216 2f24 4889C7   		movq	%rax, %rdi
 7217 2f27 E8000000 		call	_ZN8UnitTest11TestDetailsC1EPKcS2_S2_i
 7217      00
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 7218              		.loc 7 29 0 is_stmt 1
 7219 2f2c E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 7219      00
  30:../ExecuteTest.h **** 	}
 7220              		.loc 7 30 0
 7221 2f31 488B00   		movq	(%rax), %rax
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 7222              		.loc 7 29 0
 7223 2f34 488D8D90 		leaq	-1136(%rbp), %rcx
 7223      FBFFFF
 7224 2f3b 4889DA   		movq	%rbx, %rdx
 7225 2f3e 4889CE   		movq	%rcx, %rsi
 7226 2f41 4889C7   		movq	%rax, %rdi
 7227 2f44 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 7227      00
 7228              	.LEHE225:
  27:../ExecuteTest.h **** 	{
 7229              		.loc 7 27 0
 7230 2f49 E8000000 		call	__cxa_end_catch
 7230      00
 7231              	.LBE194:
 7232              	.LBE196:
 7233              		.loc 7 42 0
 7234 2f4e E9CE0000 		jmp	.L409
 7234      00
 7235              	.L400:
 7236              	.LBB197:
 7237              	.LBB195:
  32:../ExecuteTest.h **** 	{
 7238              		.loc 7 32 0
 7239 2f53 4889C7   		movq	%rax, %rdi
 7240 2f56 E8000000 		call	__cxa_begin_catch
 7240      00
 7241 2f5b 48898588 		movq	%rax, -1144(%rbp)
 7241      FBFFFF
 7242              	.LBB193:
  34:../ExecuteTest.h **** 		stream << "Unhandled exception: " << e.what();
 7243              		.loc 7 34 0
 7244 2f62 488D8590 		leaq	-1136(%rbp), %rax
 7244      FBFFFF
 7245 2f69 4889C7   		movq	%rax, %rdi
 7246              	.LEHB226:
 7247 2f6c E8000000 		call	_ZN8UnitTest15MemoryOutStreamC1Ev
 7247      00
 7248              	.LEHE226:
  35:../ExecuteTest.h **** 		CurrentTest::Results()->OnTestFailure(details, stream.GetText());
 7249              		.loc 7 35 0
 7250 2f71 488B8588 		movq	-1144(%rbp), %rax
 7250      FBFFFF
 7251 2f78 488B00   		movq	(%rax), %rax
 7252 2f7b 4883C010 		addq	$16, %rax
 7253 2f7f 488B00   		movq	(%rax), %rax
 7254 2f82 488B9588 		movq	-1144(%rbp), %rdx
 7254      FBFFFF
 7255 2f89 4889D7   		movq	%rdx, %rdi
 7256 2f8c FFD0     		call	*%rax
 7257 2f8e 4889C3   		movq	%rax, %rbx
 7258 2f91 488D8590 		leaq	-1136(%rbp), %rax
 7258      FBFFFF
 7259 2f98 BE000000 		movl	$.LC6, %esi
 7259      00
 7260 2f9d 4889C7   		movq	%rax, %rdi
 7261              	.LEHB227:
 7262 2fa0 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
 7262      00
 7263 2fa5 4889DE   		movq	%rbx, %rsi
 7264 2fa8 4889C7   		movq	%rax, %rdi
 7265 2fab E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
 7265      00
  36:../ExecuteTest.h **** 	}
 7266              		.loc 7 36 0
 7267 2fb0 488D8590 		leaq	-1136(%rbp), %rax
 7267      FBFFFF
 7268 2fb7 4889C7   		movq	%rax, %rdi
 7269 2fba E8000000 		call	_ZNK8UnitTest15MemoryOutStream7GetTextEv
 7269      00
 7270 2fbf 4889C3   		movq	%rax, %rbx
 7271 2fc2 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 7271      00
  36:../ExecuteTest.h **** 	}
 7272              		.loc 7 36 0 is_stmt 0 discriminator 1
 7273 2fc7 488B00   		movq	(%rax), %rax
 7274 2fca 488B8D70 		movq	-1168(%rbp), %rcx
 7274      FBFFFF
 7275 2fd1 4889DA   		movq	%rbx, %rdx
 7276 2fd4 4889CE   		movq	%rcx, %rsi
 7277 2fd7 4889C7   		movq	%rax, %rdi
 7278 2fda E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 7278      00
 7279              	.LEHE227:
 7280 2fdf 488D8590 		leaq	-1136(%rbp), %rax
 7280      FBFFFF
 7281 2fe6 4889C7   		movq	%rax, %rdi
 7282              	.LEHB228:
 7283 2fe9 E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 7283      00
 7284              	.LEHE228:
 7285              	.LBE193:
  32:../ExecuteTest.h **** 	{
 7286              		.loc 7 32 0 is_stmt 1
 7287 2fee E8000000 		call	__cxa_end_catch
 7287      00
 7288              	.LBE195:
 7289              	.LBE197:
 7290              		.loc 7 42 0
 7291 2ff3 EB2C     		jmp	.L409
 7292              	.L408:
 7293              	.LBB198:
  38:../ExecuteTest.h **** 	{
 7294              		.loc 7 38 0
 7295 2ff5 4889C7   		movq	%rax, %rdi
 7296 2ff8 E8000000 		call	__cxa_begin_catch
 7296      00
 7297              	.LEHB229:
  40:../ExecuteTest.h **** 	}
 7298              		.loc 7 40 0
 7299 2ffd E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 7299      00
 7300 3002 488B00   		movq	(%rax), %rax
 7301 3005 488B8D70 		movq	-1168(%rbp), %rcx
 7301      FBFFFF
 7302 300c BA000000 		movl	$.LC33, %edx
 7302      00
 7303 3011 4889CE   		movq	%rcx, %rsi
 7304 3014 4889C7   		movq	%rax, %rdi
 7305 3017 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 7305      00
 7306              	.LEHE229:
 7307              	.LEHB230:
  38:../ExecuteTest.h **** 	{
 7308              		.loc 7 38 0
 7309 301c E8000000 		call	__cxa_end_catch
 7309      00
 7310              	.LEHE230:
 7311              	.L409:
 7312              	.LBE198:
 7313              		.loc 7 42 0
 7314 3021 90       		nop
 7315 3022 4881C480 		addq	$1152, %rsp
 7315      040000
 7316 3029 5B       		popq	%rbx
 7317 302a 415C     		popq	%r12
 7318 302c 5D       		popq	%rbp
 7319              		.cfi_def_cfa 7, 8
 7320 302d C3       		ret
 7321              		.cfi_endproc
 7322              	.LFE1421:
 7323              		.section	.gcc_except_table
 7324              		.align 4
 7325              	.LLSDA1421:
 7326 05dc FF       		.byte	0xff
 7327 05dd 03       		.byte	0x3
 7328 05de 5D       		.uleb128 .LLSDATT1421-.LLSDATTD1421
 7329              	.LLSDATTD1421:
 7330 05df 01       		.byte	0x1
 7331 05e0 46       		.uleb128 .LLSDACSE1421-.LLSDACSB1421
 7332              	.LLSDACSB1421:
 7333 05e1 1C       		.uleb128 .LEHB218-.LFB1421
 7334 05e2 05       		.uleb128 .LEHE218-.LEHB218
 7335 05e3 00       		.uleb128 0
 7336 05e4 00       		.uleb128 0
 7337 05e5 35       		.uleb128 .LEHB219-.LFB1421
 7338 05e6 05       		.uleb128 .LEHE219-.LEHB219
 7339 05e7 8702     		.uleb128 .L403-.LFB1421
 7340 05e9 05       		.uleb128 0x5
 7341 05ea 75       		.uleb128 .LEHB220-.LFB1421
 7342 05eb 14       		.uleb128 .LEHE220-.LEHB220
 7343 05ec 9D01     		.uleb128 .L402-.LFB1421
 7344 05ee 07       		.uleb128 0x7
 7345 05ef 9301     		.uleb128 .LEHB221-.LFB1421
 7346 05f1 05       		.uleb128 .LEHE221-.LEHB221
 7347 05f2 8702     		.uleb128 .L403-.LFB1421
 7348 05f4 05       		.uleb128 0x5
 7349 05f5 C801     		.uleb128 .LEHB222-.LFB1421
 7350 05f7 05       		.uleb128 .LEHE222-.LEHB222
 7351 05f8 00       		.uleb128 0
 7352 05f9 00       		.uleb128 0
 7353 05fa EF01     		.uleb128 .LEHB223-.LFB1421
 7354 05fc 05       		.uleb128 .LEHE223-.LEHB223
 7355 05fd 00       		.uleb128 0
 7356 05fe 00       		.uleb128 0
 7357 05ff 8202     		.uleb128 .LEHB224-.LFB1421
 7358 0601 05       		.uleb128 .LEHE224-.LEHB224
 7359 0602 00       		.uleb128 0
 7360 0603 00       		.uleb128 0
 7361 0604 D502     		.uleb128 .LEHB225-.LFB1421
 7362 0606 5E       		.uleb128 .LEHE225-.LEHB225
 7363 0607 BA01     		.uleb128 .L404-.LFB1421
 7364 0609 00       		.uleb128 0
 7365 060a D603     		.uleb128 .LEHB226-.LFB1421
 7366 060c 05       		.uleb128 .LEHE226-.LEHB226
 7367 060d E101     		.uleb128 .L406-.LFB1421
 7368 060f 00       		.uleb128 0
 7369 0610 8A04     		.uleb128 .LEHB227-.LFB1421
 7370 0612 3F       		.uleb128 .LEHE227-.LEHB227
 7371 0613 CD01     		.uleb128 .L405-.LFB1421
 7372 0615 00       		.uleb128 0
 7373 0616 D304     		.uleb128 .LEHB228-.LFB1421
 7374 0618 05       		.uleb128 .LEHE228-.LEHB228
 7375 0619 E101     		.uleb128 .L406-.LFB1421
 7376 061b 00       		.uleb128 0
 7377 061c E704     		.uleb128 .LEHB229-.LFB1421
 7378 061e 1F       		.uleb128 .LEHE229-.LEHB229
 7379 061f F401     		.uleb128 .L407-.LFB1421
 7380 0621 00       		.uleb128 0
 7381 0622 8605     		.uleb128 .LEHB230-.LFB1421
 7382 0624 05       		.uleb128 .LEHE230-.LEHB230
 7383 0625 00       		.uleb128 0
 7384 0626 00       		.uleb128 0
 7385              	.LLSDACSE1421:
 7386 0627 03       		.byte	0x3
 7387 0628 00       		.byte	0
 7388 0629 02       		.byte	0x2
 7389 062a 7D       		.byte	0x7d
 7390 062b 01       		.byte	0x1
 7391 062c 7D       		.byte	0x7d
 7392 062d 00       		.byte	0
 7393 062e 7D       		.byte	0x7d
 7394 062f 00       		.align 4
 7395 0630 00000000 		.long	0
 7396              	
 7397 0634 00000000 		.long	_ZTISt9exception
 7398 0638 00000000 		.long	_ZTIN8UnitTest15AssertExceptionE
 7399              	.LLSDATT1421:
 7400              		.text
 7402              		.section	.text._ZNKSt6vectorISt4pairIiSsESaIS1_EE2atEm,"axG",@progbits,_ZNKSt6vectorISt4pairIiSsES
 7403              		.align 2
 7404              		.weak	_ZNKSt6vectorISt4pairIiSsESaIS1_EE2atEm
 7406              	_ZNKSt6vectorISt4pairIiSsESaIS1_EE2atEm:
 7407              	.LFB1422:
 815:/usr/include/c++/4.8/bits/stl_vector.h **** 
 816:/usr/include/c++/4.8/bits/stl_vector.h ****       /**
 817:/usr/include/c++/4.8/bits/stl_vector.h ****        *  @brief  Provides access to the data contained in the %vector.
 818:/usr/include/c++/4.8/bits/stl_vector.h ****        *  @param __n The index of the element for which data should be
 819:/usr/include/c++/4.8/bits/stl_vector.h ****        *  accessed.
 820:/usr/include/c++/4.8/bits/stl_vector.h ****        *  @return  Read-only (constant) reference to data.
 821:/usr/include/c++/4.8/bits/stl_vector.h ****        *  @throw  std::out_of_range  If @a __n is an invalid index.
 822:/usr/include/c++/4.8/bits/stl_vector.h ****        *
 823:/usr/include/c++/4.8/bits/stl_vector.h ****        *  This function provides for safer data access.  The parameter
 824:/usr/include/c++/4.8/bits/stl_vector.h ****        *  is first checked that it is in the range of the vector.  The
 825:/usr/include/c++/4.8/bits/stl_vector.h ****        *  function throws out_of_range if the check fails.
 826:/usr/include/c++/4.8/bits/stl_vector.h ****        */
 827:/usr/include/c++/4.8/bits/stl_vector.h ****       const_reference
 828:/usr/include/c++/4.8/bits/stl_vector.h ****       at(size_type __n) const
 7408              		.loc 6 828 0
 7409              		.cfi_startproc
 7410 0000 55       		pushq	%rbp
 7411              		.cfi_def_cfa_offset 16
 7412              		.cfi_offset 6, -16
 7413 0001 4889E5   		movq	%rsp, %rbp
 7414              		.cfi_def_cfa_register 6
 7415 0004 4883EC10 		subq	$16, %rsp
 7416 0008 48897DF8 		movq	%rdi, -8(%rbp)
 7417 000c 488975F0 		movq	%rsi, -16(%rbp)
 829:/usr/include/c++/4.8/bits/stl_vector.h ****       {
 830:/usr/include/c++/4.8/bits/stl_vector.h **** 	_M_range_check(__n);
 7418              		.loc 6 830 0
 7419 0010 488B55F0 		movq	-16(%rbp), %rdx
 7420 0014 488B45F8 		movq	-8(%rbp), %rax
 7421 0018 4889D6   		movq	%rdx, %rsi
 7422 001b 4889C7   		movq	%rax, %rdi
 7423 001e E8000000 		call	_ZNKSt6vectorISt4pairIiSsESaIS1_EE14_M_range_checkEm
 7423      00
 831:/usr/include/c++/4.8/bits/stl_vector.h **** 	return (*this)[__n];
 7424              		.loc 6 831 0
 7425 0023 488B55F0 		movq	-16(%rbp), %rdx
 7426 0027 488B45F8 		movq	-8(%rbp), %rax
 7427 002b 4889D6   		movq	%rdx, %rsi
 7428 002e 4889C7   		movq	%rax, %rdi
 7429 0031 E8000000 		call	_ZNKSt6vectorISt4pairIiSsESaIS1_EEixEm
 7429      00
 832:/usr/include/c++/4.8/bits/stl_vector.h ****       }
 7430              		.loc 6 832 0
 7431 0036 C9       		leave
 7432              		.cfi_def_cfa 7, 8
 7433 0037 C3       		ret
 7434              		.cfi_endproc
 7435              	.LFE1422:
 7437              		.section	.text._ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE12_Vector_implD2Ev,"axG"
 7438              		.align 2
 7439              		.weak	_ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE12_Vector_implD2Ev
 7441              	_ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE12_Vector_implD2Ev:
 7442              	.LFB1450:
  79:/usr/include/c++/4.8/bits/stl_vector.h ****       : public _Tp_alloc_type
 7443              		.loc 6 79 0
 7444              		.cfi_startproc
 7445 0000 55       		pushq	%rbp
 7446              		.cfi_def_cfa_offset 16
 7447              		.cfi_offset 6, -16
 7448 0001 4889E5   		movq	%rsp, %rbp
 7449              		.cfi_def_cfa_register 6
 7450 0004 4883EC10 		subq	$16, %rsp
 7451 0008 48897DF8 		movq	%rdi, -8(%rbp)
 7452              	.LBB199:
  79:/usr/include/c++/4.8/bits/stl_vector.h ****       : public _Tp_alloc_type
 7453              		.loc 6 79 0
 7454 000c 488B45F8 		movq	-8(%rbp), %rax
 7455 0010 4889C7   		movq	%rax, %rdi
 7456 0013 E8000000 		call	_ZNSaIN8UnitTest18DeferredTestResultEED2Ev
 7456      00
 7457              	.LBE199:
 7458 0018 C9       		leave
 7459              		.cfi_def_cfa 7, 8
 7460 0019 C3       		ret
 7461              		.cfi_endproc
 7462              	.LFE1450:
 7464              		.weak	_ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE12_Vector_implD1Ev
 7465              		.set	_ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE12_Vector_implD1Ev,_ZNSt12_Vector_
 7466              		.section	.text._ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EEC2Ev,"axG",@progbits,_ZN
 7467              		.align 2
 7468              		.weak	_ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EEC2Ev
 7470              	_ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EEC2Ev:
 7471              	.LFB1452:
 124:/usr/include/c++/4.8/bits/stl_vector.h ****       : _M_impl() { }
 7472              		.loc 6 124 0
 7473              		.cfi_startproc
 7474 0000 55       		pushq	%rbp
 7475              		.cfi_def_cfa_offset 16
 7476              		.cfi_offset 6, -16
 7477 0001 4889E5   		movq	%rsp, %rbp
 7478              		.cfi_def_cfa_register 6
 7479 0004 4883EC10 		subq	$16, %rsp
 7480 0008 48897DF8 		movq	%rdi, -8(%rbp)
 7481              	.LBB200:
 125:/usr/include/c++/4.8/bits/stl_vector.h **** 
 7482              		.loc 6 125 0
 7483 000c 488B45F8 		movq	-8(%rbp), %rax
 7484 0010 4889C7   		movq	%rax, %rdi
 7485 0013 E8000000 		call	_ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE12_Vector_implC1Ev
 7485      00
 7486              	.LBE200:
 7487 0018 C9       		leave
 7488              		.cfi_def_cfa 7, 8
 7489 0019 C3       		ret
 7490              		.cfi_endproc
 7491              	.LFE1452:
 7493              		.weak	_ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EEC1Ev
 7494              		.set	_ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EEC1Ev,_ZNSt12_Vector_baseIN8UnitTes
 7495              		.section	.text._ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EED2Ev,"axG",@progbits,_ZN
 7496              		.align 2
 7497              		.weak	_ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EED2Ev
 7499              	_ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EED2Ev:
 7500              	.LFB1455:
 159:/usr/include/c++/4.8/bits/stl_vector.h ****       { _M_deallocate(this->_M_impl._M_start, this->_M_impl._M_end_of_storage
 7501              		.loc 6 159 0
 7502              		.cfi_startproc
 7503              		.cfi_personality 0x3,__gxx_personality_v0
 7504              		.cfi_lsda 0x3,.LLSDA1455
 7505 0000 55       		pushq	%rbp
 7506              		.cfi_def_cfa_offset 16
 7507              		.cfi_offset 6, -16
 7508 0001 4889E5   		movq	%rsp, %rbp
 7509              		.cfi_def_cfa_register 6
 7510 0004 53       		pushq	%rbx
 7511 0005 4883EC18 		subq	$24, %rsp
 7512              		.cfi_offset 3, -24
 7513 0009 48897DE8 		movq	%rdi, -24(%rbp)
 7514              	.LBB201:
 161:/usr/include/c++/4.8/bits/stl_vector.h **** 
 7515              		.loc 6 161 0
 7516 000d 488B45E8 		movq	-24(%rbp), %rax
 7517 0011 488B4010 		movq	16(%rax), %rax
 7518 0015 4889C2   		movq	%rax, %rdx
 7519 0018 488B45E8 		movq	-24(%rbp), %rax
 7520 001c 488B00   		movq	(%rax), %rax
 7521 001f 4829C2   		subq	%rax, %rdx
 7522 0022 4889D0   		movq	%rdx, %rax
 7523 0025 48C1F803 		sarq	$3, %rax
 7524 0029 4889C2   		movq	%rax, %rdx
 7525 002c 48B8B76D 		movabsq	$7905747460161236407, %rax
 7525      DBB66DDB 
 7525      B66D
 7526 0036 480FAFC2 		imulq	%rdx, %rax
 7527 003a 4889C2   		movq	%rax, %rdx
 7528 003d 488B45E8 		movq	-24(%rbp), %rax
 7529 0041 488B08   		movq	(%rax), %rcx
 160:/usr/include/c++/4.8/bits/stl_vector.h **** 		      - this->_M_impl._M_start); }
 7530              		.loc 6 160 0
 7531 0044 488B45E8 		movq	-24(%rbp), %rax
 7532 0048 4889CE   		movq	%rcx, %rsi
 7533 004b 4889C7   		movq	%rax, %rdi
 7534              	.LEHB231:
 7535 004e E8000000 		call	_ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE13_M_deallocateEPS1_m
 7535      00
 7536              	.LEHE231:
 161:/usr/include/c++/4.8/bits/stl_vector.h **** 
 7537              		.loc 6 161 0
 7538 0053 488B45E8 		movq	-24(%rbp), %rax
 7539 0057 4889C7   		movq	%rax, %rdi
 7540 005a E8000000 		call	_ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE12_Vector_implD1Ev
 7540      00
 7541 005f EB1A     		jmp	.L419
 7542              	.L418:
 7543 0061 4889C3   		movq	%rax, %rbx
 7544 0064 488B45E8 		movq	-24(%rbp), %rax
 7545 0068 4889C7   		movq	%rax, %rdi
 7546 006b E8000000 		call	_ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE12_Vector_implD1Ev
 7546      00
 7547 0070 4889D8   		movq	%rbx, %rax
 7548 0073 4889C7   		movq	%rax, %rdi
 7549              	.LEHB232:
 7550 0076 E8000000 		call	_Unwind_Resume
 7550      00
 7551              	.LEHE232:
 7552              	.L419:
 7553              	.LBE201:
 7554 007b 4883C418 		addq	$24, %rsp
 7555 007f 5B       		popq	%rbx
 7556 0080 5D       		popq	%rbp
 7557              		.cfi_def_cfa 7, 8
 7558 0081 C3       		ret
 7559              		.cfi_endproc
 7560              	.LFE1455:
 7561              		.section	.gcc_except_table
 7562              	.LLSDA1455:
 7563 063c FF       		.byte	0xff
 7564 063d FF       		.byte	0xff
 7565 063e 01       		.byte	0x1
 7566 063f 08       		.uleb128 .LLSDACSE1455-.LLSDACSB1455
 7567              	.LLSDACSB1455:
 7568 0640 4E       		.uleb128 .LEHB231-.LFB1455
 7569 0641 05       		.uleb128 .LEHE231-.LEHB231
 7570 0642 61       		.uleb128 .L418-.LFB1455
 7571 0643 00       		.uleb128 0
 7572 0644 76       		.uleb128 .LEHB232-.LFB1455
 7573 0645 05       		.uleb128 .LEHE232-.LEHB232
 7574 0646 00       		.uleb128 0
 7575 0647 00       		.uleb128 0
 7576              	.LLSDACSE1455:
 7577              		.section	.text._ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EED2Ev,"axG",@progbits,_ZN
 7579              		.weak	_ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EED1Ev
 7580              		.set	_ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EED1Ev,_ZNSt12_Vector_baseIN8UnitTes
 7581              		.section	.text._ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE19_M_get_Tp_allocatorEv,
 7582              		.align 2
 7583              		.weak	_ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE19_M_get_Tp_allocatorEv
 7585              	_ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE19_M_get_Tp_allocatorEv:
 7586              	.LFB1457:
 113:/usr/include/c++/4.8/bits/stl_vector.h ****       { return *static_cast<_Tp_alloc_type*>(&this->_M_impl); }
 7587              		.loc 6 113 0
 7588              		.cfi_startproc
 7589 0000 55       		pushq	%rbp
 7590              		.cfi_def_cfa_offset 16
 7591              		.cfi_offset 6, -16
 7592 0001 4889E5   		movq	%rsp, %rbp
 7593              		.cfi_def_cfa_register 6
 7594 0004 48897DF8 		movq	%rdi, -8(%rbp)
 114:/usr/include/c++/4.8/bits/stl_vector.h **** 
 7595              		.loc 6 114 0
 7596 0008 488B45F8 		movq	-8(%rbp), %rax
 7597 000c 5D       		popq	%rbp
 7598              		.cfi_def_cfa 7, 8
 7599 000d C3       		ret
 7600              		.cfi_endproc
 7601              	.LFE1457:
 7603              		.section	.text._ZSt8_DestroyIPN8UnitTest18DeferredTestResultES1_EvT_S3_RSaIT0_E,"axG",@progbits,_Z
 7604              		.weak	_ZSt8_DestroyIPN8UnitTest18DeferredTestResultES1_EvT_S3_RSaIT0_E
 7606              	_ZSt8_DestroyIPN8UnitTest18DeferredTestResultES1_EvT_S3_RSaIT0_E:
 7607              	.LFB1458:
 7608              		.file 9 "/usr/include/c++/4.8/bits/stl_construct.h"
   1:/usr/include/c++/4.8/bits/stl_construct.h **** // nonstandard construct and destroy functions -*- C++ -*-
   2:/usr/include/c++/4.8/bits/stl_construct.h **** 
   3:/usr/include/c++/4.8/bits/stl_construct.h **** // Copyright (C) 2001-2013 Free Software Foundation, Inc.
   4:/usr/include/c++/4.8/bits/stl_construct.h **** //
   5:/usr/include/c++/4.8/bits/stl_construct.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/c++/4.8/bits/stl_construct.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/4.8/bits/stl_construct.h **** // terms of the GNU General Public License as published by the
   8:/usr/include/c++/4.8/bits/stl_construct.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/4.8/bits/stl_construct.h **** // any later version.
  10:/usr/include/c++/4.8/bits/stl_construct.h **** 
  11:/usr/include/c++/4.8/bits/stl_construct.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/c++/4.8/bits/stl_construct.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/c++/4.8/bits/stl_construct.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/4.8/bits/stl_construct.h **** // GNU General Public License for more details.
  15:/usr/include/c++/4.8/bits/stl_construct.h **** 
  16:/usr/include/c++/4.8/bits/stl_construct.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/c++/4.8/bits/stl_construct.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/4.8/bits/stl_construct.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/4.8/bits/stl_construct.h **** 
  20:/usr/include/c++/4.8/bits/stl_construct.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/c++/4.8/bits/stl_construct.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/c++/4.8/bits/stl_construct.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/4.8/bits/stl_construct.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/c++/4.8/bits/stl_construct.h **** 
  25:/usr/include/c++/4.8/bits/stl_construct.h **** /*
  26:/usr/include/c++/4.8/bits/stl_construct.h ****  *
  27:/usr/include/c++/4.8/bits/stl_construct.h ****  * Copyright (c) 1994
  28:/usr/include/c++/4.8/bits/stl_construct.h ****  * Hewlett-Packard Company
  29:/usr/include/c++/4.8/bits/stl_construct.h ****  *
  30:/usr/include/c++/4.8/bits/stl_construct.h ****  * Permission to use, copy, modify, distribute and sell this software
  31:/usr/include/c++/4.8/bits/stl_construct.h ****  * and its documentation for any purpose is hereby granted without fee,
  32:/usr/include/c++/4.8/bits/stl_construct.h ****  * provided that the above copyright notice appear in all copies and
  33:/usr/include/c++/4.8/bits/stl_construct.h ****  * that both that copyright notice and this permission notice appear
  34:/usr/include/c++/4.8/bits/stl_construct.h ****  * in supporting documentation.  Hewlett-Packard Company makes no
  35:/usr/include/c++/4.8/bits/stl_construct.h ****  * representations about the suitability of this software for any
  36:/usr/include/c++/4.8/bits/stl_construct.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  37:/usr/include/c++/4.8/bits/stl_construct.h ****  *
  38:/usr/include/c++/4.8/bits/stl_construct.h ****  *
  39:/usr/include/c++/4.8/bits/stl_construct.h ****  * Copyright (c) 1996,1997
  40:/usr/include/c++/4.8/bits/stl_construct.h ****  * Silicon Graphics Computer Systems, Inc.
  41:/usr/include/c++/4.8/bits/stl_construct.h ****  *
  42:/usr/include/c++/4.8/bits/stl_construct.h ****  * Permission to use, copy, modify, distribute and sell this software
  43:/usr/include/c++/4.8/bits/stl_construct.h ****  * and its documentation for any purpose is hereby granted without fee,
  44:/usr/include/c++/4.8/bits/stl_construct.h ****  * provided that the above copyright notice appear in all copies and
  45:/usr/include/c++/4.8/bits/stl_construct.h ****  * that both that copyright notice and this permission notice appear
  46:/usr/include/c++/4.8/bits/stl_construct.h ****  * in supporting documentation.  Silicon Graphics makes no
  47:/usr/include/c++/4.8/bits/stl_construct.h ****  * representations about the suitability of this software for any
  48:/usr/include/c++/4.8/bits/stl_construct.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  49:/usr/include/c++/4.8/bits/stl_construct.h ****  */
  50:/usr/include/c++/4.8/bits/stl_construct.h **** 
  51:/usr/include/c++/4.8/bits/stl_construct.h **** /** @file bits/stl_construct.h
  52:/usr/include/c++/4.8/bits/stl_construct.h ****  *  This is an internal header file, included by other library headers.
  53:/usr/include/c++/4.8/bits/stl_construct.h ****  *  Do not attempt to use it directly. @headername{memory}
  54:/usr/include/c++/4.8/bits/stl_construct.h ****  */
  55:/usr/include/c++/4.8/bits/stl_construct.h **** 
  56:/usr/include/c++/4.8/bits/stl_construct.h **** #ifndef _STL_CONSTRUCT_H
  57:/usr/include/c++/4.8/bits/stl_construct.h **** #define _STL_CONSTRUCT_H 1
  58:/usr/include/c++/4.8/bits/stl_construct.h **** 
  59:/usr/include/c++/4.8/bits/stl_construct.h **** #include <new>
  60:/usr/include/c++/4.8/bits/stl_construct.h **** #include <bits/move.h>
  61:/usr/include/c++/4.8/bits/stl_construct.h **** #include <ext/alloc_traits.h>
  62:/usr/include/c++/4.8/bits/stl_construct.h **** 
  63:/usr/include/c++/4.8/bits/stl_construct.h **** namespace std _GLIBCXX_VISIBILITY(default)
  64:/usr/include/c++/4.8/bits/stl_construct.h **** {
  65:/usr/include/c++/4.8/bits/stl_construct.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  66:/usr/include/c++/4.8/bits/stl_construct.h **** 
  67:/usr/include/c++/4.8/bits/stl_construct.h ****   /**
  68:/usr/include/c++/4.8/bits/stl_construct.h ****    * Constructs an object in existing memory by invoking an allocated
  69:/usr/include/c++/4.8/bits/stl_construct.h ****    * object's constructor with an initializer.
  70:/usr/include/c++/4.8/bits/stl_construct.h ****    */
  71:/usr/include/c++/4.8/bits/stl_construct.h **** #if __cplusplus >= 201103L
  72:/usr/include/c++/4.8/bits/stl_construct.h ****   template<typename _T1, typename... _Args>
  73:/usr/include/c++/4.8/bits/stl_construct.h ****     inline void
  74:/usr/include/c++/4.8/bits/stl_construct.h ****     _Construct(_T1* __p, _Args&&... __args)
  75:/usr/include/c++/4.8/bits/stl_construct.h ****     { ::new(static_cast<void*>(__p)) _T1(std::forward<_Args>(__args)...); }
  76:/usr/include/c++/4.8/bits/stl_construct.h **** #else
  77:/usr/include/c++/4.8/bits/stl_construct.h ****   template<typename _T1, typename _T2>
  78:/usr/include/c++/4.8/bits/stl_construct.h ****     inline void
  79:/usr/include/c++/4.8/bits/stl_construct.h ****     _Construct(_T1* __p, const _T2& __value)
  80:/usr/include/c++/4.8/bits/stl_construct.h ****     {
  81:/usr/include/c++/4.8/bits/stl_construct.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
  82:/usr/include/c++/4.8/bits/stl_construct.h ****       // 402. wrong new expression in [some_]allocator::construct
  83:/usr/include/c++/4.8/bits/stl_construct.h ****       ::new(static_cast<void*>(__p)) _T1(__value);
  84:/usr/include/c++/4.8/bits/stl_construct.h ****     }
  85:/usr/include/c++/4.8/bits/stl_construct.h **** #endif
  86:/usr/include/c++/4.8/bits/stl_construct.h **** 
  87:/usr/include/c++/4.8/bits/stl_construct.h ****   /**
  88:/usr/include/c++/4.8/bits/stl_construct.h ****    * Destroy the object pointed to by a pointer type.
  89:/usr/include/c++/4.8/bits/stl_construct.h ****    */
  90:/usr/include/c++/4.8/bits/stl_construct.h ****   template<typename _Tp>
  91:/usr/include/c++/4.8/bits/stl_construct.h ****     inline void
  92:/usr/include/c++/4.8/bits/stl_construct.h ****     _Destroy(_Tp* __pointer)
  93:/usr/include/c++/4.8/bits/stl_construct.h ****     { __pointer->~_Tp(); }
  94:/usr/include/c++/4.8/bits/stl_construct.h **** 
  95:/usr/include/c++/4.8/bits/stl_construct.h ****   template<bool>
  96:/usr/include/c++/4.8/bits/stl_construct.h ****     struct _Destroy_aux
  97:/usr/include/c++/4.8/bits/stl_construct.h ****     {
  98:/usr/include/c++/4.8/bits/stl_construct.h ****       template<typename _ForwardIterator>
  99:/usr/include/c++/4.8/bits/stl_construct.h ****         static void
 100:/usr/include/c++/4.8/bits/stl_construct.h ****         __destroy(_ForwardIterator __first, _ForwardIterator __last)
 101:/usr/include/c++/4.8/bits/stl_construct.h **** 	{
 102:/usr/include/c++/4.8/bits/stl_construct.h **** 	  for (; __first != __last; ++__first)
 103:/usr/include/c++/4.8/bits/stl_construct.h **** 	    std::_Destroy(std::__addressof(*__first));
 104:/usr/include/c++/4.8/bits/stl_construct.h **** 	}
 105:/usr/include/c++/4.8/bits/stl_construct.h ****     };
 106:/usr/include/c++/4.8/bits/stl_construct.h **** 
 107:/usr/include/c++/4.8/bits/stl_construct.h ****   template<>
 108:/usr/include/c++/4.8/bits/stl_construct.h ****     struct _Destroy_aux<true>
 109:/usr/include/c++/4.8/bits/stl_construct.h ****     {
 110:/usr/include/c++/4.8/bits/stl_construct.h ****       template<typename _ForwardIterator>
 111:/usr/include/c++/4.8/bits/stl_construct.h ****         static void
 112:/usr/include/c++/4.8/bits/stl_construct.h ****         __destroy(_ForwardIterator, _ForwardIterator) { }
 113:/usr/include/c++/4.8/bits/stl_construct.h ****     };
 114:/usr/include/c++/4.8/bits/stl_construct.h **** 
 115:/usr/include/c++/4.8/bits/stl_construct.h ****   /**
 116:/usr/include/c++/4.8/bits/stl_construct.h ****    * Destroy a range of objects.  If the value_type of the object has
 117:/usr/include/c++/4.8/bits/stl_construct.h ****    * a trivial destructor, the compiler should optimize all of this
 118:/usr/include/c++/4.8/bits/stl_construct.h ****    * away, otherwise the objects' destructors must be invoked.
 119:/usr/include/c++/4.8/bits/stl_construct.h ****    */
 120:/usr/include/c++/4.8/bits/stl_construct.h ****   template<typename _ForwardIterator>
 121:/usr/include/c++/4.8/bits/stl_construct.h ****     inline void
 122:/usr/include/c++/4.8/bits/stl_construct.h ****     _Destroy(_ForwardIterator __first, _ForwardIterator __last)
 123:/usr/include/c++/4.8/bits/stl_construct.h ****     {
 124:/usr/include/c++/4.8/bits/stl_construct.h ****       typedef typename iterator_traits<_ForwardIterator>::value_type
 125:/usr/include/c++/4.8/bits/stl_construct.h ****                        _Value_type;
 126:/usr/include/c++/4.8/bits/stl_construct.h ****       std::_Destroy_aux<__has_trivial_destructor(_Value_type)>::
 127:/usr/include/c++/4.8/bits/stl_construct.h **** 	__destroy(__first, __last);
 128:/usr/include/c++/4.8/bits/stl_construct.h ****     }
 129:/usr/include/c++/4.8/bits/stl_construct.h **** 
 130:/usr/include/c++/4.8/bits/stl_construct.h ****   /**
 131:/usr/include/c++/4.8/bits/stl_construct.h ****    * Destroy a range of objects using the supplied allocator.  For
 132:/usr/include/c++/4.8/bits/stl_construct.h ****    * nondefault allocators we do not optimize away invocation of 
 133:/usr/include/c++/4.8/bits/stl_construct.h ****    * destroy() even if _Tp has a trivial destructor.
 134:/usr/include/c++/4.8/bits/stl_construct.h ****    */
 135:/usr/include/c++/4.8/bits/stl_construct.h **** 
 136:/usr/include/c++/4.8/bits/stl_construct.h ****   template<typename _ForwardIterator, typename _Allocator>
 137:/usr/include/c++/4.8/bits/stl_construct.h ****     void
 138:/usr/include/c++/4.8/bits/stl_construct.h ****     _Destroy(_ForwardIterator __first, _ForwardIterator __last,
 139:/usr/include/c++/4.8/bits/stl_construct.h **** 	     _Allocator& __alloc)
 140:/usr/include/c++/4.8/bits/stl_construct.h ****     {
 141:/usr/include/c++/4.8/bits/stl_construct.h ****       typedef __gnu_cxx::__alloc_traits<_Allocator> __traits;
 142:/usr/include/c++/4.8/bits/stl_construct.h ****       for (; __first != __last; ++__first)
 143:/usr/include/c++/4.8/bits/stl_construct.h **** 	__traits::destroy(__alloc, std::__addressof(*__first));
 144:/usr/include/c++/4.8/bits/stl_construct.h ****     }
 145:/usr/include/c++/4.8/bits/stl_construct.h **** 
 146:/usr/include/c++/4.8/bits/stl_construct.h ****   template<typename _ForwardIterator, typename _Tp>
 147:/usr/include/c++/4.8/bits/stl_construct.h ****     inline void
 148:/usr/include/c++/4.8/bits/stl_construct.h ****     _Destroy(_ForwardIterator __first, _ForwardIterator __last,
 7609              		.loc 9 148 0
 7610              		.cfi_startproc
 7611 0000 55       		pushq	%rbp
 7612              		.cfi_def_cfa_offset 16
 7613              		.cfi_offset 6, -16
 7614 0001 4889E5   		movq	%rsp, %rbp
 7615              		.cfi_def_cfa_register 6
 7616 0004 4883EC20 		subq	$32, %rsp
 7617 0008 48897DF8 		movq	%rdi, -8(%rbp)
 7618 000c 488975F0 		movq	%rsi, -16(%rbp)
 7619 0010 488955E8 		movq	%rdx, -24(%rbp)
 149:/usr/include/c++/4.8/bits/stl_construct.h **** 	     allocator<_Tp>&)
 150:/usr/include/c++/4.8/bits/stl_construct.h ****     {
 151:/usr/include/c++/4.8/bits/stl_construct.h ****       _Destroy(__first, __last);
 7620              		.loc 9 151 0
 7621 0014 488B55F0 		movq	-16(%rbp), %rdx
 7622 0018 488B45F8 		movq	-8(%rbp), %rax
 7623 001c 4889D6   		movq	%rdx, %rsi
 7624 001f 4889C7   		movq	%rax, %rdi
 7625 0022 E8000000 		call	_ZSt8_DestroyIPN8UnitTest18DeferredTestResultEEvT_S3_
 7625      00
 152:/usr/include/c++/4.8/bits/stl_construct.h ****     }
 7626              		.loc 9 152 0
 7627 0027 C9       		leave
 7628              		.cfi_def_cfa 7, 8
 7629 0028 C3       		ret
 7630              		.cfi_endproc
 7631              	.LFE1458:
 7633              		.section	.rodata
 7634              	.LC37:
 7635 0575 76656374 		.string	"vector::_M_range_check"
 7635      6F723A3A 
 7635      5F4D5F72 
 7635      616E6765 
 7635      5F636865 
 7636              		.section	.text._ZNKSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EE14_M_range_checkEm,"axG",@prog
 7637              		.align 2
 7638              		.weak	_ZNKSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EE14_M_range_checkEm
 7640              	_ZNKSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EE14_M_range_checkEm:
 7641              	.LFB1466:
 791:/usr/include/c++/4.8/bits/stl_vector.h ****       {
 7642              		.loc 6 791 0
 7643              		.cfi_startproc
 7644 0000 55       		pushq	%rbp
 7645              		.cfi_def_cfa_offset 16
 7646              		.cfi_offset 6, -16
 7647 0001 4889E5   		movq	%rsp, %rbp
 7648              		.cfi_def_cfa_register 6
 7649 0004 4883EC10 		subq	$16, %rsp
 7650 0008 48897DF8 		movq	%rdi, -8(%rbp)
 7651 000c 488975F0 		movq	%rsi, -16(%rbp)
 793:/usr/include/c++/4.8/bits/stl_vector.h **** 	  __throw_out_of_range(__N("vector::_M_range_check"));
 7652              		.loc 6 793 0
 7653 0010 488B45F8 		movq	-8(%rbp), %rax
 7654 0014 4889C7   		movq	%rax, %rdi
 7655 0017 E8000000 		call	_ZNKSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EE4sizeEv
 7655      00
 7656 001c 483B45F0 		cmpq	-16(%rbp), %rax
 7657 0020 0F96C0   		setbe	%al
 7658 0023 84C0     		testb	%al, %al
 7659 0025 740A     		je	.L423
 794:/usr/include/c++/4.8/bits/stl_vector.h ****       }
 7660              		.loc 6 794 0
 7661 0027 BF000000 		movl	$.LC37, %edi
 7661      00
 7662 002c E8000000 		call	_ZSt20__throw_out_of_rangePKc
 7662      00
 7663              	.L423:
 795:/usr/include/c++/4.8/bits/stl_vector.h **** 
 7664              		.loc 6 795 0
 7665 0031 C9       		leave
 7666              		.cfi_def_cfa 7, 8
 7667 0032 C3       		ret
 7668              		.cfi_endproc
 7669              	.LFE1466:
 7671              		.section	.text._ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EEixEm,"axG",@progbits,_ZNSt6vect
 7672              		.align 2
 7673              		.weak	_ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EEixEm
 7675              	_ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EEixEm:
 7676              	.LFB1467:
 770:/usr/include/c++/4.8/bits/stl_vector.h ****       { return *(this->_M_impl._M_start + __n); }
 7677              		.loc 6 770 0
 7678              		.cfi_startproc
 7679 0000 55       		pushq	%rbp
 7680              		.cfi_def_cfa_offset 16
 7681              		.cfi_offset 6, -16
 7682 0001 4889E5   		movq	%rsp, %rbp
 7683              		.cfi_def_cfa_register 6
 7684 0004 48897DF8 		movq	%rdi, -8(%rbp)
 7685 0008 488975F0 		movq	%rsi, -16(%rbp)
 771:/usr/include/c++/4.8/bits/stl_vector.h **** 
 7686              		.loc 6 771 0
 7687 000c 488B45F8 		movq	-8(%rbp), %rax
 7688 0010 488B10   		movq	(%rax), %rdx
 7689 0013 488B45F0 		movq	-16(%rbp), %rax
 7690 0017 48C1E003 		salq	$3, %rax
 7691 001b 488D0CC5 		leaq	0(,%rax,8), %rcx
 7691      00000000 
 7692 0023 4829C1   		subq	%rax, %rcx
 7693 0026 4889C8   		movq	%rcx, %rax
 7694 0029 4801D0   		addq	%rdx, %rax
 7695 002c 5D       		popq	%rbp
 7696              		.cfi_def_cfa 7, 8
 7697 002d C3       		ret
 7698              		.cfi_endproc
 7699              	.LFE1467:
 7701              		.section	.text._ZSteqIcSt11char_traitsIcESaIcEEbPKT_RKSbIS3_T0_T1_E,"axG",@progbits,_ZSteqIcSt11ch
 7702              		.weak	_ZSteqIcSt11char_traitsIcESaIcEEbPKT_RKSbIS3_T0_T1_E
 7704              	_ZSteqIcSt11char_traitsIcESaIcEEbPKT_RKSbIS3_T0_T1_E:
 7705              	.LFB1468:
 7706              		.file 10 "/usr/include/c++/4.8/bits/basic_string.h"
   1:/usr/include/c++/4.8/bits/basic_string.h **** // Components for manipulating sequences of characters -*- C++ -*-
   2:/usr/include/c++/4.8/bits/basic_string.h **** 
   3:/usr/include/c++/4.8/bits/basic_string.h **** // Copyright (C) 1997-2013 Free Software Foundation, Inc.
   4:/usr/include/c++/4.8/bits/basic_string.h **** //
   5:/usr/include/c++/4.8/bits/basic_string.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/c++/4.8/bits/basic_string.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/4.8/bits/basic_string.h **** // terms of the GNU General Public License as published by the
   8:/usr/include/c++/4.8/bits/basic_string.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/4.8/bits/basic_string.h **** // any later version.
  10:/usr/include/c++/4.8/bits/basic_string.h **** 
  11:/usr/include/c++/4.8/bits/basic_string.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/c++/4.8/bits/basic_string.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/c++/4.8/bits/basic_string.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/4.8/bits/basic_string.h **** // GNU General Public License for more details.
  15:/usr/include/c++/4.8/bits/basic_string.h **** 
  16:/usr/include/c++/4.8/bits/basic_string.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/c++/4.8/bits/basic_string.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/4.8/bits/basic_string.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/4.8/bits/basic_string.h **** 
  20:/usr/include/c++/4.8/bits/basic_string.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/c++/4.8/bits/basic_string.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/c++/4.8/bits/basic_string.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/4.8/bits/basic_string.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/c++/4.8/bits/basic_string.h **** 
  25:/usr/include/c++/4.8/bits/basic_string.h **** /** @file bits/basic_string.h
  26:/usr/include/c++/4.8/bits/basic_string.h ****  *  This is an internal header file, included by other library headers.
  27:/usr/include/c++/4.8/bits/basic_string.h ****  *  Do not attempt to use it directly. @headername{string}
  28:/usr/include/c++/4.8/bits/basic_string.h ****  */
  29:/usr/include/c++/4.8/bits/basic_string.h **** 
  30:/usr/include/c++/4.8/bits/basic_string.h **** //
  31:/usr/include/c++/4.8/bits/basic_string.h **** // ISO C++ 14882: 21 Strings library
  32:/usr/include/c++/4.8/bits/basic_string.h **** //
  33:/usr/include/c++/4.8/bits/basic_string.h **** 
  34:/usr/include/c++/4.8/bits/basic_string.h **** #ifndef _BASIC_STRING_H
  35:/usr/include/c++/4.8/bits/basic_string.h **** #define _BASIC_STRING_H 1
  36:/usr/include/c++/4.8/bits/basic_string.h **** 
  37:/usr/include/c++/4.8/bits/basic_string.h **** #pragma GCC system_header
  38:/usr/include/c++/4.8/bits/basic_string.h **** 
  39:/usr/include/c++/4.8/bits/basic_string.h **** #include <ext/atomicity.h>
  40:/usr/include/c++/4.8/bits/basic_string.h **** #include <debug/debug.h>
  41:/usr/include/c++/4.8/bits/basic_string.h **** #if __cplusplus >= 201103L
  42:/usr/include/c++/4.8/bits/basic_string.h **** #include <initializer_list>
  43:/usr/include/c++/4.8/bits/basic_string.h **** #endif
  44:/usr/include/c++/4.8/bits/basic_string.h **** 
  45:/usr/include/c++/4.8/bits/basic_string.h **** namespace std _GLIBCXX_VISIBILITY(default)
  46:/usr/include/c++/4.8/bits/basic_string.h **** {
  47:/usr/include/c++/4.8/bits/basic_string.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  48:/usr/include/c++/4.8/bits/basic_string.h **** 
  49:/usr/include/c++/4.8/bits/basic_string.h ****   /**
  50:/usr/include/c++/4.8/bits/basic_string.h ****    *  @class basic_string basic_string.h <string>
  51:/usr/include/c++/4.8/bits/basic_string.h ****    *  @brief  Managing sequences of characters and character-like objects.
  52:/usr/include/c++/4.8/bits/basic_string.h ****    *
  53:/usr/include/c++/4.8/bits/basic_string.h ****    *  @ingroup strings
  54:/usr/include/c++/4.8/bits/basic_string.h ****    *  @ingroup sequences
  55:/usr/include/c++/4.8/bits/basic_string.h ****    *
  56:/usr/include/c++/4.8/bits/basic_string.h ****    *  @tparam _CharT  Type of character
  57:/usr/include/c++/4.8/bits/basic_string.h ****    *  @tparam _Traits  Traits for character type, defaults to
  58:/usr/include/c++/4.8/bits/basic_string.h ****    *                   char_traits<_CharT>.
  59:/usr/include/c++/4.8/bits/basic_string.h ****    *  @tparam _Alloc  Allocator type, defaults to allocator<_CharT>.
  60:/usr/include/c++/4.8/bits/basic_string.h ****    *
  61:/usr/include/c++/4.8/bits/basic_string.h ****    *  Meets the requirements of a <a href="tables.html#65">container</a>, a
  62:/usr/include/c++/4.8/bits/basic_string.h ****    *  <a href="tables.html#66">reversible container</a>, and a
  63:/usr/include/c++/4.8/bits/basic_string.h ****    *  <a href="tables.html#67">sequence</a>.  Of the
  64:/usr/include/c++/4.8/bits/basic_string.h ****    *  <a href="tables.html#68">optional sequence requirements</a>, only
  65:/usr/include/c++/4.8/bits/basic_string.h ****    *  @c push_back, @c at, and @c %array access are supported.
  66:/usr/include/c++/4.8/bits/basic_string.h ****    *
  67:/usr/include/c++/4.8/bits/basic_string.h ****    *  @doctodo
  68:/usr/include/c++/4.8/bits/basic_string.h ****    *
  69:/usr/include/c++/4.8/bits/basic_string.h ****    *
  70:/usr/include/c++/4.8/bits/basic_string.h ****    *  Documentation?  What's that?
  71:/usr/include/c++/4.8/bits/basic_string.h ****    *  Nathan Myers <ncm@cantrip.org>.
  72:/usr/include/c++/4.8/bits/basic_string.h ****    *
  73:/usr/include/c++/4.8/bits/basic_string.h ****    *  A string looks like this:
  74:/usr/include/c++/4.8/bits/basic_string.h ****    *
  75:/usr/include/c++/4.8/bits/basic_string.h ****    *  @code
  76:/usr/include/c++/4.8/bits/basic_string.h ****    *                                        [_Rep]
  77:/usr/include/c++/4.8/bits/basic_string.h ****    *                                        _M_length
  78:/usr/include/c++/4.8/bits/basic_string.h ****    *   [basic_string<char_type>]            _M_capacity
  79:/usr/include/c++/4.8/bits/basic_string.h ****    *   _M_dataplus                          _M_refcount
  80:/usr/include/c++/4.8/bits/basic_string.h ****    *   _M_p ---------------->               unnamed array of char_type
  81:/usr/include/c++/4.8/bits/basic_string.h ****    *  @endcode
  82:/usr/include/c++/4.8/bits/basic_string.h ****    *
  83:/usr/include/c++/4.8/bits/basic_string.h ****    *  Where the _M_p points to the first character in the string, and
  84:/usr/include/c++/4.8/bits/basic_string.h ****    *  you cast it to a pointer-to-_Rep and subtract 1 to get a
  85:/usr/include/c++/4.8/bits/basic_string.h ****    *  pointer to the header.
  86:/usr/include/c++/4.8/bits/basic_string.h ****    *
  87:/usr/include/c++/4.8/bits/basic_string.h ****    *  This approach has the enormous advantage that a string object
  88:/usr/include/c++/4.8/bits/basic_string.h ****    *  requires only one allocation.  All the ugliness is confined
  89:/usr/include/c++/4.8/bits/basic_string.h ****    *  within a single %pair of inline functions, which each compile to
  90:/usr/include/c++/4.8/bits/basic_string.h ****    *  a single @a add instruction: _Rep::_M_data(), and
  91:/usr/include/c++/4.8/bits/basic_string.h ****    *  string::_M_rep(); and the allocation function which gets a
  92:/usr/include/c++/4.8/bits/basic_string.h ****    *  block of raw bytes and with room enough and constructs a _Rep
  93:/usr/include/c++/4.8/bits/basic_string.h ****    *  object at the front.
  94:/usr/include/c++/4.8/bits/basic_string.h ****    *
  95:/usr/include/c++/4.8/bits/basic_string.h ****    *  The reason you want _M_data pointing to the character %array and
  96:/usr/include/c++/4.8/bits/basic_string.h ****    *  not the _Rep is so that the debugger can see the string
  97:/usr/include/c++/4.8/bits/basic_string.h ****    *  contents. (Probably we should add a non-inline member to get
  98:/usr/include/c++/4.8/bits/basic_string.h ****    *  the _Rep for the debugger to use, so users can check the actual
  99:/usr/include/c++/4.8/bits/basic_string.h ****    *  string length.)
 100:/usr/include/c++/4.8/bits/basic_string.h ****    *
 101:/usr/include/c++/4.8/bits/basic_string.h ****    *  Note that the _Rep object is a POD so that you can have a
 102:/usr/include/c++/4.8/bits/basic_string.h ****    *  static <em>empty string</em> _Rep object already @a constructed before
 103:/usr/include/c++/4.8/bits/basic_string.h ****    *  static constructors have run.  The reference-count encoding is
 104:/usr/include/c++/4.8/bits/basic_string.h ****    *  chosen so that a 0 indicates one reference, so you never try to
 105:/usr/include/c++/4.8/bits/basic_string.h ****    *  destroy the empty-string _Rep object.
 106:/usr/include/c++/4.8/bits/basic_string.h ****    *
 107:/usr/include/c++/4.8/bits/basic_string.h ****    *  All but the last paragraph is considered pretty conventional
 108:/usr/include/c++/4.8/bits/basic_string.h ****    *  for a C++ string implementation.
 109:/usr/include/c++/4.8/bits/basic_string.h ****   */
 110:/usr/include/c++/4.8/bits/basic_string.h ****   // 21.3  Template class basic_string
 111:/usr/include/c++/4.8/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
 112:/usr/include/c++/4.8/bits/basic_string.h ****     class basic_string
 113:/usr/include/c++/4.8/bits/basic_string.h ****     {
 114:/usr/include/c++/4.8/bits/basic_string.h ****       typedef typename _Alloc::template rebind<_CharT>::other _CharT_alloc_type;
 115:/usr/include/c++/4.8/bits/basic_string.h **** 
 116:/usr/include/c++/4.8/bits/basic_string.h ****       // Types:
 117:/usr/include/c++/4.8/bits/basic_string.h ****     public:
 118:/usr/include/c++/4.8/bits/basic_string.h ****       typedef _Traits					    traits_type;
 119:/usr/include/c++/4.8/bits/basic_string.h ****       typedef typename _Traits::char_type		    value_type;
 120:/usr/include/c++/4.8/bits/basic_string.h ****       typedef _Alloc					    allocator_type;
 121:/usr/include/c++/4.8/bits/basic_string.h ****       typedef typename _CharT_alloc_type::size_type	    size_type;
 122:/usr/include/c++/4.8/bits/basic_string.h ****       typedef typename _CharT_alloc_type::difference_type   difference_type;
 123:/usr/include/c++/4.8/bits/basic_string.h ****       typedef typename _CharT_alloc_type::reference	    reference;
 124:/usr/include/c++/4.8/bits/basic_string.h ****       typedef typename _CharT_alloc_type::const_reference   const_reference;
 125:/usr/include/c++/4.8/bits/basic_string.h ****       typedef typename _CharT_alloc_type::pointer	    pointer;
 126:/usr/include/c++/4.8/bits/basic_string.h ****       typedef typename _CharT_alloc_type::const_pointer	    const_pointer;
 127:/usr/include/c++/4.8/bits/basic_string.h ****       typedef __gnu_cxx::__normal_iterator<pointer, basic_string>  iterator;
 128:/usr/include/c++/4.8/bits/basic_string.h ****       typedef __gnu_cxx::__normal_iterator<const_pointer, basic_string>
 129:/usr/include/c++/4.8/bits/basic_string.h ****                                                             const_iterator;
 130:/usr/include/c++/4.8/bits/basic_string.h ****       typedef std::reverse_iterator<const_iterator>	const_reverse_iterator;
 131:/usr/include/c++/4.8/bits/basic_string.h ****       typedef std::reverse_iterator<iterator>		    reverse_iterator;
 132:/usr/include/c++/4.8/bits/basic_string.h **** 
 133:/usr/include/c++/4.8/bits/basic_string.h ****     private:
 134:/usr/include/c++/4.8/bits/basic_string.h ****       // _Rep: string representation
 135:/usr/include/c++/4.8/bits/basic_string.h ****       //   Invariants:
 136:/usr/include/c++/4.8/bits/basic_string.h ****       //   1. String really contains _M_length + 1 characters: due to 21.3.4
 137:/usr/include/c++/4.8/bits/basic_string.h ****       //      must be kept null-terminated.
 138:/usr/include/c++/4.8/bits/basic_string.h ****       //   2. _M_capacity >= _M_length
 139:/usr/include/c++/4.8/bits/basic_string.h ****       //      Allocated memory is always (_M_capacity + 1) * sizeof(_CharT).
 140:/usr/include/c++/4.8/bits/basic_string.h ****       //   3. _M_refcount has three states:
 141:/usr/include/c++/4.8/bits/basic_string.h ****       //      -1: leaked, one reference, no ref-copies allowed, non-const.
 142:/usr/include/c++/4.8/bits/basic_string.h ****       //       0: one reference, non-const.
 143:/usr/include/c++/4.8/bits/basic_string.h ****       //     n>0: n + 1 references, operations require a lock, const.
 144:/usr/include/c++/4.8/bits/basic_string.h ****       //   4. All fields==0 is an empty string, given the extra storage
 145:/usr/include/c++/4.8/bits/basic_string.h ****       //      beyond-the-end for a null terminator; thus, the shared
 146:/usr/include/c++/4.8/bits/basic_string.h ****       //      empty string representation needs no constructor.
 147:/usr/include/c++/4.8/bits/basic_string.h **** 
 148:/usr/include/c++/4.8/bits/basic_string.h ****       struct _Rep_base
 149:/usr/include/c++/4.8/bits/basic_string.h ****       {
 150:/usr/include/c++/4.8/bits/basic_string.h **** 	size_type		_M_length;
 151:/usr/include/c++/4.8/bits/basic_string.h **** 	size_type		_M_capacity;
 152:/usr/include/c++/4.8/bits/basic_string.h **** 	_Atomic_word		_M_refcount;
 153:/usr/include/c++/4.8/bits/basic_string.h ****       };
 154:/usr/include/c++/4.8/bits/basic_string.h **** 
 155:/usr/include/c++/4.8/bits/basic_string.h ****       struct _Rep : _Rep_base
 156:/usr/include/c++/4.8/bits/basic_string.h ****       {
 157:/usr/include/c++/4.8/bits/basic_string.h **** 	// Types:
 158:/usr/include/c++/4.8/bits/basic_string.h **** 	typedef typename _Alloc::template rebind<char>::other _Raw_bytes_alloc;
 159:/usr/include/c++/4.8/bits/basic_string.h **** 
 160:/usr/include/c++/4.8/bits/basic_string.h **** 	// (Public) Data members:
 161:/usr/include/c++/4.8/bits/basic_string.h **** 
 162:/usr/include/c++/4.8/bits/basic_string.h **** 	// The maximum number of individual char_type elements of an
 163:/usr/include/c++/4.8/bits/basic_string.h **** 	// individual string is determined by _S_max_size. This is the
 164:/usr/include/c++/4.8/bits/basic_string.h **** 	// value that will be returned by max_size().  (Whereas npos
 165:/usr/include/c++/4.8/bits/basic_string.h **** 	// is the maximum number of bytes the allocator can allocate.)
 166:/usr/include/c++/4.8/bits/basic_string.h **** 	// If one was to divvy up the theoretical largest size string,
 167:/usr/include/c++/4.8/bits/basic_string.h **** 	// with a terminating character and m _CharT elements, it'd
 168:/usr/include/c++/4.8/bits/basic_string.h **** 	// look like this:
 169:/usr/include/c++/4.8/bits/basic_string.h **** 	// npos = sizeof(_Rep) + (m * sizeof(_CharT)) + sizeof(_CharT)
 170:/usr/include/c++/4.8/bits/basic_string.h **** 	// Solving for m:
 171:/usr/include/c++/4.8/bits/basic_string.h **** 	// m = ((npos - sizeof(_Rep))/sizeof(CharT)) - 1
 172:/usr/include/c++/4.8/bits/basic_string.h **** 	// In addition, this implementation quarters this amount.
 173:/usr/include/c++/4.8/bits/basic_string.h **** 	static const size_type	_S_max_size;
 174:/usr/include/c++/4.8/bits/basic_string.h **** 	static const _CharT	_S_terminal;
 175:/usr/include/c++/4.8/bits/basic_string.h **** 
 176:/usr/include/c++/4.8/bits/basic_string.h **** 	// The following storage is init'd to 0 by the linker, resulting
 177:/usr/include/c++/4.8/bits/basic_string.h ****         // (carefully) in an empty string with one reference.
 178:/usr/include/c++/4.8/bits/basic_string.h ****         static size_type _S_empty_rep_storage[];
 179:/usr/include/c++/4.8/bits/basic_string.h **** 
 180:/usr/include/c++/4.8/bits/basic_string.h ****         static _Rep&
 181:/usr/include/c++/4.8/bits/basic_string.h ****         _S_empty_rep()
 182:/usr/include/c++/4.8/bits/basic_string.h ****         { 
 183:/usr/include/c++/4.8/bits/basic_string.h **** 	  // NB: Mild hack to avoid strict-aliasing warnings.  Note that
 184:/usr/include/c++/4.8/bits/basic_string.h **** 	  // _S_empty_rep_storage is never modified and the punning should
 185:/usr/include/c++/4.8/bits/basic_string.h **** 	  // be reasonably safe in this case.
 186:/usr/include/c++/4.8/bits/basic_string.h **** 	  void* __p = reinterpret_cast<void*>(&_S_empty_rep_storage);
 187:/usr/include/c++/4.8/bits/basic_string.h **** 	  return *reinterpret_cast<_Rep*>(__p);
 188:/usr/include/c++/4.8/bits/basic_string.h **** 	}
 189:/usr/include/c++/4.8/bits/basic_string.h **** 
 190:/usr/include/c++/4.8/bits/basic_string.h ****         bool
 191:/usr/include/c++/4.8/bits/basic_string.h **** 	_M_is_leaked() const
 192:/usr/include/c++/4.8/bits/basic_string.h ****         { return this->_M_refcount < 0; }
 193:/usr/include/c++/4.8/bits/basic_string.h **** 
 194:/usr/include/c++/4.8/bits/basic_string.h ****         bool
 195:/usr/include/c++/4.8/bits/basic_string.h **** 	_M_is_shared() const
 196:/usr/include/c++/4.8/bits/basic_string.h ****         { return this->_M_refcount > 0; }
 197:/usr/include/c++/4.8/bits/basic_string.h **** 
 198:/usr/include/c++/4.8/bits/basic_string.h ****         void
 199:/usr/include/c++/4.8/bits/basic_string.h **** 	_M_set_leaked()
 200:/usr/include/c++/4.8/bits/basic_string.h ****         { this->_M_refcount = -1; }
 201:/usr/include/c++/4.8/bits/basic_string.h **** 
 202:/usr/include/c++/4.8/bits/basic_string.h ****         void
 203:/usr/include/c++/4.8/bits/basic_string.h **** 	_M_set_sharable()
 204:/usr/include/c++/4.8/bits/basic_string.h ****         { this->_M_refcount = 0; }
 205:/usr/include/c++/4.8/bits/basic_string.h **** 
 206:/usr/include/c++/4.8/bits/basic_string.h **** 	void
 207:/usr/include/c++/4.8/bits/basic_string.h **** 	_M_set_length_and_sharable(size_type __n)
 208:/usr/include/c++/4.8/bits/basic_string.h **** 	{
 209:/usr/include/c++/4.8/bits/basic_string.h **** #if _GLIBCXX_FULLY_DYNAMIC_STRING == 0
 210:/usr/include/c++/4.8/bits/basic_string.h **** 	  if (__builtin_expect(this != &_S_empty_rep(), false))
 211:/usr/include/c++/4.8/bits/basic_string.h **** #endif
 212:/usr/include/c++/4.8/bits/basic_string.h **** 	    {
 213:/usr/include/c++/4.8/bits/basic_string.h **** 	      this->_M_set_sharable();  // One reference.
 214:/usr/include/c++/4.8/bits/basic_string.h **** 	      this->_M_length = __n;
 215:/usr/include/c++/4.8/bits/basic_string.h **** 	      traits_type::assign(this->_M_refdata()[__n], _S_terminal);
 216:/usr/include/c++/4.8/bits/basic_string.h **** 	      // grrr. (per 21.3.4)
 217:/usr/include/c++/4.8/bits/basic_string.h **** 	      // You cannot leave those LWG people alone for a second.
 218:/usr/include/c++/4.8/bits/basic_string.h **** 	    }
 219:/usr/include/c++/4.8/bits/basic_string.h **** 	}
 220:/usr/include/c++/4.8/bits/basic_string.h **** 
 221:/usr/include/c++/4.8/bits/basic_string.h **** 	_CharT*
 222:/usr/include/c++/4.8/bits/basic_string.h **** 	_M_refdata() throw()
 223:/usr/include/c++/4.8/bits/basic_string.h **** 	{ return reinterpret_cast<_CharT*>(this + 1); }
 224:/usr/include/c++/4.8/bits/basic_string.h **** 
 225:/usr/include/c++/4.8/bits/basic_string.h **** 	_CharT*
 226:/usr/include/c++/4.8/bits/basic_string.h **** 	_M_grab(const _Alloc& __alloc1, const _Alloc& __alloc2)
 227:/usr/include/c++/4.8/bits/basic_string.h **** 	{
 228:/usr/include/c++/4.8/bits/basic_string.h **** 	  return (!_M_is_leaked() && __alloc1 == __alloc2)
 229:/usr/include/c++/4.8/bits/basic_string.h **** 	          ? _M_refcopy() : _M_clone(__alloc1);
 230:/usr/include/c++/4.8/bits/basic_string.h **** 	}
 231:/usr/include/c++/4.8/bits/basic_string.h **** 
 232:/usr/include/c++/4.8/bits/basic_string.h **** 	// Create & Destroy
 233:/usr/include/c++/4.8/bits/basic_string.h **** 	static _Rep*
 234:/usr/include/c++/4.8/bits/basic_string.h **** 	_S_create(size_type, size_type, const _Alloc&);
 235:/usr/include/c++/4.8/bits/basic_string.h **** 
 236:/usr/include/c++/4.8/bits/basic_string.h **** 	void
 237:/usr/include/c++/4.8/bits/basic_string.h **** 	_M_dispose(const _Alloc& __a)
 238:/usr/include/c++/4.8/bits/basic_string.h **** 	{
 239:/usr/include/c++/4.8/bits/basic_string.h **** #if _GLIBCXX_FULLY_DYNAMIC_STRING == 0
 240:/usr/include/c++/4.8/bits/basic_string.h **** 	  if (__builtin_expect(this != &_S_empty_rep(), false))
 241:/usr/include/c++/4.8/bits/basic_string.h **** #endif
 242:/usr/include/c++/4.8/bits/basic_string.h **** 	    {
 243:/usr/include/c++/4.8/bits/basic_string.h **** 	      // Be race-detector-friendly.  For more info see bits/c++config.
 244:/usr/include/c++/4.8/bits/basic_string.h **** 	      _GLIBCXX_SYNCHRONIZATION_HAPPENS_BEFORE(&this->_M_refcount);
 245:/usr/include/c++/4.8/bits/basic_string.h **** 	      if (__gnu_cxx::__exchange_and_add_dispatch(&this->_M_refcount,
 246:/usr/include/c++/4.8/bits/basic_string.h **** 							 -1) <= 0)
 247:/usr/include/c++/4.8/bits/basic_string.h **** 		{
 248:/usr/include/c++/4.8/bits/basic_string.h **** 		  _GLIBCXX_SYNCHRONIZATION_HAPPENS_AFTER(&this->_M_refcount);
 249:/usr/include/c++/4.8/bits/basic_string.h **** 		  _M_destroy(__a);
 250:/usr/include/c++/4.8/bits/basic_string.h **** 		}
 251:/usr/include/c++/4.8/bits/basic_string.h **** 	    }
 252:/usr/include/c++/4.8/bits/basic_string.h **** 	}  // XXX MT
 253:/usr/include/c++/4.8/bits/basic_string.h **** 
 254:/usr/include/c++/4.8/bits/basic_string.h **** 	void
 255:/usr/include/c++/4.8/bits/basic_string.h **** 	_M_destroy(const _Alloc&) throw();
 256:/usr/include/c++/4.8/bits/basic_string.h **** 
 257:/usr/include/c++/4.8/bits/basic_string.h **** 	_CharT*
 258:/usr/include/c++/4.8/bits/basic_string.h **** 	_M_refcopy() throw()
 259:/usr/include/c++/4.8/bits/basic_string.h **** 	{
 260:/usr/include/c++/4.8/bits/basic_string.h **** #if _GLIBCXX_FULLY_DYNAMIC_STRING == 0
 261:/usr/include/c++/4.8/bits/basic_string.h **** 	  if (__builtin_expect(this != &_S_empty_rep(), false))
 262:/usr/include/c++/4.8/bits/basic_string.h **** #endif
 263:/usr/include/c++/4.8/bits/basic_string.h ****             __gnu_cxx::__atomic_add_dispatch(&this->_M_refcount, 1);
 264:/usr/include/c++/4.8/bits/basic_string.h **** 	  return _M_refdata();
 265:/usr/include/c++/4.8/bits/basic_string.h **** 	}  // XXX MT
 266:/usr/include/c++/4.8/bits/basic_string.h **** 
 267:/usr/include/c++/4.8/bits/basic_string.h **** 	_CharT*
 268:/usr/include/c++/4.8/bits/basic_string.h **** 	_M_clone(const _Alloc&, size_type __res = 0);
 269:/usr/include/c++/4.8/bits/basic_string.h ****       };
 270:/usr/include/c++/4.8/bits/basic_string.h **** 
 271:/usr/include/c++/4.8/bits/basic_string.h ****       // Use empty-base optimization: http://www.cantrip.org/emptyopt.html
 272:/usr/include/c++/4.8/bits/basic_string.h ****       struct _Alloc_hider : _Alloc
 273:/usr/include/c++/4.8/bits/basic_string.h ****       {
 274:/usr/include/c++/4.8/bits/basic_string.h **** 	_Alloc_hider(_CharT* __dat, const _Alloc& __a)
 275:/usr/include/c++/4.8/bits/basic_string.h **** 	: _Alloc(__a), _M_p(__dat) { }
 276:/usr/include/c++/4.8/bits/basic_string.h **** 
 277:/usr/include/c++/4.8/bits/basic_string.h **** 	_CharT* _M_p; // The actual data.
 278:/usr/include/c++/4.8/bits/basic_string.h ****       };
 279:/usr/include/c++/4.8/bits/basic_string.h **** 
 280:/usr/include/c++/4.8/bits/basic_string.h ****     public:
 281:/usr/include/c++/4.8/bits/basic_string.h ****       // Data Members (public):
 282:/usr/include/c++/4.8/bits/basic_string.h ****       // NB: This is an unsigned type, and thus represents the maximum
 283:/usr/include/c++/4.8/bits/basic_string.h ****       // size that the allocator can hold.
 284:/usr/include/c++/4.8/bits/basic_string.h ****       ///  Value returned by various member functions when they fail.
 285:/usr/include/c++/4.8/bits/basic_string.h ****       static const size_type	npos = static_cast<size_type>(-1);
 286:/usr/include/c++/4.8/bits/basic_string.h **** 
 287:/usr/include/c++/4.8/bits/basic_string.h ****     private:
 288:/usr/include/c++/4.8/bits/basic_string.h ****       // Data Members (private):
 289:/usr/include/c++/4.8/bits/basic_string.h ****       mutable _Alloc_hider	_M_dataplus;
 290:/usr/include/c++/4.8/bits/basic_string.h **** 
 291:/usr/include/c++/4.8/bits/basic_string.h ****       _CharT*
 292:/usr/include/c++/4.8/bits/basic_string.h ****       _M_data() const
 293:/usr/include/c++/4.8/bits/basic_string.h ****       { return  _M_dataplus._M_p; }
 294:/usr/include/c++/4.8/bits/basic_string.h **** 
 295:/usr/include/c++/4.8/bits/basic_string.h ****       _CharT*
 296:/usr/include/c++/4.8/bits/basic_string.h ****       _M_data(_CharT* __p)
 297:/usr/include/c++/4.8/bits/basic_string.h ****       { return (_M_dataplus._M_p = __p); }
 298:/usr/include/c++/4.8/bits/basic_string.h **** 
 299:/usr/include/c++/4.8/bits/basic_string.h ****       _Rep*
 300:/usr/include/c++/4.8/bits/basic_string.h ****       _M_rep() const
 301:/usr/include/c++/4.8/bits/basic_string.h ****       { return &((reinterpret_cast<_Rep*> (_M_data()))[-1]); }
 302:/usr/include/c++/4.8/bits/basic_string.h **** 
 303:/usr/include/c++/4.8/bits/basic_string.h ****       // For the internal use we have functions similar to `begin'/`end'
 304:/usr/include/c++/4.8/bits/basic_string.h ****       // but they do not call _M_leak.
 305:/usr/include/c++/4.8/bits/basic_string.h ****       iterator
 306:/usr/include/c++/4.8/bits/basic_string.h ****       _M_ibegin() const
 307:/usr/include/c++/4.8/bits/basic_string.h ****       { return iterator(_M_data()); }
 308:/usr/include/c++/4.8/bits/basic_string.h **** 
 309:/usr/include/c++/4.8/bits/basic_string.h ****       iterator
 310:/usr/include/c++/4.8/bits/basic_string.h ****       _M_iend() const
 311:/usr/include/c++/4.8/bits/basic_string.h ****       { return iterator(_M_data() + this->size()); }
 312:/usr/include/c++/4.8/bits/basic_string.h **** 
 313:/usr/include/c++/4.8/bits/basic_string.h ****       void
 314:/usr/include/c++/4.8/bits/basic_string.h ****       _M_leak()    // for use in begin() & non-const op[]
 315:/usr/include/c++/4.8/bits/basic_string.h ****       {
 316:/usr/include/c++/4.8/bits/basic_string.h **** 	if (!_M_rep()->_M_is_leaked())
 317:/usr/include/c++/4.8/bits/basic_string.h **** 	  _M_leak_hard();
 318:/usr/include/c++/4.8/bits/basic_string.h ****       }
 319:/usr/include/c++/4.8/bits/basic_string.h **** 
 320:/usr/include/c++/4.8/bits/basic_string.h ****       size_type
 321:/usr/include/c++/4.8/bits/basic_string.h ****       _M_check(size_type __pos, const char* __s) const
 322:/usr/include/c++/4.8/bits/basic_string.h ****       {
 323:/usr/include/c++/4.8/bits/basic_string.h **** 	if (__pos > this->size())
 324:/usr/include/c++/4.8/bits/basic_string.h **** 	  __throw_out_of_range(__N(__s));
 325:/usr/include/c++/4.8/bits/basic_string.h **** 	return __pos;
 326:/usr/include/c++/4.8/bits/basic_string.h ****       }
 327:/usr/include/c++/4.8/bits/basic_string.h **** 
 328:/usr/include/c++/4.8/bits/basic_string.h ****       void
 329:/usr/include/c++/4.8/bits/basic_string.h ****       _M_check_length(size_type __n1, size_type __n2, const char* __s) const
 330:/usr/include/c++/4.8/bits/basic_string.h ****       {
 331:/usr/include/c++/4.8/bits/basic_string.h **** 	if (this->max_size() - (this->size() - __n1) < __n2)
 332:/usr/include/c++/4.8/bits/basic_string.h **** 	  __throw_length_error(__N(__s));
 333:/usr/include/c++/4.8/bits/basic_string.h ****       }
 334:/usr/include/c++/4.8/bits/basic_string.h **** 
 335:/usr/include/c++/4.8/bits/basic_string.h ****       // NB: _M_limit doesn't check for a bad __pos value.
 336:/usr/include/c++/4.8/bits/basic_string.h ****       size_type
 337:/usr/include/c++/4.8/bits/basic_string.h ****       _M_limit(size_type __pos, size_type __off) const
 338:/usr/include/c++/4.8/bits/basic_string.h ****       {
 339:/usr/include/c++/4.8/bits/basic_string.h **** 	const bool __testoff =  __off < this->size() - __pos;
 340:/usr/include/c++/4.8/bits/basic_string.h **** 	return __testoff ? __off : this->size() - __pos;
 341:/usr/include/c++/4.8/bits/basic_string.h ****       }
 342:/usr/include/c++/4.8/bits/basic_string.h **** 
 343:/usr/include/c++/4.8/bits/basic_string.h ****       // True if _Rep and source do not overlap.
 344:/usr/include/c++/4.8/bits/basic_string.h ****       bool
 345:/usr/include/c++/4.8/bits/basic_string.h ****       _M_disjunct(const _CharT* __s) const
 346:/usr/include/c++/4.8/bits/basic_string.h ****       {
 347:/usr/include/c++/4.8/bits/basic_string.h **** 	return (less<const _CharT*>()(__s, _M_data())
 348:/usr/include/c++/4.8/bits/basic_string.h **** 		|| less<const _CharT*>()(_M_data() + this->size(), __s));
 349:/usr/include/c++/4.8/bits/basic_string.h ****       }
 350:/usr/include/c++/4.8/bits/basic_string.h **** 
 351:/usr/include/c++/4.8/bits/basic_string.h ****       // When __n = 1 way faster than the general multichar
 352:/usr/include/c++/4.8/bits/basic_string.h ****       // traits_type::copy/move/assign.
 353:/usr/include/c++/4.8/bits/basic_string.h ****       static void
 354:/usr/include/c++/4.8/bits/basic_string.h ****       _M_copy(_CharT* __d, const _CharT* __s, size_type __n)
 355:/usr/include/c++/4.8/bits/basic_string.h ****       {
 356:/usr/include/c++/4.8/bits/basic_string.h **** 	if (__n == 1)
 357:/usr/include/c++/4.8/bits/basic_string.h **** 	  traits_type::assign(*__d, *__s);
 358:/usr/include/c++/4.8/bits/basic_string.h **** 	else
 359:/usr/include/c++/4.8/bits/basic_string.h **** 	  traits_type::copy(__d, __s, __n);
 360:/usr/include/c++/4.8/bits/basic_string.h ****       }
 361:/usr/include/c++/4.8/bits/basic_string.h **** 
 362:/usr/include/c++/4.8/bits/basic_string.h ****       static void
 363:/usr/include/c++/4.8/bits/basic_string.h ****       _M_move(_CharT* __d, const _CharT* __s, size_type __n)
 364:/usr/include/c++/4.8/bits/basic_string.h ****       {
 365:/usr/include/c++/4.8/bits/basic_string.h **** 	if (__n == 1)
 366:/usr/include/c++/4.8/bits/basic_string.h **** 	  traits_type::assign(*__d, *__s);
 367:/usr/include/c++/4.8/bits/basic_string.h **** 	else
 368:/usr/include/c++/4.8/bits/basic_string.h **** 	  traits_type::move(__d, __s, __n);	  
 369:/usr/include/c++/4.8/bits/basic_string.h ****       }
 370:/usr/include/c++/4.8/bits/basic_string.h **** 
 371:/usr/include/c++/4.8/bits/basic_string.h ****       static void
 372:/usr/include/c++/4.8/bits/basic_string.h ****       _M_assign(_CharT* __d, size_type __n, _CharT __c)
 373:/usr/include/c++/4.8/bits/basic_string.h ****       {
 374:/usr/include/c++/4.8/bits/basic_string.h **** 	if (__n == 1)
 375:/usr/include/c++/4.8/bits/basic_string.h **** 	  traits_type::assign(*__d, __c);
 376:/usr/include/c++/4.8/bits/basic_string.h **** 	else
 377:/usr/include/c++/4.8/bits/basic_string.h **** 	  traits_type::assign(__d, __n, __c);	  
 378:/usr/include/c++/4.8/bits/basic_string.h ****       }
 379:/usr/include/c++/4.8/bits/basic_string.h **** 
 380:/usr/include/c++/4.8/bits/basic_string.h ****       // _S_copy_chars is a separate template to permit specialization
 381:/usr/include/c++/4.8/bits/basic_string.h ****       // to optimize for the common case of pointers as iterators.
 382:/usr/include/c++/4.8/bits/basic_string.h ****       template<class _Iterator>
 383:/usr/include/c++/4.8/bits/basic_string.h ****         static void
 384:/usr/include/c++/4.8/bits/basic_string.h ****         _S_copy_chars(_CharT* __p, _Iterator __k1, _Iterator __k2)
 385:/usr/include/c++/4.8/bits/basic_string.h ****         {
 386:/usr/include/c++/4.8/bits/basic_string.h **** 	  for (; __k1 != __k2; ++__k1, ++__p)
 387:/usr/include/c++/4.8/bits/basic_string.h **** 	    traits_type::assign(*__p, *__k1); // These types are off.
 388:/usr/include/c++/4.8/bits/basic_string.h **** 	}
 389:/usr/include/c++/4.8/bits/basic_string.h **** 
 390:/usr/include/c++/4.8/bits/basic_string.h ****       static void
 391:/usr/include/c++/4.8/bits/basic_string.h ****       _S_copy_chars(_CharT* __p, iterator __k1, iterator __k2)
 392:/usr/include/c++/4.8/bits/basic_string.h ****       { _S_copy_chars(__p, __k1.base(), __k2.base()); }
 393:/usr/include/c++/4.8/bits/basic_string.h **** 
 394:/usr/include/c++/4.8/bits/basic_string.h ****       static void
 395:/usr/include/c++/4.8/bits/basic_string.h ****       _S_copy_chars(_CharT* __p, const_iterator __k1, const_iterator __k2)
 396:/usr/include/c++/4.8/bits/basic_string.h ****       { _S_copy_chars(__p, __k1.base(), __k2.base()); }
 397:/usr/include/c++/4.8/bits/basic_string.h **** 
 398:/usr/include/c++/4.8/bits/basic_string.h ****       static void
 399:/usr/include/c++/4.8/bits/basic_string.h ****       _S_copy_chars(_CharT* __p, _CharT* __k1, _CharT* __k2)
 400:/usr/include/c++/4.8/bits/basic_string.h ****       { _M_copy(__p, __k1, __k2 - __k1); }
 401:/usr/include/c++/4.8/bits/basic_string.h **** 
 402:/usr/include/c++/4.8/bits/basic_string.h ****       static void
 403:/usr/include/c++/4.8/bits/basic_string.h ****       _S_copy_chars(_CharT* __p, const _CharT* __k1, const _CharT* __k2)
 404:/usr/include/c++/4.8/bits/basic_string.h ****       { _M_copy(__p, __k1, __k2 - __k1); }
 405:/usr/include/c++/4.8/bits/basic_string.h **** 
 406:/usr/include/c++/4.8/bits/basic_string.h ****       static int
 407:/usr/include/c++/4.8/bits/basic_string.h ****       _S_compare(size_type __n1, size_type __n2)
 408:/usr/include/c++/4.8/bits/basic_string.h ****       {
 409:/usr/include/c++/4.8/bits/basic_string.h **** 	const difference_type __d = difference_type(__n1 - __n2);
 410:/usr/include/c++/4.8/bits/basic_string.h **** 
 411:/usr/include/c++/4.8/bits/basic_string.h **** 	if (__d > __gnu_cxx::__numeric_traits<int>::__max)
 412:/usr/include/c++/4.8/bits/basic_string.h **** 	  return __gnu_cxx::__numeric_traits<int>::__max;
 413:/usr/include/c++/4.8/bits/basic_string.h **** 	else if (__d < __gnu_cxx::__numeric_traits<int>::__min)
 414:/usr/include/c++/4.8/bits/basic_string.h **** 	  return __gnu_cxx::__numeric_traits<int>::__min;
 415:/usr/include/c++/4.8/bits/basic_string.h **** 	else
 416:/usr/include/c++/4.8/bits/basic_string.h **** 	  return int(__d);
 417:/usr/include/c++/4.8/bits/basic_string.h ****       }
 418:/usr/include/c++/4.8/bits/basic_string.h **** 
 419:/usr/include/c++/4.8/bits/basic_string.h ****       void
 420:/usr/include/c++/4.8/bits/basic_string.h ****       _M_mutate(size_type __pos, size_type __len1, size_type __len2);
 421:/usr/include/c++/4.8/bits/basic_string.h **** 
 422:/usr/include/c++/4.8/bits/basic_string.h ****       void
 423:/usr/include/c++/4.8/bits/basic_string.h ****       _M_leak_hard();
 424:/usr/include/c++/4.8/bits/basic_string.h **** 
 425:/usr/include/c++/4.8/bits/basic_string.h ****       static _Rep&
 426:/usr/include/c++/4.8/bits/basic_string.h ****       _S_empty_rep()
 427:/usr/include/c++/4.8/bits/basic_string.h ****       { return _Rep::_S_empty_rep(); }
 428:/usr/include/c++/4.8/bits/basic_string.h **** 
 429:/usr/include/c++/4.8/bits/basic_string.h ****     public:
 430:/usr/include/c++/4.8/bits/basic_string.h ****       // Construct/copy/destroy:
 431:/usr/include/c++/4.8/bits/basic_string.h ****       // NB: We overload ctors in some cases instead of using default
 432:/usr/include/c++/4.8/bits/basic_string.h ****       // arguments, per 17.4.4.4 para. 2 item 2.
 433:/usr/include/c++/4.8/bits/basic_string.h **** 
 434:/usr/include/c++/4.8/bits/basic_string.h ****       /**
 435:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Default constructor creates an empty string.
 436:/usr/include/c++/4.8/bits/basic_string.h ****        */
 437:/usr/include/c++/4.8/bits/basic_string.h ****       basic_string()
 438:/usr/include/c++/4.8/bits/basic_string.h **** #if _GLIBCXX_FULLY_DYNAMIC_STRING == 0
 439:/usr/include/c++/4.8/bits/basic_string.h ****       : _M_dataplus(_S_empty_rep()._M_refdata(), _Alloc()) { }
 440:/usr/include/c++/4.8/bits/basic_string.h **** #else
 441:/usr/include/c++/4.8/bits/basic_string.h ****       : _M_dataplus(_S_construct(size_type(), _CharT(), _Alloc()), _Alloc()){ }
 442:/usr/include/c++/4.8/bits/basic_string.h **** #endif
 443:/usr/include/c++/4.8/bits/basic_string.h **** 
 444:/usr/include/c++/4.8/bits/basic_string.h ****       /**
 445:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Construct an empty string using allocator @a a.
 446:/usr/include/c++/4.8/bits/basic_string.h ****        */
 447:/usr/include/c++/4.8/bits/basic_string.h ****       explicit
 448:/usr/include/c++/4.8/bits/basic_string.h ****       basic_string(const _Alloc& __a);
 449:/usr/include/c++/4.8/bits/basic_string.h **** 
 450:/usr/include/c++/4.8/bits/basic_string.h ****       // NB: per LWG issue 42, semantics different from IS:
 451:/usr/include/c++/4.8/bits/basic_string.h ****       /**
 452:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Construct string with copy of value of @a str.
 453:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param  __str  Source string.
 454:/usr/include/c++/4.8/bits/basic_string.h ****        */
 455:/usr/include/c++/4.8/bits/basic_string.h ****       basic_string(const basic_string& __str);
 456:/usr/include/c++/4.8/bits/basic_string.h ****       /**
 457:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Construct string as copy of a substring.
 458:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param  __str  Source string.
 459:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param  __pos  Index of first character to copy from.
 460:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param  __n  Number of characters to copy (default remainder).
 461:/usr/include/c++/4.8/bits/basic_string.h ****        */
 462:/usr/include/c++/4.8/bits/basic_string.h ****       basic_string(const basic_string& __str, size_type __pos,
 463:/usr/include/c++/4.8/bits/basic_string.h **** 		   size_type __n = npos);
 464:/usr/include/c++/4.8/bits/basic_string.h ****       /**
 465:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Construct string as copy of a substring.
 466:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param  __str  Source string.
 467:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param  __pos  Index of first character to copy from.
 468:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param  __n  Number of characters to copy.
 469:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param  __a  Allocator to use.
 470:/usr/include/c++/4.8/bits/basic_string.h ****        */
 471:/usr/include/c++/4.8/bits/basic_string.h ****       basic_string(const basic_string& __str, size_type __pos,
 472:/usr/include/c++/4.8/bits/basic_string.h **** 		   size_type __n, const _Alloc& __a);
 473:/usr/include/c++/4.8/bits/basic_string.h **** 
 474:/usr/include/c++/4.8/bits/basic_string.h ****       /**
 475:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Construct string initialized by a character %array.
 476:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param  __s  Source character %array.
 477:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param  __n  Number of characters to copy.
 478:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
 479:/usr/include/c++/4.8/bits/basic_string.h ****        *
 480:/usr/include/c++/4.8/bits/basic_string.h ****        *  NB: @a __s must have at least @a __n characters, &apos;\\0&apos;
 481:/usr/include/c++/4.8/bits/basic_string.h ****        *  has no special meaning.
 482:/usr/include/c++/4.8/bits/basic_string.h ****        */
 483:/usr/include/c++/4.8/bits/basic_string.h ****       basic_string(const _CharT* __s, size_type __n,
 484:/usr/include/c++/4.8/bits/basic_string.h **** 		   const _Alloc& __a = _Alloc());
 485:/usr/include/c++/4.8/bits/basic_string.h ****       /**
 486:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Construct string as copy of a C string.
 487:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param  __s  Source C string.
 488:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
 489:/usr/include/c++/4.8/bits/basic_string.h ****        */
 490:/usr/include/c++/4.8/bits/basic_string.h ****       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc());
 491:/usr/include/c++/4.8/bits/basic_string.h ****       /**
 492:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Construct string as multiple characters.
 493:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param  __n  Number of characters.
 494:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param  __c  Character to use.
 495:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
 496:/usr/include/c++/4.8/bits/basic_string.h ****        */
 497:/usr/include/c++/4.8/bits/basic_string.h ****       basic_string(size_type __n, _CharT __c, const _Alloc& __a = _Alloc());
 498:/usr/include/c++/4.8/bits/basic_string.h **** 
 499:/usr/include/c++/4.8/bits/basic_string.h **** #if __cplusplus >= 201103L
 500:/usr/include/c++/4.8/bits/basic_string.h ****       /**
 501:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Move construct string.
 502:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param  __str  Source string.
 503:/usr/include/c++/4.8/bits/basic_string.h ****        *
 504:/usr/include/c++/4.8/bits/basic_string.h ****        *  The newly-created string contains the exact contents of @a __str.
 505:/usr/include/c++/4.8/bits/basic_string.h ****        *  @a __str is a valid, but unspecified string.
 506:/usr/include/c++/4.8/bits/basic_string.h ****        **/
 507:/usr/include/c++/4.8/bits/basic_string.h ****       basic_string(basic_string&& __str) noexcept
 508:/usr/include/c++/4.8/bits/basic_string.h ****       : _M_dataplus(__str._M_dataplus)
 509:/usr/include/c++/4.8/bits/basic_string.h ****       {
 510:/usr/include/c++/4.8/bits/basic_string.h **** #if _GLIBCXX_FULLY_DYNAMIC_STRING == 0
 511:/usr/include/c++/4.8/bits/basic_string.h **** 	__str._M_data(_S_empty_rep()._M_refdata());
 512:/usr/include/c++/4.8/bits/basic_string.h **** #else
 513:/usr/include/c++/4.8/bits/basic_string.h **** 	__str._M_data(_S_construct(size_type(), _CharT(), get_allocator()));
 514:/usr/include/c++/4.8/bits/basic_string.h **** #endif
 515:/usr/include/c++/4.8/bits/basic_string.h ****       }
 516:/usr/include/c++/4.8/bits/basic_string.h **** 
 517:/usr/include/c++/4.8/bits/basic_string.h ****       /**
 518:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Construct string from an initializer %list.
 519:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param  __l  std::initializer_list of characters.
 520:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
 521:/usr/include/c++/4.8/bits/basic_string.h ****        */
 522:/usr/include/c++/4.8/bits/basic_string.h ****       basic_string(initializer_list<_CharT> __l, const _Alloc& __a = _Alloc());
 523:/usr/include/c++/4.8/bits/basic_string.h **** #endif // C++11
 524:/usr/include/c++/4.8/bits/basic_string.h **** 
 525:/usr/include/c++/4.8/bits/basic_string.h ****       /**
 526:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Construct string as copy of a range.
 527:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param  __beg  Start of range.
 528:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param  __end  End of range.
 529:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
 530:/usr/include/c++/4.8/bits/basic_string.h ****        */
 531:/usr/include/c++/4.8/bits/basic_string.h ****       template<class _InputIterator>
 532:/usr/include/c++/4.8/bits/basic_string.h ****         basic_string(_InputIterator __beg, _InputIterator __end,
 533:/usr/include/c++/4.8/bits/basic_string.h **** 		     const _Alloc& __a = _Alloc());
 534:/usr/include/c++/4.8/bits/basic_string.h **** 
 535:/usr/include/c++/4.8/bits/basic_string.h ****       /**
 536:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Destroy the string instance.
 537:/usr/include/c++/4.8/bits/basic_string.h ****        */
 538:/usr/include/c++/4.8/bits/basic_string.h ****       ~basic_string() _GLIBCXX_NOEXCEPT
 539:/usr/include/c++/4.8/bits/basic_string.h ****       { _M_rep()->_M_dispose(this->get_allocator()); }
 540:/usr/include/c++/4.8/bits/basic_string.h **** 
 541:/usr/include/c++/4.8/bits/basic_string.h ****       /**
 542:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Assign the value of @a str to this string.
 543:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param  __str  Source string.
 544:/usr/include/c++/4.8/bits/basic_string.h ****        */
 545:/usr/include/c++/4.8/bits/basic_string.h ****       basic_string&
 546:/usr/include/c++/4.8/bits/basic_string.h ****       operator=(const basic_string& __str) 
 547:/usr/include/c++/4.8/bits/basic_string.h ****       { return this->assign(__str); }
 548:/usr/include/c++/4.8/bits/basic_string.h **** 
 549:/usr/include/c++/4.8/bits/basic_string.h ****       /**
 550:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Copy contents of @a s into this string.
 551:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param  __s  Source null-terminated string.
 552:/usr/include/c++/4.8/bits/basic_string.h ****        */
 553:/usr/include/c++/4.8/bits/basic_string.h ****       basic_string&
 554:/usr/include/c++/4.8/bits/basic_string.h ****       operator=(const _CharT* __s) 
 555:/usr/include/c++/4.8/bits/basic_string.h ****       { return this->assign(__s); }
 556:/usr/include/c++/4.8/bits/basic_string.h **** 
 557:/usr/include/c++/4.8/bits/basic_string.h ****       /**
 558:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Set value to string of length 1.
 559:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param  __c  Source character.
 560:/usr/include/c++/4.8/bits/basic_string.h ****        *
 561:/usr/include/c++/4.8/bits/basic_string.h ****        *  Assigning to a character makes this string length 1 and
 562:/usr/include/c++/4.8/bits/basic_string.h ****        *  (*this)[0] == @a c.
 563:/usr/include/c++/4.8/bits/basic_string.h ****        */
 564:/usr/include/c++/4.8/bits/basic_string.h ****       basic_string&
 565:/usr/include/c++/4.8/bits/basic_string.h ****       operator=(_CharT __c) 
 566:/usr/include/c++/4.8/bits/basic_string.h ****       { 
 567:/usr/include/c++/4.8/bits/basic_string.h **** 	this->assign(1, __c); 
 568:/usr/include/c++/4.8/bits/basic_string.h **** 	return *this;
 569:/usr/include/c++/4.8/bits/basic_string.h ****       }
 570:/usr/include/c++/4.8/bits/basic_string.h **** 
 571:/usr/include/c++/4.8/bits/basic_string.h **** #if __cplusplus >= 201103L
 572:/usr/include/c++/4.8/bits/basic_string.h ****       /**
 573:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Move assign the value of @a str to this string.
 574:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param  __str  Source string.
 575:/usr/include/c++/4.8/bits/basic_string.h ****        *
 576:/usr/include/c++/4.8/bits/basic_string.h ****        *  The contents of @a str are moved into this string (without copying).
 577:/usr/include/c++/4.8/bits/basic_string.h ****        *  @a str is a valid, but unspecified string.
 578:/usr/include/c++/4.8/bits/basic_string.h ****        **/
 579:/usr/include/c++/4.8/bits/basic_string.h ****       basic_string&
 580:/usr/include/c++/4.8/bits/basic_string.h ****       operator=(basic_string&& __str)
 581:/usr/include/c++/4.8/bits/basic_string.h ****       {
 582:/usr/include/c++/4.8/bits/basic_string.h **** 	// NB: DR 1204.
 583:/usr/include/c++/4.8/bits/basic_string.h **** 	this->swap(__str);
 584:/usr/include/c++/4.8/bits/basic_string.h **** 	return *this;
 585:/usr/include/c++/4.8/bits/basic_string.h ****       }
 586:/usr/include/c++/4.8/bits/basic_string.h **** 
 587:/usr/include/c++/4.8/bits/basic_string.h ****       /**
 588:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Set value to string constructed from initializer %list.
 589:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param  __l  std::initializer_list.
 590:/usr/include/c++/4.8/bits/basic_string.h ****        */
 591:/usr/include/c++/4.8/bits/basic_string.h ****       basic_string&
 592:/usr/include/c++/4.8/bits/basic_string.h ****       operator=(initializer_list<_CharT> __l)
 593:/usr/include/c++/4.8/bits/basic_string.h ****       {
 594:/usr/include/c++/4.8/bits/basic_string.h **** 	this->assign(__l.begin(), __l.size());
 595:/usr/include/c++/4.8/bits/basic_string.h **** 	return *this;
 596:/usr/include/c++/4.8/bits/basic_string.h ****       }
 597:/usr/include/c++/4.8/bits/basic_string.h **** #endif // C++11
 598:/usr/include/c++/4.8/bits/basic_string.h **** 
 599:/usr/include/c++/4.8/bits/basic_string.h ****       // Iterators:
 600:/usr/include/c++/4.8/bits/basic_string.h ****       /**
 601:/usr/include/c++/4.8/bits/basic_string.h ****        *  Returns a read/write iterator that points to the first character in
 602:/usr/include/c++/4.8/bits/basic_string.h ****        *  the %string.  Unshares the string.
 603:/usr/include/c++/4.8/bits/basic_string.h ****        */
 604:/usr/include/c++/4.8/bits/basic_string.h ****       iterator
 605:/usr/include/c++/4.8/bits/basic_string.h ****       begin() _GLIBCXX_NOEXCEPT
 606:/usr/include/c++/4.8/bits/basic_string.h ****       {
 607:/usr/include/c++/4.8/bits/basic_string.h **** 	_M_leak();
 608:/usr/include/c++/4.8/bits/basic_string.h **** 	return iterator(_M_data());
 609:/usr/include/c++/4.8/bits/basic_string.h ****       }
 610:/usr/include/c++/4.8/bits/basic_string.h **** 
 611:/usr/include/c++/4.8/bits/basic_string.h ****       /**
 612:/usr/include/c++/4.8/bits/basic_string.h ****        *  Returns a read-only (constant) iterator that points to the first
 613:/usr/include/c++/4.8/bits/basic_string.h ****        *  character in the %string.
 614:/usr/include/c++/4.8/bits/basic_string.h ****        */
 615:/usr/include/c++/4.8/bits/basic_string.h ****       const_iterator
 616:/usr/include/c++/4.8/bits/basic_string.h ****       begin() const _GLIBCXX_NOEXCEPT
 617:/usr/include/c++/4.8/bits/basic_string.h ****       { return const_iterator(_M_data()); }
 618:/usr/include/c++/4.8/bits/basic_string.h **** 
 619:/usr/include/c++/4.8/bits/basic_string.h ****       /**
 620:/usr/include/c++/4.8/bits/basic_string.h ****        *  Returns a read/write iterator that points one past the last
 621:/usr/include/c++/4.8/bits/basic_string.h ****        *  character in the %string.  Unshares the string.
 622:/usr/include/c++/4.8/bits/basic_string.h ****        */
 623:/usr/include/c++/4.8/bits/basic_string.h ****       iterator
 624:/usr/include/c++/4.8/bits/basic_string.h ****       end() _GLIBCXX_NOEXCEPT
 625:/usr/include/c++/4.8/bits/basic_string.h ****       {
 626:/usr/include/c++/4.8/bits/basic_string.h **** 	_M_leak();
 627:/usr/include/c++/4.8/bits/basic_string.h **** 	return iterator(_M_data() + this->size());
 628:/usr/include/c++/4.8/bits/basic_string.h ****       }
 629:/usr/include/c++/4.8/bits/basic_string.h **** 
 630:/usr/include/c++/4.8/bits/basic_string.h ****       /**
 631:/usr/include/c++/4.8/bits/basic_string.h ****        *  Returns a read-only (constant) iterator that points one past the
 632:/usr/include/c++/4.8/bits/basic_string.h ****        *  last character in the %string.
 633:/usr/include/c++/4.8/bits/basic_string.h ****        */
 634:/usr/include/c++/4.8/bits/basic_string.h ****       const_iterator
 635:/usr/include/c++/4.8/bits/basic_string.h ****       end() const _GLIBCXX_NOEXCEPT
 636:/usr/include/c++/4.8/bits/basic_string.h ****       { return const_iterator(_M_data() + this->size()); }
 637:/usr/include/c++/4.8/bits/basic_string.h **** 
 638:/usr/include/c++/4.8/bits/basic_string.h ****       /**
 639:/usr/include/c++/4.8/bits/basic_string.h ****        *  Returns a read/write reverse iterator that points to the last
 640:/usr/include/c++/4.8/bits/basic_string.h ****        *  character in the %string.  Iteration is done in reverse element
 641:/usr/include/c++/4.8/bits/basic_string.h ****        *  order.  Unshares the string.
 642:/usr/include/c++/4.8/bits/basic_string.h ****        */
 643:/usr/include/c++/4.8/bits/basic_string.h ****       reverse_iterator
 644:/usr/include/c++/4.8/bits/basic_string.h ****       rbegin() _GLIBCXX_NOEXCEPT
 645:/usr/include/c++/4.8/bits/basic_string.h ****       { return reverse_iterator(this->end()); }
 646:/usr/include/c++/4.8/bits/basic_string.h **** 
 647:/usr/include/c++/4.8/bits/basic_string.h ****       /**
 648:/usr/include/c++/4.8/bits/basic_string.h ****        *  Returns a read-only (constant) reverse iterator that points
 649:/usr/include/c++/4.8/bits/basic_string.h ****        *  to the last character in the %string.  Iteration is done in
 650:/usr/include/c++/4.8/bits/basic_string.h ****        *  reverse element order.
 651:/usr/include/c++/4.8/bits/basic_string.h ****        */
 652:/usr/include/c++/4.8/bits/basic_string.h ****       const_reverse_iterator
 653:/usr/include/c++/4.8/bits/basic_string.h ****       rbegin() const _GLIBCXX_NOEXCEPT
 654:/usr/include/c++/4.8/bits/basic_string.h ****       { return const_reverse_iterator(this->end()); }
 655:/usr/include/c++/4.8/bits/basic_string.h **** 
 656:/usr/include/c++/4.8/bits/basic_string.h ****       /**
 657:/usr/include/c++/4.8/bits/basic_string.h ****        *  Returns a read/write reverse iterator that points to one before the
 658:/usr/include/c++/4.8/bits/basic_string.h ****        *  first character in the %string.  Iteration is done in reverse
 659:/usr/include/c++/4.8/bits/basic_string.h ****        *  element order.  Unshares the string.
 660:/usr/include/c++/4.8/bits/basic_string.h ****        */
 661:/usr/include/c++/4.8/bits/basic_string.h ****       reverse_iterator
 662:/usr/include/c++/4.8/bits/basic_string.h ****       rend() _GLIBCXX_NOEXCEPT
 663:/usr/include/c++/4.8/bits/basic_string.h ****       { return reverse_iterator(this->begin()); }
 664:/usr/include/c++/4.8/bits/basic_string.h **** 
 665:/usr/include/c++/4.8/bits/basic_string.h ****       /**
 666:/usr/include/c++/4.8/bits/basic_string.h ****        *  Returns a read-only (constant) reverse iterator that points
 667:/usr/include/c++/4.8/bits/basic_string.h ****        *  to one before the first character in the %string.  Iteration
 668:/usr/include/c++/4.8/bits/basic_string.h ****        *  is done in reverse element order.
 669:/usr/include/c++/4.8/bits/basic_string.h ****        */
 670:/usr/include/c++/4.8/bits/basic_string.h ****       const_reverse_iterator
 671:/usr/include/c++/4.8/bits/basic_string.h ****       rend() const _GLIBCXX_NOEXCEPT
 672:/usr/include/c++/4.8/bits/basic_string.h ****       { return const_reverse_iterator(this->begin()); }
 673:/usr/include/c++/4.8/bits/basic_string.h **** 
 674:/usr/include/c++/4.8/bits/basic_string.h **** #if __cplusplus >= 201103L
 675:/usr/include/c++/4.8/bits/basic_string.h ****       /**
 676:/usr/include/c++/4.8/bits/basic_string.h ****        *  Returns a read-only (constant) iterator that points to the first
 677:/usr/include/c++/4.8/bits/basic_string.h ****        *  character in the %string.
 678:/usr/include/c++/4.8/bits/basic_string.h ****        */
 679:/usr/include/c++/4.8/bits/basic_string.h ****       const_iterator
 680:/usr/include/c++/4.8/bits/basic_string.h ****       cbegin() const noexcept
 681:/usr/include/c++/4.8/bits/basic_string.h ****       { return const_iterator(this->_M_data()); }
 682:/usr/include/c++/4.8/bits/basic_string.h **** 
 683:/usr/include/c++/4.8/bits/basic_string.h ****       /**
 684:/usr/include/c++/4.8/bits/basic_string.h ****        *  Returns a read-only (constant) iterator that points one past the
 685:/usr/include/c++/4.8/bits/basic_string.h ****        *  last character in the %string.
 686:/usr/include/c++/4.8/bits/basic_string.h ****        */
 687:/usr/include/c++/4.8/bits/basic_string.h ****       const_iterator
 688:/usr/include/c++/4.8/bits/basic_string.h ****       cend() const noexcept
 689:/usr/include/c++/4.8/bits/basic_string.h ****       { return const_iterator(this->_M_data() + this->size()); }
 690:/usr/include/c++/4.8/bits/basic_string.h **** 
 691:/usr/include/c++/4.8/bits/basic_string.h ****       /**
 692:/usr/include/c++/4.8/bits/basic_string.h ****        *  Returns a read-only (constant) reverse iterator that points
 693:/usr/include/c++/4.8/bits/basic_string.h ****        *  to the last character in the %string.  Iteration is done in
 694:/usr/include/c++/4.8/bits/basic_string.h ****        *  reverse element order.
 695:/usr/include/c++/4.8/bits/basic_string.h ****        */
 696:/usr/include/c++/4.8/bits/basic_string.h ****       const_reverse_iterator
 697:/usr/include/c++/4.8/bits/basic_string.h ****       crbegin() const noexcept
 698:/usr/include/c++/4.8/bits/basic_string.h ****       { return const_reverse_iterator(this->end()); }
 699:/usr/include/c++/4.8/bits/basic_string.h **** 
 700:/usr/include/c++/4.8/bits/basic_string.h ****       /**
 701:/usr/include/c++/4.8/bits/basic_string.h ****        *  Returns a read-only (constant) reverse iterator that points
 702:/usr/include/c++/4.8/bits/basic_string.h ****        *  to one before the first character in the %string.  Iteration
 703:/usr/include/c++/4.8/bits/basic_string.h ****        *  is done in reverse element order.
 704:/usr/include/c++/4.8/bits/basic_string.h ****        */
 705:/usr/include/c++/4.8/bits/basic_string.h ****       const_reverse_iterator
 706:/usr/include/c++/4.8/bits/basic_string.h ****       crend() const noexcept
 707:/usr/include/c++/4.8/bits/basic_string.h ****       { return const_reverse_iterator(this->begin()); }
 708:/usr/include/c++/4.8/bits/basic_string.h **** #endif
 709:/usr/include/c++/4.8/bits/basic_string.h **** 
 710:/usr/include/c++/4.8/bits/basic_string.h ****     public:
 711:/usr/include/c++/4.8/bits/basic_string.h ****       // Capacity:
 712:/usr/include/c++/4.8/bits/basic_string.h ****       ///  Returns the number of characters in the string, not including any
 713:/usr/include/c++/4.8/bits/basic_string.h ****       ///  null-termination.
 714:/usr/include/c++/4.8/bits/basic_string.h ****       size_type
 715:/usr/include/c++/4.8/bits/basic_string.h ****       size() const _GLIBCXX_NOEXCEPT
 716:/usr/include/c++/4.8/bits/basic_string.h ****       { return _M_rep()->_M_length; }
 717:/usr/include/c++/4.8/bits/basic_string.h **** 
 718:/usr/include/c++/4.8/bits/basic_string.h ****       ///  Returns the number of characters in the string, not including any
 719:/usr/include/c++/4.8/bits/basic_string.h ****       ///  null-termination.
 720:/usr/include/c++/4.8/bits/basic_string.h ****       size_type
 721:/usr/include/c++/4.8/bits/basic_string.h ****       length() const _GLIBCXX_NOEXCEPT
 722:/usr/include/c++/4.8/bits/basic_string.h ****       { return _M_rep()->_M_length; }
 723:/usr/include/c++/4.8/bits/basic_string.h **** 
 724:/usr/include/c++/4.8/bits/basic_string.h ****       ///  Returns the size() of the largest possible %string.
 725:/usr/include/c++/4.8/bits/basic_string.h ****       size_type
 726:/usr/include/c++/4.8/bits/basic_string.h ****       max_size() const _GLIBCXX_NOEXCEPT
 727:/usr/include/c++/4.8/bits/basic_string.h ****       { return _Rep::_S_max_size; }
 728:/usr/include/c++/4.8/bits/basic_string.h **** 
 729:/usr/include/c++/4.8/bits/basic_string.h ****       /**
 730:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Resizes the %string to the specified number of characters.
 731:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param  __n  Number of characters the %string should contain.
 732:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param  __c  Character to fill any new elements.
 733:/usr/include/c++/4.8/bits/basic_string.h ****        *
 734:/usr/include/c++/4.8/bits/basic_string.h ****        *  This function will %resize the %string to the specified
 735:/usr/include/c++/4.8/bits/basic_string.h ****        *  number of characters.  If the number is smaller than the
 736:/usr/include/c++/4.8/bits/basic_string.h ****        *  %string's current size the %string is truncated, otherwise
 737:/usr/include/c++/4.8/bits/basic_string.h ****        *  the %string is extended and new elements are %set to @a __c.
 738:/usr/include/c++/4.8/bits/basic_string.h ****        */
 739:/usr/include/c++/4.8/bits/basic_string.h ****       void
 740:/usr/include/c++/4.8/bits/basic_string.h ****       resize(size_type __n, _CharT __c);
 741:/usr/include/c++/4.8/bits/basic_string.h **** 
 742:/usr/include/c++/4.8/bits/basic_string.h ****       /**
 743:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Resizes the %string to the specified number of characters.
 744:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param  __n  Number of characters the %string should contain.
 745:/usr/include/c++/4.8/bits/basic_string.h ****        *
 746:/usr/include/c++/4.8/bits/basic_string.h ****        *  This function will resize the %string to the specified length.  If
 747:/usr/include/c++/4.8/bits/basic_string.h ****        *  the new size is smaller than the %string's current size the %string
 748:/usr/include/c++/4.8/bits/basic_string.h ****        *  is truncated, otherwise the %string is extended and new characters
 749:/usr/include/c++/4.8/bits/basic_string.h ****        *  are default-constructed.  For basic types such as char, this means
 750:/usr/include/c++/4.8/bits/basic_string.h ****        *  setting them to 0.
 751:/usr/include/c++/4.8/bits/basic_string.h ****        */
 752:/usr/include/c++/4.8/bits/basic_string.h ****       void
 753:/usr/include/c++/4.8/bits/basic_string.h ****       resize(size_type __n)
 754:/usr/include/c++/4.8/bits/basic_string.h ****       { this->resize(__n, _CharT()); }
 755:/usr/include/c++/4.8/bits/basic_string.h **** 
 756:/usr/include/c++/4.8/bits/basic_string.h **** #if __cplusplus >= 201103L
 757:/usr/include/c++/4.8/bits/basic_string.h ****       ///  A non-binding request to reduce capacity() to size().
 758:/usr/include/c++/4.8/bits/basic_string.h ****       void
 759:/usr/include/c++/4.8/bits/basic_string.h ****       shrink_to_fit()
 760:/usr/include/c++/4.8/bits/basic_string.h ****       {
 761:/usr/include/c++/4.8/bits/basic_string.h **** 	if (capacity() > size())
 762:/usr/include/c++/4.8/bits/basic_string.h **** 	  {
 763:/usr/include/c++/4.8/bits/basic_string.h **** 	    __try
 764:/usr/include/c++/4.8/bits/basic_string.h **** 	      { reserve(0); }
 765:/usr/include/c++/4.8/bits/basic_string.h **** 	    __catch(...)
 766:/usr/include/c++/4.8/bits/basic_string.h **** 	      { }
 767:/usr/include/c++/4.8/bits/basic_string.h **** 	  }
 768:/usr/include/c++/4.8/bits/basic_string.h ****       }
 769:/usr/include/c++/4.8/bits/basic_string.h **** #endif
 770:/usr/include/c++/4.8/bits/basic_string.h **** 
 771:/usr/include/c++/4.8/bits/basic_string.h ****       /**
 772:/usr/include/c++/4.8/bits/basic_string.h ****        *  Returns the total number of characters that the %string can hold
 773:/usr/include/c++/4.8/bits/basic_string.h ****        *  before needing to allocate more memory.
 774:/usr/include/c++/4.8/bits/basic_string.h ****        */
 775:/usr/include/c++/4.8/bits/basic_string.h ****       size_type
 776:/usr/include/c++/4.8/bits/basic_string.h ****       capacity() const _GLIBCXX_NOEXCEPT
 777:/usr/include/c++/4.8/bits/basic_string.h ****       { return _M_rep()->_M_capacity; }
 778:/usr/include/c++/4.8/bits/basic_string.h **** 
 779:/usr/include/c++/4.8/bits/basic_string.h ****       /**
 780:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Attempt to preallocate enough memory for specified number of
 781:/usr/include/c++/4.8/bits/basic_string.h ****        *          characters.
 782:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param  __res_arg  Number of characters required.
 783:/usr/include/c++/4.8/bits/basic_string.h ****        *  @throw  std::length_error  If @a __res_arg exceeds @c max_size().
 784:/usr/include/c++/4.8/bits/basic_string.h ****        *
 785:/usr/include/c++/4.8/bits/basic_string.h ****        *  This function attempts to reserve enough memory for the
 786:/usr/include/c++/4.8/bits/basic_string.h ****        *  %string to hold the specified number of characters.  If the
 787:/usr/include/c++/4.8/bits/basic_string.h ****        *  number requested is more than max_size(), length_error is
 788:/usr/include/c++/4.8/bits/basic_string.h ****        *  thrown.
 789:/usr/include/c++/4.8/bits/basic_string.h ****        *
 790:/usr/include/c++/4.8/bits/basic_string.h ****        *  The advantage of this function is that if optimal code is a
 791:/usr/include/c++/4.8/bits/basic_string.h ****        *  necessity and the user can determine the string length that will be
 792:/usr/include/c++/4.8/bits/basic_string.h ****        *  required, the user can reserve the memory in %advance, and thus
 793:/usr/include/c++/4.8/bits/basic_string.h ****        *  prevent a possible reallocation of memory and copying of %string
 794:/usr/include/c++/4.8/bits/basic_string.h ****        *  data.
 795:/usr/include/c++/4.8/bits/basic_string.h ****        */
 796:/usr/include/c++/4.8/bits/basic_string.h ****       void
 797:/usr/include/c++/4.8/bits/basic_string.h ****       reserve(size_type __res_arg = 0);
 798:/usr/include/c++/4.8/bits/basic_string.h **** 
 799:/usr/include/c++/4.8/bits/basic_string.h ****       /**
 800:/usr/include/c++/4.8/bits/basic_string.h ****        *  Erases the string, making it empty.
 801:/usr/include/c++/4.8/bits/basic_string.h ****        */
 802:/usr/include/c++/4.8/bits/basic_string.h ****       void
 803:/usr/include/c++/4.8/bits/basic_string.h ****       clear() _GLIBCXX_NOEXCEPT
 804:/usr/include/c++/4.8/bits/basic_string.h ****       { _M_mutate(0, this->size(), 0); }
 805:/usr/include/c++/4.8/bits/basic_string.h **** 
 806:/usr/include/c++/4.8/bits/basic_string.h ****       /**
 807:/usr/include/c++/4.8/bits/basic_string.h ****        *  Returns true if the %string is empty.  Equivalent to 
 808:/usr/include/c++/4.8/bits/basic_string.h ****        *  <code>*this == ""</code>.
 809:/usr/include/c++/4.8/bits/basic_string.h ****        */
 810:/usr/include/c++/4.8/bits/basic_string.h ****       bool
 811:/usr/include/c++/4.8/bits/basic_string.h ****       empty() const _GLIBCXX_NOEXCEPT
 812:/usr/include/c++/4.8/bits/basic_string.h ****       { return this->size() == 0; }
 813:/usr/include/c++/4.8/bits/basic_string.h **** 
 814:/usr/include/c++/4.8/bits/basic_string.h ****       // Element access:
 815:/usr/include/c++/4.8/bits/basic_string.h ****       /**
 816:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Subscript access to the data contained in the %string.
 817:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param  __pos  The index of the character to access.
 818:/usr/include/c++/4.8/bits/basic_string.h ****        *  @return  Read-only (constant) reference to the character.
 819:/usr/include/c++/4.8/bits/basic_string.h ****        *
 820:/usr/include/c++/4.8/bits/basic_string.h ****        *  This operator allows for easy, array-style, data access.
 821:/usr/include/c++/4.8/bits/basic_string.h ****        *  Note that data access with this operator is unchecked and
 822:/usr/include/c++/4.8/bits/basic_string.h ****        *  out_of_range lookups are not defined. (For checked lookups
 823:/usr/include/c++/4.8/bits/basic_string.h ****        *  see at().)
 824:/usr/include/c++/4.8/bits/basic_string.h ****        */
 825:/usr/include/c++/4.8/bits/basic_string.h ****       const_reference
 826:/usr/include/c++/4.8/bits/basic_string.h ****       operator[] (size_type __pos) const
 827:/usr/include/c++/4.8/bits/basic_string.h ****       {
 828:/usr/include/c++/4.8/bits/basic_string.h **** 	_GLIBCXX_DEBUG_ASSERT(__pos <= size());
 829:/usr/include/c++/4.8/bits/basic_string.h **** 	return _M_data()[__pos];
 830:/usr/include/c++/4.8/bits/basic_string.h ****       }
 831:/usr/include/c++/4.8/bits/basic_string.h **** 
 832:/usr/include/c++/4.8/bits/basic_string.h ****       /**
 833:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Subscript access to the data contained in the %string.
 834:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param  __pos  The index of the character to access.
 835:/usr/include/c++/4.8/bits/basic_string.h ****        *  @return  Read/write reference to the character.
 836:/usr/include/c++/4.8/bits/basic_string.h ****        *
 837:/usr/include/c++/4.8/bits/basic_string.h ****        *  This operator allows for easy, array-style, data access.
 838:/usr/include/c++/4.8/bits/basic_string.h ****        *  Note that data access with this operator is unchecked and
 839:/usr/include/c++/4.8/bits/basic_string.h ****        *  out_of_range lookups are not defined. (For checked lookups
 840:/usr/include/c++/4.8/bits/basic_string.h ****        *  see at().)  Unshares the string.
 841:/usr/include/c++/4.8/bits/basic_string.h ****        */
 842:/usr/include/c++/4.8/bits/basic_string.h ****       reference
 843:/usr/include/c++/4.8/bits/basic_string.h ****       operator[](size_type __pos)
 844:/usr/include/c++/4.8/bits/basic_string.h ****       {
 845:/usr/include/c++/4.8/bits/basic_string.h ****         // allow pos == size() as v3 extension:
 846:/usr/include/c++/4.8/bits/basic_string.h **** 	_GLIBCXX_DEBUG_ASSERT(__pos <= size());
 847:/usr/include/c++/4.8/bits/basic_string.h ****         // but be strict in pedantic mode:
 848:/usr/include/c++/4.8/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(__pos < size());
 849:/usr/include/c++/4.8/bits/basic_string.h **** 	_M_leak();
 850:/usr/include/c++/4.8/bits/basic_string.h **** 	return _M_data()[__pos];
 851:/usr/include/c++/4.8/bits/basic_string.h ****       }
 852:/usr/include/c++/4.8/bits/basic_string.h **** 
 853:/usr/include/c++/4.8/bits/basic_string.h ****       /**
 854:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Provides access to the data contained in the %string.
 855:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __n The index of the character to access.
 856:/usr/include/c++/4.8/bits/basic_string.h ****        *  @return  Read-only (const) reference to the character.
 857:/usr/include/c++/4.8/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a n is an invalid index.
 858:/usr/include/c++/4.8/bits/basic_string.h ****        *
 859:/usr/include/c++/4.8/bits/basic_string.h ****        *  This function provides for safer data access.  The parameter is
 860:/usr/include/c++/4.8/bits/basic_string.h ****        *  first checked that it is in the range of the string.  The function
 861:/usr/include/c++/4.8/bits/basic_string.h ****        *  throws out_of_range if the check fails.
 862:/usr/include/c++/4.8/bits/basic_string.h ****        */
 863:/usr/include/c++/4.8/bits/basic_string.h ****       const_reference
 864:/usr/include/c++/4.8/bits/basic_string.h ****       at(size_type __n) const
 865:/usr/include/c++/4.8/bits/basic_string.h ****       {
 866:/usr/include/c++/4.8/bits/basic_string.h **** 	if (__n >= this->size())
 867:/usr/include/c++/4.8/bits/basic_string.h **** 	  __throw_out_of_range(__N("basic_string::at"));
 868:/usr/include/c++/4.8/bits/basic_string.h **** 	return _M_data()[__n];
 869:/usr/include/c++/4.8/bits/basic_string.h ****       }
 870:/usr/include/c++/4.8/bits/basic_string.h **** 
 871:/usr/include/c++/4.8/bits/basic_string.h ****       /**
 872:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Provides access to the data contained in the %string.
 873:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __n The index of the character to access.
 874:/usr/include/c++/4.8/bits/basic_string.h ****        *  @return  Read/write reference to the character.
 875:/usr/include/c++/4.8/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a n is an invalid index.
 876:/usr/include/c++/4.8/bits/basic_string.h ****        *
 877:/usr/include/c++/4.8/bits/basic_string.h ****        *  This function provides for safer data access.  The parameter is
 878:/usr/include/c++/4.8/bits/basic_string.h ****        *  first checked that it is in the range of the string.  The function
 879:/usr/include/c++/4.8/bits/basic_string.h ****        *  throws out_of_range if the check fails.  Success results in
 880:/usr/include/c++/4.8/bits/basic_string.h ****        *  unsharing the string.
 881:/usr/include/c++/4.8/bits/basic_string.h ****        */
 882:/usr/include/c++/4.8/bits/basic_string.h ****       reference
 883:/usr/include/c++/4.8/bits/basic_string.h ****       at(size_type __n)
 884:/usr/include/c++/4.8/bits/basic_string.h ****       {
 885:/usr/include/c++/4.8/bits/basic_string.h **** 	if (__n >= size())
 886:/usr/include/c++/4.8/bits/basic_string.h **** 	  __throw_out_of_range(__N("basic_string::at"));
 887:/usr/include/c++/4.8/bits/basic_string.h **** 	_M_leak();
 888:/usr/include/c++/4.8/bits/basic_string.h **** 	return _M_data()[__n];
 889:/usr/include/c++/4.8/bits/basic_string.h ****       }
 890:/usr/include/c++/4.8/bits/basic_string.h **** 
 891:/usr/include/c++/4.8/bits/basic_string.h **** #if __cplusplus >= 201103L
 892:/usr/include/c++/4.8/bits/basic_string.h ****       /**
 893:/usr/include/c++/4.8/bits/basic_string.h ****        *  Returns a read/write reference to the data at the first
 894:/usr/include/c++/4.8/bits/basic_string.h ****        *  element of the %string.
 895:/usr/include/c++/4.8/bits/basic_string.h ****        */
 896:/usr/include/c++/4.8/bits/basic_string.h ****       reference
 897:/usr/include/c++/4.8/bits/basic_string.h ****       front()
 898:/usr/include/c++/4.8/bits/basic_string.h ****       { return operator[](0); }
 899:/usr/include/c++/4.8/bits/basic_string.h **** 
 900:/usr/include/c++/4.8/bits/basic_string.h ****       /**
 901:/usr/include/c++/4.8/bits/basic_string.h ****        *  Returns a read-only (constant) reference to the data at the first
 902:/usr/include/c++/4.8/bits/basic_string.h ****        *  element of the %string.
 903:/usr/include/c++/4.8/bits/basic_string.h ****        */
 904:/usr/include/c++/4.8/bits/basic_string.h ****       const_reference
 905:/usr/include/c++/4.8/bits/basic_string.h ****       front() const
 906:/usr/include/c++/4.8/bits/basic_string.h ****       { return operator[](0); }
 907:/usr/include/c++/4.8/bits/basic_string.h **** 
 908:/usr/include/c++/4.8/bits/basic_string.h ****       /**
 909:/usr/include/c++/4.8/bits/basic_string.h ****        *  Returns a read/write reference to the data at the last
 910:/usr/include/c++/4.8/bits/basic_string.h ****        *  element of the %string.
 911:/usr/include/c++/4.8/bits/basic_string.h ****        */
 912:/usr/include/c++/4.8/bits/basic_string.h ****       reference
 913:/usr/include/c++/4.8/bits/basic_string.h ****       back()
 914:/usr/include/c++/4.8/bits/basic_string.h ****       { return operator[](this->size() - 1); }
 915:/usr/include/c++/4.8/bits/basic_string.h **** 
 916:/usr/include/c++/4.8/bits/basic_string.h ****       /**
 917:/usr/include/c++/4.8/bits/basic_string.h ****        *  Returns a read-only (constant) reference to the data at the
 918:/usr/include/c++/4.8/bits/basic_string.h ****        *  last element of the %string.
 919:/usr/include/c++/4.8/bits/basic_string.h ****        */
 920:/usr/include/c++/4.8/bits/basic_string.h ****       const_reference
 921:/usr/include/c++/4.8/bits/basic_string.h ****       back() const
 922:/usr/include/c++/4.8/bits/basic_string.h ****       { return operator[](this->size() - 1); }
 923:/usr/include/c++/4.8/bits/basic_string.h **** #endif
 924:/usr/include/c++/4.8/bits/basic_string.h **** 
 925:/usr/include/c++/4.8/bits/basic_string.h ****       // Modifiers:
 926:/usr/include/c++/4.8/bits/basic_string.h ****       /**
 927:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Append a string to this string.
 928:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __str  The string to append.
 929:/usr/include/c++/4.8/bits/basic_string.h ****        *  @return  Reference to this string.
 930:/usr/include/c++/4.8/bits/basic_string.h ****        */
 931:/usr/include/c++/4.8/bits/basic_string.h ****       basic_string&
 932:/usr/include/c++/4.8/bits/basic_string.h ****       operator+=(const basic_string& __str)
 933:/usr/include/c++/4.8/bits/basic_string.h ****       { return this->append(__str); }
 934:/usr/include/c++/4.8/bits/basic_string.h **** 
 935:/usr/include/c++/4.8/bits/basic_string.h ****       /**
 936:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Append a C string.
 937:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __s  The C string to append.
 938:/usr/include/c++/4.8/bits/basic_string.h ****        *  @return  Reference to this string.
 939:/usr/include/c++/4.8/bits/basic_string.h ****        */
 940:/usr/include/c++/4.8/bits/basic_string.h ****       basic_string&
 941:/usr/include/c++/4.8/bits/basic_string.h ****       operator+=(const _CharT* __s)
 942:/usr/include/c++/4.8/bits/basic_string.h ****       { return this->append(__s); }
 943:/usr/include/c++/4.8/bits/basic_string.h **** 
 944:/usr/include/c++/4.8/bits/basic_string.h ****       /**
 945:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Append a character.
 946:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __c  The character to append.
 947:/usr/include/c++/4.8/bits/basic_string.h ****        *  @return  Reference to this string.
 948:/usr/include/c++/4.8/bits/basic_string.h ****        */
 949:/usr/include/c++/4.8/bits/basic_string.h ****       basic_string&
 950:/usr/include/c++/4.8/bits/basic_string.h ****       operator+=(_CharT __c)
 951:/usr/include/c++/4.8/bits/basic_string.h ****       { 
 952:/usr/include/c++/4.8/bits/basic_string.h **** 	this->push_back(__c);
 953:/usr/include/c++/4.8/bits/basic_string.h **** 	return *this;
 954:/usr/include/c++/4.8/bits/basic_string.h ****       }
 955:/usr/include/c++/4.8/bits/basic_string.h **** 
 956:/usr/include/c++/4.8/bits/basic_string.h **** #if __cplusplus >= 201103L
 957:/usr/include/c++/4.8/bits/basic_string.h ****       /**
 958:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Append an initializer_list of characters.
 959:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __l  The initializer_list of characters to be appended.
 960:/usr/include/c++/4.8/bits/basic_string.h ****        *  @return  Reference to this string.
 961:/usr/include/c++/4.8/bits/basic_string.h ****        */
 962:/usr/include/c++/4.8/bits/basic_string.h ****       basic_string&
 963:/usr/include/c++/4.8/bits/basic_string.h ****       operator+=(initializer_list<_CharT> __l)
 964:/usr/include/c++/4.8/bits/basic_string.h ****       { return this->append(__l.begin(), __l.size()); }
 965:/usr/include/c++/4.8/bits/basic_string.h **** #endif // C++11
 966:/usr/include/c++/4.8/bits/basic_string.h **** 
 967:/usr/include/c++/4.8/bits/basic_string.h ****       /**
 968:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Append a string to this string.
 969:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __str  The string to append.
 970:/usr/include/c++/4.8/bits/basic_string.h ****        *  @return  Reference to this string.
 971:/usr/include/c++/4.8/bits/basic_string.h ****        */
 972:/usr/include/c++/4.8/bits/basic_string.h ****       basic_string&
 973:/usr/include/c++/4.8/bits/basic_string.h ****       append(const basic_string& __str);
 974:/usr/include/c++/4.8/bits/basic_string.h **** 
 975:/usr/include/c++/4.8/bits/basic_string.h ****       /**
 976:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Append a substring.
 977:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __str  The string to append.
 978:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __pos  Index of the first character of str to append.
 979:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __n  The number of characters to append.
 980:/usr/include/c++/4.8/bits/basic_string.h ****        *  @return  Reference to this string.
 981:/usr/include/c++/4.8/bits/basic_string.h ****        *  @throw  std::out_of_range if @a __pos is not a valid index.
 982:/usr/include/c++/4.8/bits/basic_string.h ****        *
 983:/usr/include/c++/4.8/bits/basic_string.h ****        *  This function appends @a __n characters from @a __str
 984:/usr/include/c++/4.8/bits/basic_string.h ****        *  starting at @a __pos to this string.  If @a __n is is larger
 985:/usr/include/c++/4.8/bits/basic_string.h ****        *  than the number of available characters in @a __str, the
 986:/usr/include/c++/4.8/bits/basic_string.h ****        *  remainder of @a __str is appended.
 987:/usr/include/c++/4.8/bits/basic_string.h ****        */
 988:/usr/include/c++/4.8/bits/basic_string.h ****       basic_string&
 989:/usr/include/c++/4.8/bits/basic_string.h ****       append(const basic_string& __str, size_type __pos, size_type __n);
 990:/usr/include/c++/4.8/bits/basic_string.h **** 
 991:/usr/include/c++/4.8/bits/basic_string.h ****       /**
 992:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Append a C substring.
 993:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __s  The C string to append.
 994:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __n  The number of characters to append.
 995:/usr/include/c++/4.8/bits/basic_string.h ****        *  @return  Reference to this string.
 996:/usr/include/c++/4.8/bits/basic_string.h ****        */
 997:/usr/include/c++/4.8/bits/basic_string.h ****       basic_string&
 998:/usr/include/c++/4.8/bits/basic_string.h ****       append(const _CharT* __s, size_type __n);
 999:/usr/include/c++/4.8/bits/basic_string.h **** 
1000:/usr/include/c++/4.8/bits/basic_string.h ****       /**
1001:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Append a C string.
1002:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __s  The C string to append.
1003:/usr/include/c++/4.8/bits/basic_string.h ****        *  @return  Reference to this string.
1004:/usr/include/c++/4.8/bits/basic_string.h ****        */
1005:/usr/include/c++/4.8/bits/basic_string.h ****       basic_string&
1006:/usr/include/c++/4.8/bits/basic_string.h ****       append(const _CharT* __s)
1007:/usr/include/c++/4.8/bits/basic_string.h ****       {
1008:/usr/include/c++/4.8/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
1009:/usr/include/c++/4.8/bits/basic_string.h **** 	return this->append(__s, traits_type::length(__s));
1010:/usr/include/c++/4.8/bits/basic_string.h ****       }
1011:/usr/include/c++/4.8/bits/basic_string.h **** 
1012:/usr/include/c++/4.8/bits/basic_string.h ****       /**
1013:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Append multiple characters.
1014:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __n  The number of characters to append.
1015:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __c  The character to use.
1016:/usr/include/c++/4.8/bits/basic_string.h ****        *  @return  Reference to this string.
1017:/usr/include/c++/4.8/bits/basic_string.h ****        *
1018:/usr/include/c++/4.8/bits/basic_string.h ****        *  Appends __n copies of __c to this string.
1019:/usr/include/c++/4.8/bits/basic_string.h ****        */
1020:/usr/include/c++/4.8/bits/basic_string.h ****       basic_string&
1021:/usr/include/c++/4.8/bits/basic_string.h ****       append(size_type __n, _CharT __c);
1022:/usr/include/c++/4.8/bits/basic_string.h **** 
1023:/usr/include/c++/4.8/bits/basic_string.h **** #if __cplusplus >= 201103L
1024:/usr/include/c++/4.8/bits/basic_string.h ****       /**
1025:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Append an initializer_list of characters.
1026:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __l  The initializer_list of characters to append.
1027:/usr/include/c++/4.8/bits/basic_string.h ****        *  @return  Reference to this string.
1028:/usr/include/c++/4.8/bits/basic_string.h ****        */
1029:/usr/include/c++/4.8/bits/basic_string.h ****       basic_string&
1030:/usr/include/c++/4.8/bits/basic_string.h ****       append(initializer_list<_CharT> __l)
1031:/usr/include/c++/4.8/bits/basic_string.h ****       { return this->append(__l.begin(), __l.size()); }
1032:/usr/include/c++/4.8/bits/basic_string.h **** #endif // C++11
1033:/usr/include/c++/4.8/bits/basic_string.h **** 
1034:/usr/include/c++/4.8/bits/basic_string.h ****       /**
1035:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Append a range of characters.
1036:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __first  Iterator referencing the first character to append.
1037:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __last  Iterator marking the end of the range.
1038:/usr/include/c++/4.8/bits/basic_string.h ****        *  @return  Reference to this string.
1039:/usr/include/c++/4.8/bits/basic_string.h ****        *
1040:/usr/include/c++/4.8/bits/basic_string.h ****        *  Appends characters in the range [__first,__last) to this string.
1041:/usr/include/c++/4.8/bits/basic_string.h ****        */
1042:/usr/include/c++/4.8/bits/basic_string.h ****       template<class _InputIterator>
1043:/usr/include/c++/4.8/bits/basic_string.h ****         basic_string&
1044:/usr/include/c++/4.8/bits/basic_string.h ****         append(_InputIterator __first, _InputIterator __last)
1045:/usr/include/c++/4.8/bits/basic_string.h ****         { return this->replace(_M_iend(), _M_iend(), __first, __last); }
1046:/usr/include/c++/4.8/bits/basic_string.h **** 
1047:/usr/include/c++/4.8/bits/basic_string.h ****       /**
1048:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Append a single character.
1049:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __c  Character to append.
1050:/usr/include/c++/4.8/bits/basic_string.h ****        */
1051:/usr/include/c++/4.8/bits/basic_string.h ****       void
1052:/usr/include/c++/4.8/bits/basic_string.h ****       push_back(_CharT __c)
1053:/usr/include/c++/4.8/bits/basic_string.h ****       { 
1054:/usr/include/c++/4.8/bits/basic_string.h **** 	const size_type __len = 1 + this->size();
1055:/usr/include/c++/4.8/bits/basic_string.h **** 	if (__len > this->capacity() || _M_rep()->_M_is_shared())
1056:/usr/include/c++/4.8/bits/basic_string.h **** 	  this->reserve(__len);
1057:/usr/include/c++/4.8/bits/basic_string.h **** 	traits_type::assign(_M_data()[this->size()], __c);
1058:/usr/include/c++/4.8/bits/basic_string.h **** 	_M_rep()->_M_set_length_and_sharable(__len);
1059:/usr/include/c++/4.8/bits/basic_string.h ****       }
1060:/usr/include/c++/4.8/bits/basic_string.h **** 
1061:/usr/include/c++/4.8/bits/basic_string.h ****       /**
1062:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Set value to contents of another string.
1063:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param  __str  Source string to use.
1064:/usr/include/c++/4.8/bits/basic_string.h ****        *  @return  Reference to this string.
1065:/usr/include/c++/4.8/bits/basic_string.h ****        */
1066:/usr/include/c++/4.8/bits/basic_string.h ****       basic_string&
1067:/usr/include/c++/4.8/bits/basic_string.h ****       assign(const basic_string& __str);
1068:/usr/include/c++/4.8/bits/basic_string.h **** 
1069:/usr/include/c++/4.8/bits/basic_string.h **** #if __cplusplus >= 201103L
1070:/usr/include/c++/4.8/bits/basic_string.h ****       /**
1071:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Set value to contents of another string.
1072:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param  __str  Source string to use.
1073:/usr/include/c++/4.8/bits/basic_string.h ****        *  @return  Reference to this string.
1074:/usr/include/c++/4.8/bits/basic_string.h ****        *
1075:/usr/include/c++/4.8/bits/basic_string.h ****        *  This function sets this string to the exact contents of @a __str.
1076:/usr/include/c++/4.8/bits/basic_string.h ****        *  @a __str is a valid, but unspecified string.
1077:/usr/include/c++/4.8/bits/basic_string.h ****        */
1078:/usr/include/c++/4.8/bits/basic_string.h ****       basic_string&
1079:/usr/include/c++/4.8/bits/basic_string.h ****       assign(basic_string&& __str)
1080:/usr/include/c++/4.8/bits/basic_string.h ****       {
1081:/usr/include/c++/4.8/bits/basic_string.h **** 	this->swap(__str);
1082:/usr/include/c++/4.8/bits/basic_string.h **** 	return *this;
1083:/usr/include/c++/4.8/bits/basic_string.h ****       }
1084:/usr/include/c++/4.8/bits/basic_string.h **** #endif // C++11
1085:/usr/include/c++/4.8/bits/basic_string.h **** 
1086:/usr/include/c++/4.8/bits/basic_string.h ****       /**
1087:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Set value to a substring of a string.
1088:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __str  The string to use.
1089:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __pos  Index of the first character of str.
1090:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __n  Number of characters to use.
1091:/usr/include/c++/4.8/bits/basic_string.h ****        *  @return  Reference to this string.
1092:/usr/include/c++/4.8/bits/basic_string.h ****        *  @throw  std::out_of_range if @a pos is not a valid index.
1093:/usr/include/c++/4.8/bits/basic_string.h ****        *
1094:/usr/include/c++/4.8/bits/basic_string.h ****        *  This function sets this string to the substring of @a __str
1095:/usr/include/c++/4.8/bits/basic_string.h ****        *  consisting of @a __n characters at @a __pos.  If @a __n is
1096:/usr/include/c++/4.8/bits/basic_string.h ****        *  is larger than the number of available characters in @a
1097:/usr/include/c++/4.8/bits/basic_string.h ****        *  __str, the remainder of @a __str is used.
1098:/usr/include/c++/4.8/bits/basic_string.h ****        */
1099:/usr/include/c++/4.8/bits/basic_string.h ****       basic_string&
1100:/usr/include/c++/4.8/bits/basic_string.h ****       assign(const basic_string& __str, size_type __pos, size_type __n)
1101:/usr/include/c++/4.8/bits/basic_string.h ****       { return this->assign(__str._M_data()
1102:/usr/include/c++/4.8/bits/basic_string.h **** 			    + __str._M_check(__pos, "basic_string::assign"),
1103:/usr/include/c++/4.8/bits/basic_string.h **** 			    __str._M_limit(__pos, __n)); }
1104:/usr/include/c++/4.8/bits/basic_string.h **** 
1105:/usr/include/c++/4.8/bits/basic_string.h ****       /**
1106:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Set value to a C substring.
1107:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __s  The C string to use.
1108:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __n  Number of characters to use.
1109:/usr/include/c++/4.8/bits/basic_string.h ****        *  @return  Reference to this string.
1110:/usr/include/c++/4.8/bits/basic_string.h ****        *
1111:/usr/include/c++/4.8/bits/basic_string.h ****        *  This function sets the value of this string to the first @a __n
1112:/usr/include/c++/4.8/bits/basic_string.h ****        *  characters of @a __s.  If @a __n is is larger than the number of
1113:/usr/include/c++/4.8/bits/basic_string.h ****        *  available characters in @a __s, the remainder of @a __s is used.
1114:/usr/include/c++/4.8/bits/basic_string.h ****        */
1115:/usr/include/c++/4.8/bits/basic_string.h ****       basic_string&
1116:/usr/include/c++/4.8/bits/basic_string.h ****       assign(const _CharT* __s, size_type __n);
1117:/usr/include/c++/4.8/bits/basic_string.h **** 
1118:/usr/include/c++/4.8/bits/basic_string.h ****       /**
1119:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Set value to contents of a C string.
1120:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __s  The C string to use.
1121:/usr/include/c++/4.8/bits/basic_string.h ****        *  @return  Reference to this string.
1122:/usr/include/c++/4.8/bits/basic_string.h ****        *
1123:/usr/include/c++/4.8/bits/basic_string.h ****        *  This function sets the value of this string to the value of @a __s.
1124:/usr/include/c++/4.8/bits/basic_string.h ****        *  The data is copied, so there is no dependence on @a __s once the
1125:/usr/include/c++/4.8/bits/basic_string.h ****        *  function returns.
1126:/usr/include/c++/4.8/bits/basic_string.h ****        */
1127:/usr/include/c++/4.8/bits/basic_string.h ****       basic_string&
1128:/usr/include/c++/4.8/bits/basic_string.h ****       assign(const _CharT* __s)
1129:/usr/include/c++/4.8/bits/basic_string.h ****       {
1130:/usr/include/c++/4.8/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
1131:/usr/include/c++/4.8/bits/basic_string.h **** 	return this->assign(__s, traits_type::length(__s));
1132:/usr/include/c++/4.8/bits/basic_string.h ****       }
1133:/usr/include/c++/4.8/bits/basic_string.h **** 
1134:/usr/include/c++/4.8/bits/basic_string.h ****       /**
1135:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Set value to multiple characters.
1136:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __n  Length of the resulting string.
1137:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __c  The character to use.
1138:/usr/include/c++/4.8/bits/basic_string.h ****        *  @return  Reference to this string.
1139:/usr/include/c++/4.8/bits/basic_string.h ****        *
1140:/usr/include/c++/4.8/bits/basic_string.h ****        *  This function sets the value of this string to @a __n copies of
1141:/usr/include/c++/4.8/bits/basic_string.h ****        *  character @a __c.
1142:/usr/include/c++/4.8/bits/basic_string.h ****        */
1143:/usr/include/c++/4.8/bits/basic_string.h ****       basic_string&
1144:/usr/include/c++/4.8/bits/basic_string.h ****       assign(size_type __n, _CharT __c)
1145:/usr/include/c++/4.8/bits/basic_string.h ****       { return _M_replace_aux(size_type(0), this->size(), __n, __c); }
1146:/usr/include/c++/4.8/bits/basic_string.h **** 
1147:/usr/include/c++/4.8/bits/basic_string.h ****       /**
1148:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Set value to a range of characters.
1149:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __first  Iterator referencing the first character to append.
1150:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __last  Iterator marking the end of the range.
1151:/usr/include/c++/4.8/bits/basic_string.h ****        *  @return  Reference to this string.
1152:/usr/include/c++/4.8/bits/basic_string.h ****        *
1153:/usr/include/c++/4.8/bits/basic_string.h ****        *  Sets value of string to characters in the range [__first,__last).
1154:/usr/include/c++/4.8/bits/basic_string.h ****       */
1155:/usr/include/c++/4.8/bits/basic_string.h ****       template<class _InputIterator>
1156:/usr/include/c++/4.8/bits/basic_string.h ****         basic_string&
1157:/usr/include/c++/4.8/bits/basic_string.h ****         assign(_InputIterator __first, _InputIterator __last)
1158:/usr/include/c++/4.8/bits/basic_string.h ****         { return this->replace(_M_ibegin(), _M_iend(), __first, __last); }
1159:/usr/include/c++/4.8/bits/basic_string.h **** 
1160:/usr/include/c++/4.8/bits/basic_string.h **** #if __cplusplus >= 201103L
1161:/usr/include/c++/4.8/bits/basic_string.h ****       /**
1162:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Set value to an initializer_list of characters.
1163:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __l  The initializer_list of characters to assign.
1164:/usr/include/c++/4.8/bits/basic_string.h ****        *  @return  Reference to this string.
1165:/usr/include/c++/4.8/bits/basic_string.h ****        */
1166:/usr/include/c++/4.8/bits/basic_string.h ****       basic_string&
1167:/usr/include/c++/4.8/bits/basic_string.h ****       assign(initializer_list<_CharT> __l)
1168:/usr/include/c++/4.8/bits/basic_string.h ****       { return this->assign(__l.begin(), __l.size()); }
1169:/usr/include/c++/4.8/bits/basic_string.h **** #endif // C++11
1170:/usr/include/c++/4.8/bits/basic_string.h **** 
1171:/usr/include/c++/4.8/bits/basic_string.h ****       /**
1172:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Insert multiple characters.
1173:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __p  Iterator referencing location in string to insert at.
1174:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __n  Number of characters to insert
1175:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __c  The character to insert.
1176:/usr/include/c++/4.8/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1177:/usr/include/c++/4.8/bits/basic_string.h ****        *
1178:/usr/include/c++/4.8/bits/basic_string.h ****        *  Inserts @a __n copies of character @a __c starting at the
1179:/usr/include/c++/4.8/bits/basic_string.h ****        *  position referenced by iterator @a __p.  If adding
1180:/usr/include/c++/4.8/bits/basic_string.h ****        *  characters causes the length to exceed max_size(),
1181:/usr/include/c++/4.8/bits/basic_string.h ****        *  length_error is thrown.  The value of the string doesn't
1182:/usr/include/c++/4.8/bits/basic_string.h ****        *  change if an error is thrown.
1183:/usr/include/c++/4.8/bits/basic_string.h ****       */
1184:/usr/include/c++/4.8/bits/basic_string.h ****       void
1185:/usr/include/c++/4.8/bits/basic_string.h ****       insert(iterator __p, size_type __n, _CharT __c)
1186:/usr/include/c++/4.8/bits/basic_string.h ****       {	this->replace(__p, __p, __n, __c);  }
1187:/usr/include/c++/4.8/bits/basic_string.h **** 
1188:/usr/include/c++/4.8/bits/basic_string.h ****       /**
1189:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Insert a range of characters.
1190:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __p  Iterator referencing location in string to insert at.
1191:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __beg  Start of range.
1192:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __end  End of range.
1193:/usr/include/c++/4.8/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1194:/usr/include/c++/4.8/bits/basic_string.h ****        *
1195:/usr/include/c++/4.8/bits/basic_string.h ****        *  Inserts characters in range [__beg,__end).  If adding
1196:/usr/include/c++/4.8/bits/basic_string.h ****        *  characters causes the length to exceed max_size(),
1197:/usr/include/c++/4.8/bits/basic_string.h ****        *  length_error is thrown.  The value of the string doesn't
1198:/usr/include/c++/4.8/bits/basic_string.h ****        *  change if an error is thrown.
1199:/usr/include/c++/4.8/bits/basic_string.h ****       */
1200:/usr/include/c++/4.8/bits/basic_string.h ****       template<class _InputIterator>
1201:/usr/include/c++/4.8/bits/basic_string.h ****         void
1202:/usr/include/c++/4.8/bits/basic_string.h ****         insert(iterator __p, _InputIterator __beg, _InputIterator __end)
1203:/usr/include/c++/4.8/bits/basic_string.h ****         { this->replace(__p, __p, __beg, __end); }
1204:/usr/include/c++/4.8/bits/basic_string.h **** 
1205:/usr/include/c++/4.8/bits/basic_string.h **** #if __cplusplus >= 201103L
1206:/usr/include/c++/4.8/bits/basic_string.h ****       /**
1207:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Insert an initializer_list of characters.
1208:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __p  Iterator referencing location in string to insert at.
1209:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __l  The initializer_list of characters to insert.
1210:/usr/include/c++/4.8/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1211:/usr/include/c++/4.8/bits/basic_string.h ****        */
1212:/usr/include/c++/4.8/bits/basic_string.h ****       void
1213:/usr/include/c++/4.8/bits/basic_string.h ****       insert(iterator __p, initializer_list<_CharT> __l)
1214:/usr/include/c++/4.8/bits/basic_string.h ****       {
1215:/usr/include/c++/4.8/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(__p >= _M_ibegin() && __p <= _M_iend());
1216:/usr/include/c++/4.8/bits/basic_string.h **** 	this->insert(__p - _M_ibegin(), __l.begin(), __l.size());
1217:/usr/include/c++/4.8/bits/basic_string.h ****       }
1218:/usr/include/c++/4.8/bits/basic_string.h **** #endif // C++11
1219:/usr/include/c++/4.8/bits/basic_string.h **** 
1220:/usr/include/c++/4.8/bits/basic_string.h ****       /**
1221:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Insert value of a string.
1222:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __pos1  Iterator referencing location in string to insert at.
1223:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __str  The string to insert.
1224:/usr/include/c++/4.8/bits/basic_string.h ****        *  @return  Reference to this string.
1225:/usr/include/c++/4.8/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1226:/usr/include/c++/4.8/bits/basic_string.h ****        *
1227:/usr/include/c++/4.8/bits/basic_string.h ****        *  Inserts value of @a __str starting at @a __pos1.  If adding
1228:/usr/include/c++/4.8/bits/basic_string.h ****        *  characters causes the length to exceed max_size(),
1229:/usr/include/c++/4.8/bits/basic_string.h ****        *  length_error is thrown.  The value of the string doesn't
1230:/usr/include/c++/4.8/bits/basic_string.h ****        *  change if an error is thrown.
1231:/usr/include/c++/4.8/bits/basic_string.h ****       */
1232:/usr/include/c++/4.8/bits/basic_string.h ****       basic_string&
1233:/usr/include/c++/4.8/bits/basic_string.h ****       insert(size_type __pos1, const basic_string& __str)
1234:/usr/include/c++/4.8/bits/basic_string.h ****       { return this->insert(__pos1, __str, size_type(0), __str.size()); }
1235:/usr/include/c++/4.8/bits/basic_string.h **** 
1236:/usr/include/c++/4.8/bits/basic_string.h ****       /**
1237:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Insert a substring.
1238:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __pos1  Iterator referencing location in string to insert at.
1239:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __str  The string to insert.
1240:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __pos2  Start of characters in str to insert.
1241:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __n  Number of characters to insert.
1242:/usr/include/c++/4.8/bits/basic_string.h ****        *  @return  Reference to this string.
1243:/usr/include/c++/4.8/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1244:/usr/include/c++/4.8/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a pos1 > size() or
1245:/usr/include/c++/4.8/bits/basic_string.h ****        *  @a __pos2 > @a str.size().
1246:/usr/include/c++/4.8/bits/basic_string.h ****        *
1247:/usr/include/c++/4.8/bits/basic_string.h ****        *  Starting at @a pos1, insert @a __n character of @a __str
1248:/usr/include/c++/4.8/bits/basic_string.h ****        *  beginning with @a __pos2.  If adding characters causes the
1249:/usr/include/c++/4.8/bits/basic_string.h ****        *  length to exceed max_size(), length_error is thrown.  If @a
1250:/usr/include/c++/4.8/bits/basic_string.h ****        *  __pos1 is beyond the end of this string or @a __pos2 is
1251:/usr/include/c++/4.8/bits/basic_string.h ****        *  beyond the end of @a __str, out_of_range is thrown.  The
1252:/usr/include/c++/4.8/bits/basic_string.h ****        *  value of the string doesn't change if an error is thrown.
1253:/usr/include/c++/4.8/bits/basic_string.h ****       */
1254:/usr/include/c++/4.8/bits/basic_string.h ****       basic_string&
1255:/usr/include/c++/4.8/bits/basic_string.h ****       insert(size_type __pos1, const basic_string& __str,
1256:/usr/include/c++/4.8/bits/basic_string.h **** 	     size_type __pos2, size_type __n)
1257:/usr/include/c++/4.8/bits/basic_string.h ****       { return this->insert(__pos1, __str._M_data()
1258:/usr/include/c++/4.8/bits/basic_string.h **** 			    + __str._M_check(__pos2, "basic_string::insert"),
1259:/usr/include/c++/4.8/bits/basic_string.h **** 			    __str._M_limit(__pos2, __n)); }
1260:/usr/include/c++/4.8/bits/basic_string.h **** 
1261:/usr/include/c++/4.8/bits/basic_string.h ****       /**
1262:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Insert a C substring.
1263:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __pos  Iterator referencing location in string to insert at.
1264:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __s  The C string to insert.
1265:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __n  The number of characters to insert.
1266:/usr/include/c++/4.8/bits/basic_string.h ****        *  @return  Reference to this string.
1267:/usr/include/c++/4.8/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1268:/usr/include/c++/4.8/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a __pos is beyond the end of this
1269:/usr/include/c++/4.8/bits/basic_string.h ****        *  string.
1270:/usr/include/c++/4.8/bits/basic_string.h ****        *
1271:/usr/include/c++/4.8/bits/basic_string.h ****        *  Inserts the first @a __n characters of @a __s starting at @a
1272:/usr/include/c++/4.8/bits/basic_string.h ****        *  __pos.  If adding characters causes the length to exceed
1273:/usr/include/c++/4.8/bits/basic_string.h ****        *  max_size(), length_error is thrown.  If @a __pos is beyond
1274:/usr/include/c++/4.8/bits/basic_string.h ****        *  end(), out_of_range is thrown.  The value of the string
1275:/usr/include/c++/4.8/bits/basic_string.h ****        *  doesn't change if an error is thrown.
1276:/usr/include/c++/4.8/bits/basic_string.h ****       */
1277:/usr/include/c++/4.8/bits/basic_string.h ****       basic_string&
1278:/usr/include/c++/4.8/bits/basic_string.h ****       insert(size_type __pos, const _CharT* __s, size_type __n);
1279:/usr/include/c++/4.8/bits/basic_string.h **** 
1280:/usr/include/c++/4.8/bits/basic_string.h ****       /**
1281:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Insert a C string.
1282:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __pos  Iterator referencing location in string to insert at.
1283:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __s  The C string to insert.
1284:/usr/include/c++/4.8/bits/basic_string.h ****        *  @return  Reference to this string.
1285:/usr/include/c++/4.8/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1286:/usr/include/c++/4.8/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a pos is beyond the end of this
1287:/usr/include/c++/4.8/bits/basic_string.h ****        *  string.
1288:/usr/include/c++/4.8/bits/basic_string.h ****        *
1289:/usr/include/c++/4.8/bits/basic_string.h ****        *  Inserts the first @a n characters of @a __s starting at @a __pos.  If
1290:/usr/include/c++/4.8/bits/basic_string.h ****        *  adding characters causes the length to exceed max_size(),
1291:/usr/include/c++/4.8/bits/basic_string.h ****        *  length_error is thrown.  If @a __pos is beyond end(), out_of_range is
1292:/usr/include/c++/4.8/bits/basic_string.h ****        *  thrown.  The value of the string doesn't change if an error is
1293:/usr/include/c++/4.8/bits/basic_string.h ****        *  thrown.
1294:/usr/include/c++/4.8/bits/basic_string.h ****       */
1295:/usr/include/c++/4.8/bits/basic_string.h ****       basic_string&
1296:/usr/include/c++/4.8/bits/basic_string.h ****       insert(size_type __pos, const _CharT* __s)
1297:/usr/include/c++/4.8/bits/basic_string.h ****       {
1298:/usr/include/c++/4.8/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
1299:/usr/include/c++/4.8/bits/basic_string.h **** 	return this->insert(__pos, __s, traits_type::length(__s));
1300:/usr/include/c++/4.8/bits/basic_string.h ****       }
1301:/usr/include/c++/4.8/bits/basic_string.h **** 
1302:/usr/include/c++/4.8/bits/basic_string.h ****       /**
1303:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Insert multiple characters.
1304:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __pos  Index in string to insert at.
1305:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __n  Number of characters to insert
1306:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __c  The character to insert.
1307:/usr/include/c++/4.8/bits/basic_string.h ****        *  @return  Reference to this string.
1308:/usr/include/c++/4.8/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1309:/usr/include/c++/4.8/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a __pos is beyond the end of this
1310:/usr/include/c++/4.8/bits/basic_string.h ****        *  string.
1311:/usr/include/c++/4.8/bits/basic_string.h ****        *
1312:/usr/include/c++/4.8/bits/basic_string.h ****        *  Inserts @a __n copies of character @a __c starting at index
1313:/usr/include/c++/4.8/bits/basic_string.h ****        *  @a __pos.  If adding characters causes the length to exceed
1314:/usr/include/c++/4.8/bits/basic_string.h ****        *  max_size(), length_error is thrown.  If @a __pos > length(),
1315:/usr/include/c++/4.8/bits/basic_string.h ****        *  out_of_range is thrown.  The value of the string doesn't
1316:/usr/include/c++/4.8/bits/basic_string.h ****        *  change if an error is thrown.
1317:/usr/include/c++/4.8/bits/basic_string.h ****       */
1318:/usr/include/c++/4.8/bits/basic_string.h ****       basic_string&
1319:/usr/include/c++/4.8/bits/basic_string.h ****       insert(size_type __pos, size_type __n, _CharT __c)
1320:/usr/include/c++/4.8/bits/basic_string.h ****       { return _M_replace_aux(_M_check(__pos, "basic_string::insert"),
1321:/usr/include/c++/4.8/bits/basic_string.h **** 			      size_type(0), __n, __c); }
1322:/usr/include/c++/4.8/bits/basic_string.h **** 
1323:/usr/include/c++/4.8/bits/basic_string.h ****       /**
1324:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Insert one character.
1325:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __p  Iterator referencing position in string to insert at.
1326:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __c  The character to insert.
1327:/usr/include/c++/4.8/bits/basic_string.h ****        *  @return  Iterator referencing newly inserted char.
1328:/usr/include/c++/4.8/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1329:/usr/include/c++/4.8/bits/basic_string.h ****        *
1330:/usr/include/c++/4.8/bits/basic_string.h ****        *  Inserts character @a __c at position referenced by @a __p.
1331:/usr/include/c++/4.8/bits/basic_string.h ****        *  If adding character causes the length to exceed max_size(),
1332:/usr/include/c++/4.8/bits/basic_string.h ****        *  length_error is thrown.  If @a __p is beyond end of string,
1333:/usr/include/c++/4.8/bits/basic_string.h ****        *  out_of_range is thrown.  The value of the string doesn't
1334:/usr/include/c++/4.8/bits/basic_string.h ****        *  change if an error is thrown.
1335:/usr/include/c++/4.8/bits/basic_string.h ****       */
1336:/usr/include/c++/4.8/bits/basic_string.h ****       iterator
1337:/usr/include/c++/4.8/bits/basic_string.h ****       insert(iterator __p, _CharT __c)
1338:/usr/include/c++/4.8/bits/basic_string.h ****       {
1339:/usr/include/c++/4.8/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(__p >= _M_ibegin() && __p <= _M_iend());
1340:/usr/include/c++/4.8/bits/basic_string.h **** 	const size_type __pos = __p - _M_ibegin();
1341:/usr/include/c++/4.8/bits/basic_string.h **** 	_M_replace_aux(__pos, size_type(0), size_type(1), __c);
1342:/usr/include/c++/4.8/bits/basic_string.h **** 	_M_rep()->_M_set_leaked();
1343:/usr/include/c++/4.8/bits/basic_string.h **** 	return iterator(_M_data() + __pos);
1344:/usr/include/c++/4.8/bits/basic_string.h ****       }
1345:/usr/include/c++/4.8/bits/basic_string.h **** 
1346:/usr/include/c++/4.8/bits/basic_string.h ****       /**
1347:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Remove characters.
1348:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __pos  Index of first character to remove (default 0).
1349:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __n  Number of characters to remove (default remainder).
1350:/usr/include/c++/4.8/bits/basic_string.h ****        *  @return  Reference to this string.
1351:/usr/include/c++/4.8/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a pos is beyond the end of this
1352:/usr/include/c++/4.8/bits/basic_string.h ****        *  string.
1353:/usr/include/c++/4.8/bits/basic_string.h ****        *
1354:/usr/include/c++/4.8/bits/basic_string.h ****        *  Removes @a __n characters from this string starting at @a
1355:/usr/include/c++/4.8/bits/basic_string.h ****        *  __pos.  The length of the string is reduced by @a __n.  If
1356:/usr/include/c++/4.8/bits/basic_string.h ****        *  there are < @a __n characters to remove, the remainder of
1357:/usr/include/c++/4.8/bits/basic_string.h ****        *  the string is truncated.  If @a __p is beyond end of string,
1358:/usr/include/c++/4.8/bits/basic_string.h ****        *  out_of_range is thrown.  The value of the string doesn't
1359:/usr/include/c++/4.8/bits/basic_string.h ****        *  change if an error is thrown.
1360:/usr/include/c++/4.8/bits/basic_string.h ****       */
1361:/usr/include/c++/4.8/bits/basic_string.h ****       basic_string&
1362:/usr/include/c++/4.8/bits/basic_string.h ****       erase(size_type __pos = 0, size_type __n = npos)
1363:/usr/include/c++/4.8/bits/basic_string.h ****       { 
1364:/usr/include/c++/4.8/bits/basic_string.h **** 	_M_mutate(_M_check(__pos, "basic_string::erase"),
1365:/usr/include/c++/4.8/bits/basic_string.h **** 		  _M_limit(__pos, __n), size_type(0));
1366:/usr/include/c++/4.8/bits/basic_string.h **** 	return *this;
1367:/usr/include/c++/4.8/bits/basic_string.h ****       }
1368:/usr/include/c++/4.8/bits/basic_string.h **** 
1369:/usr/include/c++/4.8/bits/basic_string.h ****       /**
1370:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Remove one character.
1371:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __position  Iterator referencing the character to remove.
1372:/usr/include/c++/4.8/bits/basic_string.h ****        *  @return  iterator referencing same location after removal.
1373:/usr/include/c++/4.8/bits/basic_string.h ****        *
1374:/usr/include/c++/4.8/bits/basic_string.h ****        *  Removes the character at @a __position from this string. The value
1375:/usr/include/c++/4.8/bits/basic_string.h ****        *  of the string doesn't change if an error is thrown.
1376:/usr/include/c++/4.8/bits/basic_string.h ****       */
1377:/usr/include/c++/4.8/bits/basic_string.h ****       iterator
1378:/usr/include/c++/4.8/bits/basic_string.h ****       erase(iterator __position)
1379:/usr/include/c++/4.8/bits/basic_string.h ****       {
1380:/usr/include/c++/4.8/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(__position >= _M_ibegin()
1381:/usr/include/c++/4.8/bits/basic_string.h **** 				 && __position < _M_iend());
1382:/usr/include/c++/4.8/bits/basic_string.h **** 	const size_type __pos = __position - _M_ibegin();
1383:/usr/include/c++/4.8/bits/basic_string.h **** 	_M_mutate(__pos, size_type(1), size_type(0));
1384:/usr/include/c++/4.8/bits/basic_string.h **** 	_M_rep()->_M_set_leaked();
1385:/usr/include/c++/4.8/bits/basic_string.h **** 	return iterator(_M_data() + __pos);
1386:/usr/include/c++/4.8/bits/basic_string.h ****       }
1387:/usr/include/c++/4.8/bits/basic_string.h **** 
1388:/usr/include/c++/4.8/bits/basic_string.h ****       /**
1389:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Remove a range of characters.
1390:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __first  Iterator referencing the first character to remove.
1391:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __last  Iterator referencing the end of the range.
1392:/usr/include/c++/4.8/bits/basic_string.h ****        *  @return  Iterator referencing location of first after removal.
1393:/usr/include/c++/4.8/bits/basic_string.h ****        *
1394:/usr/include/c++/4.8/bits/basic_string.h ****        *  Removes the characters in the range [first,last) from this string.
1395:/usr/include/c++/4.8/bits/basic_string.h ****        *  The value of the string doesn't change if an error is thrown.
1396:/usr/include/c++/4.8/bits/basic_string.h ****       */
1397:/usr/include/c++/4.8/bits/basic_string.h ****       iterator
1398:/usr/include/c++/4.8/bits/basic_string.h ****       erase(iterator __first, iterator __last);
1399:/usr/include/c++/4.8/bits/basic_string.h ****  
1400:/usr/include/c++/4.8/bits/basic_string.h **** #if __cplusplus >= 201103L
1401:/usr/include/c++/4.8/bits/basic_string.h ****       /**
1402:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Remove the last character.
1403:/usr/include/c++/4.8/bits/basic_string.h ****        *
1404:/usr/include/c++/4.8/bits/basic_string.h ****        *  The string must be non-empty.
1405:/usr/include/c++/4.8/bits/basic_string.h ****        */
1406:/usr/include/c++/4.8/bits/basic_string.h ****       void
1407:/usr/include/c++/4.8/bits/basic_string.h ****       pop_back()
1408:/usr/include/c++/4.8/bits/basic_string.h ****       { erase(size()-1, 1); }
1409:/usr/include/c++/4.8/bits/basic_string.h **** #endif // C++11
1410:/usr/include/c++/4.8/bits/basic_string.h **** 
1411:/usr/include/c++/4.8/bits/basic_string.h ****       /**
1412:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Replace characters with value from another string.
1413:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __pos  Index of first character to replace.
1414:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __n  Number of characters to be replaced.
1415:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __str  String to insert.
1416:/usr/include/c++/4.8/bits/basic_string.h ****        *  @return  Reference to this string.
1417:/usr/include/c++/4.8/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a pos is beyond the end of this
1418:/usr/include/c++/4.8/bits/basic_string.h ****        *  string.
1419:/usr/include/c++/4.8/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1420:/usr/include/c++/4.8/bits/basic_string.h ****        *
1421:/usr/include/c++/4.8/bits/basic_string.h ****        *  Removes the characters in the range [__pos,__pos+__n) from
1422:/usr/include/c++/4.8/bits/basic_string.h ****        *  this string.  In place, the value of @a __str is inserted.
1423:/usr/include/c++/4.8/bits/basic_string.h ****        *  If @a __pos is beyond end of string, out_of_range is thrown.
1424:/usr/include/c++/4.8/bits/basic_string.h ****        *  If the length of the result exceeds max_size(), length_error
1425:/usr/include/c++/4.8/bits/basic_string.h ****        *  is thrown.  The value of the string doesn't change if an
1426:/usr/include/c++/4.8/bits/basic_string.h ****        *  error is thrown.
1427:/usr/include/c++/4.8/bits/basic_string.h ****       */
1428:/usr/include/c++/4.8/bits/basic_string.h ****       basic_string&
1429:/usr/include/c++/4.8/bits/basic_string.h ****       replace(size_type __pos, size_type __n, const basic_string& __str)
1430:/usr/include/c++/4.8/bits/basic_string.h ****       { return this->replace(__pos, __n, __str._M_data(), __str.size()); }
1431:/usr/include/c++/4.8/bits/basic_string.h **** 
1432:/usr/include/c++/4.8/bits/basic_string.h ****       /**
1433:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Replace characters with value from another string.
1434:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __pos1  Index of first character to replace.
1435:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __n1  Number of characters to be replaced.
1436:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __str  String to insert.
1437:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __pos2  Index of first character of str to use.
1438:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __n2  Number of characters from str to use.
1439:/usr/include/c++/4.8/bits/basic_string.h ****        *  @return  Reference to this string.
1440:/usr/include/c++/4.8/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a __pos1 > size() or @a __pos2 >
1441:/usr/include/c++/4.8/bits/basic_string.h ****        *  __str.size().
1442:/usr/include/c++/4.8/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1443:/usr/include/c++/4.8/bits/basic_string.h ****        *
1444:/usr/include/c++/4.8/bits/basic_string.h ****        *  Removes the characters in the range [__pos1,__pos1 + n) from this
1445:/usr/include/c++/4.8/bits/basic_string.h ****        *  string.  In place, the value of @a __str is inserted.  If @a __pos is
1446:/usr/include/c++/4.8/bits/basic_string.h ****        *  beyond end of string, out_of_range is thrown.  If the length of the
1447:/usr/include/c++/4.8/bits/basic_string.h ****        *  result exceeds max_size(), length_error is thrown.  The value of the
1448:/usr/include/c++/4.8/bits/basic_string.h ****        *  string doesn't change if an error is thrown.
1449:/usr/include/c++/4.8/bits/basic_string.h ****       */
1450:/usr/include/c++/4.8/bits/basic_string.h ****       basic_string&
1451:/usr/include/c++/4.8/bits/basic_string.h ****       replace(size_type __pos1, size_type __n1, const basic_string& __str,
1452:/usr/include/c++/4.8/bits/basic_string.h **** 	      size_type __pos2, size_type __n2)
1453:/usr/include/c++/4.8/bits/basic_string.h ****       { return this->replace(__pos1, __n1, __str._M_data()
1454:/usr/include/c++/4.8/bits/basic_string.h **** 			     + __str._M_check(__pos2, "basic_string::replace"),
1455:/usr/include/c++/4.8/bits/basic_string.h **** 			     __str._M_limit(__pos2, __n2)); }
1456:/usr/include/c++/4.8/bits/basic_string.h **** 
1457:/usr/include/c++/4.8/bits/basic_string.h ****       /**
1458:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Replace characters with value of a C substring.
1459:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __pos  Index of first character to replace.
1460:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __n1  Number of characters to be replaced.
1461:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __s  C string to insert.
1462:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __n2  Number of characters from @a s to use.
1463:/usr/include/c++/4.8/bits/basic_string.h ****        *  @return  Reference to this string.
1464:/usr/include/c++/4.8/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a pos1 > size().
1465:/usr/include/c++/4.8/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1466:/usr/include/c++/4.8/bits/basic_string.h ****        *
1467:/usr/include/c++/4.8/bits/basic_string.h ****        *  Removes the characters in the range [__pos,__pos + __n1)
1468:/usr/include/c++/4.8/bits/basic_string.h ****        *  from this string.  In place, the first @a __n2 characters of
1469:/usr/include/c++/4.8/bits/basic_string.h ****        *  @a __s are inserted, or all of @a __s if @a __n2 is too large.  If
1470:/usr/include/c++/4.8/bits/basic_string.h ****        *  @a __pos is beyond end of string, out_of_range is thrown.  If
1471:/usr/include/c++/4.8/bits/basic_string.h ****        *  the length of result exceeds max_size(), length_error is
1472:/usr/include/c++/4.8/bits/basic_string.h ****        *  thrown.  The value of the string doesn't change if an error
1473:/usr/include/c++/4.8/bits/basic_string.h ****        *  is thrown.
1474:/usr/include/c++/4.8/bits/basic_string.h ****       */
1475:/usr/include/c++/4.8/bits/basic_string.h ****       basic_string&
1476:/usr/include/c++/4.8/bits/basic_string.h ****       replace(size_type __pos, size_type __n1, const _CharT* __s,
1477:/usr/include/c++/4.8/bits/basic_string.h **** 	      size_type __n2);
1478:/usr/include/c++/4.8/bits/basic_string.h **** 
1479:/usr/include/c++/4.8/bits/basic_string.h ****       /**
1480:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Replace characters with value of a C string.
1481:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __pos  Index of first character to replace.
1482:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __n1  Number of characters to be replaced.
1483:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __s  C string to insert.
1484:/usr/include/c++/4.8/bits/basic_string.h ****        *  @return  Reference to this string.
1485:/usr/include/c++/4.8/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a pos > size().
1486:/usr/include/c++/4.8/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1487:/usr/include/c++/4.8/bits/basic_string.h ****        *
1488:/usr/include/c++/4.8/bits/basic_string.h ****        *  Removes the characters in the range [__pos,__pos + __n1)
1489:/usr/include/c++/4.8/bits/basic_string.h ****        *  from this string.  In place, the characters of @a __s are
1490:/usr/include/c++/4.8/bits/basic_string.h ****        *  inserted.  If @a __pos is beyond end of string, out_of_range
1491:/usr/include/c++/4.8/bits/basic_string.h ****        *  is thrown.  If the length of result exceeds max_size(),
1492:/usr/include/c++/4.8/bits/basic_string.h ****        *  length_error is thrown.  The value of the string doesn't
1493:/usr/include/c++/4.8/bits/basic_string.h ****        *  change if an error is thrown.
1494:/usr/include/c++/4.8/bits/basic_string.h ****       */
1495:/usr/include/c++/4.8/bits/basic_string.h ****       basic_string&
1496:/usr/include/c++/4.8/bits/basic_string.h ****       replace(size_type __pos, size_type __n1, const _CharT* __s)
1497:/usr/include/c++/4.8/bits/basic_string.h ****       {
1498:/usr/include/c++/4.8/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
1499:/usr/include/c++/4.8/bits/basic_string.h **** 	return this->replace(__pos, __n1, __s, traits_type::length(__s));
1500:/usr/include/c++/4.8/bits/basic_string.h ****       }
1501:/usr/include/c++/4.8/bits/basic_string.h **** 
1502:/usr/include/c++/4.8/bits/basic_string.h ****       /**
1503:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Replace characters with multiple characters.
1504:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __pos  Index of first character to replace.
1505:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __n1  Number of characters to be replaced.
1506:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __n2  Number of characters to insert.
1507:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __c  Character to insert.
1508:/usr/include/c++/4.8/bits/basic_string.h ****        *  @return  Reference to this string.
1509:/usr/include/c++/4.8/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a __pos > size().
1510:/usr/include/c++/4.8/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1511:/usr/include/c++/4.8/bits/basic_string.h ****        *
1512:/usr/include/c++/4.8/bits/basic_string.h ****        *  Removes the characters in the range [pos,pos + n1) from this
1513:/usr/include/c++/4.8/bits/basic_string.h ****        *  string.  In place, @a __n2 copies of @a __c are inserted.
1514:/usr/include/c++/4.8/bits/basic_string.h ****        *  If @a __pos is beyond end of string, out_of_range is thrown.
1515:/usr/include/c++/4.8/bits/basic_string.h ****        *  If the length of result exceeds max_size(), length_error is
1516:/usr/include/c++/4.8/bits/basic_string.h ****        *  thrown.  The value of the string doesn't change if an error
1517:/usr/include/c++/4.8/bits/basic_string.h ****        *  is thrown.
1518:/usr/include/c++/4.8/bits/basic_string.h ****       */
1519:/usr/include/c++/4.8/bits/basic_string.h ****       basic_string&
1520:/usr/include/c++/4.8/bits/basic_string.h ****       replace(size_type __pos, size_type __n1, size_type __n2, _CharT __c)
1521:/usr/include/c++/4.8/bits/basic_string.h ****       { return _M_replace_aux(_M_check(__pos, "basic_string::replace"),
1522:/usr/include/c++/4.8/bits/basic_string.h **** 			      _M_limit(__pos, __n1), __n2, __c); }
1523:/usr/include/c++/4.8/bits/basic_string.h **** 
1524:/usr/include/c++/4.8/bits/basic_string.h ****       /**
1525:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Replace range of characters with string.
1526:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
1527:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
1528:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __str  String value to insert.
1529:/usr/include/c++/4.8/bits/basic_string.h ****        *  @return  Reference to this string.
1530:/usr/include/c++/4.8/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1531:/usr/include/c++/4.8/bits/basic_string.h ****        *
1532:/usr/include/c++/4.8/bits/basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
1533:/usr/include/c++/4.8/bits/basic_string.h ****        *  the value of @a __str is inserted.  If the length of result
1534:/usr/include/c++/4.8/bits/basic_string.h ****        *  exceeds max_size(), length_error is thrown.  The value of
1535:/usr/include/c++/4.8/bits/basic_string.h ****        *  the string doesn't change if an error is thrown.
1536:/usr/include/c++/4.8/bits/basic_string.h ****       */
1537:/usr/include/c++/4.8/bits/basic_string.h ****       basic_string&
1538:/usr/include/c++/4.8/bits/basic_string.h ****       replace(iterator __i1, iterator __i2, const basic_string& __str)
1539:/usr/include/c++/4.8/bits/basic_string.h ****       { return this->replace(__i1, __i2, __str._M_data(), __str.size()); }
1540:/usr/include/c++/4.8/bits/basic_string.h **** 
1541:/usr/include/c++/4.8/bits/basic_string.h ****       /**
1542:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Replace range of characters with C substring.
1543:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
1544:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
1545:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __s  C string value to insert.
1546:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __n  Number of characters from s to insert.
1547:/usr/include/c++/4.8/bits/basic_string.h ****        *  @return  Reference to this string.
1548:/usr/include/c++/4.8/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1549:/usr/include/c++/4.8/bits/basic_string.h ****        *
1550:/usr/include/c++/4.8/bits/basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
1551:/usr/include/c++/4.8/bits/basic_string.h ****        *  the first @a __n characters of @a __s are inserted.  If the
1552:/usr/include/c++/4.8/bits/basic_string.h ****        *  length of result exceeds max_size(), length_error is thrown.
1553:/usr/include/c++/4.8/bits/basic_string.h ****        *  The value of the string doesn't change if an error is
1554:/usr/include/c++/4.8/bits/basic_string.h ****        *  thrown.
1555:/usr/include/c++/4.8/bits/basic_string.h ****       */
1556:/usr/include/c++/4.8/bits/basic_string.h ****       basic_string&
1557:/usr/include/c++/4.8/bits/basic_string.h ****       replace(iterator __i1, iterator __i2, const _CharT* __s, size_type __n)
1558:/usr/include/c++/4.8/bits/basic_string.h ****       {
1559:/usr/include/c++/4.8/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(_M_ibegin() <= __i1 && __i1 <= __i2
1560:/usr/include/c++/4.8/bits/basic_string.h **** 				 && __i2 <= _M_iend());
1561:/usr/include/c++/4.8/bits/basic_string.h **** 	return this->replace(__i1 - _M_ibegin(), __i2 - __i1, __s, __n);
1562:/usr/include/c++/4.8/bits/basic_string.h ****       }
1563:/usr/include/c++/4.8/bits/basic_string.h **** 
1564:/usr/include/c++/4.8/bits/basic_string.h ****       /**
1565:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Replace range of characters with C string.
1566:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
1567:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
1568:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __s  C string value to insert.
1569:/usr/include/c++/4.8/bits/basic_string.h ****        *  @return  Reference to this string.
1570:/usr/include/c++/4.8/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1571:/usr/include/c++/4.8/bits/basic_string.h ****        *
1572:/usr/include/c++/4.8/bits/basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
1573:/usr/include/c++/4.8/bits/basic_string.h ****        *  the characters of @a __s are inserted.  If the length of
1574:/usr/include/c++/4.8/bits/basic_string.h ****        *  result exceeds max_size(), length_error is thrown.  The
1575:/usr/include/c++/4.8/bits/basic_string.h ****        *  value of the string doesn't change if an error is thrown.
1576:/usr/include/c++/4.8/bits/basic_string.h ****       */
1577:/usr/include/c++/4.8/bits/basic_string.h ****       basic_string&
1578:/usr/include/c++/4.8/bits/basic_string.h ****       replace(iterator __i1, iterator __i2, const _CharT* __s)
1579:/usr/include/c++/4.8/bits/basic_string.h ****       {
1580:/usr/include/c++/4.8/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
1581:/usr/include/c++/4.8/bits/basic_string.h **** 	return this->replace(__i1, __i2, __s, traits_type::length(__s));
1582:/usr/include/c++/4.8/bits/basic_string.h ****       }
1583:/usr/include/c++/4.8/bits/basic_string.h **** 
1584:/usr/include/c++/4.8/bits/basic_string.h ****       /**
1585:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Replace range of characters with multiple characters
1586:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
1587:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
1588:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __n  Number of characters to insert.
1589:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __c  Character to insert.
1590:/usr/include/c++/4.8/bits/basic_string.h ****        *  @return  Reference to this string.
1591:/usr/include/c++/4.8/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1592:/usr/include/c++/4.8/bits/basic_string.h ****        *
1593:/usr/include/c++/4.8/bits/basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
1594:/usr/include/c++/4.8/bits/basic_string.h ****        *  @a __n copies of @a __c are inserted.  If the length of
1595:/usr/include/c++/4.8/bits/basic_string.h ****        *  result exceeds max_size(), length_error is thrown.  The
1596:/usr/include/c++/4.8/bits/basic_string.h ****        *  value of the string doesn't change if an error is thrown.
1597:/usr/include/c++/4.8/bits/basic_string.h ****       */
1598:/usr/include/c++/4.8/bits/basic_string.h ****       basic_string&
1599:/usr/include/c++/4.8/bits/basic_string.h ****       replace(iterator __i1, iterator __i2, size_type __n, _CharT __c)
1600:/usr/include/c++/4.8/bits/basic_string.h ****       {
1601:/usr/include/c++/4.8/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(_M_ibegin() <= __i1 && __i1 <= __i2
1602:/usr/include/c++/4.8/bits/basic_string.h **** 				 && __i2 <= _M_iend());
1603:/usr/include/c++/4.8/bits/basic_string.h **** 	return _M_replace_aux(__i1 - _M_ibegin(), __i2 - __i1, __n, __c);
1604:/usr/include/c++/4.8/bits/basic_string.h ****       }
1605:/usr/include/c++/4.8/bits/basic_string.h **** 
1606:/usr/include/c++/4.8/bits/basic_string.h ****       /**
1607:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Replace range of characters with range.
1608:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
1609:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
1610:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __k1  Iterator referencing start of range to insert.
1611:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __k2  Iterator referencing end of range to insert.
1612:/usr/include/c++/4.8/bits/basic_string.h ****        *  @return  Reference to this string.
1613:/usr/include/c++/4.8/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1614:/usr/include/c++/4.8/bits/basic_string.h ****        *
1615:/usr/include/c++/4.8/bits/basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
1616:/usr/include/c++/4.8/bits/basic_string.h ****        *  characters in the range [__k1,__k2) are inserted.  If the
1617:/usr/include/c++/4.8/bits/basic_string.h ****        *  length of result exceeds max_size(), length_error is thrown.
1618:/usr/include/c++/4.8/bits/basic_string.h ****        *  The value of the string doesn't change if an error is
1619:/usr/include/c++/4.8/bits/basic_string.h ****        *  thrown.
1620:/usr/include/c++/4.8/bits/basic_string.h ****       */
1621:/usr/include/c++/4.8/bits/basic_string.h ****       template<class _InputIterator>
1622:/usr/include/c++/4.8/bits/basic_string.h ****         basic_string&
1623:/usr/include/c++/4.8/bits/basic_string.h ****         replace(iterator __i1, iterator __i2,
1624:/usr/include/c++/4.8/bits/basic_string.h **** 		_InputIterator __k1, _InputIterator __k2)
1625:/usr/include/c++/4.8/bits/basic_string.h ****         {
1626:/usr/include/c++/4.8/bits/basic_string.h **** 	  _GLIBCXX_DEBUG_PEDASSERT(_M_ibegin() <= __i1 && __i1 <= __i2
1627:/usr/include/c++/4.8/bits/basic_string.h **** 				   && __i2 <= _M_iend());
1628:/usr/include/c++/4.8/bits/basic_string.h **** 	  __glibcxx_requires_valid_range(__k1, __k2);
1629:/usr/include/c++/4.8/bits/basic_string.h **** 	  typedef typename std::__is_integer<_InputIterator>::__type _Integral;
1630:/usr/include/c++/4.8/bits/basic_string.h **** 	  return _M_replace_dispatch(__i1, __i2, __k1, __k2, _Integral());
1631:/usr/include/c++/4.8/bits/basic_string.h **** 	}
1632:/usr/include/c++/4.8/bits/basic_string.h **** 
1633:/usr/include/c++/4.8/bits/basic_string.h ****       // Specializations for the common case of pointer and iterator:
1634:/usr/include/c++/4.8/bits/basic_string.h ****       // useful to avoid the overhead of temporary buffering in _M_replace.
1635:/usr/include/c++/4.8/bits/basic_string.h ****       basic_string&
1636:/usr/include/c++/4.8/bits/basic_string.h ****       replace(iterator __i1, iterator __i2, _CharT* __k1, _CharT* __k2)
1637:/usr/include/c++/4.8/bits/basic_string.h ****       {
1638:/usr/include/c++/4.8/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(_M_ibegin() <= __i1 && __i1 <= __i2
1639:/usr/include/c++/4.8/bits/basic_string.h **** 				 && __i2 <= _M_iend());
1640:/usr/include/c++/4.8/bits/basic_string.h **** 	__glibcxx_requires_valid_range(__k1, __k2);
1641:/usr/include/c++/4.8/bits/basic_string.h **** 	return this->replace(__i1 - _M_ibegin(), __i2 - __i1,
1642:/usr/include/c++/4.8/bits/basic_string.h **** 			     __k1, __k2 - __k1);
1643:/usr/include/c++/4.8/bits/basic_string.h ****       }
1644:/usr/include/c++/4.8/bits/basic_string.h **** 
1645:/usr/include/c++/4.8/bits/basic_string.h ****       basic_string&
1646:/usr/include/c++/4.8/bits/basic_string.h ****       replace(iterator __i1, iterator __i2,
1647:/usr/include/c++/4.8/bits/basic_string.h **** 	      const _CharT* __k1, const _CharT* __k2)
1648:/usr/include/c++/4.8/bits/basic_string.h ****       {
1649:/usr/include/c++/4.8/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(_M_ibegin() <= __i1 && __i1 <= __i2
1650:/usr/include/c++/4.8/bits/basic_string.h **** 				 && __i2 <= _M_iend());
1651:/usr/include/c++/4.8/bits/basic_string.h **** 	__glibcxx_requires_valid_range(__k1, __k2);
1652:/usr/include/c++/4.8/bits/basic_string.h **** 	return this->replace(__i1 - _M_ibegin(), __i2 - __i1,
1653:/usr/include/c++/4.8/bits/basic_string.h **** 			     __k1, __k2 - __k1);
1654:/usr/include/c++/4.8/bits/basic_string.h ****       }
1655:/usr/include/c++/4.8/bits/basic_string.h **** 
1656:/usr/include/c++/4.8/bits/basic_string.h ****       basic_string&
1657:/usr/include/c++/4.8/bits/basic_string.h ****       replace(iterator __i1, iterator __i2, iterator __k1, iterator __k2)
1658:/usr/include/c++/4.8/bits/basic_string.h ****       {
1659:/usr/include/c++/4.8/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(_M_ibegin() <= __i1 && __i1 <= __i2
1660:/usr/include/c++/4.8/bits/basic_string.h **** 				 && __i2 <= _M_iend());
1661:/usr/include/c++/4.8/bits/basic_string.h **** 	__glibcxx_requires_valid_range(__k1, __k2);
1662:/usr/include/c++/4.8/bits/basic_string.h **** 	return this->replace(__i1 - _M_ibegin(), __i2 - __i1,
1663:/usr/include/c++/4.8/bits/basic_string.h **** 			     __k1.base(), __k2 - __k1);
1664:/usr/include/c++/4.8/bits/basic_string.h ****       }
1665:/usr/include/c++/4.8/bits/basic_string.h **** 
1666:/usr/include/c++/4.8/bits/basic_string.h ****       basic_string&
1667:/usr/include/c++/4.8/bits/basic_string.h ****       replace(iterator __i1, iterator __i2,
1668:/usr/include/c++/4.8/bits/basic_string.h **** 	      const_iterator __k1, const_iterator __k2)
1669:/usr/include/c++/4.8/bits/basic_string.h ****       {
1670:/usr/include/c++/4.8/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(_M_ibegin() <= __i1 && __i1 <= __i2
1671:/usr/include/c++/4.8/bits/basic_string.h **** 				 && __i2 <= _M_iend());
1672:/usr/include/c++/4.8/bits/basic_string.h **** 	__glibcxx_requires_valid_range(__k1, __k2);
1673:/usr/include/c++/4.8/bits/basic_string.h **** 	return this->replace(__i1 - _M_ibegin(), __i2 - __i1,
1674:/usr/include/c++/4.8/bits/basic_string.h **** 			     __k1.base(), __k2 - __k1);
1675:/usr/include/c++/4.8/bits/basic_string.h ****       }
1676:/usr/include/c++/4.8/bits/basic_string.h ****       
1677:/usr/include/c++/4.8/bits/basic_string.h **** #if __cplusplus >= 201103L
1678:/usr/include/c++/4.8/bits/basic_string.h ****       /**
1679:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Replace range of characters with initializer_list.
1680:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
1681:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
1682:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __l  The initializer_list of characters to insert.
1683:/usr/include/c++/4.8/bits/basic_string.h ****        *  @return  Reference to this string.
1684:/usr/include/c++/4.8/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1685:/usr/include/c++/4.8/bits/basic_string.h ****        *
1686:/usr/include/c++/4.8/bits/basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
1687:/usr/include/c++/4.8/bits/basic_string.h ****        *  characters in the range [__k1,__k2) are inserted.  If the
1688:/usr/include/c++/4.8/bits/basic_string.h ****        *  length of result exceeds max_size(), length_error is thrown.
1689:/usr/include/c++/4.8/bits/basic_string.h ****        *  The value of the string doesn't change if an error is
1690:/usr/include/c++/4.8/bits/basic_string.h ****        *  thrown.
1691:/usr/include/c++/4.8/bits/basic_string.h ****       */
1692:/usr/include/c++/4.8/bits/basic_string.h ****       basic_string& replace(iterator __i1, iterator __i2,
1693:/usr/include/c++/4.8/bits/basic_string.h **** 			    initializer_list<_CharT> __l)
1694:/usr/include/c++/4.8/bits/basic_string.h ****       { return this->replace(__i1, __i2, __l.begin(), __l.end()); }
1695:/usr/include/c++/4.8/bits/basic_string.h **** #endif // C++11
1696:/usr/include/c++/4.8/bits/basic_string.h **** 
1697:/usr/include/c++/4.8/bits/basic_string.h ****     private:
1698:/usr/include/c++/4.8/bits/basic_string.h ****       template<class _Integer>
1699:/usr/include/c++/4.8/bits/basic_string.h **** 	basic_string&
1700:/usr/include/c++/4.8/bits/basic_string.h **** 	_M_replace_dispatch(iterator __i1, iterator __i2, _Integer __n,
1701:/usr/include/c++/4.8/bits/basic_string.h **** 			    _Integer __val, __true_type)
1702:/usr/include/c++/4.8/bits/basic_string.h ****         { return _M_replace_aux(__i1 - _M_ibegin(), __i2 - __i1, __n, __val); }
1703:/usr/include/c++/4.8/bits/basic_string.h **** 
1704:/usr/include/c++/4.8/bits/basic_string.h ****       template<class _InputIterator>
1705:/usr/include/c++/4.8/bits/basic_string.h **** 	basic_string&
1706:/usr/include/c++/4.8/bits/basic_string.h **** 	_M_replace_dispatch(iterator __i1, iterator __i2, _InputIterator __k1,
1707:/usr/include/c++/4.8/bits/basic_string.h **** 			    _InputIterator __k2, __false_type);
1708:/usr/include/c++/4.8/bits/basic_string.h **** 
1709:/usr/include/c++/4.8/bits/basic_string.h ****       basic_string&
1710:/usr/include/c++/4.8/bits/basic_string.h ****       _M_replace_aux(size_type __pos1, size_type __n1, size_type __n2,
1711:/usr/include/c++/4.8/bits/basic_string.h **** 		     _CharT __c);
1712:/usr/include/c++/4.8/bits/basic_string.h **** 
1713:/usr/include/c++/4.8/bits/basic_string.h ****       basic_string&
1714:/usr/include/c++/4.8/bits/basic_string.h ****       _M_replace_safe(size_type __pos1, size_type __n1, const _CharT* __s,
1715:/usr/include/c++/4.8/bits/basic_string.h **** 		      size_type __n2);
1716:/usr/include/c++/4.8/bits/basic_string.h **** 
1717:/usr/include/c++/4.8/bits/basic_string.h ****       // _S_construct_aux is used to implement the 21.3.1 para 15 which
1718:/usr/include/c++/4.8/bits/basic_string.h ****       // requires special behaviour if _InIter is an integral type
1719:/usr/include/c++/4.8/bits/basic_string.h ****       template<class _InIterator>
1720:/usr/include/c++/4.8/bits/basic_string.h ****         static _CharT*
1721:/usr/include/c++/4.8/bits/basic_string.h ****         _S_construct_aux(_InIterator __beg, _InIterator __end,
1722:/usr/include/c++/4.8/bits/basic_string.h **** 			 const _Alloc& __a, __false_type)
1723:/usr/include/c++/4.8/bits/basic_string.h **** 	{
1724:/usr/include/c++/4.8/bits/basic_string.h ****           typedef typename iterator_traits<_InIterator>::iterator_category _Tag;
1725:/usr/include/c++/4.8/bits/basic_string.h ****           return _S_construct(__beg, __end, __a, _Tag());
1726:/usr/include/c++/4.8/bits/basic_string.h **** 	}
1727:/usr/include/c++/4.8/bits/basic_string.h **** 
1728:/usr/include/c++/4.8/bits/basic_string.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
1729:/usr/include/c++/4.8/bits/basic_string.h ****       // 438. Ambiguity in the "do the right thing" clause
1730:/usr/include/c++/4.8/bits/basic_string.h ****       template<class _Integer>
1731:/usr/include/c++/4.8/bits/basic_string.h ****         static _CharT*
1732:/usr/include/c++/4.8/bits/basic_string.h ****         _S_construct_aux(_Integer __beg, _Integer __end,
1733:/usr/include/c++/4.8/bits/basic_string.h **** 			 const _Alloc& __a, __true_type)
1734:/usr/include/c++/4.8/bits/basic_string.h ****         { return _S_construct_aux_2(static_cast<size_type>(__beg),
1735:/usr/include/c++/4.8/bits/basic_string.h **** 				    __end, __a); }
1736:/usr/include/c++/4.8/bits/basic_string.h **** 
1737:/usr/include/c++/4.8/bits/basic_string.h ****       static _CharT*
1738:/usr/include/c++/4.8/bits/basic_string.h ****       _S_construct_aux_2(size_type __req, _CharT __c, const _Alloc& __a)
1739:/usr/include/c++/4.8/bits/basic_string.h ****       { return _S_construct(__req, __c, __a); }
1740:/usr/include/c++/4.8/bits/basic_string.h **** 
1741:/usr/include/c++/4.8/bits/basic_string.h ****       template<class _InIterator>
1742:/usr/include/c++/4.8/bits/basic_string.h ****         static _CharT*
1743:/usr/include/c++/4.8/bits/basic_string.h ****         _S_construct(_InIterator __beg, _InIterator __end, const _Alloc& __a)
1744:/usr/include/c++/4.8/bits/basic_string.h **** 	{
1745:/usr/include/c++/4.8/bits/basic_string.h **** 	  typedef typename std::__is_integer<_InIterator>::__type _Integral;
1746:/usr/include/c++/4.8/bits/basic_string.h **** 	  return _S_construct_aux(__beg, __end, __a, _Integral());
1747:/usr/include/c++/4.8/bits/basic_string.h ****         }
1748:/usr/include/c++/4.8/bits/basic_string.h **** 
1749:/usr/include/c++/4.8/bits/basic_string.h ****       // For Input Iterators, used in istreambuf_iterators, etc.
1750:/usr/include/c++/4.8/bits/basic_string.h ****       template<class _InIterator>
1751:/usr/include/c++/4.8/bits/basic_string.h ****         static _CharT*
1752:/usr/include/c++/4.8/bits/basic_string.h ****          _S_construct(_InIterator __beg, _InIterator __end, const _Alloc& __a,
1753:/usr/include/c++/4.8/bits/basic_string.h **** 		      input_iterator_tag);
1754:/usr/include/c++/4.8/bits/basic_string.h **** 
1755:/usr/include/c++/4.8/bits/basic_string.h ****       // For forward_iterators up to random_access_iterators, used for
1756:/usr/include/c++/4.8/bits/basic_string.h ****       // string::iterator, _CharT*, etc.
1757:/usr/include/c++/4.8/bits/basic_string.h ****       template<class _FwdIterator>
1758:/usr/include/c++/4.8/bits/basic_string.h ****         static _CharT*
1759:/usr/include/c++/4.8/bits/basic_string.h ****         _S_construct(_FwdIterator __beg, _FwdIterator __end, const _Alloc& __a,
1760:/usr/include/c++/4.8/bits/basic_string.h **** 		     forward_iterator_tag);
1761:/usr/include/c++/4.8/bits/basic_string.h **** 
1762:/usr/include/c++/4.8/bits/basic_string.h ****       static _CharT*
1763:/usr/include/c++/4.8/bits/basic_string.h ****       _S_construct(size_type __req, _CharT __c, const _Alloc& __a);
1764:/usr/include/c++/4.8/bits/basic_string.h **** 
1765:/usr/include/c++/4.8/bits/basic_string.h ****     public:
1766:/usr/include/c++/4.8/bits/basic_string.h **** 
1767:/usr/include/c++/4.8/bits/basic_string.h ****       /**
1768:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Copy substring into C string.
1769:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __s  C string to copy value into.
1770:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __n  Number of characters to copy.
1771:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __pos  Index of first character to copy.
1772:/usr/include/c++/4.8/bits/basic_string.h ****        *  @return  Number of characters actually copied
1773:/usr/include/c++/4.8/bits/basic_string.h ****        *  @throw  std::out_of_range  If __pos > size().
1774:/usr/include/c++/4.8/bits/basic_string.h ****        *
1775:/usr/include/c++/4.8/bits/basic_string.h ****        *  Copies up to @a __n characters starting at @a __pos into the
1776:/usr/include/c++/4.8/bits/basic_string.h ****        *  C string @a __s.  If @a __pos is %greater than size(),
1777:/usr/include/c++/4.8/bits/basic_string.h ****        *  out_of_range is thrown.
1778:/usr/include/c++/4.8/bits/basic_string.h ****       */
1779:/usr/include/c++/4.8/bits/basic_string.h ****       size_type
1780:/usr/include/c++/4.8/bits/basic_string.h ****       copy(_CharT* __s, size_type __n, size_type __pos = 0) const;
1781:/usr/include/c++/4.8/bits/basic_string.h **** 
1782:/usr/include/c++/4.8/bits/basic_string.h ****       /**
1783:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Swap contents with another string.
1784:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __s  String to swap with.
1785:/usr/include/c++/4.8/bits/basic_string.h ****        *
1786:/usr/include/c++/4.8/bits/basic_string.h ****        *  Exchanges the contents of this string with that of @a __s in constant
1787:/usr/include/c++/4.8/bits/basic_string.h ****        *  time.
1788:/usr/include/c++/4.8/bits/basic_string.h ****       */
1789:/usr/include/c++/4.8/bits/basic_string.h ****       void
1790:/usr/include/c++/4.8/bits/basic_string.h ****       swap(basic_string& __s);
1791:/usr/include/c++/4.8/bits/basic_string.h **** 
1792:/usr/include/c++/4.8/bits/basic_string.h ****       // String operations:
1793:/usr/include/c++/4.8/bits/basic_string.h ****       /**
1794:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Return const pointer to null-terminated contents.
1795:/usr/include/c++/4.8/bits/basic_string.h ****        *
1796:/usr/include/c++/4.8/bits/basic_string.h ****        *  This is a handle to internal data.  Do not modify or dire things may
1797:/usr/include/c++/4.8/bits/basic_string.h ****        *  happen.
1798:/usr/include/c++/4.8/bits/basic_string.h ****       */
1799:/usr/include/c++/4.8/bits/basic_string.h ****       const _CharT*
1800:/usr/include/c++/4.8/bits/basic_string.h ****       c_str() const _GLIBCXX_NOEXCEPT
1801:/usr/include/c++/4.8/bits/basic_string.h ****       { return _M_data(); }
1802:/usr/include/c++/4.8/bits/basic_string.h **** 
1803:/usr/include/c++/4.8/bits/basic_string.h ****       /**
1804:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Return const pointer to contents.
1805:/usr/include/c++/4.8/bits/basic_string.h ****        *
1806:/usr/include/c++/4.8/bits/basic_string.h ****        *  This is a handle to internal data.  Do not modify or dire things may
1807:/usr/include/c++/4.8/bits/basic_string.h ****        *  happen.
1808:/usr/include/c++/4.8/bits/basic_string.h ****       */
1809:/usr/include/c++/4.8/bits/basic_string.h ****       const _CharT*
1810:/usr/include/c++/4.8/bits/basic_string.h ****       data() const _GLIBCXX_NOEXCEPT
1811:/usr/include/c++/4.8/bits/basic_string.h ****       { return _M_data(); }
1812:/usr/include/c++/4.8/bits/basic_string.h **** 
1813:/usr/include/c++/4.8/bits/basic_string.h ****       /**
1814:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Return copy of allocator used to construct this string.
1815:/usr/include/c++/4.8/bits/basic_string.h ****       */
1816:/usr/include/c++/4.8/bits/basic_string.h ****       allocator_type
1817:/usr/include/c++/4.8/bits/basic_string.h ****       get_allocator() const _GLIBCXX_NOEXCEPT
1818:/usr/include/c++/4.8/bits/basic_string.h ****       { return _M_dataplus; }
1819:/usr/include/c++/4.8/bits/basic_string.h **** 
1820:/usr/include/c++/4.8/bits/basic_string.h ****       /**
1821:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Find position of a C substring.
1822:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __s  C string to locate.
1823:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __pos  Index of character to search from.
1824:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __n  Number of characters from @a s to search for.
1825:/usr/include/c++/4.8/bits/basic_string.h ****        *  @return  Index of start of first occurrence.
1826:/usr/include/c++/4.8/bits/basic_string.h ****        *
1827:/usr/include/c++/4.8/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for the first @a
1828:/usr/include/c++/4.8/bits/basic_string.h ****        *  __n characters in @a __s within this string.  If found,
1829:/usr/include/c++/4.8/bits/basic_string.h ****        *  returns the index where it begins.  If not found, returns
1830:/usr/include/c++/4.8/bits/basic_string.h ****        *  npos.
1831:/usr/include/c++/4.8/bits/basic_string.h ****       */
1832:/usr/include/c++/4.8/bits/basic_string.h ****       size_type
1833:/usr/include/c++/4.8/bits/basic_string.h ****       find(const _CharT* __s, size_type __pos, size_type __n) const;
1834:/usr/include/c++/4.8/bits/basic_string.h **** 
1835:/usr/include/c++/4.8/bits/basic_string.h ****       /**
1836:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Find position of a string.
1837:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __str  String to locate.
1838:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
1839:/usr/include/c++/4.8/bits/basic_string.h ****        *  @return  Index of start of first occurrence.
1840:/usr/include/c++/4.8/bits/basic_string.h ****        *
1841:/usr/include/c++/4.8/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for value of @a __str within
1842:/usr/include/c++/4.8/bits/basic_string.h ****        *  this string.  If found, returns the index where it begins.  If not
1843:/usr/include/c++/4.8/bits/basic_string.h ****        *  found, returns npos.
1844:/usr/include/c++/4.8/bits/basic_string.h ****       */
1845:/usr/include/c++/4.8/bits/basic_string.h ****       size_type
1846:/usr/include/c++/4.8/bits/basic_string.h ****       find(const basic_string& __str, size_type __pos = 0) const
1847:/usr/include/c++/4.8/bits/basic_string.h **** 	_GLIBCXX_NOEXCEPT
1848:/usr/include/c++/4.8/bits/basic_string.h ****       { return this->find(__str.data(), __pos, __str.size()); }
1849:/usr/include/c++/4.8/bits/basic_string.h **** 
1850:/usr/include/c++/4.8/bits/basic_string.h ****       /**
1851:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Find position of a C string.
1852:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __s  C string to locate.
1853:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
1854:/usr/include/c++/4.8/bits/basic_string.h ****        *  @return  Index of start of first occurrence.
1855:/usr/include/c++/4.8/bits/basic_string.h ****        *
1856:/usr/include/c++/4.8/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for the value of @a
1857:/usr/include/c++/4.8/bits/basic_string.h ****        *  __s within this string.  If found, returns the index where
1858:/usr/include/c++/4.8/bits/basic_string.h ****        *  it begins.  If not found, returns npos.
1859:/usr/include/c++/4.8/bits/basic_string.h ****       */
1860:/usr/include/c++/4.8/bits/basic_string.h ****       size_type
1861:/usr/include/c++/4.8/bits/basic_string.h ****       find(const _CharT* __s, size_type __pos = 0) const
1862:/usr/include/c++/4.8/bits/basic_string.h ****       {
1863:/usr/include/c++/4.8/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
1864:/usr/include/c++/4.8/bits/basic_string.h **** 	return this->find(__s, __pos, traits_type::length(__s));
1865:/usr/include/c++/4.8/bits/basic_string.h ****       }
1866:/usr/include/c++/4.8/bits/basic_string.h **** 
1867:/usr/include/c++/4.8/bits/basic_string.h ****       /**
1868:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Find position of a character.
1869:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __c  Character to locate.
1870:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
1871:/usr/include/c++/4.8/bits/basic_string.h ****        *  @return  Index of first occurrence.
1872:/usr/include/c++/4.8/bits/basic_string.h ****        *
1873:/usr/include/c++/4.8/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for @a __c within
1874:/usr/include/c++/4.8/bits/basic_string.h ****        *  this string.  If found, returns the index where it was
1875:/usr/include/c++/4.8/bits/basic_string.h ****        *  found.  If not found, returns npos.
1876:/usr/include/c++/4.8/bits/basic_string.h ****       */
1877:/usr/include/c++/4.8/bits/basic_string.h ****       size_type
1878:/usr/include/c++/4.8/bits/basic_string.h ****       find(_CharT __c, size_type __pos = 0) const _GLIBCXX_NOEXCEPT;
1879:/usr/include/c++/4.8/bits/basic_string.h **** 
1880:/usr/include/c++/4.8/bits/basic_string.h ****       /**
1881:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Find last position of a string.
1882:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __str  String to locate.
1883:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
1884:/usr/include/c++/4.8/bits/basic_string.h ****        *  @return  Index of start of last occurrence.
1885:/usr/include/c++/4.8/bits/basic_string.h ****        *
1886:/usr/include/c++/4.8/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for value of @a
1887:/usr/include/c++/4.8/bits/basic_string.h ****        *  __str within this string.  If found, returns the index where
1888:/usr/include/c++/4.8/bits/basic_string.h ****        *  it begins.  If not found, returns npos.
1889:/usr/include/c++/4.8/bits/basic_string.h ****       */
1890:/usr/include/c++/4.8/bits/basic_string.h ****       size_type
1891:/usr/include/c++/4.8/bits/basic_string.h ****       rfind(const basic_string& __str, size_type __pos = npos) const
1892:/usr/include/c++/4.8/bits/basic_string.h **** 	_GLIBCXX_NOEXCEPT
1893:/usr/include/c++/4.8/bits/basic_string.h ****       { return this->rfind(__str.data(), __pos, __str.size()); }
1894:/usr/include/c++/4.8/bits/basic_string.h **** 
1895:/usr/include/c++/4.8/bits/basic_string.h ****       /**
1896:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Find last position of a C substring.
1897:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __s  C string to locate.
1898:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __pos  Index of character to search back from.
1899:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __n  Number of characters from s to search for.
1900:/usr/include/c++/4.8/bits/basic_string.h ****        *  @return  Index of start of last occurrence.
1901:/usr/include/c++/4.8/bits/basic_string.h ****        *
1902:/usr/include/c++/4.8/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for the first @a
1903:/usr/include/c++/4.8/bits/basic_string.h ****        *  __n characters in @a __s within this string.  If found,
1904:/usr/include/c++/4.8/bits/basic_string.h ****        *  returns the index where it begins.  If not found, returns
1905:/usr/include/c++/4.8/bits/basic_string.h ****        *  npos.
1906:/usr/include/c++/4.8/bits/basic_string.h ****       */
1907:/usr/include/c++/4.8/bits/basic_string.h ****       size_type
1908:/usr/include/c++/4.8/bits/basic_string.h ****       rfind(const _CharT* __s, size_type __pos, size_type __n) const;
1909:/usr/include/c++/4.8/bits/basic_string.h **** 
1910:/usr/include/c++/4.8/bits/basic_string.h ****       /**
1911:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Find last position of a C string.
1912:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __s  C string to locate.
1913:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __pos  Index of character to start search at (default end).
1914:/usr/include/c++/4.8/bits/basic_string.h ****        *  @return  Index of start of  last occurrence.
1915:/usr/include/c++/4.8/bits/basic_string.h ****        *
1916:/usr/include/c++/4.8/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for the value of
1917:/usr/include/c++/4.8/bits/basic_string.h ****        *  @a __s within this string.  If found, returns the index
1918:/usr/include/c++/4.8/bits/basic_string.h ****        *  where it begins.  If not found, returns npos.
1919:/usr/include/c++/4.8/bits/basic_string.h ****       */
1920:/usr/include/c++/4.8/bits/basic_string.h ****       size_type
1921:/usr/include/c++/4.8/bits/basic_string.h ****       rfind(const _CharT* __s, size_type __pos = npos) const
1922:/usr/include/c++/4.8/bits/basic_string.h ****       {
1923:/usr/include/c++/4.8/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
1924:/usr/include/c++/4.8/bits/basic_string.h **** 	return this->rfind(__s, __pos, traits_type::length(__s));
1925:/usr/include/c++/4.8/bits/basic_string.h ****       }
1926:/usr/include/c++/4.8/bits/basic_string.h **** 
1927:/usr/include/c++/4.8/bits/basic_string.h ****       /**
1928:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Find last position of a character.
1929:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __c  Character to locate.
1930:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
1931:/usr/include/c++/4.8/bits/basic_string.h ****        *  @return  Index of last occurrence.
1932:/usr/include/c++/4.8/bits/basic_string.h ****        *
1933:/usr/include/c++/4.8/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for @a __c within
1934:/usr/include/c++/4.8/bits/basic_string.h ****        *  this string.  If found, returns the index where it was
1935:/usr/include/c++/4.8/bits/basic_string.h ****        *  found.  If not found, returns npos.
1936:/usr/include/c++/4.8/bits/basic_string.h ****       */
1937:/usr/include/c++/4.8/bits/basic_string.h ****       size_type
1938:/usr/include/c++/4.8/bits/basic_string.h ****       rfind(_CharT __c, size_type __pos = npos) const _GLIBCXX_NOEXCEPT;
1939:/usr/include/c++/4.8/bits/basic_string.h **** 
1940:/usr/include/c++/4.8/bits/basic_string.h ****       /**
1941:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Find position of a character of string.
1942:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __str  String containing characters to locate.
1943:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
1944:/usr/include/c++/4.8/bits/basic_string.h ****        *  @return  Index of first occurrence.
1945:/usr/include/c++/4.8/bits/basic_string.h ****        *
1946:/usr/include/c++/4.8/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for one of the
1947:/usr/include/c++/4.8/bits/basic_string.h ****        *  characters of @a __str within this string.  If found,
1948:/usr/include/c++/4.8/bits/basic_string.h ****        *  returns the index where it was found.  If not found, returns
1949:/usr/include/c++/4.8/bits/basic_string.h ****        *  npos.
1950:/usr/include/c++/4.8/bits/basic_string.h ****       */
1951:/usr/include/c++/4.8/bits/basic_string.h ****       size_type
1952:/usr/include/c++/4.8/bits/basic_string.h ****       find_first_of(const basic_string& __str, size_type __pos = 0) const
1953:/usr/include/c++/4.8/bits/basic_string.h **** 	_GLIBCXX_NOEXCEPT
1954:/usr/include/c++/4.8/bits/basic_string.h ****       { return this->find_first_of(__str.data(), __pos, __str.size()); }
1955:/usr/include/c++/4.8/bits/basic_string.h **** 
1956:/usr/include/c++/4.8/bits/basic_string.h ****       /**
1957:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Find position of a character of C substring.
1958:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __s  String containing characters to locate.
1959:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __pos  Index of character to search from.
1960:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __n  Number of characters from s to search for.
1961:/usr/include/c++/4.8/bits/basic_string.h ****        *  @return  Index of first occurrence.
1962:/usr/include/c++/4.8/bits/basic_string.h ****        *
1963:/usr/include/c++/4.8/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for one of the
1964:/usr/include/c++/4.8/bits/basic_string.h ****        *  first @a __n characters of @a __s within this string.  If
1965:/usr/include/c++/4.8/bits/basic_string.h ****        *  found, returns the index where it was found.  If not found,
1966:/usr/include/c++/4.8/bits/basic_string.h ****        *  returns npos.
1967:/usr/include/c++/4.8/bits/basic_string.h ****       */
1968:/usr/include/c++/4.8/bits/basic_string.h ****       size_type
1969:/usr/include/c++/4.8/bits/basic_string.h ****       find_first_of(const _CharT* __s, size_type __pos, size_type __n) const;
1970:/usr/include/c++/4.8/bits/basic_string.h **** 
1971:/usr/include/c++/4.8/bits/basic_string.h ****       /**
1972:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Find position of a character of C string.
1973:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __s  String containing characters to locate.
1974:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
1975:/usr/include/c++/4.8/bits/basic_string.h ****        *  @return  Index of first occurrence.
1976:/usr/include/c++/4.8/bits/basic_string.h ****        *
1977:/usr/include/c++/4.8/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for one of the
1978:/usr/include/c++/4.8/bits/basic_string.h ****        *  characters of @a __s within this string.  If found, returns
1979:/usr/include/c++/4.8/bits/basic_string.h ****        *  the index where it was found.  If not found, returns npos.
1980:/usr/include/c++/4.8/bits/basic_string.h ****       */
1981:/usr/include/c++/4.8/bits/basic_string.h ****       size_type
1982:/usr/include/c++/4.8/bits/basic_string.h ****       find_first_of(const _CharT* __s, size_type __pos = 0) const
1983:/usr/include/c++/4.8/bits/basic_string.h ****       {
1984:/usr/include/c++/4.8/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
1985:/usr/include/c++/4.8/bits/basic_string.h **** 	return this->find_first_of(__s, __pos, traits_type::length(__s));
1986:/usr/include/c++/4.8/bits/basic_string.h ****       }
1987:/usr/include/c++/4.8/bits/basic_string.h **** 
1988:/usr/include/c++/4.8/bits/basic_string.h ****       /**
1989:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Find position of a character.
1990:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __c  Character to locate.
1991:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
1992:/usr/include/c++/4.8/bits/basic_string.h ****        *  @return  Index of first occurrence.
1993:/usr/include/c++/4.8/bits/basic_string.h ****        *
1994:/usr/include/c++/4.8/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for the character
1995:/usr/include/c++/4.8/bits/basic_string.h ****        *  @a __c within this string.  If found, returns the index
1996:/usr/include/c++/4.8/bits/basic_string.h ****        *  where it was found.  If not found, returns npos.
1997:/usr/include/c++/4.8/bits/basic_string.h ****        *
1998:/usr/include/c++/4.8/bits/basic_string.h ****        *  Note: equivalent to find(__c, __pos).
1999:/usr/include/c++/4.8/bits/basic_string.h ****       */
2000:/usr/include/c++/4.8/bits/basic_string.h ****       size_type
2001:/usr/include/c++/4.8/bits/basic_string.h ****       find_first_of(_CharT __c, size_type __pos = 0) const _GLIBCXX_NOEXCEPT
2002:/usr/include/c++/4.8/bits/basic_string.h ****       { return this->find(__c, __pos); }
2003:/usr/include/c++/4.8/bits/basic_string.h **** 
2004:/usr/include/c++/4.8/bits/basic_string.h ****       /**
2005:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Find last position of a character of string.
2006:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __str  String containing characters to locate.
2007:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
2008:/usr/include/c++/4.8/bits/basic_string.h ****        *  @return  Index of last occurrence.
2009:/usr/include/c++/4.8/bits/basic_string.h ****        *
2010:/usr/include/c++/4.8/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for one of the
2011:/usr/include/c++/4.8/bits/basic_string.h ****        *  characters of @a __str within this string.  If found,
2012:/usr/include/c++/4.8/bits/basic_string.h ****        *  returns the index where it was found.  If not found, returns
2013:/usr/include/c++/4.8/bits/basic_string.h ****        *  npos.
2014:/usr/include/c++/4.8/bits/basic_string.h ****       */
2015:/usr/include/c++/4.8/bits/basic_string.h ****       size_type
2016:/usr/include/c++/4.8/bits/basic_string.h ****       find_last_of(const basic_string& __str, size_type __pos = npos) const
2017:/usr/include/c++/4.8/bits/basic_string.h **** 	_GLIBCXX_NOEXCEPT
2018:/usr/include/c++/4.8/bits/basic_string.h ****       { return this->find_last_of(__str.data(), __pos, __str.size()); }
2019:/usr/include/c++/4.8/bits/basic_string.h **** 
2020:/usr/include/c++/4.8/bits/basic_string.h ****       /**
2021:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Find last position of a character of C substring.
2022:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __s  C string containing characters to locate.
2023:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __pos  Index of character to search back from.
2024:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __n  Number of characters from s to search for.
2025:/usr/include/c++/4.8/bits/basic_string.h ****        *  @return  Index of last occurrence.
2026:/usr/include/c++/4.8/bits/basic_string.h ****        *
2027:/usr/include/c++/4.8/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for one of the
2028:/usr/include/c++/4.8/bits/basic_string.h ****        *  first @a __n characters of @a __s within this string.  If
2029:/usr/include/c++/4.8/bits/basic_string.h ****        *  found, returns the index where it was found.  If not found,
2030:/usr/include/c++/4.8/bits/basic_string.h ****        *  returns npos.
2031:/usr/include/c++/4.8/bits/basic_string.h ****       */
2032:/usr/include/c++/4.8/bits/basic_string.h ****       size_type
2033:/usr/include/c++/4.8/bits/basic_string.h ****       find_last_of(const _CharT* __s, size_type __pos, size_type __n) const;
2034:/usr/include/c++/4.8/bits/basic_string.h **** 
2035:/usr/include/c++/4.8/bits/basic_string.h ****       /**
2036:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Find last position of a character of C string.
2037:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __s  C string containing characters to locate.
2038:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
2039:/usr/include/c++/4.8/bits/basic_string.h ****        *  @return  Index of last occurrence.
2040:/usr/include/c++/4.8/bits/basic_string.h ****        *
2041:/usr/include/c++/4.8/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for one of the
2042:/usr/include/c++/4.8/bits/basic_string.h ****        *  characters of @a __s within this string.  If found, returns
2043:/usr/include/c++/4.8/bits/basic_string.h ****        *  the index where it was found.  If not found, returns npos.
2044:/usr/include/c++/4.8/bits/basic_string.h ****       */
2045:/usr/include/c++/4.8/bits/basic_string.h ****       size_type
2046:/usr/include/c++/4.8/bits/basic_string.h ****       find_last_of(const _CharT* __s, size_type __pos = npos) const
2047:/usr/include/c++/4.8/bits/basic_string.h ****       {
2048:/usr/include/c++/4.8/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
2049:/usr/include/c++/4.8/bits/basic_string.h **** 	return this->find_last_of(__s, __pos, traits_type::length(__s));
2050:/usr/include/c++/4.8/bits/basic_string.h ****       }
2051:/usr/include/c++/4.8/bits/basic_string.h **** 
2052:/usr/include/c++/4.8/bits/basic_string.h ****       /**
2053:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Find last position of a character.
2054:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __c  Character to locate.
2055:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
2056:/usr/include/c++/4.8/bits/basic_string.h ****        *  @return  Index of last occurrence.
2057:/usr/include/c++/4.8/bits/basic_string.h ****        *
2058:/usr/include/c++/4.8/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for @a __c within
2059:/usr/include/c++/4.8/bits/basic_string.h ****        *  this string.  If found, returns the index where it was
2060:/usr/include/c++/4.8/bits/basic_string.h ****        *  found.  If not found, returns npos.
2061:/usr/include/c++/4.8/bits/basic_string.h ****        *
2062:/usr/include/c++/4.8/bits/basic_string.h ****        *  Note: equivalent to rfind(__c, __pos).
2063:/usr/include/c++/4.8/bits/basic_string.h ****       */
2064:/usr/include/c++/4.8/bits/basic_string.h ****       size_type
2065:/usr/include/c++/4.8/bits/basic_string.h ****       find_last_of(_CharT __c, size_type __pos = npos) const _GLIBCXX_NOEXCEPT
2066:/usr/include/c++/4.8/bits/basic_string.h ****       { return this->rfind(__c, __pos); }
2067:/usr/include/c++/4.8/bits/basic_string.h **** 
2068:/usr/include/c++/4.8/bits/basic_string.h ****       /**
2069:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Find position of a character not in string.
2070:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __str  String containing characters to avoid.
2071:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2072:/usr/include/c++/4.8/bits/basic_string.h ****        *  @return  Index of first occurrence.
2073:/usr/include/c++/4.8/bits/basic_string.h ****        *
2074:/usr/include/c++/4.8/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for a character not contained
2075:/usr/include/c++/4.8/bits/basic_string.h ****        *  in @a __str within this string.  If found, returns the index where it
2076:/usr/include/c++/4.8/bits/basic_string.h ****        *  was found.  If not found, returns npos.
2077:/usr/include/c++/4.8/bits/basic_string.h ****       */
2078:/usr/include/c++/4.8/bits/basic_string.h ****       size_type
2079:/usr/include/c++/4.8/bits/basic_string.h ****       find_first_not_of(const basic_string& __str, size_type __pos = 0) const
2080:/usr/include/c++/4.8/bits/basic_string.h **** 	_GLIBCXX_NOEXCEPT
2081:/usr/include/c++/4.8/bits/basic_string.h ****       { return this->find_first_not_of(__str.data(), __pos, __str.size()); }
2082:/usr/include/c++/4.8/bits/basic_string.h **** 
2083:/usr/include/c++/4.8/bits/basic_string.h ****       /**
2084:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Find position of a character not in C substring.
2085:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __s  C string containing characters to avoid.
2086:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __pos  Index of character to search from.
2087:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __n  Number of characters from __s to consider.
2088:/usr/include/c++/4.8/bits/basic_string.h ****        *  @return  Index of first occurrence.
2089:/usr/include/c++/4.8/bits/basic_string.h ****        *
2090:/usr/include/c++/4.8/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for a character not
2091:/usr/include/c++/4.8/bits/basic_string.h ****        *  contained in the first @a __n characters of @a __s within
2092:/usr/include/c++/4.8/bits/basic_string.h ****        *  this string.  If found, returns the index where it was
2093:/usr/include/c++/4.8/bits/basic_string.h ****        *  found.  If not found, returns npos.
2094:/usr/include/c++/4.8/bits/basic_string.h ****       */
2095:/usr/include/c++/4.8/bits/basic_string.h ****       size_type
2096:/usr/include/c++/4.8/bits/basic_string.h ****       find_first_not_of(const _CharT* __s, size_type __pos,
2097:/usr/include/c++/4.8/bits/basic_string.h **** 			size_type __n) const;
2098:/usr/include/c++/4.8/bits/basic_string.h **** 
2099:/usr/include/c++/4.8/bits/basic_string.h ****       /**
2100:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Find position of a character not in C string.
2101:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __s  C string containing characters to avoid.
2102:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2103:/usr/include/c++/4.8/bits/basic_string.h ****        *  @return  Index of first occurrence.
2104:/usr/include/c++/4.8/bits/basic_string.h ****        *
2105:/usr/include/c++/4.8/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for a character not
2106:/usr/include/c++/4.8/bits/basic_string.h ****        *  contained in @a __s within this string.  If found, returns
2107:/usr/include/c++/4.8/bits/basic_string.h ****        *  the index where it was found.  If not found, returns npos.
2108:/usr/include/c++/4.8/bits/basic_string.h ****       */
2109:/usr/include/c++/4.8/bits/basic_string.h ****       size_type
2110:/usr/include/c++/4.8/bits/basic_string.h ****       find_first_not_of(const _CharT* __s, size_type __pos = 0) const
2111:/usr/include/c++/4.8/bits/basic_string.h ****       {
2112:/usr/include/c++/4.8/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
2113:/usr/include/c++/4.8/bits/basic_string.h **** 	return this->find_first_not_of(__s, __pos, traits_type::length(__s));
2114:/usr/include/c++/4.8/bits/basic_string.h ****       }
2115:/usr/include/c++/4.8/bits/basic_string.h **** 
2116:/usr/include/c++/4.8/bits/basic_string.h ****       /**
2117:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Find position of a different character.
2118:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __c  Character to avoid.
2119:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2120:/usr/include/c++/4.8/bits/basic_string.h ****        *  @return  Index of first occurrence.
2121:/usr/include/c++/4.8/bits/basic_string.h ****        *
2122:/usr/include/c++/4.8/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for a character
2123:/usr/include/c++/4.8/bits/basic_string.h ****        *  other than @a __c within this string.  If found, returns the
2124:/usr/include/c++/4.8/bits/basic_string.h ****        *  index where it was found.  If not found, returns npos.
2125:/usr/include/c++/4.8/bits/basic_string.h ****       */
2126:/usr/include/c++/4.8/bits/basic_string.h ****       size_type
2127:/usr/include/c++/4.8/bits/basic_string.h ****       find_first_not_of(_CharT __c, size_type __pos = 0) const
2128:/usr/include/c++/4.8/bits/basic_string.h **** 	_GLIBCXX_NOEXCEPT;
2129:/usr/include/c++/4.8/bits/basic_string.h **** 
2130:/usr/include/c++/4.8/bits/basic_string.h ****       /**
2131:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Find last position of a character not in string.
2132:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __str  String containing characters to avoid.
2133:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
2134:/usr/include/c++/4.8/bits/basic_string.h ****        *  @return  Index of last occurrence.
2135:/usr/include/c++/4.8/bits/basic_string.h ****        *
2136:/usr/include/c++/4.8/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for a character
2137:/usr/include/c++/4.8/bits/basic_string.h ****        *  not contained in @a __str within this string.  If found,
2138:/usr/include/c++/4.8/bits/basic_string.h ****        *  returns the index where it was found.  If not found, returns
2139:/usr/include/c++/4.8/bits/basic_string.h ****        *  npos.
2140:/usr/include/c++/4.8/bits/basic_string.h ****       */
2141:/usr/include/c++/4.8/bits/basic_string.h ****       size_type
2142:/usr/include/c++/4.8/bits/basic_string.h ****       find_last_not_of(const basic_string& __str, size_type __pos = npos) const
2143:/usr/include/c++/4.8/bits/basic_string.h **** 	_GLIBCXX_NOEXCEPT
2144:/usr/include/c++/4.8/bits/basic_string.h ****       { return this->find_last_not_of(__str.data(), __pos, __str.size()); }
2145:/usr/include/c++/4.8/bits/basic_string.h **** 
2146:/usr/include/c++/4.8/bits/basic_string.h ****       /**
2147:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Find last position of a character not in C substring.
2148:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __s  C string containing characters to avoid.
2149:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __pos  Index of character to search back from.
2150:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __n  Number of characters from s to consider.
2151:/usr/include/c++/4.8/bits/basic_string.h ****        *  @return  Index of last occurrence.
2152:/usr/include/c++/4.8/bits/basic_string.h ****        *
2153:/usr/include/c++/4.8/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for a character not
2154:/usr/include/c++/4.8/bits/basic_string.h ****        *  contained in the first @a __n characters of @a __s within this string.
2155:/usr/include/c++/4.8/bits/basic_string.h ****        *  If found, returns the index where it was found.  If not found,
2156:/usr/include/c++/4.8/bits/basic_string.h ****        *  returns npos.
2157:/usr/include/c++/4.8/bits/basic_string.h ****       */
2158:/usr/include/c++/4.8/bits/basic_string.h ****       size_type
2159:/usr/include/c++/4.8/bits/basic_string.h ****       find_last_not_of(const _CharT* __s, size_type __pos,
2160:/usr/include/c++/4.8/bits/basic_string.h **** 		       size_type __n) const;
2161:/usr/include/c++/4.8/bits/basic_string.h ****       /**
2162:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Find last position of a character not in C string.
2163:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __s  C string containing characters to avoid.
2164:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
2165:/usr/include/c++/4.8/bits/basic_string.h ****        *  @return  Index of last occurrence.
2166:/usr/include/c++/4.8/bits/basic_string.h ****        *
2167:/usr/include/c++/4.8/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for a character
2168:/usr/include/c++/4.8/bits/basic_string.h ****        *  not contained in @a __s within this string.  If found,
2169:/usr/include/c++/4.8/bits/basic_string.h ****        *  returns the index where it was found.  If not found, returns
2170:/usr/include/c++/4.8/bits/basic_string.h ****        *  npos.
2171:/usr/include/c++/4.8/bits/basic_string.h ****       */
2172:/usr/include/c++/4.8/bits/basic_string.h ****       size_type
2173:/usr/include/c++/4.8/bits/basic_string.h ****       find_last_not_of(const _CharT* __s, size_type __pos = npos) const
2174:/usr/include/c++/4.8/bits/basic_string.h ****       {
2175:/usr/include/c++/4.8/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
2176:/usr/include/c++/4.8/bits/basic_string.h **** 	return this->find_last_not_of(__s, __pos, traits_type::length(__s));
2177:/usr/include/c++/4.8/bits/basic_string.h ****       }
2178:/usr/include/c++/4.8/bits/basic_string.h **** 
2179:/usr/include/c++/4.8/bits/basic_string.h ****       /**
2180:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Find last position of a different character.
2181:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __c  Character to avoid.
2182:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
2183:/usr/include/c++/4.8/bits/basic_string.h ****        *  @return  Index of last occurrence.
2184:/usr/include/c++/4.8/bits/basic_string.h ****        *
2185:/usr/include/c++/4.8/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for a character other than
2186:/usr/include/c++/4.8/bits/basic_string.h ****        *  @a __c within this string.  If found, returns the index where it was
2187:/usr/include/c++/4.8/bits/basic_string.h ****        *  found.  If not found, returns npos.
2188:/usr/include/c++/4.8/bits/basic_string.h ****       */
2189:/usr/include/c++/4.8/bits/basic_string.h ****       size_type
2190:/usr/include/c++/4.8/bits/basic_string.h ****       find_last_not_of(_CharT __c, size_type __pos = npos) const
2191:/usr/include/c++/4.8/bits/basic_string.h **** 	_GLIBCXX_NOEXCEPT;
2192:/usr/include/c++/4.8/bits/basic_string.h **** 
2193:/usr/include/c++/4.8/bits/basic_string.h ****       /**
2194:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Get a substring.
2195:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __pos  Index of first character (default 0).
2196:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __n  Number of characters in substring (default remainder).
2197:/usr/include/c++/4.8/bits/basic_string.h ****        *  @return  The new string.
2198:/usr/include/c++/4.8/bits/basic_string.h ****        *  @throw  std::out_of_range  If __pos > size().
2199:/usr/include/c++/4.8/bits/basic_string.h ****        *
2200:/usr/include/c++/4.8/bits/basic_string.h ****        *  Construct and return a new string using the @a __n
2201:/usr/include/c++/4.8/bits/basic_string.h ****        *  characters starting at @a __pos.  If the string is too
2202:/usr/include/c++/4.8/bits/basic_string.h ****        *  short, use the remainder of the characters.  If @a __pos is
2203:/usr/include/c++/4.8/bits/basic_string.h ****        *  beyond the end of the string, out_of_range is thrown.
2204:/usr/include/c++/4.8/bits/basic_string.h ****       */
2205:/usr/include/c++/4.8/bits/basic_string.h ****       basic_string
2206:/usr/include/c++/4.8/bits/basic_string.h ****       substr(size_type __pos = 0, size_type __n = npos) const
2207:/usr/include/c++/4.8/bits/basic_string.h ****       { return basic_string(*this,
2208:/usr/include/c++/4.8/bits/basic_string.h **** 			    _M_check(__pos, "basic_string::substr"), __n); }
2209:/usr/include/c++/4.8/bits/basic_string.h **** 
2210:/usr/include/c++/4.8/bits/basic_string.h ****       /**
2211:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Compare to a string.
2212:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __str  String to compare against.
2213:/usr/include/c++/4.8/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
2214:/usr/include/c++/4.8/bits/basic_string.h ****        *
2215:/usr/include/c++/4.8/bits/basic_string.h ****        *  Returns an integer < 0 if this string is ordered before @a
2216:/usr/include/c++/4.8/bits/basic_string.h ****        *  __str, 0 if their values are equivalent, or > 0 if this
2217:/usr/include/c++/4.8/bits/basic_string.h ****        *  string is ordered after @a __str.  Determines the effective
2218:/usr/include/c++/4.8/bits/basic_string.h ****        *  length rlen of the strings to compare as the smallest of
2219:/usr/include/c++/4.8/bits/basic_string.h ****        *  size() and str.size().  The function then compares the two
2220:/usr/include/c++/4.8/bits/basic_string.h ****        *  strings by calling traits::compare(data(), str.data(),rlen).
2221:/usr/include/c++/4.8/bits/basic_string.h ****        *  If the result of the comparison is nonzero returns it,
2222:/usr/include/c++/4.8/bits/basic_string.h ****        *  otherwise the shorter one is ordered first.
2223:/usr/include/c++/4.8/bits/basic_string.h ****       */
2224:/usr/include/c++/4.8/bits/basic_string.h ****       int
2225:/usr/include/c++/4.8/bits/basic_string.h ****       compare(const basic_string& __str) const
2226:/usr/include/c++/4.8/bits/basic_string.h ****       {
2227:/usr/include/c++/4.8/bits/basic_string.h **** 	const size_type __size = this->size();
2228:/usr/include/c++/4.8/bits/basic_string.h **** 	const size_type __osize = __str.size();
2229:/usr/include/c++/4.8/bits/basic_string.h **** 	const size_type __len = std::min(__size, __osize);
2230:/usr/include/c++/4.8/bits/basic_string.h **** 
2231:/usr/include/c++/4.8/bits/basic_string.h **** 	int __r = traits_type::compare(_M_data(), __str.data(), __len);
2232:/usr/include/c++/4.8/bits/basic_string.h **** 	if (!__r)
2233:/usr/include/c++/4.8/bits/basic_string.h **** 	  __r = _S_compare(__size, __osize);
2234:/usr/include/c++/4.8/bits/basic_string.h **** 	return __r;
2235:/usr/include/c++/4.8/bits/basic_string.h ****       }
2236:/usr/include/c++/4.8/bits/basic_string.h **** 
2237:/usr/include/c++/4.8/bits/basic_string.h ****       /**
2238:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Compare substring to a string.
2239:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __pos  Index of first character of substring.
2240:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __n  Number of characters in substring.
2241:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __str  String to compare against.
2242:/usr/include/c++/4.8/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
2243:/usr/include/c++/4.8/bits/basic_string.h ****        *
2244:/usr/include/c++/4.8/bits/basic_string.h ****        *  Form the substring of this string from the @a __n characters
2245:/usr/include/c++/4.8/bits/basic_string.h ****        *  starting at @a __pos.  Returns an integer < 0 if the
2246:/usr/include/c++/4.8/bits/basic_string.h ****        *  substring is ordered before @a __str, 0 if their values are
2247:/usr/include/c++/4.8/bits/basic_string.h ****        *  equivalent, or > 0 if the substring is ordered after @a
2248:/usr/include/c++/4.8/bits/basic_string.h ****        *  __str.  Determines the effective length rlen of the strings
2249:/usr/include/c++/4.8/bits/basic_string.h ****        *  to compare as the smallest of the length of the substring
2250:/usr/include/c++/4.8/bits/basic_string.h ****        *  and @a __str.size().  The function then compares the two
2251:/usr/include/c++/4.8/bits/basic_string.h ****        *  strings by calling
2252:/usr/include/c++/4.8/bits/basic_string.h ****        *  traits::compare(substring.data(),str.data(),rlen).  If the
2253:/usr/include/c++/4.8/bits/basic_string.h ****        *  result of the comparison is nonzero returns it, otherwise
2254:/usr/include/c++/4.8/bits/basic_string.h ****        *  the shorter one is ordered first.
2255:/usr/include/c++/4.8/bits/basic_string.h ****       */
2256:/usr/include/c++/4.8/bits/basic_string.h ****       int
2257:/usr/include/c++/4.8/bits/basic_string.h ****       compare(size_type __pos, size_type __n, const basic_string& __str) const;
2258:/usr/include/c++/4.8/bits/basic_string.h **** 
2259:/usr/include/c++/4.8/bits/basic_string.h ****       /**
2260:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Compare substring to a substring.
2261:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __pos1  Index of first character of substring.
2262:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __n1  Number of characters in substring.
2263:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __str  String to compare against.
2264:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __pos2  Index of first character of substring of str.
2265:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __n2  Number of characters in substring of str.
2266:/usr/include/c++/4.8/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
2267:/usr/include/c++/4.8/bits/basic_string.h ****        *
2268:/usr/include/c++/4.8/bits/basic_string.h ****        *  Form the substring of this string from the @a __n1
2269:/usr/include/c++/4.8/bits/basic_string.h ****        *  characters starting at @a __pos1.  Form the substring of @a
2270:/usr/include/c++/4.8/bits/basic_string.h ****        *  __str from the @a __n2 characters starting at @a __pos2.
2271:/usr/include/c++/4.8/bits/basic_string.h ****        *  Returns an integer < 0 if this substring is ordered before
2272:/usr/include/c++/4.8/bits/basic_string.h ****        *  the substring of @a __str, 0 if their values are equivalent,
2273:/usr/include/c++/4.8/bits/basic_string.h ****        *  or > 0 if this substring is ordered after the substring of
2274:/usr/include/c++/4.8/bits/basic_string.h ****        *  @a __str.  Determines the effective length rlen of the
2275:/usr/include/c++/4.8/bits/basic_string.h ****        *  strings to compare as the smallest of the lengths of the
2276:/usr/include/c++/4.8/bits/basic_string.h ****        *  substrings.  The function then compares the two strings by
2277:/usr/include/c++/4.8/bits/basic_string.h ****        *  calling
2278:/usr/include/c++/4.8/bits/basic_string.h ****        *  traits::compare(substring.data(),str.substr(pos2,n2).data(),rlen).
2279:/usr/include/c++/4.8/bits/basic_string.h ****        *  If the result of the comparison is nonzero returns it,
2280:/usr/include/c++/4.8/bits/basic_string.h ****        *  otherwise the shorter one is ordered first.
2281:/usr/include/c++/4.8/bits/basic_string.h ****       */
2282:/usr/include/c++/4.8/bits/basic_string.h ****       int
2283:/usr/include/c++/4.8/bits/basic_string.h ****       compare(size_type __pos1, size_type __n1, const basic_string& __str,
2284:/usr/include/c++/4.8/bits/basic_string.h **** 	      size_type __pos2, size_type __n2) const;
2285:/usr/include/c++/4.8/bits/basic_string.h **** 
2286:/usr/include/c++/4.8/bits/basic_string.h ****       /**
2287:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Compare to a C string.
2288:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __s  C string to compare against.
2289:/usr/include/c++/4.8/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
2290:/usr/include/c++/4.8/bits/basic_string.h ****        *
2291:/usr/include/c++/4.8/bits/basic_string.h ****        *  Returns an integer < 0 if this string is ordered before @a __s, 0 if
2292:/usr/include/c++/4.8/bits/basic_string.h ****        *  their values are equivalent, or > 0 if this string is ordered after
2293:/usr/include/c++/4.8/bits/basic_string.h ****        *  @a __s.  Determines the effective length rlen of the strings to
2294:/usr/include/c++/4.8/bits/basic_string.h ****        *  compare as the smallest of size() and the length of a string
2295:/usr/include/c++/4.8/bits/basic_string.h ****        *  constructed from @a __s.  The function then compares the two strings
2296:/usr/include/c++/4.8/bits/basic_string.h ****        *  by calling traits::compare(data(),s,rlen).  If the result of the
2297:/usr/include/c++/4.8/bits/basic_string.h ****        *  comparison is nonzero returns it, otherwise the shorter one is
2298:/usr/include/c++/4.8/bits/basic_string.h ****        *  ordered first.
2299:/usr/include/c++/4.8/bits/basic_string.h ****       */
2300:/usr/include/c++/4.8/bits/basic_string.h ****       int
2301:/usr/include/c++/4.8/bits/basic_string.h ****       compare(const _CharT* __s) const;
2302:/usr/include/c++/4.8/bits/basic_string.h **** 
2303:/usr/include/c++/4.8/bits/basic_string.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
2304:/usr/include/c++/4.8/bits/basic_string.h ****       // 5 String::compare specification questionable
2305:/usr/include/c++/4.8/bits/basic_string.h ****       /**
2306:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Compare substring to a C string.
2307:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __pos  Index of first character of substring.
2308:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __n1  Number of characters in substring.
2309:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __s  C string to compare against.
2310:/usr/include/c++/4.8/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
2311:/usr/include/c++/4.8/bits/basic_string.h ****        *
2312:/usr/include/c++/4.8/bits/basic_string.h ****        *  Form the substring of this string from the @a __n1
2313:/usr/include/c++/4.8/bits/basic_string.h ****        *  characters starting at @a pos.  Returns an integer < 0 if
2314:/usr/include/c++/4.8/bits/basic_string.h ****        *  the substring is ordered before @a __s, 0 if their values
2315:/usr/include/c++/4.8/bits/basic_string.h ****        *  are equivalent, or > 0 if the substring is ordered after @a
2316:/usr/include/c++/4.8/bits/basic_string.h ****        *  __s.  Determines the effective length rlen of the strings to
2317:/usr/include/c++/4.8/bits/basic_string.h ****        *  compare as the smallest of the length of the substring and
2318:/usr/include/c++/4.8/bits/basic_string.h ****        *  the length of a string constructed from @a __s.  The
2319:/usr/include/c++/4.8/bits/basic_string.h ****        *  function then compares the two string by calling
2320:/usr/include/c++/4.8/bits/basic_string.h ****        *  traits::compare(substring.data(),__s,rlen).  If the result of
2321:/usr/include/c++/4.8/bits/basic_string.h ****        *  the comparison is nonzero returns it, otherwise the shorter
2322:/usr/include/c++/4.8/bits/basic_string.h ****        *  one is ordered first.
2323:/usr/include/c++/4.8/bits/basic_string.h ****       */
2324:/usr/include/c++/4.8/bits/basic_string.h ****       int
2325:/usr/include/c++/4.8/bits/basic_string.h ****       compare(size_type __pos, size_type __n1, const _CharT* __s) const;
2326:/usr/include/c++/4.8/bits/basic_string.h **** 
2327:/usr/include/c++/4.8/bits/basic_string.h ****       /**
2328:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Compare substring against a character %array.
2329:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __pos  Index of first character of substring.
2330:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __n1  Number of characters in substring.
2331:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __s  character %array to compare against.
2332:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __n2  Number of characters of s.
2333:/usr/include/c++/4.8/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
2334:/usr/include/c++/4.8/bits/basic_string.h ****        *
2335:/usr/include/c++/4.8/bits/basic_string.h ****        *  Form the substring of this string from the @a __n1
2336:/usr/include/c++/4.8/bits/basic_string.h ****        *  characters starting at @a __pos.  Form a string from the
2337:/usr/include/c++/4.8/bits/basic_string.h ****        *  first @a __n2 characters of @a __s.  Returns an integer < 0
2338:/usr/include/c++/4.8/bits/basic_string.h ****        *  if this substring is ordered before the string from @a __s,
2339:/usr/include/c++/4.8/bits/basic_string.h ****        *  0 if their values are equivalent, or > 0 if this substring
2340:/usr/include/c++/4.8/bits/basic_string.h ****        *  is ordered after the string from @a __s.  Determines the
2341:/usr/include/c++/4.8/bits/basic_string.h ****        *  effective length rlen of the strings to compare as the
2342:/usr/include/c++/4.8/bits/basic_string.h ****        *  smallest of the length of the substring and @a __n2.  The
2343:/usr/include/c++/4.8/bits/basic_string.h ****        *  function then compares the two strings by calling
2344:/usr/include/c++/4.8/bits/basic_string.h ****        *  traits::compare(substring.data(),s,rlen).  If the result of
2345:/usr/include/c++/4.8/bits/basic_string.h ****        *  the comparison is nonzero returns it, otherwise the shorter
2346:/usr/include/c++/4.8/bits/basic_string.h ****        *  one is ordered first.
2347:/usr/include/c++/4.8/bits/basic_string.h ****        *
2348:/usr/include/c++/4.8/bits/basic_string.h ****        *  NB: s must have at least n2 characters, &apos;\\0&apos; has
2349:/usr/include/c++/4.8/bits/basic_string.h ****        *  no special meaning.
2350:/usr/include/c++/4.8/bits/basic_string.h ****       */
2351:/usr/include/c++/4.8/bits/basic_string.h ****       int
2352:/usr/include/c++/4.8/bits/basic_string.h ****       compare(size_type __pos, size_type __n1, const _CharT* __s,
2353:/usr/include/c++/4.8/bits/basic_string.h **** 	      size_type __n2) const;
2354:/usr/include/c++/4.8/bits/basic_string.h ****   };
2355:/usr/include/c++/4.8/bits/basic_string.h **** 
2356:/usr/include/c++/4.8/bits/basic_string.h ****   // operator+
2357:/usr/include/c++/4.8/bits/basic_string.h ****   /**
2358:/usr/include/c++/4.8/bits/basic_string.h ****    *  @brief  Concatenate two strings.
2359:/usr/include/c++/4.8/bits/basic_string.h ****    *  @param __lhs  First string.
2360:/usr/include/c++/4.8/bits/basic_string.h ****    *  @param __rhs  Last string.
2361:/usr/include/c++/4.8/bits/basic_string.h ****    *  @return  New string with value of @a __lhs followed by @a __rhs.
2362:/usr/include/c++/4.8/bits/basic_string.h ****    */
2363:/usr/include/c++/4.8/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
2364:/usr/include/c++/4.8/bits/basic_string.h ****     basic_string<_CharT, _Traits, _Alloc>
2365:/usr/include/c++/4.8/bits/basic_string.h ****     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
2366:/usr/include/c++/4.8/bits/basic_string.h **** 	      const basic_string<_CharT, _Traits, _Alloc>& __rhs)
2367:/usr/include/c++/4.8/bits/basic_string.h ****     {
2368:/usr/include/c++/4.8/bits/basic_string.h ****       basic_string<_CharT, _Traits, _Alloc> __str(__lhs);
2369:/usr/include/c++/4.8/bits/basic_string.h ****       __str.append(__rhs);
2370:/usr/include/c++/4.8/bits/basic_string.h ****       return __str;
2371:/usr/include/c++/4.8/bits/basic_string.h ****     }
2372:/usr/include/c++/4.8/bits/basic_string.h **** 
2373:/usr/include/c++/4.8/bits/basic_string.h ****   /**
2374:/usr/include/c++/4.8/bits/basic_string.h ****    *  @brief  Concatenate C string and string.
2375:/usr/include/c++/4.8/bits/basic_string.h ****    *  @param __lhs  First string.
2376:/usr/include/c++/4.8/bits/basic_string.h ****    *  @param __rhs  Last string.
2377:/usr/include/c++/4.8/bits/basic_string.h ****    *  @return  New string with value of @a __lhs followed by @a __rhs.
2378:/usr/include/c++/4.8/bits/basic_string.h ****    */
2379:/usr/include/c++/4.8/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
2380:/usr/include/c++/4.8/bits/basic_string.h ****     basic_string<_CharT,_Traits,_Alloc>
2381:/usr/include/c++/4.8/bits/basic_string.h ****     operator+(const _CharT* __lhs,
2382:/usr/include/c++/4.8/bits/basic_string.h **** 	      const basic_string<_CharT,_Traits,_Alloc>& __rhs);
2383:/usr/include/c++/4.8/bits/basic_string.h **** 
2384:/usr/include/c++/4.8/bits/basic_string.h ****   /**
2385:/usr/include/c++/4.8/bits/basic_string.h ****    *  @brief  Concatenate character and string.
2386:/usr/include/c++/4.8/bits/basic_string.h ****    *  @param __lhs  First string.
2387:/usr/include/c++/4.8/bits/basic_string.h ****    *  @param __rhs  Last string.
2388:/usr/include/c++/4.8/bits/basic_string.h ****    *  @return  New string with @a __lhs followed by @a __rhs.
2389:/usr/include/c++/4.8/bits/basic_string.h ****    */
2390:/usr/include/c++/4.8/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
2391:/usr/include/c++/4.8/bits/basic_string.h ****     basic_string<_CharT,_Traits,_Alloc>
2392:/usr/include/c++/4.8/bits/basic_string.h ****     operator+(_CharT __lhs, const basic_string<_CharT,_Traits,_Alloc>& __rhs);
2393:/usr/include/c++/4.8/bits/basic_string.h **** 
2394:/usr/include/c++/4.8/bits/basic_string.h ****   /**
2395:/usr/include/c++/4.8/bits/basic_string.h ****    *  @brief  Concatenate string and C string.
2396:/usr/include/c++/4.8/bits/basic_string.h ****    *  @param __lhs  First string.
2397:/usr/include/c++/4.8/bits/basic_string.h ****    *  @param __rhs  Last string.
2398:/usr/include/c++/4.8/bits/basic_string.h ****    *  @return  New string with @a __lhs followed by @a __rhs.
2399:/usr/include/c++/4.8/bits/basic_string.h ****    */
2400:/usr/include/c++/4.8/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
2401:/usr/include/c++/4.8/bits/basic_string.h ****     inline basic_string<_CharT, _Traits, _Alloc>
2402:/usr/include/c++/4.8/bits/basic_string.h ****     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
2403:/usr/include/c++/4.8/bits/basic_string.h **** 	     const _CharT* __rhs)
2404:/usr/include/c++/4.8/bits/basic_string.h ****     {
2405:/usr/include/c++/4.8/bits/basic_string.h ****       basic_string<_CharT, _Traits, _Alloc> __str(__lhs);
2406:/usr/include/c++/4.8/bits/basic_string.h ****       __str.append(__rhs);
2407:/usr/include/c++/4.8/bits/basic_string.h ****       return __str;
2408:/usr/include/c++/4.8/bits/basic_string.h ****     }
2409:/usr/include/c++/4.8/bits/basic_string.h **** 
2410:/usr/include/c++/4.8/bits/basic_string.h ****   /**
2411:/usr/include/c++/4.8/bits/basic_string.h ****    *  @brief  Concatenate string and character.
2412:/usr/include/c++/4.8/bits/basic_string.h ****    *  @param __lhs  First string.
2413:/usr/include/c++/4.8/bits/basic_string.h ****    *  @param __rhs  Last string.
2414:/usr/include/c++/4.8/bits/basic_string.h ****    *  @return  New string with @a __lhs followed by @a __rhs.
2415:/usr/include/c++/4.8/bits/basic_string.h ****    */
2416:/usr/include/c++/4.8/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
2417:/usr/include/c++/4.8/bits/basic_string.h ****     inline basic_string<_CharT, _Traits, _Alloc>
2418:/usr/include/c++/4.8/bits/basic_string.h ****     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs, _CharT __rhs)
2419:/usr/include/c++/4.8/bits/basic_string.h ****     {
2420:/usr/include/c++/4.8/bits/basic_string.h ****       typedef basic_string<_CharT, _Traits, _Alloc>	__string_type;
2421:/usr/include/c++/4.8/bits/basic_string.h ****       typedef typename __string_type::size_type		__size_type;
2422:/usr/include/c++/4.8/bits/basic_string.h ****       __string_type __str(__lhs);
2423:/usr/include/c++/4.8/bits/basic_string.h ****       __str.append(__size_type(1), __rhs);
2424:/usr/include/c++/4.8/bits/basic_string.h ****       return __str;
2425:/usr/include/c++/4.8/bits/basic_string.h ****     }
2426:/usr/include/c++/4.8/bits/basic_string.h **** 
2427:/usr/include/c++/4.8/bits/basic_string.h **** #if __cplusplus >= 201103L
2428:/usr/include/c++/4.8/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
2429:/usr/include/c++/4.8/bits/basic_string.h ****     inline basic_string<_CharT, _Traits, _Alloc>
2430:/usr/include/c++/4.8/bits/basic_string.h ****     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
2431:/usr/include/c++/4.8/bits/basic_string.h **** 	      const basic_string<_CharT, _Traits, _Alloc>& __rhs)
2432:/usr/include/c++/4.8/bits/basic_string.h ****     { return std::move(__lhs.append(__rhs)); }
2433:/usr/include/c++/4.8/bits/basic_string.h **** 
2434:/usr/include/c++/4.8/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
2435:/usr/include/c++/4.8/bits/basic_string.h ****     inline basic_string<_CharT, _Traits, _Alloc>
2436:/usr/include/c++/4.8/bits/basic_string.h ****     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
2437:/usr/include/c++/4.8/bits/basic_string.h **** 	      basic_string<_CharT, _Traits, _Alloc>&& __rhs)
2438:/usr/include/c++/4.8/bits/basic_string.h ****     { return std::move(__rhs.insert(0, __lhs)); }
2439:/usr/include/c++/4.8/bits/basic_string.h **** 
2440:/usr/include/c++/4.8/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
2441:/usr/include/c++/4.8/bits/basic_string.h ****     inline basic_string<_CharT, _Traits, _Alloc>
2442:/usr/include/c++/4.8/bits/basic_string.h ****     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
2443:/usr/include/c++/4.8/bits/basic_string.h **** 	      basic_string<_CharT, _Traits, _Alloc>&& __rhs)
2444:/usr/include/c++/4.8/bits/basic_string.h ****     {
2445:/usr/include/c++/4.8/bits/basic_string.h ****       const auto __size = __lhs.size() + __rhs.size();
2446:/usr/include/c++/4.8/bits/basic_string.h ****       const bool __cond = (__size > __lhs.capacity()
2447:/usr/include/c++/4.8/bits/basic_string.h **** 			   && __size <= __rhs.capacity());
2448:/usr/include/c++/4.8/bits/basic_string.h ****       return __cond ? std::move(__rhs.insert(0, __lhs))
2449:/usr/include/c++/4.8/bits/basic_string.h **** 	            : std::move(__lhs.append(__rhs));
2450:/usr/include/c++/4.8/bits/basic_string.h ****     }
2451:/usr/include/c++/4.8/bits/basic_string.h **** 
2452:/usr/include/c++/4.8/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
2453:/usr/include/c++/4.8/bits/basic_string.h ****     inline basic_string<_CharT, _Traits, _Alloc>
2454:/usr/include/c++/4.8/bits/basic_string.h ****     operator+(const _CharT* __lhs,
2455:/usr/include/c++/4.8/bits/basic_string.h **** 	      basic_string<_CharT, _Traits, _Alloc>&& __rhs)
2456:/usr/include/c++/4.8/bits/basic_string.h ****     { return std::move(__rhs.insert(0, __lhs)); }
2457:/usr/include/c++/4.8/bits/basic_string.h **** 
2458:/usr/include/c++/4.8/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
2459:/usr/include/c++/4.8/bits/basic_string.h ****     inline basic_string<_CharT, _Traits, _Alloc>
2460:/usr/include/c++/4.8/bits/basic_string.h ****     operator+(_CharT __lhs,
2461:/usr/include/c++/4.8/bits/basic_string.h **** 	      basic_string<_CharT, _Traits, _Alloc>&& __rhs)
2462:/usr/include/c++/4.8/bits/basic_string.h ****     { return std::move(__rhs.insert(0, 1, __lhs)); }
2463:/usr/include/c++/4.8/bits/basic_string.h **** 
2464:/usr/include/c++/4.8/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
2465:/usr/include/c++/4.8/bits/basic_string.h ****     inline basic_string<_CharT, _Traits, _Alloc>
2466:/usr/include/c++/4.8/bits/basic_string.h ****     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
2467:/usr/include/c++/4.8/bits/basic_string.h **** 	      const _CharT* __rhs)
2468:/usr/include/c++/4.8/bits/basic_string.h ****     { return std::move(__lhs.append(__rhs)); }
2469:/usr/include/c++/4.8/bits/basic_string.h **** 
2470:/usr/include/c++/4.8/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
2471:/usr/include/c++/4.8/bits/basic_string.h ****     inline basic_string<_CharT, _Traits, _Alloc>
2472:/usr/include/c++/4.8/bits/basic_string.h ****     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
2473:/usr/include/c++/4.8/bits/basic_string.h **** 	      _CharT __rhs)
2474:/usr/include/c++/4.8/bits/basic_string.h ****     { return std::move(__lhs.append(1, __rhs)); }
2475:/usr/include/c++/4.8/bits/basic_string.h **** #endif
2476:/usr/include/c++/4.8/bits/basic_string.h **** 
2477:/usr/include/c++/4.8/bits/basic_string.h ****   // operator ==
2478:/usr/include/c++/4.8/bits/basic_string.h ****   /**
2479:/usr/include/c++/4.8/bits/basic_string.h ****    *  @brief  Test equivalence of two strings.
2480:/usr/include/c++/4.8/bits/basic_string.h ****    *  @param __lhs  First string.
2481:/usr/include/c++/4.8/bits/basic_string.h ****    *  @param __rhs  Second string.
2482:/usr/include/c++/4.8/bits/basic_string.h ****    *  @return  True if @a __lhs.compare(@a __rhs) == 0.  False otherwise.
2483:/usr/include/c++/4.8/bits/basic_string.h ****    */
2484:/usr/include/c++/4.8/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
2485:/usr/include/c++/4.8/bits/basic_string.h ****     inline bool
2486:/usr/include/c++/4.8/bits/basic_string.h ****     operator==(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
2487:/usr/include/c++/4.8/bits/basic_string.h **** 	       const basic_string<_CharT, _Traits, _Alloc>& __rhs)
2488:/usr/include/c++/4.8/bits/basic_string.h ****     { return __lhs.compare(__rhs) == 0; }
2489:/usr/include/c++/4.8/bits/basic_string.h **** 
2490:/usr/include/c++/4.8/bits/basic_string.h ****   template<typename _CharT>
2491:/usr/include/c++/4.8/bits/basic_string.h ****     inline
2492:/usr/include/c++/4.8/bits/basic_string.h ****     typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value, bool>::__type
2493:/usr/include/c++/4.8/bits/basic_string.h ****     operator==(const basic_string<_CharT>& __lhs,
2494:/usr/include/c++/4.8/bits/basic_string.h **** 	       const basic_string<_CharT>& __rhs)
2495:/usr/include/c++/4.8/bits/basic_string.h ****     { return (__lhs.size() == __rhs.size()
2496:/usr/include/c++/4.8/bits/basic_string.h **** 	      && !std::char_traits<_CharT>::compare(__lhs.data(), __rhs.data(),
2497:/usr/include/c++/4.8/bits/basic_string.h **** 						    __lhs.size())); }
2498:/usr/include/c++/4.8/bits/basic_string.h **** 
2499:/usr/include/c++/4.8/bits/basic_string.h ****   /**
2500:/usr/include/c++/4.8/bits/basic_string.h ****    *  @brief  Test equivalence of C string and string.
2501:/usr/include/c++/4.8/bits/basic_string.h ****    *  @param __lhs  C string.
2502:/usr/include/c++/4.8/bits/basic_string.h ****    *  @param __rhs  String.
2503:/usr/include/c++/4.8/bits/basic_string.h ****    *  @return  True if @a __rhs.compare(@a __lhs) == 0.  False otherwise.
2504:/usr/include/c++/4.8/bits/basic_string.h ****    */
2505:/usr/include/c++/4.8/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
2506:/usr/include/c++/4.8/bits/basic_string.h ****     inline bool
2507:/usr/include/c++/4.8/bits/basic_string.h ****     operator==(const _CharT* __lhs,
 7707              		.loc 10 2507 0
 7708              		.cfi_startproc
 7709 0000 55       		pushq	%rbp
 7710              		.cfi_def_cfa_offset 16
 7711              		.cfi_offset 6, -16
 7712 0001 4889E5   		movq	%rsp, %rbp
 7713              		.cfi_def_cfa_register 6
 7714 0004 4883EC10 		subq	$16, %rsp
 7715 0008 48897DF8 		movq	%rdi, -8(%rbp)
 7716 000c 488975F0 		movq	%rsi, -16(%rbp)
2508:/usr/include/c++/4.8/bits/basic_string.h **** 	       const basic_string<_CharT, _Traits, _Alloc>& __rhs)
2509:/usr/include/c++/4.8/bits/basic_string.h ****     { return __rhs.compare(__lhs) == 0; }
 7717              		.loc 10 2509 0
 7718 0010 488B55F8 		movq	-8(%rbp), %rdx
 7719 0014 488B45F0 		movq	-16(%rbp), %rax
 7720 0018 4889D6   		movq	%rdx, %rsi
 7721 001b 4889C7   		movq	%rax, %rdi
 7722 001e E8000000 		call	_ZNKSs7compareEPKc
 7722      00
 7723 0023 85C0     		testl	%eax, %eax
 7724 0025 0F94C0   		sete	%al
 7725 0028 C9       		leave
 7726              		.cfi_def_cfa 7, 8
 7727 0029 C3       		ret
 7728              		.cfi_endproc
 7729              	.LFE1468:
 7731              		.section	.text._ZN8UnitTest8AreCloseIfffEEbRKT_RKT0_RKT1_,"axG",@progbits,_ZN8UnitTest8AreCloseIff
 7732              		.weak	_ZN8UnitTest8AreCloseIfffEEbRKT_RKT0_RKT1_
 7734              	_ZN8UnitTest8AreCloseIfffEEbRKT_RKT0_RKT1_:
 7735              	.LFB1470:
  39:../Checks.h   **** {
 7736              		.loc 8 39 0
 7737              		.cfi_startproc
 7738 0000 55       		pushq	%rbp
 7739              		.cfi_def_cfa_offset 16
 7740              		.cfi_offset 6, -16
 7741 0001 4889E5   		movq	%rsp, %rbp
 7742              		.cfi_def_cfa_register 6
 7743 0004 48897DF8 		movq	%rdi, -8(%rbp)
 7744 0008 488975F0 		movq	%rsi, -16(%rbp)
 7745 000c 488955E8 		movq	%rdx, -24(%rbp)
  41:../Checks.h   **** }
 7746              		.loc 8 41 0
 7747 0010 488B45F0 		movq	-16(%rbp), %rax
 7748 0014 F30F1008 		movss	(%rax), %xmm1
 7749 0018 488B45F8 		movq	-8(%rbp), %rax
 7750 001c F30F1000 		movss	(%rax), %xmm0
 7751 0020 488B45E8 		movq	-24(%rbp), %rax
 7752 0024 F30F1010 		movss	(%rax), %xmm2
 7753 0028 F30F5CC2 		subss	%xmm2, %xmm0
 7754 002c 0F2EC8   		ucomiss	%xmm0, %xmm1
 7755 002f 7228     		jb	.L430
  41:../Checks.h   **** }
 7756              		.loc 8 41 0 is_stmt 0 discriminator 1
 7757 0031 488B45F0 		movq	-16(%rbp), %rax
 7758 0035 F30F1008 		movss	(%rax), %xmm1
 7759 0039 488B45F8 		movq	-8(%rbp), %rax
 7760 003d F30F1010 		movss	(%rax), %xmm2
 7761 0041 488B45E8 		movq	-24(%rbp), %rax
 7762 0045 F30F1000 		movss	(%rax), %xmm0
 7763 0049 F30F58C2 		addss	%xmm2, %xmm0
 7764 004d 0F2EC1   		ucomiss	%xmm1, %xmm0
 7765 0050 7207     		jb	.L430
  41:../Checks.h   **** }
 7766              		.loc 8 41 0 discriminator 3
 7767 0052 B8010000 		movl	$1, %eax
 7767      00
 7768 0057 EB05     		jmp	.L433
 7769              	.L430:
  41:../Checks.h   **** }
 7770              		.loc 8 41 0 discriminator 2
 7771 0059 B8000000 		movl	$0, %eax
 7771      00
 7772              	.L433:
  42:../Checks.h   **** 
 7773              		.loc 8 42 0 is_stmt 1 discriminator 4
 7774 005e 5D       		popq	%rbp
 7775              		.cfi_def_cfa 7, 8
 7776 005f C3       		ret
 7777              		.cfi_endproc
 7778              	.LFE1470:
 7780              		.section	.text._ZNKSt6vectorISt4pairIiSsESaIS1_EE14_M_range_checkEm,"axG",@progbits,_ZNKSt6vectorI
 7781              		.align 2
 7782              		.weak	_ZNKSt6vectorISt4pairIiSsESaIS1_EE14_M_range_checkEm
 7784              	_ZNKSt6vectorISt4pairIiSsESaIS1_EE14_M_range_checkEm:
 7785              	.LFB1472:
 791:/usr/include/c++/4.8/bits/stl_vector.h ****       {
 7786              		.loc 6 791 0
 7787              		.cfi_startproc
 7788 0000 55       		pushq	%rbp
 7789              		.cfi_def_cfa_offset 16
 7790              		.cfi_offset 6, -16
 7791 0001 4889E5   		movq	%rsp, %rbp
 7792              		.cfi_def_cfa_register 6
 7793 0004 4883EC10 		subq	$16, %rsp
 7794 0008 48897DF8 		movq	%rdi, -8(%rbp)
 7795 000c 488975F0 		movq	%rsi, -16(%rbp)
 793:/usr/include/c++/4.8/bits/stl_vector.h **** 	  __throw_out_of_range(__N("vector::_M_range_check"));
 7796              		.loc 6 793 0
 7797 0010 488B45F8 		movq	-8(%rbp), %rax
 7798 0014 4889C7   		movq	%rax, %rdi
 7799 0017 E8000000 		call	_ZNKSt6vectorISt4pairIiSsESaIS1_EE4sizeEv
 7799      00
 7800 001c 483B45F0 		cmpq	-16(%rbp), %rax
 7801 0020 0F96C0   		setbe	%al
 7802 0023 84C0     		testb	%al, %al
 7803 0025 740A     		je	.L437
 794:/usr/include/c++/4.8/bits/stl_vector.h ****       }
 7804              		.loc 6 794 0
 7805 0027 BF000000 		movl	$.LC37, %edi
 7805      00
 7806 002c E8000000 		call	_ZSt20__throw_out_of_rangePKc
 7806      00
 7807              	.L437:
 795:/usr/include/c++/4.8/bits/stl_vector.h **** 
 7808              		.loc 6 795 0
 7809 0031 C9       		leave
 7810              		.cfi_def_cfa 7, 8
 7811 0032 C3       		ret
 7812              		.cfi_endproc
 7813              	.LFE1472:
 7815              		.section	.text._ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE12_Vector_implC2Ev,"axG"
 7816              		.align 2
 7817              		.weak	_ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE12_Vector_implC2Ev
 7819              	_ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE12_Vector_implC2Ev:
 7820              	.LFB1482:
  86:/usr/include/c++/4.8/bits/stl_vector.h **** 	: _Tp_alloc_type(), _M_start(0), _M_finish(0), _M_end_of_storage(0)
 7821              		.loc 6 86 0
 7822              		.cfi_startproc
 7823 0000 55       		pushq	%rbp
 7824              		.cfi_def_cfa_offset 16
 7825              		.cfi_offset 6, -16
 7826 0001 4889E5   		movq	%rsp, %rbp
 7827              		.cfi_def_cfa_register 6
 7828 0004 4883EC10 		subq	$16, %rsp
 7829 0008 48897DF8 		movq	%rdi, -8(%rbp)
 7830              	.LBB202:
  87:/usr/include/c++/4.8/bits/stl_vector.h **** 	{ }
 7831              		.loc 6 87 0
 7832 000c 488B45F8 		movq	-8(%rbp), %rax
 7833 0010 4889C7   		movq	%rax, %rdi
 7834 0013 E8000000 		call	_ZNSaIN8UnitTest18DeferredTestResultEEC2Ev
 7834      00
 7835 0018 488B45F8 		movq	-8(%rbp), %rax
 7836 001c 48C70000 		movq	$0, (%rax)
 7836      000000
 7837 0023 488B45F8 		movq	-8(%rbp), %rax
 7838 0027 48C74008 		movq	$0, 8(%rax)
 7838      00000000 
 7839 002f 488B45F8 		movq	-8(%rbp), %rax
 7840 0033 48C74010 		movq	$0, 16(%rax)
 7840      00000000 
 7841              	.LBE202:
  88:/usr/include/c++/4.8/bits/stl_vector.h **** 
 7842              		.loc 6 88 0
 7843 003b C9       		leave
 7844              		.cfi_def_cfa 7, 8
 7845 003c C3       		ret
 7846              		.cfi_endproc
 7847              	.LFE1482:
 7849              		.weak	_ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE12_Vector_implC1Ev
 7850              		.set	_ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE12_Vector_implC1Ev,_ZNSt12_Vector_
 7851              		.section	.text._ZNSaIN8UnitTest18DeferredTestResultEED2Ev,"axG",@progbits,_ZNSaIN8UnitTest18Deferr
 7852              		.align 2
 7853              		.weak	_ZNSaIN8UnitTest18DeferredTestResultEED2Ev
 7855              	_ZNSaIN8UnitTest18DeferredTestResultEED2Ev:
 7856              	.LFB1485:
 7857              		.file 11 "/usr/include/c++/4.8/bits/allocator.h"
   1:/usr/include/c++/4.8/bits/allocator.h **** // Allocators -*- C++ -*-
   2:/usr/include/c++/4.8/bits/allocator.h **** 
   3:/usr/include/c++/4.8/bits/allocator.h **** // Copyright (C) 2001-2013 Free Software Foundation, Inc.
   4:/usr/include/c++/4.8/bits/allocator.h **** //
   5:/usr/include/c++/4.8/bits/allocator.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/c++/4.8/bits/allocator.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/4.8/bits/allocator.h **** // terms of the GNU General Public License as published by the
   8:/usr/include/c++/4.8/bits/allocator.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/4.8/bits/allocator.h **** // any later version.
  10:/usr/include/c++/4.8/bits/allocator.h **** 
  11:/usr/include/c++/4.8/bits/allocator.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/c++/4.8/bits/allocator.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/c++/4.8/bits/allocator.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/4.8/bits/allocator.h **** // GNU General Public License for more details.
  15:/usr/include/c++/4.8/bits/allocator.h **** 
  16:/usr/include/c++/4.8/bits/allocator.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/c++/4.8/bits/allocator.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/4.8/bits/allocator.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/4.8/bits/allocator.h **** 
  20:/usr/include/c++/4.8/bits/allocator.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/c++/4.8/bits/allocator.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/c++/4.8/bits/allocator.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/4.8/bits/allocator.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/c++/4.8/bits/allocator.h **** 
  25:/usr/include/c++/4.8/bits/allocator.h **** /*
  26:/usr/include/c++/4.8/bits/allocator.h ****  * Copyright (c) 1996-1997
  27:/usr/include/c++/4.8/bits/allocator.h ****  * Silicon Graphics Computer Systems, Inc.
  28:/usr/include/c++/4.8/bits/allocator.h ****  *
  29:/usr/include/c++/4.8/bits/allocator.h ****  * Permission to use, copy, modify, distribute and sell this software
  30:/usr/include/c++/4.8/bits/allocator.h ****  * and its documentation for any purpose is hereby granted without fee,
  31:/usr/include/c++/4.8/bits/allocator.h ****  * provided that the above copyright notice appear in all copies and
  32:/usr/include/c++/4.8/bits/allocator.h ****  * that both that copyright notice and this permission notice appear
  33:/usr/include/c++/4.8/bits/allocator.h ****  * in supporting documentation.  Silicon Graphics makes no
  34:/usr/include/c++/4.8/bits/allocator.h ****  * representations about the suitability of this software for any
  35:/usr/include/c++/4.8/bits/allocator.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  36:/usr/include/c++/4.8/bits/allocator.h ****  */
  37:/usr/include/c++/4.8/bits/allocator.h **** 
  38:/usr/include/c++/4.8/bits/allocator.h **** /** @file bits/allocator.h
  39:/usr/include/c++/4.8/bits/allocator.h ****  *  This is an internal header file, included by other library headers.
  40:/usr/include/c++/4.8/bits/allocator.h ****  *  Do not attempt to use it directly. @headername{memory}
  41:/usr/include/c++/4.8/bits/allocator.h ****  */
  42:/usr/include/c++/4.8/bits/allocator.h **** 
  43:/usr/include/c++/4.8/bits/allocator.h **** #ifndef _ALLOCATOR_H
  44:/usr/include/c++/4.8/bits/allocator.h **** #define _ALLOCATOR_H 1
  45:/usr/include/c++/4.8/bits/allocator.h **** 
  46:/usr/include/c++/4.8/bits/allocator.h **** #include <bits/c++allocator.h> // Define the base class to std::allocator.
  47:/usr/include/c++/4.8/bits/allocator.h **** #include <bits/memoryfwd.h>
  48:/usr/include/c++/4.8/bits/allocator.h **** #if __cplusplus >= 201103L
  49:/usr/include/c++/4.8/bits/allocator.h **** #include <type_traits>
  50:/usr/include/c++/4.8/bits/allocator.h **** #endif
  51:/usr/include/c++/4.8/bits/allocator.h **** 
  52:/usr/include/c++/4.8/bits/allocator.h **** namespace std _GLIBCXX_VISIBILITY(default)
  53:/usr/include/c++/4.8/bits/allocator.h **** {
  54:/usr/include/c++/4.8/bits/allocator.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  55:/usr/include/c++/4.8/bits/allocator.h **** 
  56:/usr/include/c++/4.8/bits/allocator.h ****   /**
  57:/usr/include/c++/4.8/bits/allocator.h ****    *  @addtogroup allocators
  58:/usr/include/c++/4.8/bits/allocator.h ****    *  @{
  59:/usr/include/c++/4.8/bits/allocator.h ****    */
  60:/usr/include/c++/4.8/bits/allocator.h **** 
  61:/usr/include/c++/4.8/bits/allocator.h ****   /// allocator<void> specialization.
  62:/usr/include/c++/4.8/bits/allocator.h ****   template<>
  63:/usr/include/c++/4.8/bits/allocator.h ****     class allocator<void>
  64:/usr/include/c++/4.8/bits/allocator.h ****     {
  65:/usr/include/c++/4.8/bits/allocator.h ****     public:
  66:/usr/include/c++/4.8/bits/allocator.h ****       typedef size_t      size_type;
  67:/usr/include/c++/4.8/bits/allocator.h ****       typedef ptrdiff_t   difference_type;
  68:/usr/include/c++/4.8/bits/allocator.h ****       typedef void*       pointer;
  69:/usr/include/c++/4.8/bits/allocator.h ****       typedef const void* const_pointer;
  70:/usr/include/c++/4.8/bits/allocator.h ****       typedef void        value_type;
  71:/usr/include/c++/4.8/bits/allocator.h **** 
  72:/usr/include/c++/4.8/bits/allocator.h ****       template<typename _Tp1>
  73:/usr/include/c++/4.8/bits/allocator.h ****         struct rebind
  74:/usr/include/c++/4.8/bits/allocator.h ****         { typedef allocator<_Tp1> other; };
  75:/usr/include/c++/4.8/bits/allocator.h **** 
  76:/usr/include/c++/4.8/bits/allocator.h **** #if __cplusplus >= 201103L
  77:/usr/include/c++/4.8/bits/allocator.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
  78:/usr/include/c++/4.8/bits/allocator.h ****       // 2103. std::allocator propagate_on_container_move_assignment
  79:/usr/include/c++/4.8/bits/allocator.h ****       typedef true_type propagate_on_container_move_assignment;
  80:/usr/include/c++/4.8/bits/allocator.h **** #endif
  81:/usr/include/c++/4.8/bits/allocator.h ****     };
  82:/usr/include/c++/4.8/bits/allocator.h **** 
  83:/usr/include/c++/4.8/bits/allocator.h ****   /**
  84:/usr/include/c++/4.8/bits/allocator.h ****    * @brief  The @a standard allocator, as per [20.4].
  85:/usr/include/c++/4.8/bits/allocator.h ****    *
  86:/usr/include/c++/4.8/bits/allocator.h ****    *  See http://gcc.gnu.org/onlinedocs/libstdc++/manual/bk01pt04ch11.html
  87:/usr/include/c++/4.8/bits/allocator.h ****    *  for further details.
  88:/usr/include/c++/4.8/bits/allocator.h ****    *
  89:/usr/include/c++/4.8/bits/allocator.h ****    *  @tparam  _Tp  Type of allocated object.
  90:/usr/include/c++/4.8/bits/allocator.h ****    */
  91:/usr/include/c++/4.8/bits/allocator.h ****   template<typename _Tp>
  92:/usr/include/c++/4.8/bits/allocator.h ****     class allocator: public __allocator_base<_Tp>
  93:/usr/include/c++/4.8/bits/allocator.h ****     {
  94:/usr/include/c++/4.8/bits/allocator.h ****    public:
  95:/usr/include/c++/4.8/bits/allocator.h ****       typedef size_t     size_type;
  96:/usr/include/c++/4.8/bits/allocator.h ****       typedef ptrdiff_t  difference_type;
  97:/usr/include/c++/4.8/bits/allocator.h ****       typedef _Tp*       pointer;
  98:/usr/include/c++/4.8/bits/allocator.h ****       typedef const _Tp* const_pointer;
  99:/usr/include/c++/4.8/bits/allocator.h ****       typedef _Tp&       reference;
 100:/usr/include/c++/4.8/bits/allocator.h ****       typedef const _Tp& const_reference;
 101:/usr/include/c++/4.8/bits/allocator.h ****       typedef _Tp        value_type;
 102:/usr/include/c++/4.8/bits/allocator.h **** 
 103:/usr/include/c++/4.8/bits/allocator.h ****       template<typename _Tp1>
 104:/usr/include/c++/4.8/bits/allocator.h ****         struct rebind
 105:/usr/include/c++/4.8/bits/allocator.h ****         { typedef allocator<_Tp1> other; };
 106:/usr/include/c++/4.8/bits/allocator.h **** 
 107:/usr/include/c++/4.8/bits/allocator.h **** #if __cplusplus >= 201103L
 108:/usr/include/c++/4.8/bits/allocator.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 109:/usr/include/c++/4.8/bits/allocator.h ****       // 2103. std::allocator propagate_on_container_move_assignment
 110:/usr/include/c++/4.8/bits/allocator.h ****       typedef true_type propagate_on_container_move_assignment;
 111:/usr/include/c++/4.8/bits/allocator.h **** #endif
 112:/usr/include/c++/4.8/bits/allocator.h **** 
 113:/usr/include/c++/4.8/bits/allocator.h ****       allocator() throw() { }
 114:/usr/include/c++/4.8/bits/allocator.h **** 
 115:/usr/include/c++/4.8/bits/allocator.h ****       allocator(const allocator& __a) throw()
 116:/usr/include/c++/4.8/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 117:/usr/include/c++/4.8/bits/allocator.h **** 
 118:/usr/include/c++/4.8/bits/allocator.h ****       template<typename _Tp1>
 119:/usr/include/c++/4.8/bits/allocator.h ****         allocator(const allocator<_Tp1>&) throw() { }
 120:/usr/include/c++/4.8/bits/allocator.h **** 
 121:/usr/include/c++/4.8/bits/allocator.h ****       ~allocator() throw() { }
 7858              		.loc 11 121 0
 7859              		.cfi_startproc
 7860 0000 55       		pushq	%rbp
 7861              		.cfi_def_cfa_offset 16
 7862              		.cfi_offset 6, -16
 7863 0001 4889E5   		movq	%rsp, %rbp
 7864              		.cfi_def_cfa_register 6
 7865 0004 4883EC10 		subq	$16, %rsp
 7866 0008 48897DF8 		movq	%rdi, -8(%rbp)
 7867              	.LBB203:
 7868              		.loc 11 121 0
 7869 000c 488B45F8 		movq	-8(%rbp), %rax
 7870 0010 4889C7   		movq	%rax, %rdi
 7871 0013 E8000000 		call	_ZN9__gnu_cxx13new_allocatorIN8UnitTest18DeferredTestResultEED2Ev
 7871      00
 7872              	.LBE203:
 7873 0018 C9       		leave
 7874              		.cfi_def_cfa 7, 8
 7875 0019 C3       		ret
 7876              		.cfi_endproc
 7877              	.LFE1485:
 7879              		.weak	_ZNSaIN8UnitTest18DeferredTestResultEED1Ev
 7880              		.set	_ZNSaIN8UnitTest18DeferredTestResultEED1Ev,_ZNSaIN8UnitTest18DeferredTestResultEED2Ev
 7881              		.section	.text._ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE13_M_deallocateEPS1_m,"a
 7882              		.align 2
 7883              		.weak	_ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE13_M_deallocateEPS1_m
 7885              	_ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE13_M_deallocateEPS1_m:
 7886              	.LFB1487:
 171:/usr/include/c++/4.8/bits/stl_vector.h ****       {
 7887              		.loc 6 171 0
 7888              		.cfi_startproc
 7889 0000 55       		pushq	%rbp
 7890              		.cfi_def_cfa_offset 16
 7891              		.cfi_offset 6, -16
 7892 0001 4889E5   		movq	%rsp, %rbp
 7893              		.cfi_def_cfa_register 6
 7894 0004 4883EC20 		subq	$32, %rsp
 7895 0008 48897DF8 		movq	%rdi, -8(%rbp)
 7896 000c 488975F0 		movq	%rsi, -16(%rbp)
 7897 0010 488955E8 		movq	%rdx, -24(%rbp)
 173:/usr/include/c++/4.8/bits/stl_vector.h **** 	  _M_impl.deallocate(__p, __n);
 7898              		.loc 6 173 0
 7899 0014 48837DF0 		cmpq	$0, -16(%rbp)
 7899      00
 7900 0019 7417     		je	.L442
 174:/usr/include/c++/4.8/bits/stl_vector.h ****       }
 7901              		.loc 6 174 0
 7902 001b 488B45F8 		movq	-8(%rbp), %rax
 7903 001f 488B55E8 		movq	-24(%rbp), %rdx
 7904 0023 488B4DF0 		movq	-16(%rbp), %rcx
 7905 0027 4889CE   		movq	%rcx, %rsi
 7906 002a 4889C7   		movq	%rax, %rdi
 7907 002d E8000000 		call	_ZN9__gnu_cxx13new_allocatorIN8UnitTest18DeferredTestResultEE10deallocateEPS2_m
 7907      00
 7908              	.L442:
 175:/usr/include/c++/4.8/bits/stl_vector.h **** 
 7909              		.loc 6 175 0
 7910 0032 C9       		leave
 7911              		.cfi_def_cfa 7, 8
 7912 0033 C3       		ret
 7913              		.cfi_endproc
 7914              	.LFE1487:
 7916              		.section	.text._ZSt8_DestroyIPN8UnitTest18DeferredTestResultEEvT_S3_,"axG",@progbits,_ZSt8_Destroy
 7917              		.weak	_ZSt8_DestroyIPN8UnitTest18DeferredTestResultEEvT_S3_
 7919              	_ZSt8_DestroyIPN8UnitTest18DeferredTestResultEEvT_S3_:
 7920              	.LFB1488:
 122:/usr/include/c++/4.8/bits/stl_construct.h ****     {
 7921              		.loc 9 122 0
 7922              		.cfi_startproc
 7923 0000 55       		pushq	%rbp
 7924              		.cfi_def_cfa_offset 16
 7925              		.cfi_offset 6, -16
 7926 0001 4889E5   		movq	%rsp, %rbp
 7927              		.cfi_def_cfa_register 6
 7928 0004 4883EC10 		subq	$16, %rsp
 7929 0008 48897DF8 		movq	%rdi, -8(%rbp)
 7930 000c 488975F0 		movq	%rsi, -16(%rbp)
 7931              	.LBB204:
 126:/usr/include/c++/4.8/bits/stl_construct.h **** 	__destroy(__first, __last);
 7932              		.loc 9 126 0
 7933 0010 488B55F0 		movq	-16(%rbp), %rdx
 7934 0014 488B45F8 		movq	-8(%rbp), %rax
 7935 0018 4889D6   		movq	%rdx, %rsi
 7936 001b 4889C7   		movq	%rax, %rdi
 7937 001e E8000000 		call	_ZNSt12_Destroy_auxILb0EE9__destroyIPN8UnitTest18DeferredTestResultEEEvT_S5_
 7937      00
 7938              	.LBE204:
 128:/usr/include/c++/4.8/bits/stl_construct.h **** 
 7939              		.loc 9 128 0
 7940 0023 C9       		leave
 7941              		.cfi_def_cfa 7, 8
 7942 0024 C3       		ret
 7943              		.cfi_endproc
 7944              	.LFE1488:
 7946              		.section	.text._ZNSaIN8UnitTest18DeferredTestResultEEC2Ev,"axG",@progbits,_ZNSaIN8UnitTest18Deferr
 7947              		.align 2
 7948              		.weak	_ZNSaIN8UnitTest18DeferredTestResultEEC2Ev
 7950              	_ZNSaIN8UnitTest18DeferredTestResultEEC2Ev:
 7951              	.LFB1496:
 113:/usr/include/c++/4.8/bits/allocator.h **** 
 7952              		.loc 11 113 0
 7953              		.cfi_startproc
 7954 0000 55       		pushq	%rbp
 7955              		.cfi_def_cfa_offset 16
 7956              		.cfi_offset 6, -16
 7957 0001 4889E5   		movq	%rsp, %rbp
 7958              		.cfi_def_cfa_register 6
 7959 0004 4883EC10 		subq	$16, %rsp
 7960 0008 48897DF8 		movq	%rdi, -8(%rbp)
 7961              	.LBB205:
 113:/usr/include/c++/4.8/bits/allocator.h **** 
 7962              		.loc 11 113 0
 7963 000c 488B45F8 		movq	-8(%rbp), %rax
 7964 0010 4889C7   		movq	%rax, %rdi
 7965 0013 E8000000 		call	_ZN9__gnu_cxx13new_allocatorIN8UnitTest18DeferredTestResultEEC2Ev
 7965      00
 7966              	.LBE205:
 7967 0018 C9       		leave
 7968              		.cfi_def_cfa 7, 8
 7969 0019 C3       		ret
 7970              		.cfi_endproc
 7971              	.LFE1496:
 7973              		.weak	_ZNSaIN8UnitTest18DeferredTestResultEEC1Ev
 7974              		.set	_ZNSaIN8UnitTest18DeferredTestResultEEC1Ev,_ZNSaIN8UnitTest18DeferredTestResultEEC2Ev
 7975              		.section	.text._ZN9__gnu_cxx13new_allocatorIN8UnitTest18DeferredTestResultEED2Ev,"axG",@progbits,_
 7976              		.align 2
 7977              		.weak	_ZN9__gnu_cxx13new_allocatorIN8UnitTest18DeferredTestResultEED2Ev
 7979              	_ZN9__gnu_cxx13new_allocatorIN8UnitTest18DeferredTestResultEED2Ev:
 7980              	.LFB1499:
 7981              		.file 12 "/usr/include/c++/4.8/ext/new_allocator.h"
   1:/usr/include/c++/4.8/ext/new_allocator.h **** // Allocator that wraps operator new -*- C++ -*-
   2:/usr/include/c++/4.8/ext/new_allocator.h **** 
   3:/usr/include/c++/4.8/ext/new_allocator.h **** // Copyright (C) 2001-2013 Free Software Foundation, Inc.
   4:/usr/include/c++/4.8/ext/new_allocator.h **** //
   5:/usr/include/c++/4.8/ext/new_allocator.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/c++/4.8/ext/new_allocator.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/4.8/ext/new_allocator.h **** // terms of the GNU General Public License as published by the
   8:/usr/include/c++/4.8/ext/new_allocator.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/4.8/ext/new_allocator.h **** // any later version.
  10:/usr/include/c++/4.8/ext/new_allocator.h **** 
  11:/usr/include/c++/4.8/ext/new_allocator.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/c++/4.8/ext/new_allocator.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/c++/4.8/ext/new_allocator.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/4.8/ext/new_allocator.h **** // GNU General Public License for more details.
  15:/usr/include/c++/4.8/ext/new_allocator.h **** 
  16:/usr/include/c++/4.8/ext/new_allocator.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/c++/4.8/ext/new_allocator.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/4.8/ext/new_allocator.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/4.8/ext/new_allocator.h **** 
  20:/usr/include/c++/4.8/ext/new_allocator.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/c++/4.8/ext/new_allocator.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/c++/4.8/ext/new_allocator.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/4.8/ext/new_allocator.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/c++/4.8/ext/new_allocator.h **** 
  25:/usr/include/c++/4.8/ext/new_allocator.h **** /** @file ext/new_allocator.h
  26:/usr/include/c++/4.8/ext/new_allocator.h ****  *  This file is a GNU extension to the Standard C++ Library.
  27:/usr/include/c++/4.8/ext/new_allocator.h ****  */
  28:/usr/include/c++/4.8/ext/new_allocator.h **** 
  29:/usr/include/c++/4.8/ext/new_allocator.h **** #ifndef _NEW_ALLOCATOR_H
  30:/usr/include/c++/4.8/ext/new_allocator.h **** #define _NEW_ALLOCATOR_H 1
  31:/usr/include/c++/4.8/ext/new_allocator.h **** 
  32:/usr/include/c++/4.8/ext/new_allocator.h **** #include <bits/c++config.h>
  33:/usr/include/c++/4.8/ext/new_allocator.h **** #include <new>
  34:/usr/include/c++/4.8/ext/new_allocator.h **** #include <bits/functexcept.h>
  35:/usr/include/c++/4.8/ext/new_allocator.h **** #include <bits/move.h>
  36:/usr/include/c++/4.8/ext/new_allocator.h **** #if __cplusplus >= 201103L
  37:/usr/include/c++/4.8/ext/new_allocator.h **** #include <type_traits>
  38:/usr/include/c++/4.8/ext/new_allocator.h **** #endif
  39:/usr/include/c++/4.8/ext/new_allocator.h **** 
  40:/usr/include/c++/4.8/ext/new_allocator.h **** namespace __gnu_cxx _GLIBCXX_VISIBILITY(default)
  41:/usr/include/c++/4.8/ext/new_allocator.h **** {
  42:/usr/include/c++/4.8/ext/new_allocator.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  43:/usr/include/c++/4.8/ext/new_allocator.h **** 
  44:/usr/include/c++/4.8/ext/new_allocator.h ****   using std::size_t;
  45:/usr/include/c++/4.8/ext/new_allocator.h ****   using std::ptrdiff_t;
  46:/usr/include/c++/4.8/ext/new_allocator.h **** 
  47:/usr/include/c++/4.8/ext/new_allocator.h ****   /**
  48:/usr/include/c++/4.8/ext/new_allocator.h ****    *  @brief  An allocator that uses global new, as per [20.4].
  49:/usr/include/c++/4.8/ext/new_allocator.h ****    *  @ingroup allocators
  50:/usr/include/c++/4.8/ext/new_allocator.h ****    *
  51:/usr/include/c++/4.8/ext/new_allocator.h ****    *  This is precisely the allocator defined in the C++ Standard. 
  52:/usr/include/c++/4.8/ext/new_allocator.h ****    *    - all allocation calls operator new
  53:/usr/include/c++/4.8/ext/new_allocator.h ****    *    - all deallocation calls operator delete
  54:/usr/include/c++/4.8/ext/new_allocator.h ****    *
  55:/usr/include/c++/4.8/ext/new_allocator.h ****    *  @tparam  _Tp  Type of allocated object.
  56:/usr/include/c++/4.8/ext/new_allocator.h ****    */
  57:/usr/include/c++/4.8/ext/new_allocator.h ****   template<typename _Tp>
  58:/usr/include/c++/4.8/ext/new_allocator.h ****     class new_allocator
  59:/usr/include/c++/4.8/ext/new_allocator.h ****     {
  60:/usr/include/c++/4.8/ext/new_allocator.h ****     public:
  61:/usr/include/c++/4.8/ext/new_allocator.h ****       typedef size_t     size_type;
  62:/usr/include/c++/4.8/ext/new_allocator.h ****       typedef ptrdiff_t  difference_type;
  63:/usr/include/c++/4.8/ext/new_allocator.h ****       typedef _Tp*       pointer;
  64:/usr/include/c++/4.8/ext/new_allocator.h ****       typedef const _Tp* const_pointer;
  65:/usr/include/c++/4.8/ext/new_allocator.h ****       typedef _Tp&       reference;
  66:/usr/include/c++/4.8/ext/new_allocator.h ****       typedef const _Tp& const_reference;
  67:/usr/include/c++/4.8/ext/new_allocator.h ****       typedef _Tp        value_type;
  68:/usr/include/c++/4.8/ext/new_allocator.h **** 
  69:/usr/include/c++/4.8/ext/new_allocator.h ****       template<typename _Tp1>
  70:/usr/include/c++/4.8/ext/new_allocator.h ****         struct rebind
  71:/usr/include/c++/4.8/ext/new_allocator.h ****         { typedef new_allocator<_Tp1> other; };
  72:/usr/include/c++/4.8/ext/new_allocator.h **** 
  73:/usr/include/c++/4.8/ext/new_allocator.h **** #if __cplusplus >= 201103L
  74:/usr/include/c++/4.8/ext/new_allocator.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
  75:/usr/include/c++/4.8/ext/new_allocator.h ****       // 2103. propagate_on_container_move_assignment
  76:/usr/include/c++/4.8/ext/new_allocator.h ****       typedef std::true_type propagate_on_container_move_assignment;
  77:/usr/include/c++/4.8/ext/new_allocator.h **** #endif
  78:/usr/include/c++/4.8/ext/new_allocator.h **** 
  79:/usr/include/c++/4.8/ext/new_allocator.h ****       new_allocator() _GLIBCXX_USE_NOEXCEPT { }
  80:/usr/include/c++/4.8/ext/new_allocator.h **** 
  81:/usr/include/c++/4.8/ext/new_allocator.h ****       new_allocator(const new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
  82:/usr/include/c++/4.8/ext/new_allocator.h **** 
  83:/usr/include/c++/4.8/ext/new_allocator.h ****       template<typename _Tp1>
  84:/usr/include/c++/4.8/ext/new_allocator.h ****         new_allocator(const new_allocator<_Tp1>&) _GLIBCXX_USE_NOEXCEPT { }
  85:/usr/include/c++/4.8/ext/new_allocator.h **** 
  86:/usr/include/c++/4.8/ext/new_allocator.h ****       ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
 7982              		.loc 12 86 0
 7983              		.cfi_startproc
 7984 0000 55       		pushq	%rbp
 7985              		.cfi_def_cfa_offset 16
 7986              		.cfi_offset 6, -16
 7987 0001 4889E5   		movq	%rsp, %rbp
 7988              		.cfi_def_cfa_register 6
 7989 0004 48897DF8 		movq	%rdi, -8(%rbp)
 7990              		.loc 12 86 0
 7991 0008 5D       		popq	%rbp
 7992              		.cfi_def_cfa 7, 8
 7993 0009 C3       		ret
 7994              		.cfi_endproc
 7995              	.LFE1499:
 7997              		.weak	_ZN9__gnu_cxx13new_allocatorIN8UnitTest18DeferredTestResultEED1Ev
 7998              		.set	_ZN9__gnu_cxx13new_allocatorIN8UnitTest18DeferredTestResultEED1Ev,_ZN9__gnu_cxx13new_allocato
 7999              		.section	.text._ZN9__gnu_cxx13new_allocatorIN8UnitTest18DeferredTestResultEE10deallocateEPS2_m,"ax
 8000              		.align 2
 8001              		.weak	_ZN9__gnu_cxx13new_allocatorIN8UnitTest18DeferredTestResultEE10deallocateEPS2_m
 8003              	_ZN9__gnu_cxx13new_allocatorIN8UnitTest18DeferredTestResultEE10deallocateEPS2_m:
 8004              	.LFB1501:
  87:/usr/include/c++/4.8/ext/new_allocator.h **** 
  88:/usr/include/c++/4.8/ext/new_allocator.h ****       pointer
  89:/usr/include/c++/4.8/ext/new_allocator.h ****       address(reference __x) const _GLIBCXX_NOEXCEPT
  90:/usr/include/c++/4.8/ext/new_allocator.h ****       { return std::__addressof(__x); }
  91:/usr/include/c++/4.8/ext/new_allocator.h **** 
  92:/usr/include/c++/4.8/ext/new_allocator.h ****       const_pointer
  93:/usr/include/c++/4.8/ext/new_allocator.h ****       address(const_reference __x) const _GLIBCXX_NOEXCEPT
  94:/usr/include/c++/4.8/ext/new_allocator.h ****       { return std::__addressof(__x); }
  95:/usr/include/c++/4.8/ext/new_allocator.h **** 
  96:/usr/include/c++/4.8/ext/new_allocator.h ****       // NB: __n is permitted to be 0.  The C++ standard says nothing
  97:/usr/include/c++/4.8/ext/new_allocator.h ****       // about what the return value is when __n == 0.
  98:/usr/include/c++/4.8/ext/new_allocator.h ****       pointer
  99:/usr/include/c++/4.8/ext/new_allocator.h ****       allocate(size_type __n, const void* = 0)
 100:/usr/include/c++/4.8/ext/new_allocator.h ****       { 
 101:/usr/include/c++/4.8/ext/new_allocator.h **** 	if (__n > this->max_size())
 102:/usr/include/c++/4.8/ext/new_allocator.h **** 	  std::__throw_bad_alloc();
 103:/usr/include/c++/4.8/ext/new_allocator.h **** 
 104:/usr/include/c++/4.8/ext/new_allocator.h **** 	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
 105:/usr/include/c++/4.8/ext/new_allocator.h ****       }
 106:/usr/include/c++/4.8/ext/new_allocator.h **** 
 107:/usr/include/c++/4.8/ext/new_allocator.h ****       // __p is not permitted to be a null pointer.
 108:/usr/include/c++/4.8/ext/new_allocator.h ****       void
 109:/usr/include/c++/4.8/ext/new_allocator.h ****       deallocate(pointer __p, size_type)
 8005              		.loc 12 109 0
 8006              		.cfi_startproc
 8007 0000 55       		pushq	%rbp
 8008              		.cfi_def_cfa_offset 16
 8009              		.cfi_offset 6, -16
 8010 0001 4889E5   		movq	%rsp, %rbp
 8011              		.cfi_def_cfa_register 6
 8012 0004 4883EC20 		subq	$32, %rsp
 8013 0008 48897DF8 		movq	%rdi, -8(%rbp)
 8014 000c 488975F0 		movq	%rsi, -16(%rbp)
 8015 0010 488955E8 		movq	%rdx, -24(%rbp)
 110:/usr/include/c++/4.8/ext/new_allocator.h ****       { ::operator delete(__p); }
 8016              		.loc 12 110 0
 8017 0014 488B45F0 		movq	-16(%rbp), %rax
 8018 0018 4889C7   		movq	%rax, %rdi
 8019 001b E8000000 		call	_ZdlPv
 8019      00
 8020 0020 C9       		leave
 8021              		.cfi_def_cfa 7, 8
 8022 0021 C3       		ret
 8023              		.cfi_endproc
 8024              	.LFE1501:
 8026              		.section	.text._ZNSt12_Destroy_auxILb0EE9__destroyIPN8UnitTest18DeferredTestResultEEEvT_S5_,"axG",
 8027              		.weak	_ZNSt12_Destroy_auxILb0EE9__destroyIPN8UnitTest18DeferredTestResultEEEvT_S5_
 8029              	_ZNSt12_Destroy_auxILb0EE9__destroyIPN8UnitTest18DeferredTestResultEEEvT_S5_:
 8030              	.LFB1502:
 100:/usr/include/c++/4.8/bits/stl_construct.h **** 	{
 8031              		.loc 9 100 0
 8032              		.cfi_startproc
 8033 0000 55       		pushq	%rbp
 8034              		.cfi_def_cfa_offset 16
 8035              		.cfi_offset 6, -16
 8036 0001 4889E5   		movq	%rsp, %rbp
 8037              		.cfi_def_cfa_register 6
 8038 0004 4883EC10 		subq	$16, %rsp
 8039 0008 48897DF8 		movq	%rdi, -8(%rbp)
 8040 000c 488975F0 		movq	%rsi, -16(%rbp)
 102:/usr/include/c++/4.8/bits/stl_construct.h **** 	    std::_Destroy(std::__addressof(*__first));
 8041              		.loc 9 102 0
 8042 0010 EB19     		jmp	.L450
 8043              	.L451:
 103:/usr/include/c++/4.8/bits/stl_construct.h **** 	}
 8044              		.loc 9 103 0 discriminator 2
 8045 0012 488B45F8 		movq	-8(%rbp), %rax
 8046 0016 4889C7   		movq	%rax, %rdi
 8047 0019 E8000000 		call	_ZSt11__addressofIN8UnitTest18DeferredTestResultEEPT_RS2_
 8047      00
 8048 001e 4889C7   		movq	%rax, %rdi
 8049 0021 E8000000 		call	_ZSt8_DestroyIN8UnitTest18DeferredTestResultEEvPT_
 8049      00
 102:/usr/include/c++/4.8/bits/stl_construct.h **** 	    std::_Destroy(std::__addressof(*__first));
 8050              		.loc 9 102 0 discriminator 2
 8051 0026 488345F8 		addq	$56, -8(%rbp)
 8051      38
 8052              	.L450:
 102:/usr/include/c++/4.8/bits/stl_construct.h **** 	    std::_Destroy(std::__addressof(*__first));
 8053              		.loc 9 102 0 is_stmt 0 discriminator 1
 8054 002b 488B45F8 		movq	-8(%rbp), %rax
 8055 002f 483B45F0 		cmpq	-16(%rbp), %rax
 8056 0033 75DD     		jne	.L451
 104:/usr/include/c++/4.8/bits/stl_construct.h ****     };
 8057              		.loc 9 104 0 is_stmt 1
 8058 0035 C9       		leave
 8059              		.cfi_def_cfa 7, 8
 8060 0036 C3       		ret
 8061              		.cfi_endproc
 8062              	.LFE1502:
 8064              		.section	.text._ZN9__gnu_cxx13new_allocatorIN8UnitTest18DeferredTestResultEEC2Ev,"axG",@progbits,_
 8065              		.align 2
 8066              		.weak	_ZN9__gnu_cxx13new_allocatorIN8UnitTest18DeferredTestResultEEC2Ev
 8068              	_ZN9__gnu_cxx13new_allocatorIN8UnitTest18DeferredTestResultEEC2Ev:
 8069              	.LFB1504:
  79:/usr/include/c++/4.8/ext/new_allocator.h **** 
 8070              		.loc 12 79 0
 8071              		.cfi_startproc
 8072 0000 55       		pushq	%rbp
 8073              		.cfi_def_cfa_offset 16
 8074              		.cfi_offset 6, -16
 8075 0001 4889E5   		movq	%rsp, %rbp
 8076              		.cfi_def_cfa_register 6
 8077 0004 48897DF8 		movq	%rdi, -8(%rbp)
  79:/usr/include/c++/4.8/ext/new_allocator.h **** 
 8078              		.loc 12 79 0
 8079 0008 5D       		popq	%rbp
 8080              		.cfi_def_cfa 7, 8
 8081 0009 C3       		ret
 8082              		.cfi_endproc
 8083              	.LFE1504:
 8085              		.weak	_ZN9__gnu_cxx13new_allocatorIN8UnitTest18DeferredTestResultEEC1Ev
 8086              		.set	_ZN9__gnu_cxx13new_allocatorIN8UnitTest18DeferredTestResultEEC1Ev,_ZN9__gnu_cxx13new_allocato
 8087              		.section	.text._ZSt11__addressofIN8UnitTest18DeferredTestResultEEPT_RS2_,"axG",@progbits,_ZSt11__a
 8088              		.weak	_ZSt11__addressofIN8UnitTest18DeferredTestResultEEPT_RS2_
 8090              	_ZSt11__addressofIN8UnitTest18DeferredTestResultEEPT_RS2_:
 8091              	.LFB1506:
 8092              		.file 13 "/usr/include/c++/4.8/bits/move.h"
   1:/usr/include/c++/4.8/bits/move.h **** // Move, forward and identity for C++0x + swap -*- C++ -*-
   2:/usr/include/c++/4.8/bits/move.h **** 
   3:/usr/include/c++/4.8/bits/move.h **** // Copyright (C) 2007-2013 Free Software Foundation, Inc.
   4:/usr/include/c++/4.8/bits/move.h **** //
   5:/usr/include/c++/4.8/bits/move.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/c++/4.8/bits/move.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/4.8/bits/move.h **** // terms of the GNU General Public License as published by the
   8:/usr/include/c++/4.8/bits/move.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/4.8/bits/move.h **** // any later version.
  10:/usr/include/c++/4.8/bits/move.h **** 
  11:/usr/include/c++/4.8/bits/move.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/c++/4.8/bits/move.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/c++/4.8/bits/move.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/4.8/bits/move.h **** // GNU General Public License for more details.
  15:/usr/include/c++/4.8/bits/move.h **** 
  16:/usr/include/c++/4.8/bits/move.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/c++/4.8/bits/move.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/4.8/bits/move.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/4.8/bits/move.h **** 
  20:/usr/include/c++/4.8/bits/move.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/c++/4.8/bits/move.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/c++/4.8/bits/move.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/4.8/bits/move.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/c++/4.8/bits/move.h **** 
  25:/usr/include/c++/4.8/bits/move.h **** /** @file bits/move.h
  26:/usr/include/c++/4.8/bits/move.h ****  *  This is an internal header file, included by other library headers.
  27:/usr/include/c++/4.8/bits/move.h ****  *  Do not attempt to use it directly. @headername{utility}
  28:/usr/include/c++/4.8/bits/move.h ****  */
  29:/usr/include/c++/4.8/bits/move.h **** 
  30:/usr/include/c++/4.8/bits/move.h **** #ifndef _MOVE_H
  31:/usr/include/c++/4.8/bits/move.h **** #define _MOVE_H 1
  32:/usr/include/c++/4.8/bits/move.h **** 
  33:/usr/include/c++/4.8/bits/move.h **** #include <bits/c++config.h>
  34:/usr/include/c++/4.8/bits/move.h **** #include <bits/concept_check.h>
  35:/usr/include/c++/4.8/bits/move.h **** 
  36:/usr/include/c++/4.8/bits/move.h **** namespace std _GLIBCXX_VISIBILITY(default)
  37:/usr/include/c++/4.8/bits/move.h **** {
  38:/usr/include/c++/4.8/bits/move.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  39:/usr/include/c++/4.8/bits/move.h **** 
  40:/usr/include/c++/4.8/bits/move.h ****   // Used, in C++03 mode too, by allocators, etc.
  41:/usr/include/c++/4.8/bits/move.h ****   /**
  42:/usr/include/c++/4.8/bits/move.h ****    *  @brief Same as C++11 std::addressof
  43:/usr/include/c++/4.8/bits/move.h ****    *  @ingroup utilities
  44:/usr/include/c++/4.8/bits/move.h ****    */
  45:/usr/include/c++/4.8/bits/move.h ****   template<typename _Tp>
  46:/usr/include/c++/4.8/bits/move.h ****     inline _Tp*
  47:/usr/include/c++/4.8/bits/move.h ****     __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
 8093              		.loc 13 47 0
 8094              		.cfi_startproc
 8095 0000 55       		pushq	%rbp
 8096              		.cfi_def_cfa_offset 16
 8097              		.cfi_offset 6, -16
 8098 0001 4889E5   		movq	%rsp, %rbp
 8099              		.cfi_def_cfa_register 6
 8100 0004 48897DF8 		movq	%rdi, -8(%rbp)
  48:/usr/include/c++/4.8/bits/move.h ****     {
  49:/usr/include/c++/4.8/bits/move.h ****       return reinterpret_cast<_Tp*>
  50:/usr/include/c++/4.8/bits/move.h **** 	(&const_cast<char&>(reinterpret_cast<const volatile char&>(__r)));
 8101              		.loc 13 50 0
 8102 0008 488B45F8 		movq	-8(%rbp), %rax
  51:/usr/include/c++/4.8/bits/move.h ****     }
 8103              		.loc 13 51 0
 8104 000c 5D       		popq	%rbp
 8105              		.cfi_def_cfa 7, 8
 8106 000d C3       		ret
 8107              		.cfi_endproc
 8108              	.LFE1506:
 8110              		.section	.text._ZN8UnitTest18DeferredTestResultD2Ev,"axG",@progbits,_ZN8UnitTest18DeferredTestResu
 8111              		.align 2
 8112              		.weak	_ZN8UnitTest18DeferredTestResultD2Ev
 8114              	_ZN8UnitTest18DeferredTestResultD2Ev:
 8115              	.LFB1509:
 8116              		.file 14 "../DeferredTestResult.h"
   1:../DeferredTestResult.h **** #ifndef UNITTEST_DEFERREDTESTRESULT_H
   2:../DeferredTestResult.h **** #define UNITTEST_DEFERREDTESTRESULT_H
   3:../DeferredTestResult.h **** 
   4:../DeferredTestResult.h **** #include <string>
   5:../DeferredTestResult.h **** #include <vector>
   6:../DeferredTestResult.h **** 
   7:../DeferredTestResult.h **** namespace UnitTest
   8:../DeferredTestResult.h **** {
   9:../DeferredTestResult.h **** 
  10:../DeferredTestResult.h **** struct DeferredTestResult
 8117              		.loc 14 10 0
 8118              		.cfi_startproc
 8119              		.cfi_personality 0x3,__gxx_personality_v0
 8120              		.cfi_lsda 0x3,.LLSDA1509
 8121 0000 55       		pushq	%rbp
 8122              		.cfi_def_cfa_offset 16
 8123              		.cfi_offset 6, -16
 8124 0001 4889E5   		movq	%rsp, %rbp
 8125              		.cfi_def_cfa_register 6
 8126 0004 53       		pushq	%rbx
 8127 0005 4883EC18 		subq	$24, %rsp
 8128              		.cfi_offset 3, -24
 8129 0009 48897DE8 		movq	%rdi, -24(%rbp)
 8130              	.LBB206:
 8131              		.loc 14 10 0
 8132 000d 488B45E8 		movq	-24(%rbp), %rax
 8133 0011 4883C018 		addq	$24, %rax
 8134 0015 4889C7   		movq	%rax, %rdi
 8135              	.LEHB233:
 8136 0018 E8000000 		call	_ZNSt6vectorISt4pairIiSsESaIS1_EED1Ev
 8136      00
 8137              	.LEHE233:
 8138              		.loc 14 10 0 is_stmt 0 discriminator 1
 8139 001d 488B45E8 		movq	-24(%rbp), %rax
 8140 0021 4883C010 		addq	$16, %rax
 8141 0025 4889C7   		movq	%rax, %rdi
 8142              	.LEHB234:
 8143 0028 E8000000 		call	_ZNSsD1Ev
 8143      00
 8144              	.LEHE234:
 8145              		.loc 14 10 0 discriminator 2
 8146 002d 488B45E8 		movq	-24(%rbp), %rax
 8147 0031 4883C008 		addq	$8, %rax
 8148 0035 4889C7   		movq	%rax, %rdi
 8149              	.LEHB235:
 8150 0038 E8000000 		call	_ZNSsD1Ev
 8150      00
 8151              	.LEHE235:
 8152              		.loc 14 10 0 discriminator 3
 8153 003d 488B45E8 		movq	-24(%rbp), %rax
 8154 0041 4889C7   		movq	%rax, %rdi
 8155              	.LEHB236:
 8156 0044 E8000000 		call	_ZNSsD1Ev
 8156      00
 8157              	.LEHE236:
 8158 0049 EB44     		jmp	.L463
 8159              	.L460:
 8160 004b 4889C3   		movq	%rax, %rbx
 8161              		.loc 14 10 0
 8162 004e 488B45E8 		movq	-24(%rbp), %rax
 8163 0052 4883C010 		addq	$16, %rax
 8164 0056 4889C7   		movq	%rax, %rdi
 8165 0059 E8000000 		call	_ZNSsD1Ev
 8165      00
 8166 005e EB03     		jmp	.L458
 8167              	.L461:
 8168 0060 4889C3   		movq	%rax, %rbx
 8169              	.L458:
 8170 0063 488B45E8 		movq	-24(%rbp), %rax
 8171 0067 4883C008 		addq	$8, %rax
 8172 006b 4889C7   		movq	%rax, %rdi
 8173 006e E8000000 		call	_ZNSsD1Ev
 8173      00
 8174 0073 EB03     		jmp	.L459
 8175              	.L462:
 8176 0075 4889C3   		movq	%rax, %rbx
 8177              	.L459:
 8178 0078 488B45E8 		movq	-24(%rbp), %rax
 8179 007c 4889C7   		movq	%rax, %rdi
 8180 007f E8000000 		call	_ZNSsD1Ev
 8180      00
 8181 0084 4889D8   		movq	%rbx, %rax
 8182 0087 4889C7   		movq	%rax, %rdi
 8183              	.LEHB237:
 8184 008a E8000000 		call	_Unwind_Resume
 8184      00
 8185              	.LEHE237:
 8186              	.L463:
 8187              	.LBE206:
 8188 008f 4883C418 		addq	$24, %rsp
 8189 0093 5B       		popq	%rbx
 8190 0094 5D       		popq	%rbp
 8191              		.cfi_def_cfa 7, 8
 8192 0095 C3       		ret
 8193              		.cfi_endproc
 8194              	.LFE1509:
 8195              		.section	.gcc_except_table
 8196              	.LLSDA1509:
 8197 0648 FF       		.byte	0xff
 8198 0649 FF       		.byte	0xff
 8199 064a 01       		.byte	0x1
 8200 064b 15       		.uleb128 .LLSDACSE1509-.LLSDACSB1509
 8201              	.LLSDACSB1509:
 8202 064c 18       		.uleb128 .LEHB233-.LFB1509
 8203 064d 05       		.uleb128 .LEHE233-.LEHB233
 8204 064e 4B       		.uleb128 .L460-.LFB1509
 8205 064f 00       		.uleb128 0
 8206 0650 28       		.uleb128 .LEHB234-.LFB1509
 8207 0651 05       		.uleb128 .LEHE234-.LEHB234
 8208 0652 60       		.uleb128 .L461-.LFB1509
 8209 0653 00       		.uleb128 0
 8210 0654 38       		.uleb128 .LEHB235-.LFB1509
 8211 0655 05       		.uleb128 .LEHE235-.LEHB235
 8212 0656 75       		.uleb128 .L462-.LFB1509
 8213 0657 00       		.uleb128 0
 8214 0658 44       		.uleb128 .LEHB236-.LFB1509
 8215 0659 05       		.uleb128 .LEHE236-.LEHB236
 8216 065a 00       		.uleb128 0
 8217 065b 00       		.uleb128 0
 8218 065c 8A01     		.uleb128 .LEHB237-.LFB1509
 8219 065e 05       		.uleb128 .LEHE237-.LEHB237
 8220 065f 00       		.uleb128 0
 8221 0660 00       		.uleb128 0
 8222              	.LLSDACSE1509:
 8223              		.section	.text._ZN8UnitTest18DeferredTestResultD2Ev,"axG",@progbits,_ZN8UnitTest18DeferredTestResu
 8225              		.weak	_ZN8UnitTest18DeferredTestResultD1Ev
 8226              		.set	_ZN8UnitTest18DeferredTestResultD1Ev,_ZN8UnitTest18DeferredTestResultD2Ev
 8227              		.section	.text._ZSt8_DestroyIN8UnitTest18DeferredTestResultEEvPT_,"axG",@progbits,_ZSt8_DestroyIN8
 8228              		.weak	_ZSt8_DestroyIN8UnitTest18DeferredTestResultEEvPT_
 8230              	_ZSt8_DestroyIN8UnitTest18DeferredTestResultEEvPT_:
 8231              	.LFB1507:
  92:/usr/include/c++/4.8/bits/stl_construct.h ****     { __pointer->~_Tp(); }
 8232              		.loc 9 92 0 is_stmt 1
 8233              		.cfi_startproc
 8234 0000 55       		pushq	%rbp
 8235              		.cfi_def_cfa_offset 16
 8236              		.cfi_offset 6, -16
 8237 0001 4889E5   		movq	%rsp, %rbp
 8238              		.cfi_def_cfa_register 6
 8239 0004 4883EC10 		subq	$16, %rsp
 8240 0008 48897DF8 		movq	%rdi, -8(%rbp)
  93:/usr/include/c++/4.8/bits/stl_construct.h **** 
 8241              		.loc 9 93 0
 8242 000c 488B45F8 		movq	-8(%rbp), %rax
 8243 0010 4889C7   		movq	%rax, %rdi
 8244 0013 E8000000 		call	_ZN8UnitTest18DeferredTestResultD1Ev
 8244      00
 8245 0018 C9       		leave
 8246              		.cfi_def_cfa 7, 8
 8247 0019 C3       		ret
 8248              		.cfi_endproc
 8249              	.LFE1507:
 8251              		.section	.text._ZNSt6vectorISt4pairIiSsESaIS1_EED2Ev,"axG",@progbits,_ZNSt6vectorISt4pairIiSsESaIS
 8252              		.align 2
 8253              		.weak	_ZNSt6vectorISt4pairIiSsESaIS1_EED2Ev
 8255              	_ZNSt6vectorISt4pairIiSsESaIS1_EED2Ev:
 8256              	.LFB1512:
 414:/usr/include/c++/4.8/bits/stl_vector.h ****       { std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
 8257              		.loc 6 414 0
 8258              		.cfi_startproc
 8259              		.cfi_personality 0x3,__gxx_personality_v0
 8260              		.cfi_lsda 0x3,.LLSDA1512
 8261 0000 55       		pushq	%rbp
 8262              		.cfi_def_cfa_offset 16
 8263              		.cfi_offset 6, -16
 8264 0001 4889E5   		movq	%rsp, %rbp
 8265              		.cfi_def_cfa_register 6
 8266 0004 53       		pushq	%rbx
 8267 0005 4883EC18 		subq	$24, %rsp
 8268              		.cfi_offset 3, -24
 8269 0009 48897DE8 		movq	%rdi, -24(%rbp)
 8270              	.LBB207:
 416:/usr/include/c++/4.8/bits/stl_vector.h **** 
 8271              		.loc 6 416 0
 8272 000d 488B45E8 		movq	-24(%rbp), %rax
 8273 0011 4889C7   		movq	%rax, %rdi
 8274 0014 E8000000 		call	_ZNSt12_Vector_baseISt4pairIiSsESaIS1_EE19_M_get_Tp_allocatorEv
 8274      00
 8275 0019 4889C2   		movq	%rax, %rdx
 8276 001c 488B45E8 		movq	-24(%rbp), %rax
 8277 0020 488B4808 		movq	8(%rax), %rcx
 8278 0024 488B45E8 		movq	-24(%rbp), %rax
 8279 0028 488B00   		movq	(%rax), %rax
 415:/usr/include/c++/4.8/bits/stl_vector.h **** 		      _M_get_Tp_allocator()); }
 8280              		.loc 6 415 0
 8281 002b 4889CE   		movq	%rcx, %rsi
 8282 002e 4889C7   		movq	%rax, %rdi
 8283              	.LEHB238:
 8284 0031 E8000000 		call	_ZSt8_DestroyIPSt4pairIiSsES1_EvT_S3_RSaIT0_E
 8284      00
 8285              	.LEHE238:
 416:/usr/include/c++/4.8/bits/stl_vector.h **** 
 8286              		.loc 6 416 0
 8287 0036 488B45E8 		movq	-24(%rbp), %rax
 8288 003a 4889C7   		movq	%rax, %rdi
 8289              	.LEHB239:
 8290 003d E8000000 		call	_ZNSt12_Vector_baseISt4pairIiSsESaIS1_EED2Ev
 8290      00
 8291              	.LEHE239:
 8292 0042 EB1A     		jmp	.L469
 8293              	.L468:
 8294 0044 4889C3   		movq	%rax, %rbx
 8295 0047 488B45E8 		movq	-24(%rbp), %rax
 8296 004b 4889C7   		movq	%rax, %rdi
 8297 004e E8000000 		call	_ZNSt12_Vector_baseISt4pairIiSsESaIS1_EED2Ev
 8297      00
 8298 0053 4889D8   		movq	%rbx, %rax
 8299 0056 4889C7   		movq	%rax, %rdi
 8300              	.LEHB240:
 8301 0059 E8000000 		call	_Unwind_Resume
 8301      00
 8302              	.LEHE240:
 8303              	.L469:
 8304              	.LBE207:
 8305 005e 4883C418 		addq	$24, %rsp
 8306 0062 5B       		popq	%rbx
 8307 0063 5D       		popq	%rbp
 8308              		.cfi_def_cfa 7, 8
 8309 0064 C3       		ret
 8310              		.cfi_endproc
 8311              	.LFE1512:
 8312              		.section	.gcc_except_table
 8313              	.LLSDA1512:
 8314 0661 FF       		.byte	0xff
 8315 0662 FF       		.byte	0xff
 8316 0663 01       		.byte	0x1
 8317 0664 0C       		.uleb128 .LLSDACSE1512-.LLSDACSB1512
 8318              	.LLSDACSB1512:
 8319 0665 31       		.uleb128 .LEHB238-.LFB1512
 8320 0666 05       		.uleb128 .LEHE238-.LEHB238
 8321 0667 44       		.uleb128 .L468-.LFB1512
 8322 0668 00       		.uleb128 0
 8323 0669 3D       		.uleb128 .LEHB239-.LFB1512
 8324 066a 05       		.uleb128 .LEHE239-.LEHB239
 8325 066b 00       		.uleb128 0
 8326 066c 00       		.uleb128 0
 8327 066d 59       		.uleb128 .LEHB240-.LFB1512
 8328 066e 05       		.uleb128 .LEHE240-.LEHB240
 8329 066f 00       		.uleb128 0
 8330 0670 00       		.uleb128 0
 8331              	.LLSDACSE1512:
 8332              		.section	.text._ZNSt6vectorISt4pairIiSsESaIS1_EED2Ev,"axG",@progbits,_ZNSt6vectorISt4pairIiSsESaIS
 8334              		.weak	_ZNSt6vectorISt4pairIiSsESaIS1_EED1Ev
 8335              		.set	_ZNSt6vectorISt4pairIiSsESaIS1_EED1Ev,_ZNSt6vectorISt4pairIiSsESaIS1_EED2Ev
 8336              		.section	.text._ZNSt12_Vector_baseISt4pairIiSsESaIS1_EE12_Vector_implD2Ev,"axG",@progbits,_ZNSt12_
 8337              		.align 2
 8338              		.weak	_ZNSt12_Vector_baseISt4pairIiSsESaIS1_EE12_Vector_implD2Ev
 8340              	_ZNSt12_Vector_baseISt4pairIiSsESaIS1_EE12_Vector_implD2Ev:
 8341              	.LFB1516:
  79:/usr/include/c++/4.8/bits/stl_vector.h ****       : public _Tp_alloc_type
 8342              		.loc 6 79 0
 8343              		.cfi_startproc
 8344 0000 55       		pushq	%rbp
 8345              		.cfi_def_cfa_offset 16
 8346              		.cfi_offset 6, -16
 8347 0001 4889E5   		movq	%rsp, %rbp
 8348              		.cfi_def_cfa_register 6
 8349 0004 4883EC10 		subq	$16, %rsp
 8350 0008 48897DF8 		movq	%rdi, -8(%rbp)
 8351              	.LBB208:
  79:/usr/include/c++/4.8/bits/stl_vector.h ****       : public _Tp_alloc_type
 8352              		.loc 6 79 0
 8353 000c 488B45F8 		movq	-8(%rbp), %rax
 8354 0010 4889C7   		movq	%rax, %rdi
 8355 0013 E8000000 		call	_ZNSaISt4pairIiSsEED2Ev
 8355      00
 8356              	.LBE208:
 8357 0018 C9       		leave
 8358              		.cfi_def_cfa 7, 8
 8359 0019 C3       		ret
 8360              		.cfi_endproc
 8361              	.LFE1516:
 8363              		.weak	_ZNSt12_Vector_baseISt4pairIiSsESaIS1_EE12_Vector_implD1Ev
 8364              		.set	_ZNSt12_Vector_baseISt4pairIiSsESaIS1_EE12_Vector_implD1Ev,_ZNSt12_Vector_baseISt4pairIiSsESa
 8365              		.section	.text._ZNSt12_Vector_baseISt4pairIiSsESaIS1_EED2Ev,"axG",@progbits,_ZNSt12_Vector_baseISt
 8366              		.align 2
 8367              		.weak	_ZNSt12_Vector_baseISt4pairIiSsESaIS1_EED2Ev
 8369              	_ZNSt12_Vector_baseISt4pairIiSsESaIS1_EED2Ev:
 8370              	.LFB1518:
 159:/usr/include/c++/4.8/bits/stl_vector.h ****       { _M_deallocate(this->_M_impl._M_start, this->_M_impl._M_end_of_storage
 8371              		.loc 6 159 0
 8372              		.cfi_startproc
 8373              		.cfi_personality 0x3,__gxx_personality_v0
 8374              		.cfi_lsda 0x3,.LLSDA1518
 8375 0000 55       		pushq	%rbp
 8376              		.cfi_def_cfa_offset 16
 8377              		.cfi_offset 6, -16
 8378 0001 4889E5   		movq	%rsp, %rbp
 8379              		.cfi_def_cfa_register 6
 8380 0004 53       		pushq	%rbx
 8381 0005 4883EC18 		subq	$24, %rsp
 8382              		.cfi_offset 3, -24
 8383 0009 48897DE8 		movq	%rdi, -24(%rbp)
 8384              	.LBB209:
 161:/usr/include/c++/4.8/bits/stl_vector.h **** 
 8385              		.loc 6 161 0
 8386 000d 488B45E8 		movq	-24(%rbp), %rax
 8387 0011 488B4010 		movq	16(%rax), %rax
 8388 0015 4889C2   		movq	%rax, %rdx
 8389 0018 488B45E8 		movq	-24(%rbp), %rax
 8390 001c 488B00   		movq	(%rax), %rax
 8391 001f 4829C2   		subq	%rax, %rdx
 8392 0022 4889D0   		movq	%rdx, %rax
 8393 0025 48C1F804 		sarq	$4, %rax
 8394 0029 4889C2   		movq	%rax, %rdx
 8395 002c 488B45E8 		movq	-24(%rbp), %rax
 8396 0030 488B08   		movq	(%rax), %rcx
 160:/usr/include/c++/4.8/bits/stl_vector.h **** 		      - this->_M_impl._M_start); }
 8397              		.loc 6 160 0
 8398 0033 488B45E8 		movq	-24(%rbp), %rax
 8399 0037 4889CE   		movq	%rcx, %rsi
 8400 003a 4889C7   		movq	%rax, %rdi
 8401              	.LEHB241:
 8402 003d E8000000 		call	_ZNSt12_Vector_baseISt4pairIiSsESaIS1_EE13_M_deallocateEPS1_m
 8402      00
 8403              	.LEHE241:
 161:/usr/include/c++/4.8/bits/stl_vector.h **** 
 8404              		.loc 6 161 0
 8405 0042 488B45E8 		movq	-24(%rbp), %rax
 8406 0046 4889C7   		movq	%rax, %rdi
 8407 0049 E8000000 		call	_ZNSt12_Vector_baseISt4pairIiSsESaIS1_EE12_Vector_implD1Ev
 8407      00
 8408 004e EB1A     		jmp	.L476
 8409              	.L475:
 8410 0050 4889C3   		movq	%rax, %rbx
 8411 0053 488B45E8 		movq	-24(%rbp), %rax
 8412 0057 4889C7   		movq	%rax, %rdi
 8413 005a E8000000 		call	_ZNSt12_Vector_baseISt4pairIiSsESaIS1_EE12_Vector_implD1Ev
 8413      00
 8414 005f 4889D8   		movq	%rbx, %rax
 8415 0062 4889C7   		movq	%rax, %rdi
 8416              	.LEHB242:
 8417 0065 E8000000 		call	_Unwind_Resume
 8417      00
 8418              	.LEHE242:
 8419              	.L476:
 8420              	.LBE209:
 8421 006a 4883C418 		addq	$24, %rsp
 8422 006e 5B       		popq	%rbx
 8423 006f 5D       		popq	%rbp
 8424              		.cfi_def_cfa 7, 8
 8425 0070 C3       		ret
 8426              		.cfi_endproc
 8427              	.LFE1518:
 8428              		.section	.gcc_except_table
 8429              	.LLSDA1518:
 8430 0671 FF       		.byte	0xff
 8431 0672 FF       		.byte	0xff
 8432 0673 01       		.byte	0x1
 8433 0674 08       		.uleb128 .LLSDACSE1518-.LLSDACSB1518
 8434              	.LLSDACSB1518:
 8435 0675 3D       		.uleb128 .LEHB241-.LFB1518
 8436 0676 05       		.uleb128 .LEHE241-.LEHB241
 8437 0677 50       		.uleb128 .L475-.LFB1518
 8438 0678 00       		.uleb128 0
 8439 0679 65       		.uleb128 .LEHB242-.LFB1518
 8440 067a 05       		.uleb128 .LEHE242-.LEHB242
 8441 067b 00       		.uleb128 0
 8442 067c 00       		.uleb128 0
 8443              	.LLSDACSE1518:
 8444              		.section	.text._ZNSt12_Vector_baseISt4pairIiSsESaIS1_EED2Ev,"axG",@progbits,_ZNSt12_Vector_baseISt
 8446              		.weak	_ZNSt12_Vector_baseISt4pairIiSsESaIS1_EED1Ev
 8447              		.set	_ZNSt12_Vector_baseISt4pairIiSsESaIS1_EED1Ev,_ZNSt12_Vector_baseISt4pairIiSsESaIS1_EED2Ev
 8448              		.section	.text._ZNSt12_Vector_baseISt4pairIiSsESaIS1_EE19_M_get_Tp_allocatorEv,"axG",@progbits,_ZN
 8449              		.align 2
 8450              		.weak	_ZNSt12_Vector_baseISt4pairIiSsESaIS1_EE19_M_get_Tp_allocatorEv
 8452              	_ZNSt12_Vector_baseISt4pairIiSsESaIS1_EE19_M_get_Tp_allocatorEv:
 8453              	.LFB1520:
 113:/usr/include/c++/4.8/bits/stl_vector.h ****       { return *static_cast<_Tp_alloc_type*>(&this->_M_impl); }
 8454              		.loc 6 113 0
 8455              		.cfi_startproc
 8456 0000 55       		pushq	%rbp
 8457              		.cfi_def_cfa_offset 16
 8458              		.cfi_offset 6, -16
 8459 0001 4889E5   		movq	%rsp, %rbp
 8460              		.cfi_def_cfa_register 6
 8461 0004 48897DF8 		movq	%rdi, -8(%rbp)
 114:/usr/include/c++/4.8/bits/stl_vector.h **** 
 8462              		.loc 6 114 0
 8463 0008 488B45F8 		movq	-8(%rbp), %rax
 8464 000c 5D       		popq	%rbp
 8465              		.cfi_def_cfa 7, 8
 8466 000d C3       		ret
 8467              		.cfi_endproc
 8468              	.LFE1520:
 8470              		.section	.text._ZSt8_DestroyIPSt4pairIiSsES1_EvT_S3_RSaIT0_E,"axG",@progbits,_ZSt8_DestroyIPSt4pai
 8471              		.weak	_ZSt8_DestroyIPSt4pairIiSsES1_EvT_S3_RSaIT0_E
 8473              	_ZSt8_DestroyIPSt4pairIiSsES1_EvT_S3_RSaIT0_E:
 8474              	.LFB1521:
 148:/usr/include/c++/4.8/bits/stl_construct.h **** 	     allocator<_Tp>&)
 8475              		.loc 9 148 0
 8476              		.cfi_startproc
 8477 0000 55       		pushq	%rbp
 8478              		.cfi_def_cfa_offset 16
 8479              		.cfi_offset 6, -16
 8480 0001 4889E5   		movq	%rsp, %rbp
 8481              		.cfi_def_cfa_register 6
 8482 0004 4883EC20 		subq	$32, %rsp
 8483 0008 48897DF8 		movq	%rdi, -8(%rbp)
 8484 000c 488975F0 		movq	%rsi, -16(%rbp)
 8485 0010 488955E8 		movq	%rdx, -24(%rbp)
 151:/usr/include/c++/4.8/bits/stl_construct.h ****     }
 8486              		.loc 9 151 0
 8487 0014 488B55F0 		movq	-16(%rbp), %rdx
 8488 0018 488B45F8 		movq	-8(%rbp), %rax
 8489 001c 4889D6   		movq	%rdx, %rsi
 8490 001f 4889C7   		movq	%rax, %rdi
 8491 0022 E8000000 		call	_ZSt8_DestroyIPSt4pairIiSsEEvT_S3_
 8491      00
 8492              		.loc 9 152 0
 8493 0027 C9       		leave
 8494              		.cfi_def_cfa 7, 8
 8495 0028 C3       		ret
 8496              		.cfi_endproc
 8497              	.LFE1521:
 8499              		.section	.text._ZNSaISt4pairIiSsEED2Ev,"axG",@progbits,_ZNSaISt4pairIiSsEED5Ev,comdat
 8500              		.align 2
 8501              		.weak	_ZNSaISt4pairIiSsEED2Ev
 8503              	_ZNSaISt4pairIiSsEED2Ev:
 8504              	.LFB1523:
 8505              		.loc 11 121 0
 8506              		.cfi_startproc
 8507 0000 55       		pushq	%rbp
 8508              		.cfi_def_cfa_offset 16
 8509              		.cfi_offset 6, -16
 8510 0001 4889E5   		movq	%rsp, %rbp
 8511              		.cfi_def_cfa_register 6
 8512 0004 4883EC10 		subq	$16, %rsp
 8513 0008 48897DF8 		movq	%rdi, -8(%rbp)
 8514              	.LBB210:
 8515              		.loc 11 121 0
 8516 000c 488B45F8 		movq	-8(%rbp), %rax
 8517 0010 4889C7   		movq	%rax, %rdi
 8518 0013 E8000000 		call	_ZN9__gnu_cxx13new_allocatorISt4pairIiSsEED2Ev
 8518      00
 8519              	.LBE210:
 8520 0018 C9       		leave
 8521              		.cfi_def_cfa 7, 8
 8522 0019 C3       		ret
 8523              		.cfi_endproc
 8524              	.LFE1523:
 8526              		.weak	_ZNSaISt4pairIiSsEED1Ev
 8527              		.set	_ZNSaISt4pairIiSsEED1Ev,_ZNSaISt4pairIiSsEED2Ev
 8528              		.section	.text._ZNSt12_Vector_baseISt4pairIiSsESaIS1_EE13_M_deallocateEPS1_m,"axG",@progbits,_ZNSt
 8529              		.align 2
 8530              		.weak	_ZNSt12_Vector_baseISt4pairIiSsESaIS1_EE13_M_deallocateEPS1_m
 8532              	_ZNSt12_Vector_baseISt4pairIiSsESaIS1_EE13_M_deallocateEPS1_m:
 8533              	.LFB1525:
 171:/usr/include/c++/4.8/bits/stl_vector.h ****       {
 8534              		.loc 6 171 0
 8535              		.cfi_startproc
 8536 0000 55       		pushq	%rbp
 8537              		.cfi_def_cfa_offset 16
 8538              		.cfi_offset 6, -16
 8539 0001 4889E5   		movq	%rsp, %rbp
 8540              		.cfi_def_cfa_register 6
 8541 0004 4883EC20 		subq	$32, %rsp
 8542 0008 48897DF8 		movq	%rdi, -8(%rbp)
 8543 000c 488975F0 		movq	%rsi, -16(%rbp)
 8544 0010 488955E8 		movq	%rdx, -24(%rbp)
 173:/usr/include/c++/4.8/bits/stl_vector.h **** 	  _M_impl.deallocate(__p, __n);
 8545              		.loc 6 173 0
 8546 0014 48837DF0 		cmpq	$0, -16(%rbp)
 8546      00
 8547 0019 7417     		je	.L482
 174:/usr/include/c++/4.8/bits/stl_vector.h ****       }
 8548              		.loc 6 174 0
 8549 001b 488B45F8 		movq	-8(%rbp), %rax
 8550 001f 488B55E8 		movq	-24(%rbp), %rdx
 8551 0023 488B4DF0 		movq	-16(%rbp), %rcx
 8552 0027 4889CE   		movq	%rcx, %rsi
 8553 002a 4889C7   		movq	%rax, %rdi
 8554 002d E8000000 		call	_ZN9__gnu_cxx13new_allocatorISt4pairIiSsEE10deallocateEPS2_m
 8554      00
 8555              	.L482:
 175:/usr/include/c++/4.8/bits/stl_vector.h **** 
 8556              		.loc 6 175 0
 8557 0032 C9       		leave
 8558              		.cfi_def_cfa 7, 8
 8559 0033 C3       		ret
 8560              		.cfi_endproc
 8561              	.LFE1525:
 8563              		.section	.text._ZSt8_DestroyIPSt4pairIiSsEEvT_S3_,"axG",@progbits,_ZSt8_DestroyIPSt4pairIiSsEEvT_S
 8564              		.weak	_ZSt8_DestroyIPSt4pairIiSsEEvT_S3_
 8566              	_ZSt8_DestroyIPSt4pairIiSsEEvT_S3_:
 8567              	.LFB1526:
 122:/usr/include/c++/4.8/bits/stl_construct.h ****     {
 8568              		.loc 9 122 0
 8569              		.cfi_startproc
 8570 0000 55       		pushq	%rbp
 8571              		.cfi_def_cfa_offset 16
 8572              		.cfi_offset 6, -16
 8573 0001 4889E5   		movq	%rsp, %rbp
 8574              		.cfi_def_cfa_register 6
 8575 0004 4883EC10 		subq	$16, %rsp
 8576 0008 48897DF8 		movq	%rdi, -8(%rbp)
 8577 000c 488975F0 		movq	%rsi, -16(%rbp)
 8578              	.LBB211:
 126:/usr/include/c++/4.8/bits/stl_construct.h **** 	__destroy(__first, __last);
 8579              		.loc 9 126 0
 8580 0010 488B55F0 		movq	-16(%rbp), %rdx
 8581 0014 488B45F8 		movq	-8(%rbp), %rax
 8582 0018 4889D6   		movq	%rdx, %rsi
 8583 001b 4889C7   		movq	%rax, %rdi
 8584 001e E8000000 		call	_ZNSt12_Destroy_auxILb0EE9__destroyIPSt4pairIiSsEEEvT_S5_
 8584      00
 8585              	.LBE211:
 128:/usr/include/c++/4.8/bits/stl_construct.h **** 
 8586              		.loc 9 128 0
 8587 0023 C9       		leave
 8588              		.cfi_def_cfa 7, 8
 8589 0024 C3       		ret
 8590              		.cfi_endproc
 8591              	.LFE1526:
 8593              		.section	.text._ZN9__gnu_cxx13new_allocatorISt4pairIiSsEED2Ev,"axG",@progbits,_ZN9__gnu_cxx13new_a
 8594              		.align 2
 8595              		.weak	_ZN9__gnu_cxx13new_allocatorISt4pairIiSsEED2Ev
 8597              	_ZN9__gnu_cxx13new_allocatorISt4pairIiSsEED2Ev:
 8598              	.LFB1528:
  86:/usr/include/c++/4.8/ext/new_allocator.h **** 
 8599              		.loc 12 86 0
 8600              		.cfi_startproc
 8601 0000 55       		pushq	%rbp
 8602              		.cfi_def_cfa_offset 16
 8603              		.cfi_offset 6, -16
 8604 0001 4889E5   		movq	%rsp, %rbp
 8605              		.cfi_def_cfa_register 6
 8606 0004 48897DF8 		movq	%rdi, -8(%rbp)
  86:/usr/include/c++/4.8/ext/new_allocator.h **** 
 8607              		.loc 12 86 0
 8608 0008 5D       		popq	%rbp
 8609              		.cfi_def_cfa 7, 8
 8610 0009 C3       		ret
 8611              		.cfi_endproc
 8612              	.LFE1528:
 8614              		.weak	_ZN9__gnu_cxx13new_allocatorISt4pairIiSsEED1Ev
 8615              		.set	_ZN9__gnu_cxx13new_allocatorISt4pairIiSsEED1Ev,_ZN9__gnu_cxx13new_allocatorISt4pairIiSsEED2Ev
 8616              		.section	.text._ZN9__gnu_cxx13new_allocatorISt4pairIiSsEE10deallocateEPS2_m,"axG",@progbits,_ZN9__
 8617              		.align 2
 8618              		.weak	_ZN9__gnu_cxx13new_allocatorISt4pairIiSsEE10deallocateEPS2_m
 8620              	_ZN9__gnu_cxx13new_allocatorISt4pairIiSsEE10deallocateEPS2_m:
 8621              	.LFB1530:
 109:/usr/include/c++/4.8/ext/new_allocator.h ****       { ::operator delete(__p); }
 8622              		.loc 12 109 0
 8623              		.cfi_startproc
 8624 0000 55       		pushq	%rbp
 8625              		.cfi_def_cfa_offset 16
 8626              		.cfi_offset 6, -16
 8627 0001 4889E5   		movq	%rsp, %rbp
 8628              		.cfi_def_cfa_register 6
 8629 0004 4883EC20 		subq	$32, %rsp
 8630 0008 48897DF8 		movq	%rdi, -8(%rbp)
 8631 000c 488975F0 		movq	%rsi, -16(%rbp)
 8632 0010 488955E8 		movq	%rdx, -24(%rbp)
 8633              		.loc 12 110 0
 8634 0014 488B45F0 		movq	-16(%rbp), %rax
 8635 0018 4889C7   		movq	%rax, %rdi
 8636 001b E8000000 		call	_ZdlPv
 8636      00
 8637 0020 C9       		leave
 8638              		.cfi_def_cfa 7, 8
 8639 0021 C3       		ret
 8640              		.cfi_endproc
 8641              	.LFE1530:
 8643              		.section	.text._ZNSt12_Destroy_auxILb0EE9__destroyIPSt4pairIiSsEEEvT_S5_,"axG",@progbits,_ZNSt12_D
 8644              		.weak	_ZNSt12_Destroy_auxILb0EE9__destroyIPSt4pairIiSsEEEvT_S5_
 8646              	_ZNSt12_Destroy_auxILb0EE9__destroyIPSt4pairIiSsEEEvT_S5_:
 8647              	.LFB1531:
 100:/usr/include/c++/4.8/bits/stl_construct.h **** 	{
 8648              		.loc 9 100 0
 8649              		.cfi_startproc
 8650 0000 55       		pushq	%rbp
 8651              		.cfi_def_cfa_offset 16
 8652              		.cfi_offset 6, -16
 8653 0001 4889E5   		movq	%rsp, %rbp
 8654              		.cfi_def_cfa_register 6
 8655 0004 4883EC10 		subq	$16, %rsp
 8656 0008 48897DF8 		movq	%rdi, -8(%rbp)
 8657 000c 488975F0 		movq	%rsi, -16(%rbp)
 102:/usr/include/c++/4.8/bits/stl_construct.h **** 	    std::_Destroy(std::__addressof(*__first));
 8658              		.loc 9 102 0
 8659 0010 EB19     		jmp	.L489
 8660              	.L490:
 103:/usr/include/c++/4.8/bits/stl_construct.h **** 	}
 8661              		.loc 9 103 0 discriminator 2
 8662 0012 488B45F8 		movq	-8(%rbp), %rax
 8663 0016 4889C7   		movq	%rax, %rdi
 8664 0019 E8000000 		call	_ZSt11__addressofISt4pairIiSsEEPT_RS2_
 8664      00
 8665 001e 4889C7   		movq	%rax, %rdi
 8666 0021 E8000000 		call	_ZSt8_DestroyISt4pairIiSsEEvPT_
 8666      00
 102:/usr/include/c++/4.8/bits/stl_construct.h **** 	    std::_Destroy(std::__addressof(*__first));
 8667              		.loc 9 102 0 discriminator 2
 8668 0026 488345F8 		addq	$16, -8(%rbp)
 8668      10
 8669              	.L489:
 102:/usr/include/c++/4.8/bits/stl_construct.h **** 	    std::_Destroy(std::__addressof(*__first));
 8670              		.loc 9 102 0 is_stmt 0 discriminator 1
 8671 002b 488B45F8 		movq	-8(%rbp), %rax
 8672 002f 483B45F0 		cmpq	-16(%rbp), %rax
 8673 0033 75DD     		jne	.L490
 104:/usr/include/c++/4.8/bits/stl_construct.h ****     };
 8674              		.loc 9 104 0 is_stmt 1
 8675 0035 C9       		leave
 8676              		.cfi_def_cfa 7, 8
 8677 0036 C3       		ret
 8678              		.cfi_endproc
 8679              	.LFE1531:
 8681              		.section	.text._ZSt11__addressofISt4pairIiSsEEPT_RS2_,"axG",@progbits,_ZSt11__addressofISt4pairIiS
 8682              		.weak	_ZSt11__addressofISt4pairIiSsEEPT_RS2_
 8684              	_ZSt11__addressofISt4pairIiSsEEPT_RS2_:
 8685              	.LFB1532:
  47:/usr/include/c++/4.8/bits/move.h ****     {
 8686              		.loc 13 47 0
 8687              		.cfi_startproc
 8688 0000 55       		pushq	%rbp
 8689              		.cfi_def_cfa_offset 16
 8690              		.cfi_offset 6, -16
 8691 0001 4889E5   		movq	%rsp, %rbp
 8692              		.cfi_def_cfa_register 6
 8693 0004 48897DF8 		movq	%rdi, -8(%rbp)
  50:/usr/include/c++/4.8/bits/move.h ****     }
 8694              		.loc 13 50 0
 8695 0008 488B45F8 		movq	-8(%rbp), %rax
 8696              		.loc 13 51 0
 8697 000c 5D       		popq	%rbp
 8698              		.cfi_def_cfa 7, 8
 8699 000d C3       		ret
 8700              		.cfi_endproc
 8701              	.LFE1532:
 8703              		.section	.text._ZNSt4pairIiSsED2Ev,"axG",@progbits,_ZNSt4pairIiSsED5Ev,comdat
 8704              		.align 2
 8705              		.weak	_ZNSt4pairIiSsED2Ev
 8707              	_ZNSt4pairIiSsED2Ev:
 8708              	.LFB1535:
 8709              		.file 15 "/usr/include/c++/4.8/bits/stl_pair.h"
   1:/usr/include/c++/4.8/bits/stl_pair.h **** // Pair implementation -*- C++ -*-
   2:/usr/include/c++/4.8/bits/stl_pair.h **** 
   3:/usr/include/c++/4.8/bits/stl_pair.h **** // Copyright (C) 2001-2013 Free Software Foundation, Inc.
   4:/usr/include/c++/4.8/bits/stl_pair.h **** //
   5:/usr/include/c++/4.8/bits/stl_pair.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/c++/4.8/bits/stl_pair.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/4.8/bits/stl_pair.h **** // terms of the GNU General Public License as published by the
   8:/usr/include/c++/4.8/bits/stl_pair.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/4.8/bits/stl_pair.h **** // any later version.
  10:/usr/include/c++/4.8/bits/stl_pair.h **** 
  11:/usr/include/c++/4.8/bits/stl_pair.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/c++/4.8/bits/stl_pair.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/c++/4.8/bits/stl_pair.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/4.8/bits/stl_pair.h **** // GNU General Public License for more details.
  15:/usr/include/c++/4.8/bits/stl_pair.h **** 
  16:/usr/include/c++/4.8/bits/stl_pair.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/c++/4.8/bits/stl_pair.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/4.8/bits/stl_pair.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/4.8/bits/stl_pair.h **** 
  20:/usr/include/c++/4.8/bits/stl_pair.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/c++/4.8/bits/stl_pair.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/c++/4.8/bits/stl_pair.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/4.8/bits/stl_pair.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/c++/4.8/bits/stl_pair.h **** 
  25:/usr/include/c++/4.8/bits/stl_pair.h **** /*
  26:/usr/include/c++/4.8/bits/stl_pair.h ****  *
  27:/usr/include/c++/4.8/bits/stl_pair.h ****  * Copyright (c) 1994
  28:/usr/include/c++/4.8/bits/stl_pair.h ****  * Hewlett-Packard Company
  29:/usr/include/c++/4.8/bits/stl_pair.h ****  *
  30:/usr/include/c++/4.8/bits/stl_pair.h ****  * Permission to use, copy, modify, distribute and sell this software
  31:/usr/include/c++/4.8/bits/stl_pair.h ****  * and its documentation for any purpose is hereby granted without fee,
  32:/usr/include/c++/4.8/bits/stl_pair.h ****  * provided that the above copyright notice appear in all copies and
  33:/usr/include/c++/4.8/bits/stl_pair.h ****  * that both that copyright notice and this permission notice appear
  34:/usr/include/c++/4.8/bits/stl_pair.h ****  * in supporting documentation.  Hewlett-Packard Company makes no
  35:/usr/include/c++/4.8/bits/stl_pair.h ****  * representations about the suitability of this software for any
  36:/usr/include/c++/4.8/bits/stl_pair.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  37:/usr/include/c++/4.8/bits/stl_pair.h ****  *
  38:/usr/include/c++/4.8/bits/stl_pair.h ****  *
  39:/usr/include/c++/4.8/bits/stl_pair.h ****  * Copyright (c) 1996,1997
  40:/usr/include/c++/4.8/bits/stl_pair.h ****  * Silicon Graphics Computer Systems, Inc.
  41:/usr/include/c++/4.8/bits/stl_pair.h ****  *
  42:/usr/include/c++/4.8/bits/stl_pair.h ****  * Permission to use, copy, modify, distribute and sell this software
  43:/usr/include/c++/4.8/bits/stl_pair.h ****  * and its documentation for any purpose is hereby granted without fee,
  44:/usr/include/c++/4.8/bits/stl_pair.h ****  * provided that the above copyright notice appear in all copies and
  45:/usr/include/c++/4.8/bits/stl_pair.h ****  * that both that copyright notice and this permission notice appear
  46:/usr/include/c++/4.8/bits/stl_pair.h ****  * in supporting documentation.  Silicon Graphics makes no
  47:/usr/include/c++/4.8/bits/stl_pair.h ****  * representations about the suitability of this software for any
  48:/usr/include/c++/4.8/bits/stl_pair.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  49:/usr/include/c++/4.8/bits/stl_pair.h ****  */
  50:/usr/include/c++/4.8/bits/stl_pair.h **** 
  51:/usr/include/c++/4.8/bits/stl_pair.h **** /** @file bits/stl_pair.h
  52:/usr/include/c++/4.8/bits/stl_pair.h ****  *  This is an internal header file, included by other library headers.
  53:/usr/include/c++/4.8/bits/stl_pair.h ****  *  Do not attempt to use it directly. @headername{utility}
  54:/usr/include/c++/4.8/bits/stl_pair.h ****  */
  55:/usr/include/c++/4.8/bits/stl_pair.h **** 
  56:/usr/include/c++/4.8/bits/stl_pair.h **** #ifndef _STL_PAIR_H
  57:/usr/include/c++/4.8/bits/stl_pair.h **** #define _STL_PAIR_H 1
  58:/usr/include/c++/4.8/bits/stl_pair.h **** 
  59:/usr/include/c++/4.8/bits/stl_pair.h **** #include <bits/move.h> // for std::move / std::forward, and std::swap
  60:/usr/include/c++/4.8/bits/stl_pair.h **** 
  61:/usr/include/c++/4.8/bits/stl_pair.h **** #if __cplusplus >= 201103L
  62:/usr/include/c++/4.8/bits/stl_pair.h **** #include <type_traits> // for std::__decay_and_strip too
  63:/usr/include/c++/4.8/bits/stl_pair.h **** #endif
  64:/usr/include/c++/4.8/bits/stl_pair.h **** 
  65:/usr/include/c++/4.8/bits/stl_pair.h **** namespace std _GLIBCXX_VISIBILITY(default)
  66:/usr/include/c++/4.8/bits/stl_pair.h **** {
  67:/usr/include/c++/4.8/bits/stl_pair.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  68:/usr/include/c++/4.8/bits/stl_pair.h **** 
  69:/usr/include/c++/4.8/bits/stl_pair.h ****   /**
  70:/usr/include/c++/4.8/bits/stl_pair.h ****    *  @addtogroup utilities
  71:/usr/include/c++/4.8/bits/stl_pair.h ****    *  @{
  72:/usr/include/c++/4.8/bits/stl_pair.h ****    */
  73:/usr/include/c++/4.8/bits/stl_pair.h **** 
  74:/usr/include/c++/4.8/bits/stl_pair.h **** #if __cplusplus >= 201103L
  75:/usr/include/c++/4.8/bits/stl_pair.h ****   /// piecewise_construct_t
  76:/usr/include/c++/4.8/bits/stl_pair.h ****   struct piecewise_construct_t { };
  77:/usr/include/c++/4.8/bits/stl_pair.h **** 
  78:/usr/include/c++/4.8/bits/stl_pair.h ****   /// piecewise_construct
  79:/usr/include/c++/4.8/bits/stl_pair.h ****   constexpr piecewise_construct_t piecewise_construct = piecewise_construct_t();
  80:/usr/include/c++/4.8/bits/stl_pair.h **** 
  81:/usr/include/c++/4.8/bits/stl_pair.h ****   // Forward declarations.
  82:/usr/include/c++/4.8/bits/stl_pair.h ****   template<typename...>
  83:/usr/include/c++/4.8/bits/stl_pair.h ****     class tuple;
  84:/usr/include/c++/4.8/bits/stl_pair.h **** 
  85:/usr/include/c++/4.8/bits/stl_pair.h ****   template<std::size_t...>
  86:/usr/include/c++/4.8/bits/stl_pair.h ****     struct _Index_tuple;
  87:/usr/include/c++/4.8/bits/stl_pair.h **** #endif
  88:/usr/include/c++/4.8/bits/stl_pair.h **** 
  89:/usr/include/c++/4.8/bits/stl_pair.h ****  /**
  90:/usr/include/c++/4.8/bits/stl_pair.h ****    *  @brief Struct holding two objects of arbitrary type.
  91:/usr/include/c++/4.8/bits/stl_pair.h ****    *
  92:/usr/include/c++/4.8/bits/stl_pair.h ****    *  @tparam _T1  Type of first object.
  93:/usr/include/c++/4.8/bits/stl_pair.h ****    *  @tparam _T2  Type of second object.
  94:/usr/include/c++/4.8/bits/stl_pair.h ****    */
  95:/usr/include/c++/4.8/bits/stl_pair.h ****   template<class _T1, class _T2>
  96:/usr/include/c++/4.8/bits/stl_pair.h ****     struct pair
 8710              		.loc 15 96 0
 8711              		.cfi_startproc
 8712 0000 55       		pushq	%rbp
 8713              		.cfi_def_cfa_offset 16
 8714              		.cfi_offset 6, -16
 8715 0001 4889E5   		movq	%rsp, %rbp
 8716              		.cfi_def_cfa_register 6
 8717 0004 4883EC10 		subq	$16, %rsp
 8718 0008 48897DF8 		movq	%rdi, -8(%rbp)
 8719              	.LBB212:
 8720              		.loc 15 96 0
 8721 000c 488B45F8 		movq	-8(%rbp), %rax
 8722 0010 4883C008 		addq	$8, %rax
 8723 0014 4889C7   		movq	%rax, %rdi
 8724 0017 E8000000 		call	_ZNSsD1Ev
 8724      00
 8725              	.LBE212:
 8726 001c C9       		leave
 8727              		.cfi_def_cfa 7, 8
 8728 001d C3       		ret
 8729              		.cfi_endproc
 8730              	.LFE1535:
 8732              		.weak	_ZNSt4pairIiSsED1Ev
 8733              		.set	_ZNSt4pairIiSsED1Ev,_ZNSt4pairIiSsED2Ev
 8734              		.section	.text._ZSt8_DestroyISt4pairIiSsEEvPT_,"axG",@progbits,_ZSt8_DestroyISt4pairIiSsEEvPT_,com
 8735              		.weak	_ZSt8_DestroyISt4pairIiSsEEvPT_
 8737              	_ZSt8_DestroyISt4pairIiSsEEvPT_:
 8738              	.LFB1533:
  92:/usr/include/c++/4.8/bits/stl_construct.h ****     { __pointer->~_Tp(); }
 8739              		.loc 9 92 0
 8740              		.cfi_startproc
 8741 0000 55       		pushq	%rbp
 8742              		.cfi_def_cfa_offset 16
 8743              		.cfi_offset 6, -16
 8744 0001 4889E5   		movq	%rsp, %rbp
 8745              		.cfi_def_cfa_register 6
 8746 0004 4883EC10 		subq	$16, %rsp
 8747 0008 48897DF8 		movq	%rdi, -8(%rbp)
  93:/usr/include/c++/4.8/bits/stl_construct.h **** 
 8748              		.loc 9 93 0
 8749 000c 488B45F8 		movq	-8(%rbp), %rax
 8750 0010 4889C7   		movq	%rax, %rdi
 8751 0013 E8000000 		call	_ZNSt4pairIiSsED1Ev
 8751      00
 8752 0018 C9       		leave
 8753              		.cfi_def_cfa 7, 8
 8754 0019 C3       		ret
 8755              		.cfi_endproc
 8756              	.LFE1533:
 8758              		.section	.rodata
 8759 058c 00000000 		.align 32
 8759      00000000 
 8759      00000000 
 8759      00000000 
 8759      00000000 
 8762              	_ZTVN8UnitTest12_GLOBAL__N_176TestDeferredTestReporterFixtureDeferredTestReporterTakesCopyOfFailure
 8763 05a0 00000000 		.quad	0
 8763      00000000 
 8764 05a8 00000000 		.quad	_ZTIN8UnitTest12_GLOBAL__N_176TestDeferredTestReporterFixtureDeferredTestReporterTakesCopyOf
 8764      00000000 
 8765 05b0 00000000 		.quad	_ZN8UnitTest12_GLOBAL__N_176TestDeferredTestReporterFixtureDeferredTestReporterTakesCopyOfFa
 8765      00000000 
 8766 05b8 00000000 		.quad	_ZN8UnitTest12_GLOBAL__N_176TestDeferredTestReporterFixtureDeferredTestReporterTakesCopyOfFa
 8766      00000000 
 8767 05c0 00000000 		.quad	_ZNK8UnitTest12_GLOBAL__N_176TestDeferredTestReporterFixtureDeferredTestReporterTakesCopyOfF
 8767      00000000 
 8768              		.text
 8769              		.align 2
 8771              	_ZN8UnitTest12_GLOBAL__N_176TestDeferredTestReporterFixtureDeferredTestReporterTakesCopyOfFailureMe
 8772              	.LFB1538:
  98:TestDeferredTestReporter.cpp **** {
 8773              		.loc 3 98 0
 8774              		.cfi_startproc
 8775 302e 55       		pushq	%rbp
 8776              		.cfi_def_cfa_offset 16
 8777              		.cfi_offset 6, -16
 8778 302f 4889E5   		movq	%rsp, %rbp
 8779              		.cfi_def_cfa_register 6
 8780 3032 4883EC10 		subq	$16, %rsp
 8781 3036 48897DF8 		movq	%rdi, -8(%rbp)
 8782              	.LBB213:
  98:TestDeferredTestReporter.cpp **** {
 8783              		.loc 3 98 0
 8784 303a 488B45F8 		movq	-8(%rbp), %rax
 8785 303e 48C70000 		movq	$_ZTVN8UnitTest12_GLOBAL__N_176TestDeferredTestReporterFixtureDeferredTestReporterTakesCopyOf
 8785      000000
 8786 3045 488B45F8 		movq	-8(%rbp), %rax
 8787 3049 4889C7   		movq	%rax, %rdi
 8788 304c E8000000 		call	_ZN8UnitTest4TestD2Ev
 8788      00
 8789              	.LBE213:
 8790 3051 B8000000 		movl	$0, %eax
 8790      00
 8791 3056 85C0     		testl	%eax, %eax
 8792 3058 740C     		je	.L496
  98:TestDeferredTestReporter.cpp **** {
 8793              		.loc 3 98 0 is_stmt 0 discriminator 1
 8794 305a 488B45F8 		movq	-8(%rbp), %rax
 8795 305e 4889C7   		movq	%rax, %rdi
 8796 3061 E8000000 		call	_ZdlPv
 8796      00
 8797              	.L496:
  98:TestDeferredTestReporter.cpp **** {
 8798              		.loc 3 98 0
 8799 3066 C9       		leave
 8800              		.cfi_def_cfa 7, 8
 8801 3067 C3       		ret
 8802              		.cfi_endproc
 8803              	.LFE1538:
 8805              		.set	_ZN8UnitTest12_GLOBAL__N_176TestDeferredTestReporterFixtureDeferredTestReporterTakesCopyOfFai
 8806              		.align 2
 8808              	_ZN8UnitTest12_GLOBAL__N_176TestDeferredTestReporterFixtureDeferredTestReporterTakesCopyOfFailureMe
 8809              	.LFB1540:
  98:TestDeferredTestReporter.cpp **** {
 8810              		.loc 3 98 0 is_stmt 1
 8811              		.cfi_startproc
 8812 3068 55       		pushq	%rbp
 8813              		.cfi_def_cfa_offset 16
 8814              		.cfi_offset 6, -16
 8815 3069 4889E5   		movq	%rsp, %rbp
 8816              		.cfi_def_cfa_register 6
 8817 306c 4883EC10 		subq	$16, %rsp
 8818 3070 48897DF8 		movq	%rdi, -8(%rbp)
  98:TestDeferredTestReporter.cpp **** {
 8819              		.loc 3 98 0
 8820 3074 488B45F8 		movq	-8(%rbp), %rax
 8821 3078 4889C7   		movq	%rax, %rdi
 8822 307b E8AEFFFF 		call	_ZN8UnitTest12_GLOBAL__N_176TestDeferredTestReporterFixtureDeferredTestReporterTakesCopyOfFai
 8822      FF
 8823 3080 488B45F8 		movq	-8(%rbp), %rax
 8824 3084 4889C7   		movq	%rax, %rdi
 8825 3087 E8000000 		call	_ZdlPv
 8825      00
 8826 308c C9       		leave
 8827              		.cfi_def_cfa 7, 8
 8828 308d C3       		ret
 8829              		.cfi_endproc
 8830              	.LFE1540:
 8832              		.section	.rodata
 8833 05c8 00000000 		.align 32
 8833      00000000 
 8833      00000000 
 8833      00000000 
 8833      00000000 
 8836              	_ZTVN8UnitTest12_GLOBAL__N_182TestDeferredTestReporterFixtureReportFailureSavesFailureDetailsForMul
 8837 05e0 00000000 		.quad	0
 8837      00000000 
 8838 05e8 00000000 		.quad	_ZTIN8UnitTest12_GLOBAL__N_182TestDeferredTestReporterFixtureReportFailureSavesFailureDetail
 8838      00000000 
 8839 05f0 00000000 		.quad	_ZN8UnitTest12_GLOBAL__N_182TestDeferredTestReporterFixtureReportFailureSavesFailureDetailsF
 8839      00000000 
 8840 05f8 00000000 		.quad	_ZN8UnitTest12_GLOBAL__N_182TestDeferredTestReporterFixtureReportFailureSavesFailureDetailsF
 8840      00000000 
 8841 0600 00000000 		.quad	_ZNK8UnitTest12_GLOBAL__N_182TestDeferredTestReporterFixtureReportFailureSavesFailureDetails
 8841      00000000 
 8842              		.text
 8843              		.align 2
 8845              	_ZN8UnitTest12_GLOBAL__N_182TestDeferredTestReporterFixtureReportFailureSavesFailureDetailsForMulti
 8846              	.LFB1542:
  83:TestDeferredTestReporter.cpp **** {
 8847              		.loc 3 83 0
 8848              		.cfi_startproc
 8849 308e 55       		pushq	%rbp
 8850              		.cfi_def_cfa_offset 16
 8851              		.cfi_offset 6, -16
 8852 308f 4889E5   		movq	%rsp, %rbp
 8853              		.cfi_def_cfa_register 6
 8854 3092 4883EC10 		subq	$16, %rsp
 8855 3096 48897DF8 		movq	%rdi, -8(%rbp)
 8856              	.LBB214:
  83:TestDeferredTestReporter.cpp **** {
 8857              		.loc 3 83 0
 8858 309a 488B45F8 		movq	-8(%rbp), %rax
 8859 309e 48C70000 		movq	$_ZTVN8UnitTest12_GLOBAL__N_182TestDeferredTestReporterFixtureReportFailureSavesFailureDetail
 8859      000000
 8860 30a5 488B45F8 		movq	-8(%rbp), %rax
 8861 30a9 4889C7   		movq	%rax, %rdi
 8862 30ac E8000000 		call	_ZN8UnitTest4TestD2Ev
 8862      00
 8863              	.LBE214:
 8864 30b1 B8000000 		movl	$0, %eax
 8864      00
 8865 30b6 85C0     		testl	%eax, %eax
 8866 30b8 740C     		je	.L501
  83:TestDeferredTestReporter.cpp **** {
 8867              		.loc 3 83 0 is_stmt 0 discriminator 1
 8868 30ba 488B45F8 		movq	-8(%rbp), %rax
 8869 30be 4889C7   		movq	%rax, %rdi
 8870 30c1 E8000000 		call	_ZdlPv
 8870      00
 8871              	.L501:
  83:TestDeferredTestReporter.cpp **** {
 8872              		.loc 3 83 0
 8873 30c6 C9       		leave
 8874              		.cfi_def_cfa 7, 8
 8875 30c7 C3       		ret
 8876              		.cfi_endproc
 8877              	.LFE1542:
 8879              		.set	_ZN8UnitTest12_GLOBAL__N_182TestDeferredTestReporterFixtureReportFailureSavesFailureDetailsFo
 8880              		.align 2
 8882              	_ZN8UnitTest12_GLOBAL__N_182TestDeferredTestReporterFixtureReportFailureSavesFailureDetailsForMulti
 8883              	.LFB1544:
  83:TestDeferredTestReporter.cpp **** {
 8884              		.loc 3 83 0 is_stmt 1
 8885              		.cfi_startproc
 8886 30c8 55       		pushq	%rbp
 8887              		.cfi_def_cfa_offset 16
 8888              		.cfi_offset 6, -16
 8889 30c9 4889E5   		movq	%rsp, %rbp
 8890              		.cfi_def_cfa_register 6
 8891 30cc 4883EC10 		subq	$16, %rsp
 8892 30d0 48897DF8 		movq	%rdi, -8(%rbp)
  83:TestDeferredTestReporter.cpp **** {
 8893              		.loc 3 83 0
 8894 30d4 488B45F8 		movq	-8(%rbp), %rax
 8895 30d8 4889C7   		movq	%rax, %rdi
 8896 30db E8AEFFFF 		call	_ZN8UnitTest12_GLOBAL__N_182TestDeferredTestReporterFixtureReportFailureSavesFailureDetailsFo
 8896      FF
 8897 30e0 488B45F8 		movq	-8(%rbp), %rax
 8898 30e4 4889C7   		movq	%rax, %rdi
 8899 30e7 E8000000 		call	_ZdlPv
 8899      00
 8900 30ec C9       		leave
 8901              		.cfi_def_cfa 7, 8
 8902 30ed C3       		ret
 8903              		.cfi_endproc
 8904              	.LFE1544:
 8906              		.section	.rodata
 8907 0608 00000000 		.align 32
 8907      00000000 
 8907      00000000 
 8907      00000000 
 8907      00000000 
 8910              	_ZTVN8UnitTest12_GLOBAL__N_163TestDeferredTestReporterFixtureReportFailureSavesFailureDetailsE:
 8911 0620 00000000 		.quad	0
 8911      00000000 
 8912 0628 00000000 		.quad	_ZTIN8UnitTest12_GLOBAL__N_163TestDeferredTestReporterFixtureReportFailureSavesFailureDetail
 8912      00000000 
 8913 0630 00000000 		.quad	_ZN8UnitTest12_GLOBAL__N_163TestDeferredTestReporterFixtureReportFailureSavesFailureDetailsD
 8913      00000000 
 8914 0638 00000000 		.quad	_ZN8UnitTest12_GLOBAL__N_163TestDeferredTestReporterFixtureReportFailureSavesFailureDetailsD
 8914      00000000 
 8915 0640 00000000 		.quad	_ZNK8UnitTest12_GLOBAL__N_163TestDeferredTestReporterFixtureReportFailureSavesFailureDetails
 8915      00000000 
 8916              		.text
 8917              		.align 2
 8919              	_ZN8UnitTest12_GLOBAL__N_163TestDeferredTestReporterFixtureReportFailureSavesFailureDetailsD2Ev:
 8920              	.LFB1546:
  71:TestDeferredTestReporter.cpp **** {
 8921              		.loc 3 71 0
 8922              		.cfi_startproc
 8923 30ee 55       		pushq	%rbp
 8924              		.cfi_def_cfa_offset 16
 8925              		.cfi_offset 6, -16
 8926 30ef 4889E5   		movq	%rsp, %rbp
 8927              		.cfi_def_cfa_register 6
 8928 30f2 4883EC10 		subq	$16, %rsp
 8929 30f6 48897DF8 		movq	%rdi, -8(%rbp)
 8930              	.LBB215:
  71:TestDeferredTestReporter.cpp **** {
 8931              		.loc 3 71 0
 8932 30fa 488B45F8 		movq	-8(%rbp), %rax
 8933 30fe 48C70000 		movq	$_ZTVN8UnitTest12_GLOBAL__N_163TestDeferredTestReporterFixtureReportFailureSavesFailureDetail
 8933      000000
 8934 3105 488B45F8 		movq	-8(%rbp), %rax
 8935 3109 4889C7   		movq	%rax, %rdi
 8936 310c E8000000 		call	_ZN8UnitTest4TestD2Ev
 8936      00
 8937              	.LBE215:
 8938 3111 B8000000 		movl	$0, %eax
 8938      00
 8939 3116 85C0     		testl	%eax, %eax
 8940 3118 740C     		je	.L506
  71:TestDeferredTestReporter.cpp **** {
 8941              		.loc 3 71 0 is_stmt 0 discriminator 1
 8942 311a 488B45F8 		movq	-8(%rbp), %rax
 8943 311e 4889C7   		movq	%rax, %rdi
 8944 3121 E8000000 		call	_ZdlPv
 8944      00
 8945              	.L506:
  71:TestDeferredTestReporter.cpp **** {
 8946              		.loc 3 71 0
 8947 3126 C9       		leave
 8948              		.cfi_def_cfa 7, 8
 8949 3127 C3       		ret
 8950              		.cfi_endproc
 8951              	.LFE1546:
 8953              		.set	_ZN8UnitTest12_GLOBAL__N_163TestDeferredTestReporterFixtureReportFailureSavesFailureDetailsD1
 8954              		.align 2
 8956              	_ZN8UnitTest12_GLOBAL__N_163TestDeferredTestReporterFixtureReportFailureSavesFailureDetailsD0Ev:
 8957              	.LFB1548:
  71:TestDeferredTestReporter.cpp **** {
 8958              		.loc 3 71 0 is_stmt 1
 8959              		.cfi_startproc
 8960 3128 55       		pushq	%rbp
 8961              		.cfi_def_cfa_offset 16
 8962              		.cfi_offset 6, -16
 8963 3129 4889E5   		movq	%rsp, %rbp
 8964              		.cfi_def_cfa_register 6
 8965 312c 4883EC10 		subq	$16, %rsp
 8966 3130 48897DF8 		movq	%rdi, -8(%rbp)
  71:TestDeferredTestReporter.cpp **** {
 8967              		.loc 3 71 0
 8968 3134 488B45F8 		movq	-8(%rbp), %rax
 8969 3138 4889C7   		movq	%rax, %rdi
 8970 313b E8AEFFFF 		call	_ZN8UnitTest12_GLOBAL__N_163TestDeferredTestReporterFixtureReportFailureSavesFailureDetailsD1
 8970      FF
 8971 3140 488B45F8 		movq	-8(%rbp), %rax
 8972 3144 4889C7   		movq	%rax, %rdi
 8973 3147 E8000000 		call	_ZdlPv
 8973      00
 8974 314c C9       		leave
 8975              		.cfi_def_cfa 7, 8
 8976 314d C3       		ret
 8977              		.cfi_endproc
 8978              	.LFE1548:
 8980              		.section	.rodata
 8981 0648 00000000 		.align 32
 8981      00000000 
 8981      00000000 
 8981      00000000 
 8981      00000000 
 8984              	_ZTVN8UnitTest12_GLOBAL__N_160TestDeferredTestReporterFixtureReportTestEndCapturesTestTimeE:
 8985 0660 00000000 		.quad	0
 8985      00000000 
 8986 0668 00000000 		.quad	_ZTIN8UnitTest12_GLOBAL__N_160TestDeferredTestReporterFixtureReportTestEndCapturesTestTimeE
 8986      00000000 
 8987 0670 00000000 		.quad	_ZN8UnitTest12_GLOBAL__N_160TestDeferredTestReporterFixtureReportTestEndCapturesTestTimeD1Ev
 8987      00000000 
 8988 0678 00000000 		.quad	_ZN8UnitTest12_GLOBAL__N_160TestDeferredTestReporterFixtureReportTestEndCapturesTestTimeD0Ev
 8988      00000000 
 8989 0680 00000000 		.quad	_ZNK8UnitTest12_GLOBAL__N_160TestDeferredTestReporterFixtureReportTestEndCapturesTestTime7Ru
 8989      00000000 
 8990              		.text
 8991              		.align 2
 8993              	_ZN8UnitTest12_GLOBAL__N_160TestDeferredTestReporterFixtureReportTestEndCapturesTestTimeD2Ev:
 8994              	.LFB1550:
  61:TestDeferredTestReporter.cpp **** {
 8995              		.loc 3 61 0
 8996              		.cfi_startproc
 8997 314e 55       		pushq	%rbp
 8998              		.cfi_def_cfa_offset 16
 8999              		.cfi_offset 6, -16
 9000 314f 4889E5   		movq	%rsp, %rbp
 9001              		.cfi_def_cfa_register 6
 9002 3152 4883EC10 		subq	$16, %rsp
 9003 3156 48897DF8 		movq	%rdi, -8(%rbp)
 9004              	.LBB216:
  61:TestDeferredTestReporter.cpp **** {
 9005              		.loc 3 61 0
 9006 315a 488B45F8 		movq	-8(%rbp), %rax
 9007 315e 48C70000 		movq	$_ZTVN8UnitTest12_GLOBAL__N_160TestDeferredTestReporterFixtureReportTestEndCapturesTestTimeE+
 9007      000000
 9008 3165 488B45F8 		movq	-8(%rbp), %rax
 9009 3169 4889C7   		movq	%rax, %rdi
 9010 316c E8000000 		call	_ZN8UnitTest4TestD2Ev
 9010      00
 9011              	.LBE216:
 9012 3171 B8000000 		movl	$0, %eax
 9012      00
 9013 3176 85C0     		testl	%eax, %eax
 9014 3178 740C     		je	.L511
  61:TestDeferredTestReporter.cpp **** {
 9015              		.loc 3 61 0 is_stmt 0 discriminator 1
 9016 317a 488B45F8 		movq	-8(%rbp), %rax
 9017 317e 4889C7   		movq	%rax, %rdi
 9018 3181 E8000000 		call	_ZdlPv
 9018      00
 9019              	.L511:
  61:TestDeferredTestReporter.cpp **** {
 9020              		.loc 3 61 0
 9021 3186 C9       		leave
 9022              		.cfi_def_cfa 7, 8
 9023 3187 C3       		ret
 9024              		.cfi_endproc
 9025              	.LFE1550:
 9027              		.set	_ZN8UnitTest12_GLOBAL__N_160TestDeferredTestReporterFixtureReportTestEndCapturesTestTimeD1Ev,
 9028              		.align 2
 9030              	_ZN8UnitTest12_GLOBAL__N_160TestDeferredTestReporterFixtureReportTestEndCapturesTestTimeD0Ev:
 9031              	.LFB1552:
  61:TestDeferredTestReporter.cpp **** {
 9032              		.loc 3 61 0 is_stmt 1
 9033              		.cfi_startproc
 9034 3188 55       		pushq	%rbp
 9035              		.cfi_def_cfa_offset 16
 9036              		.cfi_offset 6, -16
 9037 3189 4889E5   		movq	%rsp, %rbp
 9038              		.cfi_def_cfa_register 6
 9039 318c 4883EC10 		subq	$16, %rsp
 9040 3190 48897DF8 		movq	%rdi, -8(%rbp)
  61:TestDeferredTestReporter.cpp **** {
 9041              		.loc 3 61 0
 9042 3194 488B45F8 		movq	-8(%rbp), %rax
 9043 3198 4889C7   		movq	%rax, %rdi
 9044 319b E8AEFFFF 		call	_ZN8UnitTest12_GLOBAL__N_160TestDeferredTestReporterFixtureReportTestEndCapturesTestTimeD1Ev
 9044      FF
 9045 31a0 488B45F8 		movq	-8(%rbp), %rax
 9046 31a4 4889C7   		movq	%rax, %rdi
 9047 31a7 E8000000 		call	_ZdlPv
 9047      00
 9048 31ac C9       		leave
 9049              		.cfi_def_cfa 7, 8
 9050 31ad C3       		ret
 9051              		.cfi_endproc
 9052              	.LFE1552:
 9054              		.section	.rodata
 9055 0688 00000000 		.align 32
 9055      00000000 
 9055      00000000 
 9055      00000000 
 9055      00000000 
 9058              	_ZTVN8UnitTest12_GLOBAL__N_170TestDeferredTestReporterFixtureReportTestStartCapturesTestNameAndSuit
 9059 06a0 00000000 		.quad	0
 9059      00000000 
 9060 06a8 00000000 		.quad	_ZTIN8UnitTest12_GLOBAL__N_170TestDeferredTestReporterFixtureReportTestStartCapturesTestName
 9060      00000000 
 9061 06b0 00000000 		.quad	_ZN8UnitTest12_GLOBAL__N_170TestDeferredTestReporterFixtureReportTestStartCapturesTestNameAn
 9061      00000000 
 9062 06b8 00000000 		.quad	_ZN8UnitTest12_GLOBAL__N_170TestDeferredTestReporterFixtureReportTestStartCapturesTestNameAn
 9062      00000000 
 9063 06c0 00000000 		.quad	_ZNK8UnitTest12_GLOBAL__N_170TestDeferredTestReporterFixtureReportTestStartCapturesTestNameA
 9063      00000000 
 9064              		.text
 9065              		.align 2
 9067              	_ZN8UnitTest12_GLOBAL__N_170TestDeferredTestReporterFixtureReportTestStartCapturesTestNameAndSuiteD
 9068              	.LFB1554:
  52:TestDeferredTestReporter.cpp **** {
 9069              		.loc 3 52 0
 9070              		.cfi_startproc
 9071 31ae 55       		pushq	%rbp
 9072              		.cfi_def_cfa_offset 16
 9073              		.cfi_offset 6, -16
 9074 31af 4889E5   		movq	%rsp, %rbp
 9075              		.cfi_def_cfa_register 6
 9076 31b2 4883EC10 		subq	$16, %rsp
 9077 31b6 48897DF8 		movq	%rdi, -8(%rbp)
 9078              	.LBB217:
  52:TestDeferredTestReporter.cpp **** {
 9079              		.loc 3 52 0
 9080 31ba 488B45F8 		movq	-8(%rbp), %rax
 9081 31be 48C70000 		movq	$_ZTVN8UnitTest12_GLOBAL__N_170TestDeferredTestReporterFixtureReportTestStartCapturesTestName
 9081      000000
 9082 31c5 488B45F8 		movq	-8(%rbp), %rax
 9083 31c9 4889C7   		movq	%rax, %rdi
 9084 31cc E8000000 		call	_ZN8UnitTest4TestD2Ev
 9084      00
 9085              	.LBE217:
 9086 31d1 B8000000 		movl	$0, %eax
 9086      00
 9087 31d6 85C0     		testl	%eax, %eax
 9088 31d8 740C     		je	.L516
  52:TestDeferredTestReporter.cpp **** {
 9089              		.loc 3 52 0 is_stmt 0 discriminator 1
 9090 31da 488B45F8 		movq	-8(%rbp), %rax
 9091 31de 4889C7   		movq	%rax, %rdi
 9092 31e1 E8000000 		call	_ZdlPv
 9092      00
 9093              	.L516:
  52:TestDeferredTestReporter.cpp **** {
 9094              		.loc 3 52 0
 9095 31e6 C9       		leave
 9096              		.cfi_def_cfa 7, 8
 9097 31e7 C3       		ret
 9098              		.cfi_endproc
 9099              	.LFE1554:
 9101              		.set	_ZN8UnitTest12_GLOBAL__N_170TestDeferredTestReporterFixtureReportTestStartCapturesTestNameAnd
 9102              		.align 2
 9104              	_ZN8UnitTest12_GLOBAL__N_170TestDeferredTestReporterFixtureReportTestStartCapturesTestNameAndSuiteD
 9105              	.LFB1556:
  52:TestDeferredTestReporter.cpp **** {
 9106              		.loc 3 52 0 is_stmt 1
 9107              		.cfi_startproc
 9108 31e8 55       		pushq	%rbp
 9109              		.cfi_def_cfa_offset 16
 9110              		.cfi_offset 6, -16
 9111 31e9 4889E5   		movq	%rsp, %rbp
 9112              		.cfi_def_cfa_register 6
 9113 31ec 4883EC10 		subq	$16, %rsp
 9114 31f0 48897DF8 		movq	%rdi, -8(%rbp)
  52:TestDeferredTestReporter.cpp **** {
 9115              		.loc 3 52 0
 9116 31f4 488B45F8 		movq	-8(%rbp), %rax
 9117 31f8 4889C7   		movq	%rax, %rdi
 9118 31fb E8AEFFFF 		call	_ZN8UnitTest12_GLOBAL__N_170TestDeferredTestReporterFixtureReportTestStartCapturesTestNameAnd
 9118      FF
 9119 3200 488B45F8 		movq	-8(%rbp), %rax
 9120 3204 4889C7   		movq	%rax, %rdi
 9121 3207 E8000000 		call	_ZdlPv
 9121      00
 9122 320c C9       		leave
 9123              		.cfi_def_cfa 7, 8
 9124 320d C3       		ret
 9125              		.cfi_endproc
 9126              	.LFE1556:
 9128              		.section	.rodata
 9129 06c8 00000000 		.align 32
 9129      00000000 
 9129      00000000 
 9129      00000000 
 9129      00000000 
 9132              	_ZTVN8UnitTest12_GLOBAL__N_169TestDeferredTestReporterFixtureReportTestStartCreatesANewDeferredTest
 9133 06e0 00000000 		.quad	0
 9133      00000000 
 9134 06e8 00000000 		.quad	_ZTIN8UnitTest12_GLOBAL__N_169TestDeferredTestReporterFixtureReportTestStartCreatesANewDefer
 9134      00000000 
 9135 06f0 00000000 		.quad	_ZN8UnitTest12_GLOBAL__N_169TestDeferredTestReporterFixtureReportTestStartCreatesANewDeferre
 9135      00000000 
 9136 06f8 00000000 		.quad	_ZN8UnitTest12_GLOBAL__N_169TestDeferredTestReporterFixtureReportTestStartCreatesANewDeferre
 9136      00000000 
 9137 0700 00000000 		.quad	_ZNK8UnitTest12_GLOBAL__N_169TestDeferredTestReporterFixtureReportTestStartCreatesANewDeferr
 9137      00000000 
 9138              		.text
 9139              		.align 2
 9141              	_ZN8UnitTest12_GLOBAL__N_169TestDeferredTestReporterFixtureReportTestStartCreatesANewDeferredTestD2
 9142              	.LFB1558:
  46:TestDeferredTestReporter.cpp **** {
 9143              		.loc 3 46 0
 9144              		.cfi_startproc
 9145 320e 55       		pushq	%rbp
 9146              		.cfi_def_cfa_offset 16
 9147              		.cfi_offset 6, -16
 9148 320f 4889E5   		movq	%rsp, %rbp
 9149              		.cfi_def_cfa_register 6
 9150 3212 4883EC10 		subq	$16, %rsp
 9151 3216 48897DF8 		movq	%rdi, -8(%rbp)
 9152              	.LBB218:
  46:TestDeferredTestReporter.cpp **** {
 9153              		.loc 3 46 0
 9154 321a 488B45F8 		movq	-8(%rbp), %rax
 9155 321e 48C70000 		movq	$_ZTVN8UnitTest12_GLOBAL__N_169TestDeferredTestReporterFixtureReportTestStartCreatesANewDefer
 9155      000000
 9156 3225 488B45F8 		movq	-8(%rbp), %rax
 9157 3229 4889C7   		movq	%rax, %rdi
 9158 322c E8000000 		call	_ZN8UnitTest4TestD2Ev
 9158      00
 9159              	.LBE218:
 9160 3231 B8000000 		movl	$0, %eax
 9160      00
 9161 3236 85C0     		testl	%eax, %eax
 9162 3238 740C     		je	.L521
  46:TestDeferredTestReporter.cpp **** {
 9163              		.loc 3 46 0 is_stmt 0 discriminator 1
 9164 323a 488B45F8 		movq	-8(%rbp), %rax
 9165 323e 4889C7   		movq	%rax, %rdi
 9166 3241 E8000000 		call	_ZdlPv
 9166      00
 9167              	.L521:
  46:TestDeferredTestReporter.cpp **** {
 9168              		.loc 3 46 0
 9169 3246 C9       		leave
 9170              		.cfi_def_cfa 7, 8
 9171 3247 C3       		ret
 9172              		.cfi_endproc
 9173              	.LFE1558:
 9175              		.set	_ZN8UnitTest12_GLOBAL__N_169TestDeferredTestReporterFixtureReportTestStartCreatesANewDeferred
 9176              		.align 2
 9178              	_ZN8UnitTest12_GLOBAL__N_169TestDeferredTestReporterFixtureReportTestStartCreatesANewDeferredTestD0
 9179              	.LFB1560:
  46:TestDeferredTestReporter.cpp **** {
 9180              		.loc 3 46 0 is_stmt 1
 9181              		.cfi_startproc
 9182 3248 55       		pushq	%rbp
 9183              		.cfi_def_cfa_offset 16
 9184              		.cfi_offset 6, -16
 9185 3249 4889E5   		movq	%rsp, %rbp
 9186              		.cfi_def_cfa_register 6
 9187 324c 4883EC10 		subq	$16, %rsp
 9188 3250 48897DF8 		movq	%rdi, -8(%rbp)
  46:TestDeferredTestReporter.cpp **** {
 9189              		.loc 3 46 0
 9190 3254 488B45F8 		movq	-8(%rbp), %rax
 9191 3258 4889C7   		movq	%rax, %rdi
 9192 325b E8AEFFFF 		call	_ZN8UnitTest12_GLOBAL__N_169TestDeferredTestReporterFixtureReportTestStartCreatesANewDeferred
 9192      FF
 9193 3260 488B45F8 		movq	-8(%rbp), %rax
 9194 3264 4889C7   		movq	%rax, %rdi
 9195 3267 E8000000 		call	_ZdlPv
 9195      00
 9196 326c C9       		leave
 9197              		.cfi_def_cfa 7, 8
 9198 326d C3       		ret
 9199              		.cfi_endproc
 9200              	.LFE1560:
 9202              		.section	.rodata
 9203 0708 00000000 		.align 32
 9203      00000000 
 9203      00000000 
 9203      00000000 
 9203      00000000 
 9206              	_ZTVN8UnitTest12_GLOBAL__N_124MockDeferredTestReporterE:
 9207 0720 00000000 		.quad	0
 9207      00000000 
 9208 0728 00000000 		.quad	_ZTIN8UnitTest12_GLOBAL__N_124MockDeferredTestReporterE
 9208      00000000 
 9209 0730 00000000 		.quad	_ZN8UnitTest12_GLOBAL__N_124MockDeferredTestReporterD1Ev
 9209      00000000 
 9210 0738 00000000 		.quad	_ZN8UnitTest12_GLOBAL__N_124MockDeferredTestReporterD0Ev
 9210      00000000 
 9211 0740 00000000 		.quad	_ZN8UnitTest20DeferredTestReporter15ReportTestStartERKNS_11TestDetailsE
 9211      00000000 
 9212 0748 00000000 		.quad	_ZN8UnitTest20DeferredTestReporter13ReportFailureERKNS_11TestDetailsEPKc
 9212      00000000 
 9213 0750 00000000 		.quad	_ZN8UnitTest20DeferredTestReporter16ReportTestFinishERKNS_11TestDetailsEf
 9213      00000000 
 9214 0758 00000000 		.quad	_ZN8UnitTest12_GLOBAL__N_124MockDeferredTestReporter13ReportSummaryEiiif
 9214      00000000 
 9215              		.text
 9216              		.align 2
 9218              	_ZN8UnitTest12_GLOBAL__N_124MockDeferredTestReporterD2Ev:
 9219              	.LFB1562:
  20:TestDeferredTestReporter.cpp **** {
 9220              		.loc 3 20 0
 9221              		.cfi_startproc
 9222 326e 55       		pushq	%rbp
 9223              		.cfi_def_cfa_offset 16
 9224              		.cfi_offset 6, -16
 9225 326f 4889E5   		movq	%rsp, %rbp
 9226              		.cfi_def_cfa_register 6
 9227 3272 4883EC10 		subq	$16, %rsp
 9228 3276 48897DF8 		movq	%rdi, -8(%rbp)
 9229              	.LBB219:
  20:TestDeferredTestReporter.cpp **** {
 9230              		.loc 3 20 0
 9231 327a 488B45F8 		movq	-8(%rbp), %rax
 9232 327e 48C70000 		movq	$_ZTVN8UnitTest12_GLOBAL__N_124MockDeferredTestReporterE+16, (%rax)
 9232      000000
 9233 3285 488B45F8 		movq	-8(%rbp), %rax
 9234 3289 4889C7   		movq	%rax, %rdi
 9235 328c E8000000 		call	_ZN8UnitTest20DeferredTestReporterD2Ev
 9235      00
 9236              	.LBE219:
 9237 3291 B8000000 		movl	$0, %eax
 9237      00
 9238 3296 85C0     		testl	%eax, %eax
 9239 3298 740C     		je	.L526
  20:TestDeferredTestReporter.cpp **** {
 9240              		.loc 3 20 0 is_stmt 0 discriminator 1
 9241 329a 488B45F8 		movq	-8(%rbp), %rax
 9242 329e 4889C7   		movq	%rax, %rdi
 9243 32a1 E8000000 		call	_ZdlPv
 9243      00
 9244              	.L526:
  20:TestDeferredTestReporter.cpp **** {
 9245              		.loc 3 20 0
 9246 32a6 C9       		leave
 9247              		.cfi_def_cfa 7, 8
 9248 32a7 C3       		ret
 9249              		.cfi_endproc
 9250              	.LFE1562:
 9252              		.set	_ZN8UnitTest12_GLOBAL__N_124MockDeferredTestReporterD1Ev,_ZN8UnitTest12_GLOBAL__N_124MockDefe
 9253              		.align 2
 9255              	_ZN8UnitTest12_GLOBAL__N_124MockDeferredTestReporterD0Ev:
 9256              	.LFB1564:
  20:TestDeferredTestReporter.cpp **** {
 9257              		.loc 3 20 0 is_stmt 1
 9258              		.cfi_startproc
 9259 32a8 55       		pushq	%rbp
 9260              		.cfi_def_cfa_offset 16
 9261              		.cfi_offset 6, -16
 9262 32a9 4889E5   		movq	%rsp, %rbp
 9263              		.cfi_def_cfa_register 6
 9264 32ac 4883EC10 		subq	$16, %rsp
 9265 32b0 48897DF8 		movq	%rdi, -8(%rbp)
  20:TestDeferredTestReporter.cpp **** {
 9266              		.loc 3 20 0
 9267 32b4 488B45F8 		movq	-8(%rbp), %rax
 9268 32b8 4889C7   		movq	%rax, %rdi
 9269 32bb E8AEFFFF 		call	_ZN8UnitTest12_GLOBAL__N_124MockDeferredTestReporterD1Ev
 9269      FF
 9270 32c0 488B45F8 		movq	-8(%rbp), %rax
 9271 32c4 4889C7   		movq	%rax, %rdi
 9272 32c7 E8000000 		call	_ZdlPv
 9272      00
 9273 32cc C9       		leave
 9274              		.cfi_def_cfa 7, 8
 9275 32cd C3       		ret
 9276              		.cfi_endproc
 9277              	.LFE1564:
 9279              		.weak	_ZTVN8UnitTest15MemoryOutStreamE
 9280              		.section	.rodata._ZTVN8UnitTest15MemoryOutStreamE,"aG",@progbits,_ZTVN8UnitTest15MemoryOutStreamE,
 9281              		.align 32
 9284              	_ZTVN8UnitTest15MemoryOutStreamE:
 9285 0000 60000000 		.quad	96
 9285      00000000 
 9286 0008 00000000 		.quad	0
 9286      00000000 
 9287 0010 00000000 		.quad	_ZTIN8UnitTest15MemoryOutStreamE
 9287      00000000 
 9288 0018 00000000 		.quad	_ZN8UnitTest15MemoryOutStreamD1Ev
 9288      00000000 
 9289 0020 00000000 		.quad	_ZN8UnitTest15MemoryOutStreamD0Ev
 9289      00000000 
 9290 0028 A0FFFFFF 		.quad	-96
 9290      FFFFFFFF 
 9291 0030 A0FFFFFF 		.quad	-96
 9291      FFFFFFFF 
 9292 0038 00000000 		.quad	_ZTIN8UnitTest15MemoryOutStreamE
 9292      00000000 
 9293 0040 00000000 		.quad	_ZTv0_n24_N8UnitTest15MemoryOutStreamD1Ev
 9293      00000000 
 9294 0048 00000000 		.quad	_ZTv0_n24_N8UnitTest15MemoryOutStreamD0Ev
 9294      00000000 
 9295              		.section	.text._ZN8UnitTest15MemoryOutStreamD1Ev,"axG",@progbits,_ZN8UnitTest15MemoryOutStreamD1Ev
 9296              		.align 2
 9297              		.weak	_ZN8UnitTest15MemoryOutStreamD1Ev
 9299              	_ZN8UnitTest15MemoryOutStreamD1Ev:
 9300              	.LFB1567:
  13:../MemoryOutStream.h **** {
 9301              		.loc 2 13 0
 9302              		.cfi_startproc
 9303              		.cfi_personality 0x3,__gxx_personality_v0
 9304              		.cfi_lsda 0x3,.LLSDA1567
 9305 0000 55       		pushq	%rbp
 9306              		.cfi_def_cfa_offset 16
 9307              		.cfi_offset 6, -16
 9308 0001 4889E5   		movq	%rsp, %rbp
 9309              		.cfi_def_cfa_register 6
 9310 0004 53       		pushq	%rbx
 9311 0005 4883EC18 		subq	$24, %rsp
 9312              		.cfi_offset 3, -24
 9313 0009 48897DE8 		movq	%rdi, -24(%rbp)
 9314              	.LBB220:
  13:../MemoryOutStream.h **** {
 9315              		.loc 2 13 0
 9316 000d BA000000 		movl	$_ZTVN8UnitTest15MemoryOutStreamE+24, %edx
 9316      00
 9317 0012 488B45E8 		movq	-24(%rbp), %rax
 9318 0016 488910   		movq	%rdx, (%rax)
 9319 0019 BA600000 		movl	$96, %edx
 9319      00
 9320 001e 488B45E8 		movq	-24(%rbp), %rax
 9321 0022 4801C2   		addq	%rax, %rdx
 9322 0025 B8000000 		movl	$_ZTVN8UnitTest15MemoryOutStreamE+64, %eax
 9322      00
 9323 002a 488902   		movq	%rax, (%rdx)
 9324 002d 488B45E8 		movq	-24(%rbp), %rax
 9325 0031 4883C058 		addq	$88, %rax
 9326 0035 4889C7   		movq	%rax, %rdi
 9327              	.LEHB243:
 9328 0038 E8000000 		call	_ZNSsD1Ev
 9328      00
 9329              	.LEHE243:
  13:../MemoryOutStream.h **** {
 9330              		.loc 2 13 0 is_stmt 0 discriminator 10
 9331 003d BA000000 		movl	$_ZTTN8UnitTest15MemoryOutStreamE+8, %edx
 9331      00
 9332 0042 488B45E8 		movq	-24(%rbp), %rax
 9333 0046 4889D6   		movq	%rdx, %rsi
 9334 0049 4889C7   		movq	%rax, %rdi
 9335              	.LEHB244:
 9336 004c E8000000 		call	_ZNSt19basic_ostringstreamIcSt11char_traitsIcESaIcEED2Ev
 9336      00
 9337              	.LEHE244:
  13:../MemoryOutStream.h **** {
 9338              		.loc 2 13 0 discriminator 14
 9339 0051 B8020000 		movl	$2, %eax
 9339      00
 9340 0056 85C0     		testl	%eax, %eax
 9341 0058 7410     		je	.L532
  13:../MemoryOutStream.h **** {
 9342              		.loc 2 13 0 discriminator 15
 9343 005a 488B45E8 		movq	-24(%rbp), %rax
 9344 005e 4883C060 		addq	$96, %rax
 9345 0062 4889C7   		movq	%rax, %rdi
 9346              	.LEHB245:
 9347 0065 E8000000 		call	_ZNSt9basic_iosIcSt11char_traitsIcEED2Ev
 9347      00
 9348              	.LEHE245:
 9349              	.L532:
 9350              	.LBE220:
  13:../MemoryOutStream.h **** {
 9351              		.loc 2 13 0 discriminator 16
 9352 006a B8000000 		movl	$0, %eax
 9352      00
 9353 006f 85C0     		testl	%eax, %eax
 9354 0071 744E     		je	.L539
  13:../MemoryOutStream.h **** {
 9355              		.loc 2 13 0 discriminator 1
 9356 0073 488B45E8 		movq	-24(%rbp), %rax
 9357 0077 4889C7   		movq	%rax, %rdi
 9358 007a E8000000 		call	_ZdlPv
 9358      00
 9359 007f EB40     		jmp	.L539
 9360              	.L537:
 9361 0081 4889C3   		movq	%rax, %rbx
 9362              	.LBB221:
  13:../MemoryOutStream.h **** {
 9363              		.loc 2 13 0
 9364 0084 BA000000 		movl	$_ZTTN8UnitTest15MemoryOutStreamE+8, %edx
 9364      00
 9365 0089 488B45E8 		movq	-24(%rbp), %rax
 9366 008d 4889D6   		movq	%rdx, %rsi
 9367 0090 4889C7   		movq	%rax, %rdi
 9368 0093 E8000000 		call	_ZNSt19basic_ostringstreamIcSt11char_traitsIcESaIcEED2Ev
 9368      00
 9369 0098 EB03     		jmp	.L535
 9370              	.L538:
 9371 009a 4889C3   		movq	%rax, %rbx
 9372              	.L535:
 9373 009d B8020000 		movl	$2, %eax
 9373      00
 9374 00a2 85C0     		testl	%eax, %eax
 9375 00a4 7410     		je	.L536
  13:../MemoryOutStream.h **** {
 9376              		.loc 2 13 0 discriminator 20
 9377 00a6 488B45E8 		movq	-24(%rbp), %rax
 9378 00aa 4883C060 		addq	$96, %rax
 9379 00ae 4889C7   		movq	%rax, %rdi
 9380 00b1 E8000000 		call	_ZNSt9basic_iosIcSt11char_traitsIcEED2Ev
 9380      00
 9381              	.L536:
 9382 00b6 4889D8   		movq	%rbx, %rax
 9383 00b9 4889C7   		movq	%rax, %rdi
 9384              	.LEHB246:
 9385 00bc E8000000 		call	_Unwind_Resume
 9385      00
 9386              	.LEHE246:
 9387              	.L539:
 9388              	.LBE221:
  13:../MemoryOutStream.h **** {
 9389              		.loc 2 13 0
 9390 00c1 4883C418 		addq	$24, %rsp
 9391 00c5 5B       		popq	%rbx
 9392 00c6 5D       		popq	%rbp
 9393              		.cfi_def_cfa 7, 8
 9394 00c7 C3       		ret
 9395              		.cfi_endproc
 9396              	.LFE1567:
 9397              		.section	.gcc_except_table
 9398              	.LLSDA1567:
 9399 067d FF       		.byte	0xff
 9400 067e FF       		.byte	0xff
 9401 067f 01       		.byte	0x1
 9402 0680 13       		.uleb128 .LLSDACSE1567-.LLSDACSB1567
 9403              	.LLSDACSB1567:
 9404 0681 38       		.uleb128 .LEHB243-.LFB1567
 9405 0682 05       		.uleb128 .LEHE243-.LEHB243
 9406 0683 8101     		.uleb128 .L537-.LFB1567
 9407 0685 00       		.uleb128 0
 9408 0686 4C       		.uleb128 .LEHB244-.LFB1567
 9409 0687 05       		.uleb128 .LEHE244-.LEHB244
 9410 0688 9A01     		.uleb128 .L538-.LFB1567
 9411 068a 00       		.uleb128 0
 9412 068b 65       		.uleb128 .LEHB245-.LFB1567
 9413 068c 05       		.uleb128 .LEHE245-.LEHB245
 9414 068d 00       		.uleb128 0
 9415 068e 00       		.uleb128 0
 9416 068f BC01     		.uleb128 .LEHB246-.LFB1567
 9417 0691 05       		.uleb128 .LEHE246-.LEHB246
 9418 0692 00       		.uleb128 0
 9419 0693 00       		.uleb128 0
 9420              	.LLSDACSE1567:
 9421              		.section	.text._ZN8UnitTest15MemoryOutStreamD1Ev,"axG",@progbits,_ZN8UnitTest15MemoryOutStreamD1Ev
 9423              		.set	.LTHUNK0,_ZN8UnitTest15MemoryOutStreamD1Ev
 9424              		.weak	_ZTv0_n24_N8UnitTest15MemoryOutStreamD1Ev
 9426              	_ZTv0_n24_N8UnitTest15MemoryOutStreamD1Ev:
 9427              	.LFB1571:
  13:../MemoryOutStream.h **** {
 9428              		.loc 2 13 0 is_stmt 1
 9429              		.cfi_startproc
 9430 00c8 4C8B17   		movq	(%rdi), %r10
 9431 00cb 49037AE8 		addq	-24(%r10), %rdi
 9432 00cf E92CFFFF 		jmp	.LTHUNK0
 9432      FF
 9433              		.cfi_endproc
 9434              	.LFE1571:
 9436              		.section	.text._ZN8UnitTest15MemoryOutStreamD0Ev,"axG",@progbits,_ZN8UnitTest15MemoryOutStreamD0Ev
 9437              		.align 2
 9438              		.weak	_ZN8UnitTest15MemoryOutStreamD0Ev
 9440              	_ZN8UnitTest15MemoryOutStreamD0Ev:
 9441              	.LFB1568:
  13:../MemoryOutStream.h **** {
 9442              		.loc 2 13 0
 9443              		.cfi_startproc
 9444 0000 55       		pushq	%rbp
 9445              		.cfi_def_cfa_offset 16
 9446              		.cfi_offset 6, -16
 9447 0001 4889E5   		movq	%rsp, %rbp
 9448              		.cfi_def_cfa_register 6
 9449 0004 4883EC10 		subq	$16, %rsp
 9450 0008 48897DF8 		movq	%rdi, -8(%rbp)
  13:../MemoryOutStream.h **** {
 9451              		.loc 2 13 0
 9452 000c 488B45F8 		movq	-8(%rbp), %rax
 9453 0010 4889C7   		movq	%rax, %rdi
 9454 0013 E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 9454      00
 9455 0018 488B45F8 		movq	-8(%rbp), %rax
 9456 001c 4889C7   		movq	%rax, %rdi
 9457 001f E8000000 		call	_ZdlPv
 9457      00
 9458 0024 C9       		leave
 9459              		.cfi_def_cfa 7, 8
 9460 0025 C3       		ret
 9461              		.cfi_endproc
 9462              	.LFE1568:
 9464              		.set	.LTHUNK1,_ZN8UnitTest15MemoryOutStreamD0Ev
 9465              		.weak	_ZTv0_n24_N8UnitTest15MemoryOutStreamD0Ev
 9467              	_ZTv0_n24_N8UnitTest15MemoryOutStreamD0Ev:
 9468              	.LFB1572:
  13:../MemoryOutStream.h **** {
 9469              		.loc 2 13 0
 9470              		.cfi_startproc
 9471 0026 4C8B17   		movq	(%rdi), %r10
 9472 0029 49037AE8 		addq	-24(%r10), %rdi
 9473 002d EBD1     		jmp	.LTHUNK1
 9474              		.cfi_endproc
 9475              	.LFE1572:
 9477              		.weak	_ZTTN8UnitTest15MemoryOutStreamE
 9478              		.section	.rodata._ZTTN8UnitTest15MemoryOutStreamE,"aG",@progbits,_ZTVN8UnitTest15MemoryOutStreamE,
 9479              		.align 32
 9482              	_ZTTN8UnitTest15MemoryOutStreamE:
 9483 0000 00000000 		.quad	_ZTVN8UnitTest15MemoryOutStreamE+24
 9483      00000000 
 9484 0008 00000000 		.quad	_ZTCN8UnitTest15MemoryOutStreamE0_St19basic_ostringstreamIcSt11char_traitsIcESaIcEE+24
 9484      00000000 
 9485 0010 00000000 		.quad	_ZTCN8UnitTest15MemoryOutStreamE0_So+24
 9485      00000000 
 9486 0018 00000000 		.quad	_ZTCN8UnitTest15MemoryOutStreamE0_So+64
 9486      00000000 
 9487 0020 00000000 		.quad	_ZTCN8UnitTest15MemoryOutStreamE0_St19basic_ostringstreamIcSt11char_traitsIcESaIcEE+64
 9487      00000000 
 9488 0028 00000000 		.quad	_ZTVN8UnitTest15MemoryOutStreamE+64
 9488      00000000 
 9489              		.hidden	_ZTCN8UnitTest15MemoryOutStreamE0_St19basic_ostringstreamIcSt11char_traitsIcESaIcEE
 9490              		.weak	_ZTCN8UnitTest15MemoryOutStreamE0_St19basic_ostringstreamIcSt11char_traitsIcESaIcEE
 9491              		.section	.rodata._ZTCN8UnitTest15MemoryOutStreamE0_St19basic_ostringstreamIcSt11char_traitsIcESaIc
 9492              		.align 32
 9495              	_ZTCN8UnitTest15MemoryOutStreamE0_St19basic_ostringstreamIcSt11char_traitsIcESaIcEE:
 9496 0000 60000000 		.quad	96
 9496      00000000 
 9497 0008 00000000 		.quad	0
 9497      00000000 
 9498 0010 00000000 		.quad	_ZTISt19basic_ostringstreamIcSt11char_traitsIcESaIcEE
 9498      00000000 
 9499 0018 00000000 		.quad	_ZNSt19basic_ostringstreamIcSt11char_traitsIcESaIcEED1Ev
 9499      00000000 
 9500 0020 00000000 		.quad	_ZNSt19basic_ostringstreamIcSt11char_traitsIcESaIcEED0Ev
 9500      00000000 
 9501 0028 A0FFFFFF 		.quad	-96
 9501      FFFFFFFF 
 9502 0030 A0FFFFFF 		.quad	-96
 9502      FFFFFFFF 
 9503 0038 00000000 		.quad	_ZTISt19basic_ostringstreamIcSt11char_traitsIcESaIcEE
 9503      00000000 
 9504 0040 00000000 		.quad	_ZTv0_n24_NSt19basic_ostringstreamIcSt11char_traitsIcESaIcEED1Ev
 9504      00000000 
 9505 0048 00000000 		.quad	_ZTv0_n24_NSt19basic_ostringstreamIcSt11char_traitsIcESaIcEED0Ev
 9505      00000000 
 9506              		.hidden	_ZTCN8UnitTest15MemoryOutStreamE0_So
 9507              		.weak	_ZTCN8UnitTest15MemoryOutStreamE0_So
 9508              		.section	.rodata._ZTCN8UnitTest15MemoryOutStreamE0_So,"aG",@progbits,_ZTVN8UnitTest15MemoryOutStre
 9509              		.align 32
 9512              	_ZTCN8UnitTest15MemoryOutStreamE0_So:
 9513 0000 60000000 		.quad	96
 9513      00000000 
 9514 0008 00000000 		.quad	0
 9514      00000000 
 9515 0010 00000000 		.quad	_ZTISo
 9515      00000000 
 9516 0018 00000000 		.quad	_ZNSoD1Ev
 9516      00000000 
 9517 0020 00000000 		.quad	_ZNSoD0Ev
 9517      00000000 
 9518 0028 A0FFFFFF 		.quad	-96
 9518      FFFFFFFF 
 9519 0030 A0FFFFFF 		.quad	-96
 9519      FFFFFFFF 
 9520 0038 00000000 		.quad	_ZTISo
 9520      00000000 
 9521 0040 00000000 		.quad	_ZTv0_n24_NSoD1Ev
 9521      00000000 
 9522 0048 00000000 		.quad	_ZTv0_n24_NSoD0Ev
 9522      00000000 
 9523              		.weak	_ZTSN8UnitTest15MemoryOutStreamE
 9524              		.section	.rodata._ZTSN8UnitTest15MemoryOutStreamE,"aG",@progbits,_ZTSN8UnitTest15MemoryOutStreamE,
 9525              		.align 16
 9528              	_ZTSN8UnitTest15MemoryOutStreamE:
 9529 0000 4E38556E 		.string	"N8UnitTest15MemoryOutStreamE"
 9529      69745465 
 9529      73743135 
 9529      4D656D6F 
 9529      72794F75 
 9530              		.weak	_ZTIN8UnitTest15MemoryOutStreamE
 9531              		.section	.rodata._ZTIN8UnitTest15MemoryOutStreamE,"aG",@progbits,_ZTIN8UnitTest15MemoryOutStreamE,
 9532              		.align 16
 9535              	_ZTIN8UnitTest15MemoryOutStreamE:
 9536 0000 00000000 		.quad	_ZTVN10__cxxabiv120__si_class_type_infoE+16
 9536      00000000 
 9537 0008 00000000 		.quad	_ZTSN8UnitTest15MemoryOutStreamE
 9537      00000000 
 9538 0010 00000000 		.quad	_ZTISt19basic_ostringstreamIcSt11char_traitsIcESaIcEE
 9538      00000000 
 9539              		.text
 9541              	_Z41__static_initialization_and_destruction_0ii:
 9542              	.LFB1569:
 116:TestDeferredTestReporter.cpp **** 
 117:TestDeferredTestReporter.cpp **** }}
 9543              		.loc 3 117 0
 9544              		.cfi_startproc
 9545 32ce 55       		pushq	%rbp
 9546              		.cfi_def_cfa_offset 16
 9547              		.cfi_offset 6, -16
 9548 32cf 4889E5   		movq	%rsp, %rbp
 9549              		.cfi_def_cfa_register 6
 9550 32d2 4883EC10 		subq	$16, %rsp
 9551 32d6 897DFC   		movl	%edi, -4(%rbp)
 9552 32d9 8975F8   		movl	%esi, -8(%rbp)
 9553              		.loc 3 117 0
 9554 32dc 837DFC01 		cmpl	$1, -4(%rbp)
 9555 32e0 0F854B01 		jne	.L542
 9555      0000
 9556              		.loc 3 117 0 is_stmt 0 discriminator 1
 9557 32e6 817DF8FF 		cmpl	$65535, -8(%rbp)
 9557      FF0000
 9558 32ed 0F853E01 		jne	.L542
 9558      0000
  46:TestDeferredTestReporter.cpp **** {
 9559              		.loc 3 46 0 is_stmt 1
 9560 32f3 BF000000 		movl	$_ZN8UnitTest12_GLOBAL__N_177testDeferredTestReporterFixtureReportTestStartCreatesANewDeferre
 9560      00
 9561 32f8 E8A7CFFF 		call	_ZN8UnitTest12_GLOBAL__N_169TestDeferredTestReporterFixtureReportTestStartCreatesANewDeferred
 9561      FF
 9562 32fd BA000000 		movl	$__dso_handle, %edx
 9562      00
 9563 3302 BE000000 		movl	$_ZN8UnitTest12_GLOBAL__N_177testDeferredTestReporterFixtureReportTestStartCreatesANewDeferre
 9563      00
 9564 3307 BF000000 		movl	$_ZN8UnitTest12_GLOBAL__N_169TestDeferredTestReporterFixtureReportTestStartCreatesANewDeferre
 9564      00
 9565 330c E8000000 		call	__cxa_atexit
 9565      00
 9566 3311 E8000000 		call	_ZN8UnitTest4Test11GetTestListEv
 9566      00
 9567 3316 BA000000 		movl	$_ZN8UnitTest12_GLOBAL__N_177testDeferredTestReporterFixtureReportTestStartCreatesANewDeferre
 9567      00
 9568 331b 4889C6   		movq	%rax, %rsi
 9569 331e BF000000 		movl	$_ZN8UnitTest12_GLOBAL__N_170adderDeferredTestReporterFixtureReportTestStartCreatesANewDeferr
 9569      00
 9570 3323 E8000000 		call	_ZN8UnitTest9ListAdderC1ERNS_8TestListEPNS_4TestE
 9570      00
  52:TestDeferredTestReporter.cpp **** {
 9571              		.loc 3 52 0
 9572 3328 BF000000 		movl	$_ZN8UnitTest12_GLOBAL__N_178testDeferredTestReporterFixtureReportTestStartCapturesTestNameAn
 9572      00
 9573 332d E8B2D3FF 		call	_ZN8UnitTest12_GLOBAL__N_170TestDeferredTestReporterFixtureReportTestStartCapturesTestNameAnd
 9573      FF
 9574 3332 BA000000 		movl	$__dso_handle, %edx
 9574      00
 9575 3337 BE000000 		movl	$_ZN8UnitTest12_GLOBAL__N_178testDeferredTestReporterFixtureReportTestStartCapturesTestNameAn
 9575      00
 9576 333c BF000000 		movl	$_ZN8UnitTest12_GLOBAL__N_170TestDeferredTestReporterFixtureReportTestStartCapturesTestNameAn
 9576      00
 9577 3341 E8000000 		call	__cxa_atexit
 9577      00
 9578 3346 E8000000 		call	_ZN8UnitTest4Test11GetTestListEv
 9578      00
 9579 334b BA000000 		movl	$_ZN8UnitTest12_GLOBAL__N_178testDeferredTestReporterFixtureReportTestStartCapturesTestNameAn
 9579      00
 9580 3350 4889C6   		movq	%rax, %rsi
 9581 3353 BF000000 		movl	$_ZN8UnitTest12_GLOBAL__N_171adderDeferredTestReporterFixtureReportTestStartCapturesTestNameA
 9581      00
 9582 3358 E8000000 		call	_ZN8UnitTest9ListAdderC1ERNS_8TestListEPNS_4TestE
 9582      00
  61:TestDeferredTestReporter.cpp **** {
 9583              		.loc 3 61 0
 9584 335d BF000000 		movl	$_ZN8UnitTest12_GLOBAL__N_168testDeferredTestReporterFixtureReportTestEndCapturesTestTimeInst
 9584      00
 9585 3362 E88DD8FF 		call	_ZN8UnitTest12_GLOBAL__N_160TestDeferredTestReporterFixtureReportTestEndCapturesTestTimeC1Ev
 9585      FF
 9586 3367 BA000000 		movl	$__dso_handle, %edx
 9586      00
 9587 336c BE000000 		movl	$_ZN8UnitTest12_GLOBAL__N_168testDeferredTestReporterFixtureReportTestEndCapturesTestTimeInst
 9587      00
 9588 3371 BF000000 		movl	$_ZN8UnitTest12_GLOBAL__N_160TestDeferredTestReporterFixtureReportTestEndCapturesTestTimeD1Ev
 9588      00
 9589 3376 E8000000 		call	__cxa_atexit
 9589      00
 9590 337b E8000000 		call	_ZN8UnitTest4Test11GetTestListEv
 9590      00
 9591 3380 BA000000 		movl	$_ZN8UnitTest12_GLOBAL__N_168testDeferredTestReporterFixtureReportTestEndCapturesTestTimeInst
 9591      00
 9592 3385 4889C6   		movq	%rax, %rsi
 9593 3388 BF000000 		movl	$_ZN8UnitTest12_GLOBAL__N_161adderDeferredTestReporterFixtureReportTestEndCapturesTestTimeE, 
 9593      00
 9594 338d E8000000 		call	_ZN8UnitTest9ListAdderC1ERNS_8TestListEPNS_4TestE
 9594      00
  71:TestDeferredTestReporter.cpp **** {
 9595              		.loc 3 71 0
 9596 3392 BF000000 		movl	$_ZN8UnitTest12_GLOBAL__N_171testDeferredTestReporterFixtureReportFailureSavesFailureDetailsI
 9596      00
 9597 3397 E8DADCFF 		call	_ZN8UnitTest12_GLOBAL__N_163TestDeferredTestReporterFixtureReportFailureSavesFailureDetailsC1
 9597      FF
 9598 339c BA000000 		movl	$__dso_handle, %edx
 9598      00
 9599 33a1 BE000000 		movl	$_ZN8UnitTest12_GLOBAL__N_171testDeferredTestReporterFixtureReportFailureSavesFailureDetailsI
 9599      00
 9600 33a6 BF000000 		movl	$_ZN8UnitTest12_GLOBAL__N_163TestDeferredTestReporterFixtureReportFailureSavesFailureDetailsD
 9600      00
 9601 33ab E8000000 		call	__cxa_atexit
 9601      00
 9602 33b0 E8000000 		call	_ZN8UnitTest4Test11GetTestListEv
 9602      00
 9603 33b5 BA000000 		movl	$_ZN8UnitTest12_GLOBAL__N_171testDeferredTestReporterFixtureReportFailureSavesFailureDetailsI
 9603      00
 9604 33ba 4889C6   		movq	%rax, %rsi
 9605 33bd BF000000 		movl	$_ZN8UnitTest12_GLOBAL__N_164adderDeferredTestReporterFixtureReportFailureSavesFailureDetails
 9605      00
 9606 33c2 E8000000 		call	_ZN8UnitTest9ListAdderC1ERNS_8TestListEPNS_4TestE
 9606      00
  83:TestDeferredTestReporter.cpp **** {
 9607              		.loc 3 83 0
 9608 33c7 BF000000 		movl	$_ZN8UnitTest12_GLOBAL__N_190testDeferredTestReporterFixtureReportFailureSavesFailureDetailsF
 9608      00
 9609 33cc E8D7E1FF 		call	_ZN8UnitTest12_GLOBAL__N_182TestDeferredTestReporterFixtureReportFailureSavesFailureDetailsFo
 9609      FF
 9610 33d1 BA000000 		movl	$__dso_handle, %edx
 9610      00
 9611 33d6 BE000000 		movl	$_ZN8UnitTest12_GLOBAL__N_190testDeferredTestReporterFixtureReportFailureSavesFailureDetailsF
 9611      00
 9612 33db BF000000 		movl	$_ZN8UnitTest12_GLOBAL__N_182TestDeferredTestReporterFixtureReportFailureSavesFailureDetailsF
 9612      00
 9613 33e0 E8000000 		call	__cxa_atexit
 9613      00
 9614 33e5 E8000000 		call	_ZN8UnitTest4Test11GetTestListEv
 9614      00
 9615 33ea BA000000 		movl	$_ZN8UnitTest12_GLOBAL__N_190testDeferredTestReporterFixtureReportFailureSavesFailureDetailsF
 9615      00
 9616 33ef 4889C6   		movq	%rax, %rsi
 9617 33f2 BF000000 		movl	$_ZN8UnitTest12_GLOBAL__N_183adderDeferredTestReporterFixtureReportFailureSavesFailureDetails
 9617      00
 9618 33f7 E8000000 		call	_ZN8UnitTest9ListAdderC1ERNS_8TestListEPNS_4TestE
 9618      00
  98:TestDeferredTestReporter.cpp **** {
 9619              		.loc 3 98 0
 9620 33fc BF000000 		movl	$_ZN8UnitTest12_GLOBAL__N_184testDeferredTestReporterFixtureDeferredTestReporterTakesCopyOfFa
 9620      00
 9621 3401 E8A4E7FF 		call	_ZN8UnitTest12_GLOBAL__N_176TestDeferredTestReporterFixtureDeferredTestReporterTakesCopyOfFai
 9621      FF
 9622 3406 BA000000 		movl	$__dso_handle, %edx
 9622      00
 9623 340b BE000000 		movl	$_ZN8UnitTest12_GLOBAL__N_184testDeferredTestReporterFixtureDeferredTestReporterTakesCopyOfFa
 9623      00
 9624 3410 BF000000 		movl	$_ZN8UnitTest12_GLOBAL__N_176TestDeferredTestReporterFixtureDeferredTestReporterTakesCopyOfFa
 9624      00
 9625 3415 E8000000 		call	__cxa_atexit
 9625      00
 9626 341a E8000000 		call	_ZN8UnitTest4Test11GetTestListEv
 9626      00
 9627 341f BA000000 		movl	$_ZN8UnitTest12_GLOBAL__N_184testDeferredTestReporterFixtureDeferredTestReporterTakesCopyOfFa
 9627      00
 9628 3424 4889C6   		movq	%rax, %rsi
 9629 3427 BF000000 		movl	$_ZN8UnitTest12_GLOBAL__N_177adderDeferredTestReporterFixtureDeferredTestReporterTakesCopyOfF
 9629      00
 9630 342c E8000000 		call	_ZN8UnitTest9ListAdderC1ERNS_8TestListEPNS_4TestE
 9630      00
 9631              	.L542:
 9632              		.loc 3 117 0
 9633 3431 C9       		leave
 9634              		.cfi_def_cfa 7, 8
 9635 3432 C3       		ret
 9636              		.cfi_endproc
 9637              	.LFE1569:
 9639              		.section	.rodata
 9640              		.align 16
 9643              	_ZTIN8UnitTest12_GLOBAL__N_124MockDeferredTestReporterE:
 9644 0760 00000000 		.quad	_ZTVN10__cxxabiv120__si_class_type_infoE+16
 9644      00000000 
 9645 0768 00000000 		.quad	_ZTSN8UnitTest12_GLOBAL__N_124MockDeferredTestReporterE
 9645      00000000 
 9646 0770 00000000 		.quad	_ZTIN8UnitTest20DeferredTestReporterE
 9646      00000000 
 9647 0778 00000000 		.align 16
 9647      00000000 
 9650              	_ZTIN8UnitTest12_GLOBAL__N_169TestDeferredTestReporterFixtureReportTestStartCreatesANewDeferredTest
 9651 0780 00000000 		.quad	_ZTVN10__cxxabiv120__si_class_type_infoE+16
 9651      00000000 
 9652 0788 00000000 		.quad	_ZTSN8UnitTest12_GLOBAL__N_169TestDeferredTestReporterFixtureReportTestStartCreatesANewDefer
 9652      00000000 
 9653 0790 00000000 		.quad	_ZTIN8UnitTest4TestE
 9653      00000000 
 9654 0798 00000000 		.align 16
 9654      00000000 
 9657              	_ZTIN8UnitTest12_GLOBAL__N_170TestDeferredTestReporterFixtureReportTestStartCapturesTestNameAndSuit
 9658 07a0 00000000 		.quad	_ZTVN10__cxxabiv120__si_class_type_infoE+16
 9658      00000000 
 9659 07a8 00000000 		.quad	_ZTSN8UnitTest12_GLOBAL__N_170TestDeferredTestReporterFixtureReportTestStartCapturesTestName
 9659      00000000 
 9660 07b0 00000000 		.quad	_ZTIN8UnitTest4TestE
 9660      00000000 
 9661 07b8 00000000 		.align 16
 9661      00000000 
 9664              	_ZTIN8UnitTest12_GLOBAL__N_160TestDeferredTestReporterFixtureReportTestEndCapturesTestTimeE:
 9665 07c0 00000000 		.quad	_ZTVN10__cxxabiv120__si_class_type_infoE+16
 9665      00000000 
 9666 07c8 00000000 		.quad	_ZTSN8UnitTest12_GLOBAL__N_160TestDeferredTestReporterFixtureReportTestEndCapturesTestTimeE
 9666      00000000 
 9667 07d0 00000000 		.quad	_ZTIN8UnitTest4TestE
 9667      00000000 
 9668 07d8 00000000 		.align 16
 9668      00000000 
 9671              	_ZTIN8UnitTest12_GLOBAL__N_163TestDeferredTestReporterFixtureReportFailureSavesFailureDetailsE:
 9672 07e0 00000000 		.quad	_ZTVN10__cxxabiv120__si_class_type_infoE+16
 9672      00000000 
 9673 07e8 00000000 		.quad	_ZTSN8UnitTest12_GLOBAL__N_163TestDeferredTestReporterFixtureReportFailureSavesFailureDetail
 9673      00000000 
 9674 07f0 00000000 		.quad	_ZTIN8UnitTest4TestE
 9674      00000000 
 9675 07f8 00000000 		.align 16
 9675      00000000 
 9678              	_ZTIN8UnitTest12_GLOBAL__N_182TestDeferredTestReporterFixtureReportFailureSavesFailureDetailsForMul
 9679 0800 00000000 		.quad	_ZTVN10__cxxabiv120__si_class_type_infoE+16
 9679      00000000 
 9680 0808 00000000 		.quad	_ZTSN8UnitTest12_GLOBAL__N_182TestDeferredTestReporterFixtureReportFailureSavesFailureDetail
 9680      00000000 
 9681 0810 00000000 		.quad	_ZTIN8UnitTest4TestE
 9681      00000000 
 9682 0818 00000000 		.align 16
 9682      00000000 
 9685              	_ZTIN8UnitTest12_GLOBAL__N_176TestDeferredTestReporterFixtureDeferredTestReporterTakesCopyOfFailure
 9686 0820 00000000 		.quad	_ZTVN10__cxxabiv120__si_class_type_infoE+16
 9686      00000000 
 9687 0828 00000000 		.quad	_ZTSN8UnitTest12_GLOBAL__N_176TestDeferredTestReporterFixtureDeferredTestReporterTakesCopyOf
 9687      00000000 
 9688 0830 00000000 		.quad	_ZTIN8UnitTest4TestE
 9688      00000000 
 9689 0838 00000000 		.align 32
 9689      00000000 
 9692              	_ZTSN8UnitTest12_GLOBAL__N_176TestDeferredTestReporterFixtureDeferredTestReporterTakesCopyOfFailure
 9693 0840 2A4E3855 		.string	"*N8UnitTest12_GLOBAL__N_176TestDeferredTestReporterFixtureDeferredTestReporterTakesCopyOf
 9693      6E697454 
 9693      65737431 
 9693      325F474C 
 9693      4F42414C 
 9694 08a9 00000000 		.align 32
 9694      00000000 
 9694      00000000 
 9694      00000000 
 9694      00000000 
 9697              	_ZTSN8UnitTest12_GLOBAL__N_182TestDeferredTestReporterFixtureReportFailureSavesFailureDetailsForMul
 9698 08c0 2A4E3855 		.string	"*N8UnitTest12_GLOBAL__N_182TestDeferredTestReporterFixtureReportFailureSavesFailureDetail
 9698      6E697454 
 9698      65737431 
 9698      325F474C 
 9698      4F42414C 
 9699 092f 00000000 		.align 32
 9699      00000000 
 9699      00000000 
 9699      00000000 
 9699      00
 9702              	_ZTSN8UnitTest12_GLOBAL__N_163TestDeferredTestReporterFixtureReportFailureSavesFailureDetailsE:
 9703 0940 2A4E3855 		.string	"*N8UnitTest12_GLOBAL__N_163TestDeferredTestReporterFixtureReportFailureSavesFailureDetail
 9703      6E697454 
 9703      65737431 
 9703      325F474C 
 9703      4F42414C 
 9704 099c 00000000 		.align 32
 9707              	_ZTSN8UnitTest12_GLOBAL__N_160TestDeferredTestReporterFixtureReportTestEndCapturesTestTimeE:
 9708 09a0 2A4E3855 		.string	"*N8UnitTest12_GLOBAL__N_160TestDeferredTestReporterFixtureReportTestEndCapturesTestTimeE"
 9708      6E697454 
 9708      65737431 
 9708      325F474C 
 9708      4F42414C 
 9709 09f9 00000000 		.align 32
 9709      000000
 9712              	_ZTSN8UnitTest12_GLOBAL__N_170TestDeferredTestReporterFixtureReportTestStartCapturesTestNameAndSuit
 9713 0a00 2A4E3855 		.string	"*N8UnitTest12_GLOBAL__N_170TestDeferredTestReporterFixtureReportTestStartCapturesTestName
 9713      6E697454 
 9713      65737431 
 9713      325F474C 
 9713      4F42414C 
 9714 0a63 00000000 		.align 32
 9714      00000000 
 9714      00000000 
 9714      00000000 
 9714      00000000 
 9717              	_ZTSN8UnitTest12_GLOBAL__N_169TestDeferredTestReporterFixtureReportTestStartCreatesANewDeferredTest
 9718 0a80 2A4E3855 		.string	"*N8UnitTest12_GLOBAL__N_169TestDeferredTestReporterFixtureReportTestStartCreatesANewDefer
 9718      6E697454 
 9718      65737431 
 9718      325F474C 
 9718      4F42414C 
 9719 0ae2 00000000 		.align 32
 9719      00000000 
 9719      00000000 
 9719      00000000 
 9719      00000000 
 9722              	_ZTSN8UnitTest12_GLOBAL__N_124MockDeferredTestReporterE:
 9723 0b00 2A4E3855 		.string	"*N8UnitTest12_GLOBAL__N_124MockDeferredTestReporterE"
 9723      6E697454 
 9723      65737431 
 9723      325F474C 
 9723      4F42414C 
 9724              		.text
 9726              	_GLOBAL__sub_I_TestDeferredTestReporter.cpp:
 9727              	.LFB1570:
 9728              		.loc 3 117 0
 9729              		.cfi_startproc
 9730 3433 55       		pushq	%rbp
 9731              		.cfi_def_cfa_offset 16
 9732              		.cfi_offset 6, -16
 9733 3434 4889E5   		movq	%rsp, %rbp
 9734              		.cfi_def_cfa_register 6
 9735              		.loc 3 117 0
 9736 3437 BEFFFF00 		movl	$65535, %esi
 9736      00
 9737 343c BF010000 		movl	$1, %edi
 9737      00
 9738 3441 E888FEFF 		call	_Z41__static_initialization_and_destruction_0ii
 9738      FF
 9739 3446 5D       		popq	%rbp
 9740              		.cfi_def_cfa 7, 8
 9741 3447 C3       		ret
 9742              		.cfi_endproc
 9743              	.LFE1570:
 9745              		.section	.init_array,"aw"
 9746              		.align 8
 9747 0000 00000000 		.quad	_GLOBAL__sub_I_TestDeferredTestReporter.cpp
 9747      00000000 
 9748              		.section	.rodata
 9749 0b35 000000   		.align 8
 9752              	_ZZL18__gthread_active_pvE20__gthread_active_ptr:
 9753 0b38 00000000 		.quad	_ZL28__gthrw___pthread_key_createPjPFvPvE
 9753      00000000 
 9754              		.weakref	_ZL28__gthrw___pthread_key_createPjPFvPvE,__pthread_key_create
 9755              		.align 4
 9756              	.LC14:
 9757 0b40 66E6F642 		.long	1123477094
 9758              		.align 4
 9759              	.LC15:
 9760 0b44 17B7D138 		.long	953267991
 9761              		.text
 9762              	.Letext0:
 9763              		.file 16 "../TestDetails.h"
 9764              		.file 17 "../TestList.h"
 9765              		.file 18 "../TestResults.h"
 9766              		.file 19 "../PosixUtils/SignalTranslator.h"
 9767              		.file 20 "/usr/include/stdio.h"
 9768              		.file 21 "<built-in>"
 9769              		.file 22 "/usr/lib/gcc/x86_64-linux-gnu/4.8/include/stddef.h"
 9770              		.file 23 "/usr/include/wchar.h"
 9771              		.file 24 "/usr/include/c++/4.8/cwchar"
 9772              		.file 25 "/usr/include/c++/4.8/bits/char_traits.h"
 9773              		.file 26 "/usr/include/x86_64-linux-gnu/c++/4.8/bits/c++config.h"
 9774              		.file 27 "/usr/include/c++/4.8/clocale"
 9775              		.file 28 "/usr/include/c++/4.8/bits/basic_string.tcc"
 9776              		.file 29 "/usr/include/c++/4.8/bits/stringfwd.h"
 9777              		.file 30 "/usr/include/c++/4.8/cwctype"
 9778              		.file 31 "/usr/include/c++/4.8/bits/vector.tcc"
 9779              		.file 32 "/usr/include/c++/4.8/cstring"
 9780              		.file 33 "/usr/include/time.h"
 9781              		.file 34 "/usr/include/c++/4.8/ext/numeric_traits.h"
 9782              		.file 35 "/usr/include/c++/4.8/ext/alloc_traits.h"
 9783              		.file 36 "/usr/include/c++/4.8/debug/debug.h"
 9784              		.file 37 "/usr/include/locale.h"
 9785              		.file 38 "/usr/include/x86_64-linux-gnu/bits/types.h"
 9786              		.file 39 "/usr/include/x86_64-linux-gnu/bits/setjmp.h"
 9787              		.file 40 "/usr/include/x86_64-linux-gnu/c++/4.8/bits/atomic_word.h"
 9788              		.file 41 "/usr/include/wctype.h"
 9789              		.file 42 "/usr/include/x86_64-linux-gnu/bits/sigset.h"
 9790              		.file 43 "/usr/include/setjmp.h"
 9791              		.file 44 "/usr/include/x86_64-linux-gnu/bits/siginfo.h"
 9792              		.file 45 "/usr/include/signal.h"
 9793              		.file 46 "/usr/include/x86_64-linux-gnu/bits/sigaction.h"
 9794              		.file 47 "/usr/include/string.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 TestDeferredTestReporter.cpp
     /tmp/ccVroVe9.s:10     .text._ZN13UnitTestSuite12GetSuiteNameEv:0000000000000000 _ZN13UnitTestSuite12GetSuiteNameEv
     /tmp/ccVroVe9.s:33     .text._ZN8UnitTest15MemoryOutStreamC1Ev:0000000000000000 _ZN8UnitTest15MemoryOutStreamC1Ev
     /tmp/ccVroVe9.s:9482   .rodata._ZTTN8UnitTest15MemoryOutStreamE:0000000000000000 _ZTTN8UnitTest15MemoryOutStreamE
     /tmp/ccVroVe9.s:9284   .rodata._ZTVN8UnitTest15MemoryOutStreamE:0000000000000000 _ZTVN8UnitTest15MemoryOutStreamE
     /tmp/ccVroVe9.s:145    .text:0000000000000000 _ZN8UnitTest12_GLOBAL__N_124MockDeferredTestReporter13ReportSummaryEiiif
     /tmp/ccVroVe9.s:171    .text._ZN8UnitTest12TestReporterC2Ev:0000000000000000 _ZN8UnitTest12TestReporterC2Ev
     /tmp/ccVroVe9.s:171    .text._ZN8UnitTest12TestReporterC2Ev:0000000000000000 _ZN8UnitTest12TestReporterC1Ev
     /tmp/ccVroVe9.s:199    .text._ZN8UnitTest20DeferredTestReporterC2Ev:0000000000000000 _ZN8UnitTest20DeferredTestReporterC2Ev
     /tmp/ccVroVe9.s:4656   .text._ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EEC2Ev:0000000000000000 _ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EEC1Ev
     /tmp/ccVroVe9.s:199    .text._ZN8UnitTest20DeferredTestReporterC2Ev:0000000000000000 _ZN8UnitTest20DeferredTestReporterC1Ev
     /tmp/ccVroVe9.s:274    .text._ZN8UnitTest20DeferredTestReporterD2Ev:0000000000000000 _ZN8UnitTest20DeferredTestReporterD2Ev
     /tmp/ccVroVe9.s:4686   .text._ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EED2Ev:0000000000000000 _ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EED1Ev
     /tmp/ccVroVe9.s:274    .text._ZN8UnitTest20DeferredTestReporterD2Ev:0000000000000000 _ZN8UnitTest20DeferredTestReporterD1Ev
     /tmp/ccVroVe9.s:362    .text._ZN8UnitTest20DeferredTestReporterD0Ev:0000000000000000 _ZN8UnitTest20DeferredTestReporterD0Ev
     /tmp/ccVroVe9.s:389    .text:0000000000000018 _ZN8UnitTest12_GLOBAL__N_124MockDeferredTestReporterC2Ev
     /tmp/ccVroVe9.s:9206   .rodata:0000000000000720 _ZTVN8UnitTest12_GLOBAL__N_124MockDeferredTestReporterE
     /tmp/ccVroVe9.s:389    .text:0000000000000018 _ZN8UnitTest12_GLOBAL__N_124MockDeferredTestReporterC1Ev
     /tmp/ccVroVe9.s:425    .text:000000000000003e _ZN8UnitTest12_GLOBAL__N_127DeferredTestReporterFixtureC2Ev
     /tmp/ccVroVe9.s:9218   .text:000000000000326e _ZN8UnitTest12_GLOBAL__N_124MockDeferredTestReporterD1Ev
     /tmp/ccVroVe9.s:624    .text:00000000000001e4 _ZN8UnitTest12_GLOBAL__N_127DeferredTestReporterFixtureD2Ev
     /tmp/ccVroVe9.s:736    .text:000000000000027a _ZN8UnitTest12_GLOBAL__N_171DeferredTestReporterFixtureReportTestStartCreatesANewDeferredTestHelperC2ERKNS_11TestDetailsE
     /tmp/ccVroVe9.s:736    .text:000000000000027a _ZN8UnitTest12_GLOBAL__N_171DeferredTestReporterFixtureReportTestStartCreatesANewDeferredTestHelperC1ERKNS_11TestDetailsE
     /tmp/ccVroVe9.s:773    .text:00000000000002a4 _ZN8UnitTest12_GLOBAL__N_169TestDeferredTestReporterFixtureReportTestStartCreatesANewDeferredTestC2Ev
     /tmp/ccVroVe9.s:9132   .rodata:00000000000006e0 _ZTVN8UnitTest12_GLOBAL__N_169TestDeferredTestReporterFixtureReportTestStartCreatesANewDeferredTestE
     /tmp/ccVroVe9.s:773    .text:00000000000002a4 _ZN8UnitTest12_GLOBAL__N_169TestDeferredTestReporterFixtureReportTestStartCreatesANewDeferredTestC1Ev
     /tmp/ccVroVe9.s:805    .bss:0000000000000000 _ZN8UnitTest12_GLOBAL__N_177testDeferredTestReporterFixtureReportTestStartCreatesANewDeferredTestInstanceE
     /tmp/ccVroVe9.s:805    .bss:0000000000000038 _ZN8UnitTest12_GLOBAL__N_170adderDeferredTestReporterFixtureReportTestStartCreatesANewDeferredTestE
     /tmp/ccVroVe9.s:810    .text:00000000000002e2 _ZN8UnitTest12_GLOBAL__N_171DeferredTestReporterFixtureReportTestStartCreatesANewDeferredTestHelperD2Ev
     /tmp/ccVroVe9.s:810    .text:00000000000002e2 _ZN8UnitTest12_GLOBAL__N_171DeferredTestReporterFixtureReportTestStartCreatesANewDeferredTestHelperD1Ev
     /tmp/ccVroVe9.s:846    .text:00000000000002fc _ZNK8UnitTest12_GLOBAL__N_169TestDeferredTestReporterFixtureReportTestStartCreatesANewDeferredTest7RunImplEv
     /tmp/ccVroVe9.s:4774   .text:000000000000209e _ZN8UnitTest11ExecuteTestINS_12_GLOBAL__N_171DeferredTestReporterFixtureReportTestStartCreatesANewDeferredTestHelperEEEvRT_RKNS_11TestDetailsE
     /tmp/ccVroVe9.s:9299   .text._ZN8UnitTest15MemoryOutStreamD1Ev:0000000000000000 _ZN8UnitTest15MemoryOutStreamD1Ev
     /tmp/ccVroVe9.s:1188   .text:00000000000005de _ZN8UnitTest12_GLOBAL__N_171DeferredTestReporterFixtureReportTestStartCreatesANewDeferredTestHelper7RunImplEv
     /tmp/ccVroVe9.s:5122   .text._ZNKSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EE4sizeEv:0000000000000000 _ZNKSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EE4sizeEv
     /tmp/ccVroVe9.s:5158   .text._ZN8UnitTest10CheckEqualIiiEEvRNS_11TestResultsERKT_RKT0_RKNS_11TestDetailsE:0000000000000000 _ZN8UnitTest10CheckEqualIiiEEvRNS_11TestResultsERKT_RKT0_RKNS_11TestDetailsE
     /tmp/ccVroVe9.s:1322   .text:00000000000006ba _ZN8UnitTest12_GLOBAL__N_172DeferredTestReporterFixtureReportTestStartCapturesTestNameAndSuiteHelperC2ERKNS_11TestDetailsE
     /tmp/ccVroVe9.s:1322   .text:00000000000006ba _ZN8UnitTest12_GLOBAL__N_172DeferredTestReporterFixtureReportTestStartCapturesTestNameAndSuiteHelperC1ERKNS_11TestDetailsE
     /tmp/ccVroVe9.s:1357   .text:00000000000006e4 _ZN8UnitTest12_GLOBAL__N_170TestDeferredTestReporterFixtureReportTestStartCapturesTestNameAndSuiteC2Ev
     /tmp/ccVroVe9.s:9058   .rodata:00000000000006a0 _ZTVN8UnitTest12_GLOBAL__N_170TestDeferredTestReporterFixtureReportTestStartCapturesTestNameAndSuiteE
     /tmp/ccVroVe9.s:1357   .text:00000000000006e4 _ZN8UnitTest12_GLOBAL__N_170TestDeferredTestReporterFixtureReportTestStartCapturesTestNameAndSuiteC1Ev
     /tmp/ccVroVe9.s:1389   .bss:0000000000000040 _ZN8UnitTest12_GLOBAL__N_178testDeferredTestReporterFixtureReportTestStartCapturesTestNameAndSuiteInstanceE
     /tmp/ccVroVe9.s:1389   .bss:0000000000000078 _ZN8UnitTest12_GLOBAL__N_171adderDeferredTestReporterFixtureReportTestStartCapturesTestNameAndSuiteE
     /tmp/ccVroVe9.s:1394   .text:0000000000000722 _ZN8UnitTest12_GLOBAL__N_172DeferredTestReporterFixtureReportTestStartCapturesTestNameAndSuiteHelperD2Ev
     /tmp/ccVroVe9.s:1394   .text:0000000000000722 _ZN8UnitTest12_GLOBAL__N_172DeferredTestReporterFixtureReportTestStartCapturesTestNameAndSuiteHelperD1Ev
     /tmp/ccVroVe9.s:1420   .text:000000000000073c _ZNK8UnitTest12_GLOBAL__N_170TestDeferredTestReporterFixtureReportTestStartCapturesTestNameAndSuite7RunImplEv
     /tmp/ccVroVe9.s:5287   .text:0000000000002336 _ZN8UnitTest11ExecuteTestINS_12_GLOBAL__N_172DeferredTestReporterFixtureReportTestStartCapturesTestNameAndSuiteHelperEEEvRT_RKNS_11TestDetailsE
     /tmp/ccVroVe9.s:1765   .text:0000000000000a1e _ZN8UnitTest12_GLOBAL__N_172DeferredTestReporterFixtureReportTestStartCapturesTestNameAndSuiteHelper7RunImplEv
     /tmp/ccVroVe9.s:5634   .text._ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EE2atEm:0000000000000000 _ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EE2atEm
     /tmp/ccVroVe9.s:5668   .text._ZN8UnitTest10CheckEqualIPKcSsEEvRNS_11TestResultsERKT_RKT0_RKNS_11TestDetailsE:0000000000000000 _ZN8UnitTest10CheckEqualIPKcSsEEvRNS_11TestResultsERKT_RKT0_RKNS_11TestDetailsE
     /tmp/ccVroVe9.s:1987   .text:0000000000000bca _ZN8UnitTest12_GLOBAL__N_162DeferredTestReporterFixtureReportTestEndCapturesTestTimeHelperC2ERKNS_11TestDetailsE
     /tmp/ccVroVe9.s:1987   .text:0000000000000bca _ZN8UnitTest12_GLOBAL__N_162DeferredTestReporterFixtureReportTestEndCapturesTestTimeHelperC1ERKNS_11TestDetailsE
     /tmp/ccVroVe9.s:2021   .text:0000000000000bf4 _ZN8UnitTest12_GLOBAL__N_160TestDeferredTestReporterFixtureReportTestEndCapturesTestTimeC2Ev
     /tmp/ccVroVe9.s:8984   .rodata:0000000000000660 _ZTVN8UnitTest12_GLOBAL__N_160TestDeferredTestReporterFixtureReportTestEndCapturesTestTimeE
     /tmp/ccVroVe9.s:2021   .text:0000000000000bf4 _ZN8UnitTest12_GLOBAL__N_160TestDeferredTestReporterFixtureReportTestEndCapturesTestTimeC1Ev
     /tmp/ccVroVe9.s:2053   .bss:0000000000000080 _ZN8UnitTest12_GLOBAL__N_168testDeferredTestReporterFixtureReportTestEndCapturesTestTimeInstanceE
     /tmp/ccVroVe9.s:2053   .bss:00000000000000b8 _ZN8UnitTest12_GLOBAL__N_161adderDeferredTestReporterFixtureReportTestEndCapturesTestTimeE
     /tmp/ccVroVe9.s:2058   .text:0000000000000c32 _ZN8UnitTest12_GLOBAL__N_162DeferredTestReporterFixtureReportTestEndCapturesTestTimeHelperD2Ev
     /tmp/ccVroVe9.s:2058   .text:0000000000000c32 _ZN8UnitTest12_GLOBAL__N_162DeferredTestReporterFixtureReportTestEndCapturesTestTimeHelperD1Ev
     /tmp/ccVroVe9.s:2084   .text:0000000000000c4c _ZNK8UnitTest12_GLOBAL__N_160TestDeferredTestReporterFixtureReportTestEndCapturesTestTime7RunImplEv
     /tmp/ccVroVe9.s:5795   .text:00000000000025ce _ZN8UnitTest11ExecuteTestINS_12_GLOBAL__N_162DeferredTestReporterFixtureReportTestEndCapturesTestTimeHelperEEEvRT_RKNS_11TestDetailsE
     /tmp/ccVroVe9.s:2426   .text:0000000000000f2e _ZN8UnitTest12_GLOBAL__N_162DeferredTestReporterFixtureReportTestEndCapturesTestTimeHelper7RunImplEv
     /tmp/ccVroVe9.s:6144   .text._ZN8UnitTest10CheckCloseIfffEEvRNS_11TestResultsERKT_RKT0_RKT1_RKNS_11TestDetailsE:0000000000000000 _ZN8UnitTest10CheckCloseIfffEEvRNS_11TestResultsERKT_RKT0_RKT1_RKNS_11TestDetailsE
     /tmp/ccVroVe9.s:2583   .text:000000000000104c _ZN8UnitTest12_GLOBAL__N_165DeferredTestReporterFixtureReportFailureSavesFailureDetailsHelperC2ERKNS_11TestDetailsE
     /tmp/ccVroVe9.s:2583   .text:000000000000104c _ZN8UnitTest12_GLOBAL__N_165DeferredTestReporterFixtureReportFailureSavesFailureDetailsHelperC1ERKNS_11TestDetailsE
     /tmp/ccVroVe9.s:2618   .text:0000000000001076 _ZN8UnitTest12_GLOBAL__N_163TestDeferredTestReporterFixtureReportFailureSavesFailureDetailsC2Ev
     /tmp/ccVroVe9.s:8910   .rodata:0000000000000620 _ZTVN8UnitTest12_GLOBAL__N_163TestDeferredTestReporterFixtureReportFailureSavesFailureDetailsE
     /tmp/ccVroVe9.s:2618   .text:0000000000001076 _ZN8UnitTest12_GLOBAL__N_163TestDeferredTestReporterFixtureReportFailureSavesFailureDetailsC1Ev
     /tmp/ccVroVe9.s:2650   .bss:00000000000000c0 _ZN8UnitTest12_GLOBAL__N_171testDeferredTestReporterFixtureReportFailureSavesFailureDetailsInstanceE
     /tmp/ccVroVe9.s:2650   .bss:00000000000000f8 _ZN8UnitTest12_GLOBAL__N_164adderDeferredTestReporterFixtureReportFailureSavesFailureDetailsE
     /tmp/ccVroVe9.s:2655   .text:00000000000010b4 _ZN8UnitTest12_GLOBAL__N_165DeferredTestReporterFixtureReportFailureSavesFailureDetailsHelperD2Ev
     /tmp/ccVroVe9.s:2655   .text:00000000000010b4 _ZN8UnitTest12_GLOBAL__N_165DeferredTestReporterFixtureReportFailureSavesFailureDetailsHelperD1Ev
     /tmp/ccVroVe9.s:2681   .text:00000000000010ce _ZNK8UnitTest12_GLOBAL__N_163TestDeferredTestReporterFixtureReportFailureSavesFailureDetails7RunImplEv
     /tmp/ccVroVe9.s:6290   .text:0000000000002866 _ZN8UnitTest11ExecuteTestINS_12_GLOBAL__N_165DeferredTestReporterFixtureReportFailureSavesFailureDetailsHelperEEEvRT_RKNS_11TestDetailsE
     /tmp/ccVroVe9.s:3030   .text:00000000000013b0 _ZN8UnitTest12_GLOBAL__N_165DeferredTestReporterFixtureReportFailureSavesFailureDetailsHelper7RunImplEv
     /tmp/ccVroVe9.s:6636   .text._ZN8UnitTest5CheckIbEEbT_:0000000000000000 _ZN8UnitTest5CheckIbEEbT_
     /tmp/ccVroVe9.s:3263   .text:000000000000157e _ZN8UnitTest12_GLOBAL__N_184DeferredTestReporterFixtureReportFailureSavesFailureDetailsForMultipleFailuresHelperC2ERKNS_11TestDetailsE
     /tmp/ccVroVe9.s:3263   .text:000000000000157e _ZN8UnitTest12_GLOBAL__N_184DeferredTestReporterFixtureReportFailureSavesFailureDetailsForMultipleFailuresHelperC1ERKNS_11TestDetailsE
     /tmp/ccVroVe9.s:3298   .text:00000000000015a8 _ZN8UnitTest12_GLOBAL__N_182TestDeferredTestReporterFixtureReportFailureSavesFailureDetailsForMultipleFailuresC2Ev
     /tmp/ccVroVe9.s:8836   .rodata:00000000000005e0 _ZTVN8UnitTest12_GLOBAL__N_182TestDeferredTestReporterFixtureReportFailureSavesFailureDetailsForMultipleFailuresE
     /tmp/ccVroVe9.s:3298   .text:00000000000015a8 _ZN8UnitTest12_GLOBAL__N_182TestDeferredTestReporterFixtureReportFailureSavesFailureDetailsForMultipleFailuresC1Ev
     /tmp/ccVroVe9.s:3330   .bss:0000000000000100 _ZN8UnitTest12_GLOBAL__N_190testDeferredTestReporterFixtureReportFailureSavesFailureDetailsForMultipleFailuresInstanceE
     /tmp/ccVroVe9.s:3330   .bss:0000000000000138 _ZN8UnitTest12_GLOBAL__N_183adderDeferredTestReporterFixtureReportFailureSavesFailureDetailsForMultipleFailuresE
     /tmp/ccVroVe9.s:3335   .text:00000000000015e6 _ZN8UnitTest12_GLOBAL__N_184DeferredTestReporterFixtureReportFailureSavesFailureDetailsForMultipleFailuresHelperD2Ev
     /tmp/ccVroVe9.s:3335   .text:00000000000015e6 _ZN8UnitTest12_GLOBAL__N_184DeferredTestReporterFixtureReportFailureSavesFailureDetailsForMultipleFailuresHelperD1Ev
     /tmp/ccVroVe9.s:3361   .text:0000000000001600 _ZNK8UnitTest12_GLOBAL__N_182TestDeferredTestReporterFixtureReportFailureSavesFailureDetailsForMultipleFailures7RunImplEv
     /tmp/ccVroVe9.s:6658   .text:0000000000002afe _ZN8UnitTest11ExecuteTestINS_12_GLOBAL__N_184DeferredTestReporterFixtureReportFailureSavesFailureDetailsForMultipleFailuresHelperEEEvRT_RKNS_11TestDetailsE
     /tmp/ccVroVe9.s:3713   .text:00000000000018e2 _ZN8UnitTest12_GLOBAL__N_184DeferredTestReporterFixtureReportFailureSavesFailureDetailsForMultipleFailuresHelper7RunImplEv
     /tmp/ccVroVe9.s:7005   .text._ZNKSt6vectorISt4pairIiSsESaIS1_EE4sizeEv:0000000000000000 _ZNKSt6vectorISt4pairIiSsESaIS1_EE4sizeEv
     /tmp/ccVroVe9.s:7034   .text._ZNKSt6vectorISt4pairIiSsESaIS1_EEixEm:0000000000000000 _ZNKSt6vectorISt4pairIiSsESaIS1_EEixEm
     /tmp/ccVroVe9.s:4028   .text:0000000000001b80 _ZN8UnitTest12_GLOBAL__N_178DeferredTestReporterFixtureDeferredTestReporterTakesCopyOfFailureMessageHelperC2ERKNS_11TestDetailsE
     /tmp/ccVroVe9.s:4028   .text:0000000000001b80 _ZN8UnitTest12_GLOBAL__N_178DeferredTestReporterFixtureDeferredTestReporterTakesCopyOfFailureMessageHelperC1ERKNS_11TestDetailsE
     /tmp/ccVroVe9.s:4063   .text:0000000000001baa _ZN8UnitTest12_GLOBAL__N_176TestDeferredTestReporterFixtureDeferredTestReporterTakesCopyOfFailureMessageC2Ev
     /tmp/ccVroVe9.s:8762   .rodata:00000000000005a0 _ZTVN8UnitTest12_GLOBAL__N_176TestDeferredTestReporterFixtureDeferredTestReporterTakesCopyOfFailureMessageE
     /tmp/ccVroVe9.s:4063   .text:0000000000001baa _ZN8UnitTest12_GLOBAL__N_176TestDeferredTestReporterFixtureDeferredTestReporterTakesCopyOfFailureMessageC1Ev
     /tmp/ccVroVe9.s:4095   .bss:0000000000000140 _ZN8UnitTest12_GLOBAL__N_184testDeferredTestReporterFixtureDeferredTestReporterTakesCopyOfFailureMessageInstanceE
     /tmp/ccVroVe9.s:4095   .bss:0000000000000178 _ZN8UnitTest12_GLOBAL__N_177adderDeferredTestReporterFixtureDeferredTestReporterTakesCopyOfFailureMessageE
     /tmp/ccVroVe9.s:4100   .text:0000000000001be8 _ZN8UnitTest12_GLOBAL__N_178DeferredTestReporterFixtureDeferredTestReporterTakesCopyOfFailureMessageHelperD2Ev
     /tmp/ccVroVe9.s:4100   .text:0000000000001be8 _ZN8UnitTest12_GLOBAL__N_178DeferredTestReporterFixtureDeferredTestReporterTakesCopyOfFailureMessageHelperD1Ev
     /tmp/ccVroVe9.s:4126   .text:0000000000001c02 _ZNK8UnitTest12_GLOBAL__N_176TestDeferredTestReporterFixtureDeferredTestReporterTakesCopyOfFailureMessage7RunImplEv
     /tmp/ccVroVe9.s:7059   .text:0000000000002d96 _ZN8UnitTest11ExecuteTestINS_12_GLOBAL__N_178DeferredTestReporterFixtureDeferredTestReporterTakesCopyOfFailureMessageHelperEEEvRT_RKNS_11TestDetailsE
     /tmp/ccVroVe9.s:4472   .text:0000000000001ee4 _ZN8UnitTest12_GLOBAL__N_178DeferredTestReporterFixtureDeferredTestReporterTakesCopyOfFailureMessageHelper7RunImplEv
     /tmp/ccVroVe9.s:7406   .text._ZNKSt6vectorISt4pairIiSsESaIS1_EE2atEm:0000000000000000 _ZNKSt6vectorISt4pairIiSsESaIS1_EE2atEm
     /tmp/ccVroVe9.s:4656   .text._ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EEC2Ev:0000000000000000 _ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EEC2Ev
     /tmp/ccVroVe9.s:7470   .text._ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EEC2Ev:0000000000000000 _ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EEC2Ev
     /tmp/ccVroVe9.s:4686   .text._ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EED2Ev:0000000000000000 _ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EED2Ev
     /tmp/ccVroVe9.s:7585   .text._ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE19_M_get_Tp_allocatorEv:0000000000000000 _ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE19_M_get_Tp_allocatorEv
     /tmp/ccVroVe9.s:7606   .text._ZSt8_DestroyIPN8UnitTest18DeferredTestResultES1_EvT_S3_RSaIT0_E:0000000000000000 _ZSt8_DestroyIPN8UnitTest18DeferredTestResultES1_EvT_S3_RSaIT0_E
     /tmp/ccVroVe9.s:7499   .text._ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EED2Ev:0000000000000000 _ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EED2Ev
     /tmp/ccVroVe9.s:7640   .text._ZNKSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EE14_M_range_checkEm:0000000000000000 _ZNKSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EE14_M_range_checkEm
     /tmp/ccVroVe9.s:7675   .text._ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EEixEm:0000000000000000 _ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EEixEm
     /tmp/ccVroVe9.s:7704   .text._ZSteqIcSt11char_traitsIcESaIcEEbPKT_RKSbIS3_T0_T1_E:0000000000000000 _ZSteqIcSt11char_traitsIcESaIcEEbPKT_RKSbIS3_T0_T1_E
     /tmp/ccVroVe9.s:7734   .text._ZN8UnitTest8AreCloseIfffEEbRKT_RKT0_RKT1_:0000000000000000 _ZN8UnitTest8AreCloseIfffEEbRKT_RKT0_RKT1_
     /tmp/ccVroVe9.s:7784   .text._ZNKSt6vectorISt4pairIiSsESaIS1_EE14_M_range_checkEm:0000000000000000 _ZNKSt6vectorISt4pairIiSsESaIS1_EE14_M_range_checkEm
     /tmp/ccVroVe9.s:7441   .text._ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE12_Vector_implD2Ev:0000000000000000 _ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE12_Vector_implD2Ev
     /tmp/ccVroVe9.s:7855   .text._ZNSaIN8UnitTest18DeferredTestResultEED2Ev:0000000000000000 _ZNSaIN8UnitTest18DeferredTestResultEED2Ev
     /tmp/ccVroVe9.s:7441   .text._ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE12_Vector_implD2Ev:0000000000000000 _ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE12_Vector_implD1Ev
     /tmp/ccVroVe9.s:7819   .text._ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE12_Vector_implC2Ev:0000000000000000 _ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE12_Vector_implC1Ev
     /tmp/ccVroVe9.s:7470   .text._ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EEC2Ev:0000000000000000 _ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EEC1Ev
     /tmp/ccVroVe9.s:7885   .text._ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE13_M_deallocateEPS1_m:0000000000000000 _ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE13_M_deallocateEPS1_m
     /tmp/ccVroVe9.s:7499   .text._ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EED2Ev:0000000000000000 _ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EED1Ev
     /tmp/ccVroVe9.s:7919   .text._ZSt8_DestroyIPN8UnitTest18DeferredTestResultEEvT_S3_:0000000000000000 _ZSt8_DestroyIPN8UnitTest18DeferredTestResultEEvT_S3_
     /tmp/ccVroVe9.s:7819   .text._ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE12_Vector_implC2Ev:0000000000000000 _ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE12_Vector_implC2Ev
     /tmp/ccVroVe9.s:7950   .text._ZNSaIN8UnitTest18DeferredTestResultEEC2Ev:0000000000000000 _ZNSaIN8UnitTest18DeferredTestResultEEC2Ev
     /tmp/ccVroVe9.s:7979   .text._ZN9__gnu_cxx13new_allocatorIN8UnitTest18DeferredTestResultEED2Ev:0000000000000000 _ZN9__gnu_cxx13new_allocatorIN8UnitTest18DeferredTestResultEED2Ev
     /tmp/ccVroVe9.s:7855   .text._ZNSaIN8UnitTest18DeferredTestResultEED2Ev:0000000000000000 _ZNSaIN8UnitTest18DeferredTestResultEED1Ev
     /tmp/ccVroVe9.s:8003   .text._ZN9__gnu_cxx13new_allocatorIN8UnitTest18DeferredTestResultEE10deallocateEPS2_m:0000000000000000 _ZN9__gnu_cxx13new_allocatorIN8UnitTest18DeferredTestResultEE10deallocateEPS2_m
     /tmp/ccVroVe9.s:8029   .text._ZNSt12_Destroy_auxILb0EE9__destroyIPN8UnitTest18DeferredTestResultEEEvT_S5_:0000000000000000 _ZNSt12_Destroy_auxILb0EE9__destroyIPN8UnitTest18DeferredTestResultEEEvT_S5_
     /tmp/ccVroVe9.s:8068   .text._ZN9__gnu_cxx13new_allocatorIN8UnitTest18DeferredTestResultEEC2Ev:0000000000000000 _ZN9__gnu_cxx13new_allocatorIN8UnitTest18DeferredTestResultEEC2Ev
     /tmp/ccVroVe9.s:7950   .text._ZNSaIN8UnitTest18DeferredTestResultEEC2Ev:0000000000000000 _ZNSaIN8UnitTest18DeferredTestResultEEC1Ev
     /tmp/ccVroVe9.s:7979   .text._ZN9__gnu_cxx13new_allocatorIN8UnitTest18DeferredTestResultEED2Ev:0000000000000000 _ZN9__gnu_cxx13new_allocatorIN8UnitTest18DeferredTestResultEED1Ev
     /tmp/ccVroVe9.s:8090   .text._ZSt11__addressofIN8UnitTest18DeferredTestResultEEPT_RS2_:0000000000000000 _ZSt11__addressofIN8UnitTest18DeferredTestResultEEPT_RS2_
     /tmp/ccVroVe9.s:8230   .text._ZSt8_DestroyIN8UnitTest18DeferredTestResultEEvPT_:0000000000000000 _ZSt8_DestroyIN8UnitTest18DeferredTestResultEEvPT_
     /tmp/ccVroVe9.s:8068   .text._ZN9__gnu_cxx13new_allocatorIN8UnitTest18DeferredTestResultEEC2Ev:0000000000000000 _ZN9__gnu_cxx13new_allocatorIN8UnitTest18DeferredTestResultEEC1Ev
     /tmp/ccVroVe9.s:8114   .text._ZN8UnitTest18DeferredTestResultD2Ev:0000000000000000 _ZN8UnitTest18DeferredTestResultD2Ev
     /tmp/ccVroVe9.s:8255   .text._ZNSt6vectorISt4pairIiSsESaIS1_EED2Ev:0000000000000000 _ZNSt6vectorISt4pairIiSsESaIS1_EED1Ev
     /tmp/ccVroVe9.s:8114   .text._ZN8UnitTest18DeferredTestResultD2Ev:0000000000000000 _ZN8UnitTest18DeferredTestResultD1Ev
     /tmp/ccVroVe9.s:8255   .text._ZNSt6vectorISt4pairIiSsESaIS1_EED2Ev:0000000000000000 _ZNSt6vectorISt4pairIiSsESaIS1_EED2Ev
     /tmp/ccVroVe9.s:8452   .text._ZNSt12_Vector_baseISt4pairIiSsESaIS1_EE19_M_get_Tp_allocatorEv:0000000000000000 _ZNSt12_Vector_baseISt4pairIiSsESaIS1_EE19_M_get_Tp_allocatorEv
     /tmp/ccVroVe9.s:8473   .text._ZSt8_DestroyIPSt4pairIiSsES1_EvT_S3_RSaIT0_E:0000000000000000 _ZSt8_DestroyIPSt4pairIiSsES1_EvT_S3_RSaIT0_E
     /tmp/ccVroVe9.s:8369   .text._ZNSt12_Vector_baseISt4pairIiSsESaIS1_EED2Ev:0000000000000000 _ZNSt12_Vector_baseISt4pairIiSsESaIS1_EED2Ev
     /tmp/ccVroVe9.s:8340   .text._ZNSt12_Vector_baseISt4pairIiSsESaIS1_EE12_Vector_implD2Ev:0000000000000000 _ZNSt12_Vector_baseISt4pairIiSsESaIS1_EE12_Vector_implD2Ev
     /tmp/ccVroVe9.s:8503   .text._ZNSaISt4pairIiSsEED2Ev:0000000000000000 _ZNSaISt4pairIiSsEED2Ev
     /tmp/ccVroVe9.s:8340   .text._ZNSt12_Vector_baseISt4pairIiSsESaIS1_EE12_Vector_implD2Ev:0000000000000000 _ZNSt12_Vector_baseISt4pairIiSsESaIS1_EE12_Vector_implD1Ev
     /tmp/ccVroVe9.s:8532   .text._ZNSt12_Vector_baseISt4pairIiSsESaIS1_EE13_M_deallocateEPS1_m:0000000000000000 _ZNSt12_Vector_baseISt4pairIiSsESaIS1_EE13_M_deallocateEPS1_m
     /tmp/ccVroVe9.s:8369   .text._ZNSt12_Vector_baseISt4pairIiSsESaIS1_EED2Ev:0000000000000000 _ZNSt12_Vector_baseISt4pairIiSsESaIS1_EED1Ev
     /tmp/ccVroVe9.s:8566   .text._ZSt8_DestroyIPSt4pairIiSsEEvT_S3_:0000000000000000 _ZSt8_DestroyIPSt4pairIiSsEEvT_S3_
     /tmp/ccVroVe9.s:8597   .text._ZN9__gnu_cxx13new_allocatorISt4pairIiSsEED2Ev:0000000000000000 _ZN9__gnu_cxx13new_allocatorISt4pairIiSsEED2Ev
     /tmp/ccVroVe9.s:8503   .text._ZNSaISt4pairIiSsEED2Ev:0000000000000000 _ZNSaISt4pairIiSsEED1Ev
     /tmp/ccVroVe9.s:8620   .text._ZN9__gnu_cxx13new_allocatorISt4pairIiSsEE10deallocateEPS2_m:0000000000000000 _ZN9__gnu_cxx13new_allocatorISt4pairIiSsEE10deallocateEPS2_m
     /tmp/ccVroVe9.s:8646   .text._ZNSt12_Destroy_auxILb0EE9__destroyIPSt4pairIiSsEEEvT_S5_:0000000000000000 _ZNSt12_Destroy_auxILb0EE9__destroyIPSt4pairIiSsEEEvT_S5_
     /tmp/ccVroVe9.s:8597   .text._ZN9__gnu_cxx13new_allocatorISt4pairIiSsEED2Ev:0000000000000000 _ZN9__gnu_cxx13new_allocatorISt4pairIiSsEED1Ev
     /tmp/ccVroVe9.s:8684   .text._ZSt11__addressofISt4pairIiSsEEPT_RS2_:0000000000000000 _ZSt11__addressofISt4pairIiSsEEPT_RS2_
     /tmp/ccVroVe9.s:8737   .text._ZSt8_DestroyISt4pairIiSsEEvPT_:0000000000000000 _ZSt8_DestroyISt4pairIiSsEEvPT_
     /tmp/ccVroVe9.s:8707   .text._ZNSt4pairIiSsED2Ev:0000000000000000 _ZNSt4pairIiSsED2Ev
     /tmp/ccVroVe9.s:8707   .text._ZNSt4pairIiSsED2Ev:0000000000000000 _ZNSt4pairIiSsED1Ev
     /tmp/ccVroVe9.s:9685   .rodata:0000000000000820 _ZTIN8UnitTest12_GLOBAL__N_176TestDeferredTestReporterFixtureDeferredTestReporterTakesCopyOfFailureMessageE
     /tmp/ccVroVe9.s:8771   .text:000000000000302e _ZN8UnitTest12_GLOBAL__N_176TestDeferredTestReporterFixtureDeferredTestReporterTakesCopyOfFailureMessageD1Ev
     /tmp/ccVroVe9.s:8808   .text:0000000000003068 _ZN8UnitTest12_GLOBAL__N_176TestDeferredTestReporterFixtureDeferredTestReporterTakesCopyOfFailureMessageD0Ev
     /tmp/ccVroVe9.s:8771   .text:000000000000302e _ZN8UnitTest12_GLOBAL__N_176TestDeferredTestReporterFixtureDeferredTestReporterTakesCopyOfFailureMessageD2Ev
     /tmp/ccVroVe9.s:9678   .rodata:0000000000000800 _ZTIN8UnitTest12_GLOBAL__N_182TestDeferredTestReporterFixtureReportFailureSavesFailureDetailsForMultipleFailuresE
     /tmp/ccVroVe9.s:8845   .text:000000000000308e _ZN8UnitTest12_GLOBAL__N_182TestDeferredTestReporterFixtureReportFailureSavesFailureDetailsForMultipleFailuresD1Ev
     /tmp/ccVroVe9.s:8882   .text:00000000000030c8 _ZN8UnitTest12_GLOBAL__N_182TestDeferredTestReporterFixtureReportFailureSavesFailureDetailsForMultipleFailuresD0Ev
     /tmp/ccVroVe9.s:8845   .text:000000000000308e _ZN8UnitTest12_GLOBAL__N_182TestDeferredTestReporterFixtureReportFailureSavesFailureDetailsForMultipleFailuresD2Ev
     /tmp/ccVroVe9.s:9671   .rodata:00000000000007e0 _ZTIN8UnitTest12_GLOBAL__N_163TestDeferredTestReporterFixtureReportFailureSavesFailureDetailsE
     /tmp/ccVroVe9.s:8919   .text:00000000000030ee _ZN8UnitTest12_GLOBAL__N_163TestDeferredTestReporterFixtureReportFailureSavesFailureDetailsD1Ev
     /tmp/ccVroVe9.s:8956   .text:0000000000003128 _ZN8UnitTest12_GLOBAL__N_163TestDeferredTestReporterFixtureReportFailureSavesFailureDetailsD0Ev
     /tmp/ccVroVe9.s:8919   .text:00000000000030ee _ZN8UnitTest12_GLOBAL__N_163TestDeferredTestReporterFixtureReportFailureSavesFailureDetailsD2Ev
     /tmp/ccVroVe9.s:9664   .rodata:00000000000007c0 _ZTIN8UnitTest12_GLOBAL__N_160TestDeferredTestReporterFixtureReportTestEndCapturesTestTimeE
     /tmp/ccVroVe9.s:8993   .text:000000000000314e _ZN8UnitTest12_GLOBAL__N_160TestDeferredTestReporterFixtureReportTestEndCapturesTestTimeD1Ev
     /tmp/ccVroVe9.s:9030   .text:0000000000003188 _ZN8UnitTest12_GLOBAL__N_160TestDeferredTestReporterFixtureReportTestEndCapturesTestTimeD0Ev
     /tmp/ccVroVe9.s:8993   .text:000000000000314e _ZN8UnitTest12_GLOBAL__N_160TestDeferredTestReporterFixtureReportTestEndCapturesTestTimeD2Ev
     /tmp/ccVroVe9.s:9657   .rodata:00000000000007a0 _ZTIN8UnitTest12_GLOBAL__N_170TestDeferredTestReporterFixtureReportTestStartCapturesTestNameAndSuiteE
     /tmp/ccVroVe9.s:9067   .text:00000000000031ae _ZN8UnitTest12_GLOBAL__N_170TestDeferredTestReporterFixtureReportTestStartCapturesTestNameAndSuiteD1Ev
     /tmp/ccVroVe9.s:9104   .text:00000000000031e8 _ZN8UnitTest12_GLOBAL__N_170TestDeferredTestReporterFixtureReportTestStartCapturesTestNameAndSuiteD0Ev
     /tmp/ccVroVe9.s:9067   .text:00000000000031ae _ZN8UnitTest12_GLOBAL__N_170TestDeferredTestReporterFixtureReportTestStartCapturesTestNameAndSuiteD2Ev
     /tmp/ccVroVe9.s:9650   .rodata:0000000000000780 _ZTIN8UnitTest12_GLOBAL__N_169TestDeferredTestReporterFixtureReportTestStartCreatesANewDeferredTestE
     /tmp/ccVroVe9.s:9141   .text:000000000000320e _ZN8UnitTest12_GLOBAL__N_169TestDeferredTestReporterFixtureReportTestStartCreatesANewDeferredTestD1Ev
     /tmp/ccVroVe9.s:9178   .text:0000000000003248 _ZN8UnitTest12_GLOBAL__N_169TestDeferredTestReporterFixtureReportTestStartCreatesANewDeferredTestD0Ev
     /tmp/ccVroVe9.s:9141   .text:000000000000320e _ZN8UnitTest12_GLOBAL__N_169TestDeferredTestReporterFixtureReportTestStartCreatesANewDeferredTestD2Ev
     /tmp/ccVroVe9.s:9643   .rodata:0000000000000760 _ZTIN8UnitTest12_GLOBAL__N_124MockDeferredTestReporterE
     /tmp/ccVroVe9.s:9255   .text:00000000000032a8 _ZN8UnitTest12_GLOBAL__N_124MockDeferredTestReporterD0Ev
     /tmp/ccVroVe9.s:9218   .text:000000000000326e _ZN8UnitTest12_GLOBAL__N_124MockDeferredTestReporterD2Ev
     /tmp/ccVroVe9.s:9535   .rodata._ZTIN8UnitTest15MemoryOutStreamE:0000000000000000 _ZTIN8UnitTest15MemoryOutStreamE
     /tmp/ccVroVe9.s:9440   .text._ZN8UnitTest15MemoryOutStreamD0Ev:0000000000000000 _ZN8UnitTest15MemoryOutStreamD0Ev
     /tmp/ccVroVe9.s:9426   .text._ZN8UnitTest15MemoryOutStreamD1Ev:00000000000000c8 _ZTv0_n24_N8UnitTest15MemoryOutStreamD1Ev
     /tmp/ccVroVe9.s:9467   .text._ZN8UnitTest15MemoryOutStreamD0Ev:0000000000000026 _ZTv0_n24_N8UnitTest15MemoryOutStreamD0Ev
     /tmp/ccVroVe9.s:9495   .rodata._ZTCN8UnitTest15MemoryOutStreamE0_St19basic_ostringstreamIcSt11char_traitsIcESaIcEE:0000000000000000 _ZTCN8UnitTest15MemoryOutStreamE0_St19basic_ostringstreamIcSt11char_traitsIcESaIcEE
     /tmp/ccVroVe9.s:9512   .rodata._ZTCN8UnitTest15MemoryOutStreamE0_So:0000000000000000 _ZTCN8UnitTest15MemoryOutStreamE0_So
     /tmp/ccVroVe9.s:9528   .rodata._ZTSN8UnitTest15MemoryOutStreamE:0000000000000000 _ZTSN8UnitTest15MemoryOutStreamE
     /tmp/ccVroVe9.s:9541   .text:00000000000032ce _Z41__static_initialization_and_destruction_0ii
     /tmp/ccVroVe9.s:9722   .rodata:0000000000000b00 _ZTSN8UnitTest12_GLOBAL__N_124MockDeferredTestReporterE
     /tmp/ccVroVe9.s:9717   .rodata:0000000000000a80 _ZTSN8UnitTest12_GLOBAL__N_169TestDeferredTestReporterFixtureReportTestStartCreatesANewDeferredTestE
     /tmp/ccVroVe9.s:9712   .rodata:0000000000000a00 _ZTSN8UnitTest12_GLOBAL__N_170TestDeferredTestReporterFixtureReportTestStartCapturesTestNameAndSuiteE
     /tmp/ccVroVe9.s:9707   .rodata:00000000000009a0 _ZTSN8UnitTest12_GLOBAL__N_160TestDeferredTestReporterFixtureReportTestEndCapturesTestTimeE
     /tmp/ccVroVe9.s:9702   .rodata:0000000000000940 _ZTSN8UnitTest12_GLOBAL__N_163TestDeferredTestReporterFixtureReportFailureSavesFailureDetailsE
     /tmp/ccVroVe9.s:9697   .rodata:00000000000008c0 _ZTSN8UnitTest12_GLOBAL__N_182TestDeferredTestReporterFixtureReportFailureSavesFailureDetailsForMultipleFailuresE
     /tmp/ccVroVe9.s:9692   .rodata:0000000000000840 _ZTSN8UnitTest12_GLOBAL__N_176TestDeferredTestReporterFixtureDeferredTestReporterTakesCopyOfFailureMessageE
     /tmp/ccVroVe9.s:9726   .text:0000000000003433 _GLOBAL__sub_I_TestDeferredTestReporter.cpp
     /tmp/ccVroVe9.s:9752   .rodata:0000000000000b38 _ZZL18__gthread_active_pvE20__gthread_active_ptr
                           .group:0000000000000000 _ZN8UnitTest12TestReporterC5Ev
                           .group:0000000000000000 _ZN8UnitTest20DeferredTestReporterC5Ev
                           .group:0000000000000000 _ZN8UnitTest20DeferredTestReporterD5Ev
                           .group:0000000000000000 _ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EEC5Ev
                           .group:0000000000000000 _ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EED5Ev
                           .group:0000000000000000 _ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE12_Vector_implD5Ev
                           .group:0000000000000000 _ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EEC5Ev
                           .group:0000000000000000 _ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EED5Ev
                           .group:0000000000000000 _ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE12_Vector_implC5Ev
                           .group:0000000000000000 _ZNSaIN8UnitTest18DeferredTestResultEED5Ev
                           .group:0000000000000000 _ZNSaIN8UnitTest18DeferredTestResultEEC5Ev
                           .group:0000000000000000 _ZN9__gnu_cxx13new_allocatorIN8UnitTest18DeferredTestResultEED5Ev
                           .group:0000000000000000 _ZN9__gnu_cxx13new_allocatorIN8UnitTest18DeferredTestResultEEC5Ev
                           .group:0000000000000000 _ZN8UnitTest18DeferredTestResultD5Ev
                           .group:0000000000000000 _ZNSt6vectorISt4pairIiSsESaIS1_EED5Ev
                           .group:0000000000000000 _ZNSt12_Vector_baseISt4pairIiSsESaIS1_EE12_Vector_implD5Ev
                           .group:0000000000000000 _ZNSt12_Vector_baseISt4pairIiSsESaIS1_EED5Ev
                           .group:0000000000000000 _ZNSaISt4pairIiSsEED5Ev
                           .group:0000000000000000 _ZN9__gnu_cxx13new_allocatorISt4pairIiSsEED5Ev
                           .group:0000000000000000 _ZNSt4pairIiSsED5Ev

UNDEFINED SYMBOLS
__gxx_personality_v0
_ZNSt9basic_iosIcSt11char_traitsIcEEC2Ev
_ZNSt19basic_ostringstreamIcSt11char_traitsIcESaIcEEC2ESt13_Ios_Openmode
_ZNSsC1Ev
_ZNSt19basic_ostringstreamIcSt11char_traitsIcESaIcEED2Ev
_ZNSt9basic_iosIcSt11char_traitsIcEED2Ev
_Unwind_Resume
_ZTVN8UnitTest12TestReporterE
_ZTVN8UnitTest20DeferredTestReporterE
_ZN8UnitTest12TestReporterD2Ev
_ZdlPv
_ZNSaIcEC1Ev
_ZNSsC1EPKcRKSaIcE
_ZNSaIcED1Ev
_ZNKSs5c_strEv
_ZN8UnitTest11TestDetailsC1EPKcS2_S2_i
_ZNSsD1Ev
_ZN8UnitTest4TestC2EPKcS2_S2_i
__cxa_end_catch
__cxa_begin_catch
_ZNK8UnitTest15AssertException10LineNumberEv
_ZNK8UnitTest15AssertException8FilenameEv
_ZN8UnitTest11CurrentTest7ResultsEv
_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
_ZNK8UnitTest15MemoryOutStream7GetTextEv
_ZN8UnitTest11TestDetailsC1ERKS0_i
_ZTISt9exception
_ZTIN8UnitTest15AssertExceptionE
_ZN8UnitTest20DeferredTestReporter15ReportTestStartERKNS_11TestDetailsE
_ZN8UnitTest11CurrentTest7DetailsEv
_ZN8UnitTest20DeferredTestReporter10GetResultsEv
_ZN8UnitTest20DeferredTestReporter16ReportTestFinishERKNS_11TestDetailsEf
_ZN8UnitTest20DeferredTestReporter13ReportFailureERKNS_11TestDetailsEPKc
strcpy
__stack_chk_fail
_ZN8UnitTest16SignalTranslatorC1Ev
_ZN8UnitTest16SignalTranslator12s_jumpTargetE
__sigsetjmp
__cxa_allocate_exception
_ZTIPKc
__cxa_throw
_ZN8UnitTest16SignalTranslatorD1Ev
_ZNSolsEi
_ZStlsIcSt11char_traitsIcESaIcEERSt13basic_ostreamIT_T0_ES7_RKSbIS4_S5_T1_E
_ZNSolsEf
_ZSt20__throw_out_of_rangePKc
_ZNKSs7compareEPKc
_ZN8UnitTest4TestD2Ev
_ZTISt19basic_ostringstreamIcSt11char_traitsIcESaIcEE
_ZNSt19basic_ostringstreamIcSt11char_traitsIcESaIcEED1Ev
_ZNSt19basic_ostringstreamIcSt11char_traitsIcESaIcEED0Ev
_ZTv0_n24_NSt19basic_ostringstreamIcSt11char_traitsIcESaIcEED1Ev
_ZTv0_n24_NSt19basic_ostringstreamIcSt11char_traitsIcESaIcEED0Ev
_ZTISo
_ZNSoD1Ev
_ZNSoD0Ev
_ZTv0_n24_NSoD1Ev
_ZTv0_n24_NSoD0Ev
_ZTVN10__cxxabiv120__si_class_type_infoE
__dso_handle
__cxa_atexit
_ZN8UnitTest4Test11GetTestListEv
_ZN8UnitTest9ListAdderC1ERNS_8TestListEPNS_4TestE
_ZTIN8UnitTest20DeferredTestReporterE
_ZTIN8UnitTest4TestE
__pthread_key_create
