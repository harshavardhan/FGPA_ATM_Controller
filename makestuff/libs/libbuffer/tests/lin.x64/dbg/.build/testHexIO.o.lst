   1              		.file	"testHexIO.cpp"
   2              		.text
   3              	.Ltext0:
   4              		.section	.text._ZStorSt13_Ios_OpenmodeS_,"axG",@progbits,_ZStorSt13_Ios_OpenmodeS_,comdat
   5              		.weak	_ZStorSt13_Ios_OpenmodeS_
   7              	_ZStorSt13_Ios_OpenmodeS_:
   8              	.LFB595:
   9              		.file 1 "/usr/include/c++/4.8/bits/ios_base.h"
   1:/usr/include/c++/4.8/bits/ios_base.h **** // Iostreams base classes -*- C++ -*-
   2:/usr/include/c++/4.8/bits/ios_base.h **** 
   3:/usr/include/c++/4.8/bits/ios_base.h **** // Copyright (C) 1997-2013 Free Software Foundation, Inc.
   4:/usr/include/c++/4.8/bits/ios_base.h **** //
   5:/usr/include/c++/4.8/bits/ios_base.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/c++/4.8/bits/ios_base.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/4.8/bits/ios_base.h **** // terms of the GNU General Public License as published by the
   8:/usr/include/c++/4.8/bits/ios_base.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/4.8/bits/ios_base.h **** // any later version.
  10:/usr/include/c++/4.8/bits/ios_base.h **** 
  11:/usr/include/c++/4.8/bits/ios_base.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/c++/4.8/bits/ios_base.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/c++/4.8/bits/ios_base.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/4.8/bits/ios_base.h **** // GNU General Public License for more details.
  15:/usr/include/c++/4.8/bits/ios_base.h **** 
  16:/usr/include/c++/4.8/bits/ios_base.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/c++/4.8/bits/ios_base.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/4.8/bits/ios_base.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/4.8/bits/ios_base.h **** 
  20:/usr/include/c++/4.8/bits/ios_base.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/c++/4.8/bits/ios_base.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/c++/4.8/bits/ios_base.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/4.8/bits/ios_base.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/c++/4.8/bits/ios_base.h **** 
  25:/usr/include/c++/4.8/bits/ios_base.h **** /** @file bits/ios_base.h
  26:/usr/include/c++/4.8/bits/ios_base.h ****  *  This is an internal header file, included by other library headers.
  27:/usr/include/c++/4.8/bits/ios_base.h ****  *  Do not attempt to use it directly. @headername{ios}
  28:/usr/include/c++/4.8/bits/ios_base.h ****  */
  29:/usr/include/c++/4.8/bits/ios_base.h **** 
  30:/usr/include/c++/4.8/bits/ios_base.h **** //
  31:/usr/include/c++/4.8/bits/ios_base.h **** // ISO C++ 14882: 27.4  Iostreams base classes
  32:/usr/include/c++/4.8/bits/ios_base.h **** //
  33:/usr/include/c++/4.8/bits/ios_base.h **** 
  34:/usr/include/c++/4.8/bits/ios_base.h **** #ifndef _IOS_BASE_H
  35:/usr/include/c++/4.8/bits/ios_base.h **** #define _IOS_BASE_H 1
  36:/usr/include/c++/4.8/bits/ios_base.h **** 
  37:/usr/include/c++/4.8/bits/ios_base.h **** #pragma GCC system_header
  38:/usr/include/c++/4.8/bits/ios_base.h **** 
  39:/usr/include/c++/4.8/bits/ios_base.h **** #include <ext/atomicity.h>
  40:/usr/include/c++/4.8/bits/ios_base.h **** #include <bits/localefwd.h>
  41:/usr/include/c++/4.8/bits/ios_base.h **** #include <bits/locale_classes.h>
  42:/usr/include/c++/4.8/bits/ios_base.h **** 
  43:/usr/include/c++/4.8/bits/ios_base.h **** namespace std _GLIBCXX_VISIBILITY(default)
  44:/usr/include/c++/4.8/bits/ios_base.h **** {
  45:/usr/include/c++/4.8/bits/ios_base.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  46:/usr/include/c++/4.8/bits/ios_base.h **** 
  47:/usr/include/c++/4.8/bits/ios_base.h ****   // The following definitions of bitmask types are enums, not ints,
  48:/usr/include/c++/4.8/bits/ios_base.h ****   // as permitted (but not required) in the standard, in order to provide
  49:/usr/include/c++/4.8/bits/ios_base.h ****   // better type safety in iostream calls.  A side effect is that
  50:/usr/include/c++/4.8/bits/ios_base.h ****   // expressions involving them are no longer compile-time constants.
  51:/usr/include/c++/4.8/bits/ios_base.h ****   enum _Ios_Fmtflags 
  52:/usr/include/c++/4.8/bits/ios_base.h ****     { 
  53:/usr/include/c++/4.8/bits/ios_base.h ****       _S_boolalpha 	= 1L << 0,
  54:/usr/include/c++/4.8/bits/ios_base.h ****       _S_dec 		= 1L << 1,
  55:/usr/include/c++/4.8/bits/ios_base.h ****       _S_fixed 		= 1L << 2,
  56:/usr/include/c++/4.8/bits/ios_base.h ****       _S_hex 		= 1L << 3,
  57:/usr/include/c++/4.8/bits/ios_base.h ****       _S_internal 	= 1L << 4,
  58:/usr/include/c++/4.8/bits/ios_base.h ****       _S_left 		= 1L << 5,
  59:/usr/include/c++/4.8/bits/ios_base.h ****       _S_oct 		= 1L << 6,
  60:/usr/include/c++/4.8/bits/ios_base.h ****       _S_right 		= 1L << 7,
  61:/usr/include/c++/4.8/bits/ios_base.h ****       _S_scientific 	= 1L << 8,
  62:/usr/include/c++/4.8/bits/ios_base.h ****       _S_showbase 	= 1L << 9,
  63:/usr/include/c++/4.8/bits/ios_base.h ****       _S_showpoint 	= 1L << 10,
  64:/usr/include/c++/4.8/bits/ios_base.h ****       _S_showpos 	= 1L << 11,
  65:/usr/include/c++/4.8/bits/ios_base.h ****       _S_skipws 	= 1L << 12,
  66:/usr/include/c++/4.8/bits/ios_base.h ****       _S_unitbuf 	= 1L << 13,
  67:/usr/include/c++/4.8/bits/ios_base.h ****       _S_uppercase 	= 1L << 14,
  68:/usr/include/c++/4.8/bits/ios_base.h ****       _S_adjustfield 	= _S_left | _S_right | _S_internal,
  69:/usr/include/c++/4.8/bits/ios_base.h ****       _S_basefield 	= _S_dec | _S_oct | _S_hex,
  70:/usr/include/c++/4.8/bits/ios_base.h ****       _S_floatfield 	= _S_scientific | _S_fixed,
  71:/usr/include/c++/4.8/bits/ios_base.h ****       _S_ios_fmtflags_end = 1L << 16,
  72:/usr/include/c++/4.8/bits/ios_base.h ****       _S_ios_fmtflags_max = __INT_MAX__,
  73:/usr/include/c++/4.8/bits/ios_base.h ****       _S_ios_fmtflags_min = ~__INT_MAX__
  74:/usr/include/c++/4.8/bits/ios_base.h ****     };
  75:/usr/include/c++/4.8/bits/ios_base.h **** 
  76:/usr/include/c++/4.8/bits/ios_base.h ****   inline _GLIBCXX_CONSTEXPR _Ios_Fmtflags
  77:/usr/include/c++/4.8/bits/ios_base.h ****   operator&(_Ios_Fmtflags __a, _Ios_Fmtflags __b)
  78:/usr/include/c++/4.8/bits/ios_base.h ****   { return _Ios_Fmtflags(static_cast<int>(__a) & static_cast<int>(__b)); }
  79:/usr/include/c++/4.8/bits/ios_base.h **** 
  80:/usr/include/c++/4.8/bits/ios_base.h ****   inline _GLIBCXX_CONSTEXPR _Ios_Fmtflags
  81:/usr/include/c++/4.8/bits/ios_base.h ****   operator|(_Ios_Fmtflags __a, _Ios_Fmtflags __b)
  82:/usr/include/c++/4.8/bits/ios_base.h ****   { return _Ios_Fmtflags(static_cast<int>(__a) | static_cast<int>(__b)); }
  83:/usr/include/c++/4.8/bits/ios_base.h **** 
  84:/usr/include/c++/4.8/bits/ios_base.h ****   inline _GLIBCXX_CONSTEXPR _Ios_Fmtflags
  85:/usr/include/c++/4.8/bits/ios_base.h ****   operator^(_Ios_Fmtflags __a, _Ios_Fmtflags __b)
  86:/usr/include/c++/4.8/bits/ios_base.h ****   { return _Ios_Fmtflags(static_cast<int>(__a) ^ static_cast<int>(__b)); }
  87:/usr/include/c++/4.8/bits/ios_base.h **** 
  88:/usr/include/c++/4.8/bits/ios_base.h ****   inline _GLIBCXX_CONSTEXPR _Ios_Fmtflags
  89:/usr/include/c++/4.8/bits/ios_base.h ****   operator~(_Ios_Fmtflags __a)
  90:/usr/include/c++/4.8/bits/ios_base.h ****   { return _Ios_Fmtflags(~static_cast<int>(__a)); }
  91:/usr/include/c++/4.8/bits/ios_base.h **** 
  92:/usr/include/c++/4.8/bits/ios_base.h ****   inline const _Ios_Fmtflags&
  93:/usr/include/c++/4.8/bits/ios_base.h ****   operator|=(_Ios_Fmtflags& __a, _Ios_Fmtflags __b)
  94:/usr/include/c++/4.8/bits/ios_base.h ****   { return __a = __a | __b; }
  95:/usr/include/c++/4.8/bits/ios_base.h **** 
  96:/usr/include/c++/4.8/bits/ios_base.h ****   inline const _Ios_Fmtflags&
  97:/usr/include/c++/4.8/bits/ios_base.h ****   operator&=(_Ios_Fmtflags& __a, _Ios_Fmtflags __b)
  98:/usr/include/c++/4.8/bits/ios_base.h ****   { return __a = __a & __b; }
  99:/usr/include/c++/4.8/bits/ios_base.h **** 
 100:/usr/include/c++/4.8/bits/ios_base.h ****   inline const _Ios_Fmtflags&
 101:/usr/include/c++/4.8/bits/ios_base.h ****   operator^=(_Ios_Fmtflags& __a, _Ios_Fmtflags __b)
 102:/usr/include/c++/4.8/bits/ios_base.h ****   { return __a = __a ^ __b; }
 103:/usr/include/c++/4.8/bits/ios_base.h **** 
 104:/usr/include/c++/4.8/bits/ios_base.h **** 
 105:/usr/include/c++/4.8/bits/ios_base.h ****   enum _Ios_Openmode 
 106:/usr/include/c++/4.8/bits/ios_base.h ****     { 
 107:/usr/include/c++/4.8/bits/ios_base.h ****       _S_app 		= 1L << 0,
 108:/usr/include/c++/4.8/bits/ios_base.h ****       _S_ate 		= 1L << 1,
 109:/usr/include/c++/4.8/bits/ios_base.h ****       _S_bin 		= 1L << 2,
 110:/usr/include/c++/4.8/bits/ios_base.h ****       _S_in 		= 1L << 3,
 111:/usr/include/c++/4.8/bits/ios_base.h ****       _S_out 		= 1L << 4,
 112:/usr/include/c++/4.8/bits/ios_base.h ****       _S_trunc 		= 1L << 5,
 113:/usr/include/c++/4.8/bits/ios_base.h ****       _S_ios_openmode_end = 1L << 16,
 114:/usr/include/c++/4.8/bits/ios_base.h ****       _S_ios_openmode_max = __INT_MAX__,
 115:/usr/include/c++/4.8/bits/ios_base.h ****       _S_ios_openmode_min = ~__INT_MAX__
 116:/usr/include/c++/4.8/bits/ios_base.h ****     };
 117:/usr/include/c++/4.8/bits/ios_base.h **** 
 118:/usr/include/c++/4.8/bits/ios_base.h ****   inline _GLIBCXX_CONSTEXPR _Ios_Openmode
 119:/usr/include/c++/4.8/bits/ios_base.h ****   operator&(_Ios_Openmode __a, _Ios_Openmode __b)
 120:/usr/include/c++/4.8/bits/ios_base.h ****   { return _Ios_Openmode(static_cast<int>(__a) & static_cast<int>(__b)); }
 121:/usr/include/c++/4.8/bits/ios_base.h **** 
 122:/usr/include/c++/4.8/bits/ios_base.h ****   inline _GLIBCXX_CONSTEXPR _Ios_Openmode
 123:/usr/include/c++/4.8/bits/ios_base.h ****   operator|(_Ios_Openmode __a, _Ios_Openmode __b)
 124:/usr/include/c++/4.8/bits/ios_base.h ****   { return _Ios_Openmode(static_cast<int>(__a) | static_cast<int>(__b)); }
  10              		.loc 1 124 0
  11              		.cfi_startproc
  12 0000 55       		pushq	%rbp
  13              		.cfi_def_cfa_offset 16
  14              		.cfi_offset 6, -16
  15 0001 4889E5   		movq	%rsp, %rbp
  16              		.cfi_def_cfa_register 6
  17 0004 897DFC   		movl	%edi, -4(%rbp)
  18 0007 8975F8   		movl	%esi, -8(%rbp)
  19              		.loc 1 124 0
  20 000a 8B45F8   		movl	-8(%rbp), %eax
  21 000d 8B55FC   		movl	-4(%rbp), %edx
  22 0010 09D0     		orl	%edx, %eax
  23 0012 5D       		popq	%rbp
  24              		.cfi_def_cfa 7, 8
  25 0013 C3       		ret
  26              		.cfi_endproc
  27              	.LFE595:
  29              		.section	.rodata
  30              	.LC0:
  31 0000 44656661 		.string	"DefaultSuite"
  31      756C7453 
  31      75697465 
  31      00
  32              		.section	.text._ZN13UnitTestSuite12GetSuiteNameEv,"axG",@progbits,_ZN13UnitTestSuite12GetSuiteName
  33              		.weak	_ZN13UnitTestSuite12GetSuiteNameEv
  35              	_ZN13UnitTestSuite12GetSuiteNameEv:
  36              	.LFB1035:
  37              		.file 2 "/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/libs/libutpp/TestSuite.h"
   1:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/libs/libutpp/TestSuite.h **** #ifndef UNITTEST_TESTSUITE_H
   2:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/libs/libutpp/TestSuite.h **** #define UNITTEST_TESTSUITE_H
   3:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/libs/libutpp/TestSuite.h **** 
   4:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/libs/libutpp/TestSuite.h **** namespace UnitTestSuite {
   5:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/libs/libutpp/TestSuite.h **** 
   6:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/libs/libutpp/TestSuite.h ****     inline char const* GetSuiteName ()
   7:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/libs/libutpp/TestSuite.h ****     {
  38              		.loc 2 7 0
  39              		.cfi_startproc
  40 0000 55       		pushq	%rbp
  41              		.cfi_def_cfa_offset 16
  42              		.cfi_offset 6, -16
  43 0001 4889E5   		movq	%rsp, %rbp
  44              		.cfi_def_cfa_register 6
   8:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/libs/libutpp/TestSuite.h ****         return "DefaultSuite";
  45              		.loc 2 8 0
  46 0004 B8000000 		movl	$.LC0, %eax
  46      00
   9:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/libs/libutpp/TestSuite.h ****     }
  47              		.loc 2 9 0
  48 0009 5D       		popq	%rbp
  49              		.cfi_def_cfa 7, 8
  50 000a C3       		ret
  51              		.cfi_endproc
  52              	.LFE1035:
  54              		.section	.text._ZN8UnitTest15MemoryOutStreamC1Ev,"axG",@progbits,_ZN8UnitTest15MemoryOutStreamC1Ev
  55              		.align 2
  56              		.weak	_ZN8UnitTest15MemoryOutStreamC1Ev
  58              	_ZN8UnitTest15MemoryOutStreamC1Ev:
  59              	.LFB1071:
  60              		.file 3 "/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/libs/libutpp/MemoryOutStream.h"
   1:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/libs/libutpp/MemoryOutStream.h **** #ifndef UNITTEST_MEMORYOUTSTREAM_H
   2:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/libs/libutpp/MemoryOutStream.h **** #define UNITTEST_MEMORYOUTSTREAM_H
   3:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/libs/libutpp/MemoryOutStream.h **** 
   4:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/libs/libutpp/MemoryOutStream.h **** #include "Config.h"
   5:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/libs/libutpp/MemoryOutStream.h **** 
   6:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/libs/libutpp/MemoryOutStream.h **** #ifndef UNITTEST_USE_CUSTOM_STREAMS
   7:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/libs/libutpp/MemoryOutStream.h **** 
   8:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/libs/libutpp/MemoryOutStream.h **** #include <sstream>
   9:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/libs/libutpp/MemoryOutStream.h **** 
  10:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/libs/libutpp/MemoryOutStream.h **** namespace UnitTest
  11:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/libs/libutpp/MemoryOutStream.h **** {
  12:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/libs/libutpp/MemoryOutStream.h **** 
  13:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/libs/libutpp/MemoryOutStream.h **** class MemoryOutStream : public std::ostringstream
  14:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/libs/libutpp/MemoryOutStream.h **** {
  15:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/libs/libutpp/MemoryOutStream.h **** public:
  16:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/libs/libutpp/MemoryOutStream.h ****     MemoryOutStream() {}
  61              		.loc 3 16 0
  62              		.cfi_startproc
  63              		.cfi_personality 0x3,__gxx_personality_v0
  64              		.cfi_lsda 0x3,.LLSDA1071
  65 0000 55       		pushq	%rbp
  66              		.cfi_def_cfa_offset 16
  67              		.cfi_offset 6, -16
  68 0001 4889E5   		movq	%rsp, %rbp
  69              		.cfi_def_cfa_register 6
  70 0004 53       		pushq	%rbx
  71 0005 4883EC18 		subq	$24, %rsp
  72              		.cfi_offset 3, -24
  73 0009 48897DE8 		movq	%rdi, -24(%rbp)
  74              	.LBB2:
  75              		.loc 3 16 0
  76 000d 488B45E8 		movq	-24(%rbp), %rax
  77 0011 4883C060 		addq	$96, %rax
  78 0015 4889C7   		movq	%rax, %rdi
  79              	.LEHB0:
  80 0018 E8000000 		call	_ZNSt9basic_iosIcSt11char_traitsIcEEC2Ev
  80      00
  81              	.LEHE0:
  82 001d B9000000 		movl	$_ZTTN8UnitTest15MemoryOutStreamE+8, %ecx
  82      00
  83 0022 488B45E8 		movq	-24(%rbp), %rax
  84 0026 BA100000 		movl	$16, %edx
  84      00
  85 002b 4889CE   		movq	%rcx, %rsi
  86 002e 4889C7   		movq	%rax, %rdi
  87              	.LEHB1:
  88 0031 E8000000 		call	_ZNSt19basic_ostringstreamIcSt11char_traitsIcESaIcEEC2ESt13_Ios_Openmode
  88      00
  89              	.LEHE1:
  90              		.loc 3 16 0 is_stmt 0 discriminator 6
  91 0036 BA000000 		movl	$_ZTVN8UnitTest15MemoryOutStreamE+24, %edx
  91      00
  92 003b 488B45E8 		movq	-24(%rbp), %rax
  93 003f 488910   		movq	%rdx, (%rax)
  94 0042 BA600000 		movl	$96, %edx
  94      00
  95 0047 488B45E8 		movq	-24(%rbp), %rax
  96 004b 4801C2   		addq	%rax, %rdx
  97 004e B8000000 		movl	$_ZTVN8UnitTest15MemoryOutStreamE+64, %eax
  97      00
  98 0053 488902   		movq	%rax, (%rdx)
  99 0056 488B45E8 		movq	-24(%rbp), %rax
 100 005a 4883C058 		addq	$88, %rax
 101 005e 4889C7   		movq	%rax, %rdi
 102              	.LEHB2:
 103 0061 E8000000 		call	_ZNSsC1Ev
 103      00
 104              	.LEHE2:
 105              	.LBE2:
 106              		.loc 3 16 0
 107 0066 EB37     		jmp	.L10
 108              	.L8:
 109 0068 4889C3   		movq	%rax, %rbx
 110              	.LBB3:
 111 006b BA000000 		movl	$_ZTTN8UnitTest15MemoryOutStreamE+8, %edx
 111      00
 112 0070 488B45E8 		movq	-24(%rbp), %rax
 113 0074 4889D6   		movq	%rdx, %rsi
 114 0077 4889C7   		movq	%rax, %rdi
 115 007a E8000000 		call	_ZNSt19basic_ostringstreamIcSt11char_traitsIcESaIcEED2Ev
 115      00
 116 007f EB03     		jmp	.L7
 117              	.L9:
 118 0081 4889C3   		movq	%rax, %rbx
 119              	.L7:
 120              		.loc 3 16 0 discriminator 19
 121 0084 488B45E8 		movq	-24(%rbp), %rax
 122 0088 4883C060 		addq	$96, %rax
 123 008c 4889C7   		movq	%rax, %rdi
 124 008f E8000000 		call	_ZNSt9basic_iosIcSt11char_traitsIcEED2Ev
 124      00
 125 0094 4889D8   		movq	%rbx, %rax
 126 0097 4889C7   		movq	%rax, %rdi
 127              	.LEHB3:
 128 009a E8000000 		call	_Unwind_Resume
 128      00
 129              	.LEHE3:
 130              	.L10:
 131              	.LBE3:
 132              		.loc 3 16 0
 133 009f 4883C418 		addq	$24, %rsp
 134 00a3 5B       		popq	%rbx
 135 00a4 5D       		popq	%rbp
 136              		.cfi_def_cfa 7, 8
 137 00a5 C3       		ret
 138              		.cfi_endproc
 139              	.LFE1071:
 140              		.globl	__gxx_personality_v0
 141              		.section	.gcc_except_table._ZN8UnitTest15MemoryOutStreamC1Ev,"aG",@progbits,_ZN8UnitTest15MemoryOu
 142              	.LLSDA1071:
 143 0000 FF       		.byte	0xff
 144 0001 FF       		.byte	0xff
 145 0002 01       		.byte	0x1
 146 0003 12       		.uleb128 .LLSDACSE1071-.LLSDACSB1071
 147              	.LLSDACSB1071:
 148 0004 18       		.uleb128 .LEHB0-.LFB1071
 149 0005 05       		.uleb128 .LEHE0-.LEHB0
 150 0006 00       		.uleb128 0
 151 0007 00       		.uleb128 0
 152 0008 31       		.uleb128 .LEHB1-.LFB1071
 153 0009 05       		.uleb128 .LEHE1-.LEHB1
 154 000a 8101     		.uleb128 .L9-.LFB1071
 155 000c 00       		.uleb128 0
 156 000d 61       		.uleb128 .LEHB2-.LFB1071
 157 000e 05       		.uleb128 .LEHE2-.LEHB2
 158 000f 68       		.uleb128 .L8-.LFB1071
 159 0010 00       		.uleb128 0
 160 0011 9A01     		.uleb128 .LEHB3-.LFB1071
 161 0013 05       		.uleb128 .LEHE3-.LEHB3
 162 0014 00       		.uleb128 0
 163 0015 00       		.uleb128 0
 164              	.LLSDACSE1071:
 165              		.section	.text._ZN8UnitTest15MemoryOutStreamC1Ev,"axG",@progbits,_ZN8UnitTest15MemoryOutStreamC1Ev
 167              		.section	.rodata
 168              	.LC1:
 169 000d 74657374 		.string	"testHexIO.cpp"
 169      48657849 
 169      4F2E6370 
 169      7000
 170              	.LC2:
 171 001b 48657849 		.string	"HexIO_testValidDataLine"
 171      4F5F7465 
 171      73745661 
 171      6C696444 
 171      6174614C 
 172              		.section	.text._ZN27TestHexIO_testValidDataLineC2Ev,"axG",@progbits,_ZN27TestHexIO_testValidDataLi
 173              		.align 2
 174              		.weak	_ZN27TestHexIO_testValidDataLineC2Ev
 176              	_ZN27TestHexIO_testValidDataLineC2Ev:
 177              	.LFB1088:
 178              		.file 4 "testHexIO.cpp"
   1:testHexIO.cpp **** /*
   2:testHexIO.cpp ****  * Copyright (C) 2009-2012 Chris McClelland
   3:testHexIO.cpp ****  *
   4:testHexIO.cpp ****  * This program is free software: you can redistribute it and/or modify
   5:testHexIO.cpp ****  * it under the terms of the GNU Lesser General Public License as published by
   6:testHexIO.cpp ****  * the Free Software Foundation, either version 3 of the License, or
   7:testHexIO.cpp ****  * (at your option) any later version.
   8:testHexIO.cpp ****  *
   9:testHexIO.cpp ****  * This program is distributed in the hope that it will be useful,
  10:testHexIO.cpp ****  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  11:testHexIO.cpp ****  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  12:testHexIO.cpp ****  * GNU Lesser General Public License for more details.
  13:testHexIO.cpp ****  *
  14:testHexIO.cpp ****  * You should have received a copy of the GNU Lesser General Public License
  15:testHexIO.cpp ****  * along with this program.  If not, see <http://www.gnu.org/licenses/>.
  16:testHexIO.cpp ****  */
  17:testHexIO.cpp **** #include <cstdarg>
  18:testHexIO.cpp **** #include <string>
  19:testHexIO.cpp **** #include <fstream>
  20:testHexIO.cpp **** #include <cstring>
  21:testHexIO.cpp **** #include <UnitTest++.h>
  22:testHexIO.cpp **** #include "../private.h"
  23:testHexIO.cpp **** #include "../libbuffer.h"
  24:testHexIO.cpp **** 
  25:testHexIO.cpp **** using namespace std;
  26:testHexIO.cpp **** 
  27:testHexIO.cpp **** TEST(HexIO_testValidDataLine) {
 179              		.loc 4 27 0 is_stmt 1
 180              		.cfi_startproc
 181 0000 55       		pushq	%rbp
 182              		.cfi_def_cfa_offset 16
 183              		.cfi_offset 6, -16
 184 0001 4889E5   		movq	%rsp, %rbp
 185              		.cfi_def_cfa_register 6
 186 0004 4883EC10 		subq	$16, %rsp
 187 0008 48897DF8 		movq	%rdi, -8(%rbp)
 188              	.LBB4:
 189              		.loc 4 27 0
 190 000c E8000000 		call	_ZN13UnitTestSuite12GetSuiteNameEv
 190      00
 191 0011 4889C2   		movq	%rax, %rdx
 192 0014 488B45F8 		movq	-8(%rbp), %rax
 193 0018 41B81B00 		movl	$27, %r8d
 193      0000
 194 001e B9000000 		movl	$.LC1, %ecx
 194      00
 195 0023 BE000000 		movl	$.LC2, %esi
 195      00
 196 0028 4889C7   		movq	%rax, %rdi
 197 002b E8000000 		call	_ZN8UnitTest4TestC2EPKcS2_S2_i
 197      00
 198 0030 488B45F8 		movq	-8(%rbp), %rax
 199 0034 48C70000 		movq	$_ZTV27TestHexIO_testValidDataLine+16, (%rax)
 199      000000
 200              	.LBE4:
 201 003b C9       		leave
 202              		.cfi_def_cfa 7, 8
 203 003c C3       		ret
 204              		.cfi_endproc
 205              	.LFE1088:
 207              		.weak	_ZN27TestHexIO_testValidDataLineC1Ev
 208              		.set	_ZN27TestHexIO_testValidDataLineC1Ev,_ZN27TestHexIO_testValidDataLineC2Ev
 209              		.globl	testHexIO_testValidDataLineInstance
 210              		.bss
 211              		.align 32
 214              	testHexIO_testValidDataLineInstance:
 215 0000 00000000 		.zero	56
 215      00000000 
 215      00000000 
 215      00000000 
 215      00000000 
 216              		.globl	adderHexIO_testValidDataLine
 219              	adderHexIO_testValidDataLine:
 220 0038 00       		.zero	1
 221              		.section	.rodata
 222              	.LC3:
 223 0033 3A303430 		.string	":040BE10075820022F7\n"
 223      42453130 
 223      30373538 
 223      32303032 
 223      3246370A 
 224              		.align 8
 225              	.LC4:
 226 0048 556E6861 		.string	"Unhandled exception in CHECK_EQUAL(BUF_SUCCESS, status)"
 226      6E646C65 
 226      64206578 
 226      63657074 
 226      696F6E20 
 227              		.align 8
 228              	.LC5:
 229 0080 556E6861 		.string	"Unhandled exception in CHECK_EQUAL(0x00, recordType)"
 229      6E646C65 
 229      64206578 
 229      63657074 
 229      696F6E20 
 230 00b5 000000   		.align 8
 231              	.LC6:
 232 00b8 556E6861 		.string	"Unhandled exception in CHECK_EQUAL(0x0BE1+4UL, data.length)"
 232      6E646C65 
 232      64206578 
 232      63657074 
 232      696F6E20 
 233 00f4 00000000 		.align 8
 234              	.LC7:
 235 00f8 556E6861 		.string	"Unhandled exception in CHECK_EQUAL(0x0BE1+4UL, mask.length)"
 235      6E646C65 
 235      64206578 
 235      63657074 
 235      696F6E20 
 236 0134 00000000 		.align 8
 237              	.LC8:
 238 0138 556E6861 		.string	"Unhandled exception in CHECK_EQUAL(4096UL, data.capacity)"
 238      6E646C65 
 238      64206578 
 238      63657074 
 238      696F6E20 
 239 0172 00000000 		.align 8
 239      0000
 240              	.LC9:
 241 0178 556E6861 		.string	"Unhandled exception in CHECK_EQUAL(4096UL, mask.capacity)"
 241      6E646C65 
 241      64206578 
 241      63657074 
 241      696F6E20 
 242 01b2 00000000 		.align 8
 242      0000
 243              	.LC10:
 244 01b8 556E6861 		.string	"Unhandled exception in CHECK_ARRAY_EQUAL(expected, data.data + 0x0BE1)"
 244      6E646C65 
 244      64206578 
 244      63657074 
 244      696F6E20 
 245              		.text
 246              		.align 2
 247              		.globl	_ZNK27TestHexIO_testValidDataLine7RunImplEv
 249              	_ZNK27TestHexIO_testValidDataLine7RunImplEv:
 250              	.LFB1090:
 251              		.loc 4 27 0
 252              		.cfi_startproc
 253              		.cfi_personality 0x3,__gxx_personality_v0
 254              		.cfi_lsda 0x3,.LLSDA1090
 255 0000 55       		pushq	%rbp
 256              		.cfi_def_cfa_offset 16
 257              		.cfi_offset 6, -16
 258 0001 4889E5   		movq	%rsp, %rbp
 259              		.cfi_def_cfa_register 6
 260 0004 53       		pushq	%rbx
 261 0005 4881ECA8 		subq	$168, %rsp
 261      000000
 262              		.cfi_offset 3, -24
 263 000c 4889BD58 		movq	%rdi, -168(%rbp)
 263      FFFFFF
 264              		.loc 4 27 0
 265 0013 64488B04 		movq	%fs:40, %rax
 265      25280000 
 265      00
 266 001c 488945E8 		movq	%rax, -24(%rbp)
 267 0020 31C0     		xorl	%eax, %eax
 268              	.LBB5:
  28:testHexIO.cpp **** 	Buffer data, mask;
  29:testHexIO.cpp **** 	BufferStatus status;
  30:testHexIO.cpp **** 	const char *line = ":040BE10075820022F7\n";
 269              		.loc 4 30 0
 270 0022 48C78578 		movq	$.LC3, -136(%rbp)
 270      FFFFFF00 
 270      000000
  31:testHexIO.cpp **** 	uint8 recordType;
  32:testHexIO.cpp **** 	uint32 seg = 0x00000000;
 271              		.loc 4 32 0
 272 002d C7856CFF 		movl	$0, -148(%rbp)
 272      FFFF0000 
 272      0000
  33:testHexIO.cpp **** 	const uint8 expected[] = {0x75, 0x82, 0x00, 0x22};
 273              		.loc 4 33 0
 274 0037 C645E075 		movb	$117, -32(%rbp)
 275 003b C645E182 		movb	$-126, -31(%rbp)
 276 003f C645E200 		movb	$0, -30(%rbp)
 277 0043 C645E322 		movb	$34, -29(%rbp)
  34:testHexIO.cpp **** 	status = bufInitialise(&data, 1024, 0x00, NULL);
 278              		.loc 4 34 0
 279 0047 488D4580 		leaq	-128(%rbp), %rax
 280 004b B9000000 		movl	$0, %ecx
 280      00
 281 0050 BA000000 		movl	$0, %edx
 281      00
 282 0055 BE000400 		movl	$1024, %esi
 282      00
 283 005a 4889C7   		movq	%rax, %rdi
 284              	.LEHB4:
 285 005d E8000000 		call	bufInitialise
 285      00
 286              	.LEHE4:
 287 0062 898568FF 		movl	%eax, -152(%rbp)
 287      FFFF
 288              	.LEHB5:
  35:testHexIO.cpp **** 	CHECK_EQUAL(BUF_SUCCESS, status);
 289              		.loc 4 35 0
 290 0068 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 290      00
 291 006d 488B08   		movq	(%rax), %rcx
 292 0070 488D45C0 		leaq	-64(%rbp), %rax
 293 0074 BA230000 		movl	$35, %edx
 293      00
 294 0079 4889CE   		movq	%rcx, %rsi
 295 007c 4889C7   		movq	%rax, %rdi
 296 007f E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 296      00
 297              		.loc 4 35 0 is_stmt 0 discriminator 1
 298 0084 C745A000 		movl	$0, -96(%rbp)
 298      000000
 299 008b E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 299      00
 300 0090 488B00   		movq	(%rax), %rax
 301 0093 488D4DC0 		leaq	-64(%rbp), %rcx
 302 0097 488D9568 		leaq	-152(%rbp), %rdx
 302      FFFFFF
 303 009e 488D75A0 		leaq	-96(%rbp), %rsi
 304 00a2 4889C7   		movq	%rax, %rdi
 305 00a5 E8000000 		call	_ZN8UnitTest10CheckEqualI12BufferStatusS1_EEvRNS_11TestResultsERKT_RKT0_RKNS_11TestDetailsE
 305      00
 306              	.LEHE5:
 307              	.L15:
  36:testHexIO.cpp **** 	status = bufInitialise(&mask, 1024, 0x00, NULL);
 308              		.loc 4 36 0 is_stmt 1
 309 00aa 488D45A0 		leaq	-96(%rbp), %rax
 310 00ae B9000000 		movl	$0, %ecx
 310      00
 311 00b3 BA000000 		movl	$0, %edx
 311      00
 312 00b8 BE000400 		movl	$1024, %esi
 312      00
 313 00bd 4889C7   		movq	%rax, %rdi
 314              	.LEHB6:
 315 00c0 E8000000 		call	bufInitialise
 315      00
 316              	.LEHE6:
 317 00c5 898568FF 		movl	%eax, -152(%rbp)
 317      FFFF
 318              	.LEHB7:
  37:testHexIO.cpp **** 	CHECK_EQUAL(BUF_SUCCESS, status);
 319              		.loc 4 37 0
 320 00cb E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 320      00
 321 00d0 488B08   		movq	(%rax), %rcx
 322 00d3 488D45C0 		leaq	-64(%rbp), %rax
 323 00d7 BA250000 		movl	$37, %edx
 323      00
 324 00dc 4889CE   		movq	%rcx, %rsi
 325 00df 4889C7   		movq	%rax, %rdi
 326 00e2 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 326      00
 327              		.loc 4 37 0 is_stmt 0 discriminator 1
 328 00e7 C78570FF 		movl	$0, -144(%rbp)
 328      FFFF0000 
 328      0000
 329 00f1 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 329      00
 330 00f6 488B00   		movq	(%rax), %rax
 331 00f9 488D4DC0 		leaq	-64(%rbp), %rcx
 332 00fd 488D9568 		leaq	-152(%rbp), %rdx
 332      FFFFFF
 333 0104 488DB570 		leaq	-144(%rbp), %rsi
 333      FFFFFF
 334 010b 4889C7   		movq	%rax, %rdi
 335 010e E8000000 		call	_ZN8UnitTest10CheckEqualI12BufferStatusS1_EEvRNS_11TestResultsERKT_RKT0_RKNS_11TestDetailsE
 335      00
 336              	.LEHE7:
 337              	.L18:
  38:testHexIO.cpp **** 	status = bufProcessLine(line, 0, &data, &mask, &seg, &recordType, NULL);
 338              		.loc 4 38 0 is_stmt 1
 339 0113 488DBD67 		leaq	-153(%rbp), %rdi
 339      FFFFFF
 340 011a 488DB56C 		leaq	-148(%rbp), %rsi
 340      FFFFFF
 341 0121 488D4DA0 		leaq	-96(%rbp), %rcx
 342 0125 488D5580 		leaq	-128(%rbp), %rdx
 343 0129 488B8578 		movq	-136(%rbp), %rax
 343      FFFFFF
 344 0130 48C70424 		movq	$0, (%rsp)
 344      00000000 
 345 0138 4989F9   		movq	%rdi, %r9
 346 013b 4989F0   		movq	%rsi, %r8
 347 013e BE000000 		movl	$0, %esi
 347      00
 348 0143 4889C7   		movq	%rax, %rdi
 349              	.LEHB8:
 350 0146 E8000000 		call	bufProcessLine
 350      00
 351              	.LEHE8:
 352 014b 898568FF 		movl	%eax, -152(%rbp)
 352      FFFF
 353              	.LEHB9:
  39:testHexIO.cpp **** 	CHECK_EQUAL(BUF_SUCCESS, status);
 354              		.loc 4 39 0
 355 0151 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 355      00
 356 0156 488B08   		movq	(%rax), %rcx
 357 0159 488D45C0 		leaq	-64(%rbp), %rax
 358 015d BA270000 		movl	$39, %edx
 358      00
 359 0162 4889CE   		movq	%rcx, %rsi
 360 0165 4889C7   		movq	%rax, %rdi
 361 0168 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 361      00
 362              		.loc 4 39 0 is_stmt 0 discriminator 1
 363 016d C78570FF 		movl	$0, -144(%rbp)
 363      FFFF0000 
 363      0000
 364 0177 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 364      00
 365 017c 488B00   		movq	(%rax), %rax
 366 017f 488D4DC0 		leaq	-64(%rbp), %rcx
 367 0183 488D9568 		leaq	-152(%rbp), %rdx
 367      FFFFFF
 368 018a 488DB570 		leaq	-144(%rbp), %rsi
 368      FFFFFF
 369 0191 4889C7   		movq	%rax, %rdi
 370 0194 E8000000 		call	_ZN8UnitTest10CheckEqualI12BufferStatusS1_EEvRNS_11TestResultsERKT_RKT0_RKNS_11TestDetailsE
 370      00
 371              	.LEHE9:
 372              	.L21:
 373              	.LEHB10:
  40:testHexIO.cpp **** 	CHECK_EQUAL(0x00, recordType);
 374              		.loc 4 40 0 is_stmt 1
 375 0199 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 375      00
 376 019e 488B08   		movq	(%rax), %rcx
 377 01a1 488D45C0 		leaq	-64(%rbp), %rax
 378 01a5 BA280000 		movl	$40, %edx
 378      00
 379 01aa 4889CE   		movq	%rcx, %rsi
 380 01ad 4889C7   		movq	%rax, %rdi
 381 01b0 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 381      00
 382              		.loc 4 40 0 is_stmt 0 discriminator 1
 383 01b5 C78570FF 		movl	$0, -144(%rbp)
 383      FFFF0000 
 383      0000
 384 01bf E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 384      00
 385 01c4 488B00   		movq	(%rax), %rax
 386 01c7 488D4DC0 		leaq	-64(%rbp), %rcx
 387 01cb 488D9567 		leaq	-153(%rbp), %rdx
 387      FFFFFF
 388 01d2 488DB570 		leaq	-144(%rbp), %rsi
 388      FFFFFF
 389 01d9 4889C7   		movq	%rax, %rdi
 390 01dc E8000000 		call	_ZN8UnitTest10CheckEqualIihEEvRNS_11TestResultsERKT_RKT0_RKNS_11TestDetailsE
 390      00
 391              	.LEHE10:
 392              	.L24:
 393              	.LEHB11:
  41:testHexIO.cpp **** 	CHECK_EQUAL(0x0BE1+4UL, data.length);
 394              		.loc 4 41 0 is_stmt 1
 395 01e1 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 395      00
 396 01e6 488B08   		movq	(%rax), %rcx
 397 01e9 488D45C0 		leaq	-64(%rbp), %rax
 398 01ed BA290000 		movl	$41, %edx
 398      00
 399 01f2 4889CE   		movq	%rcx, %rsi
 400 01f5 4889C7   		movq	%rax, %rdi
 401 01f8 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 401      00
 402              		.loc 4 41 0 is_stmt 0 discriminator 1
 403 01fd 48C78570 		movq	$3045, -144(%rbp)
 403      FFFFFFE5 
 403      0B0000
 404 0208 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 404      00
 405 020d 488B00   		movq	(%rax), %rax
 406 0210 488D55C0 		leaq	-64(%rbp), %rdx
 407 0214 488D4D80 		leaq	-128(%rbp), %rcx
 408 0218 488D7908 		leaq	8(%rcx), %rdi
 409 021c 488DB570 		leaq	-144(%rbp), %rsi
 409      FFFFFF
 410 0223 4889D1   		movq	%rdx, %rcx
 411 0226 4889FA   		movq	%rdi, %rdx
 412 0229 4889C7   		movq	%rax, %rdi
 413 022c E8000000 		call	_ZN8UnitTest10CheckEqualImmEEvRNS_11TestResultsERKT_RKT0_RKNS_11TestDetailsE
 413      00
 414              	.LEHE11:
 415              	.L27:
 416              	.LEHB12:
  42:testHexIO.cpp **** 	CHECK_EQUAL(0x0BE1+4UL, mask.length);
 417              		.loc 4 42 0 is_stmt 1
 418 0231 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 418      00
 419 0236 488B08   		movq	(%rax), %rcx
 420 0239 488D45C0 		leaq	-64(%rbp), %rax
 421 023d BA2A0000 		movl	$42, %edx
 421      00
 422 0242 4889CE   		movq	%rcx, %rsi
 423 0245 4889C7   		movq	%rax, %rdi
 424 0248 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 424      00
 425              		.loc 4 42 0 is_stmt 0 discriminator 1
 426 024d 48C78570 		movq	$3045, -144(%rbp)
 426      FFFFFFE5 
 426      0B0000
 427 0258 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 427      00
 428 025d 488B00   		movq	(%rax), %rax
 429 0260 488D55C0 		leaq	-64(%rbp), %rdx
 430 0264 488D4DA0 		leaq	-96(%rbp), %rcx
 431 0268 488D7908 		leaq	8(%rcx), %rdi
 432 026c 488DB570 		leaq	-144(%rbp), %rsi
 432      FFFFFF
 433 0273 4889D1   		movq	%rdx, %rcx
 434 0276 4889FA   		movq	%rdi, %rdx
 435 0279 4889C7   		movq	%rax, %rdi
 436 027c E8000000 		call	_ZN8UnitTest10CheckEqualImmEEvRNS_11TestResultsERKT_RKT0_RKNS_11TestDetailsE
 436      00
 437              	.LEHE12:
 438              	.L30:
 439              	.LEHB13:
  43:testHexIO.cpp **** 	CHECK_EQUAL(4096UL, data.capacity);
 440              		.loc 4 43 0 is_stmt 1
 441 0281 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 441      00
 442 0286 488B08   		movq	(%rax), %rcx
 443 0289 488D45C0 		leaq	-64(%rbp), %rax
 444 028d BA2B0000 		movl	$43, %edx
 444      00
 445 0292 4889CE   		movq	%rcx, %rsi
 446 0295 4889C7   		movq	%rax, %rdi
 447 0298 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 447      00
 448              		.loc 4 43 0 is_stmt 0 discriminator 1
 449 029d 48C78570 		movq	$4096, -144(%rbp)
 449      FFFFFF00 
 449      100000
 450 02a8 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 450      00
 451 02ad 488B00   		movq	(%rax), %rax
 452 02b0 488D55C0 		leaq	-64(%rbp), %rdx
 453 02b4 488D4D80 		leaq	-128(%rbp), %rcx
 454 02b8 488D7910 		leaq	16(%rcx), %rdi
 455 02bc 488DB570 		leaq	-144(%rbp), %rsi
 455      FFFFFF
 456 02c3 4889D1   		movq	%rdx, %rcx
 457 02c6 4889FA   		movq	%rdi, %rdx
 458 02c9 4889C7   		movq	%rax, %rdi
 459 02cc E8000000 		call	_ZN8UnitTest10CheckEqualImmEEvRNS_11TestResultsERKT_RKT0_RKNS_11TestDetailsE
 459      00
 460              	.LEHE13:
 461              	.L33:
 462              	.LEHB14:
  44:testHexIO.cpp **** 	CHECK_EQUAL(4096UL, mask.capacity);
 463              		.loc 4 44 0 is_stmt 1
 464 02d1 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 464      00
 465 02d6 488B08   		movq	(%rax), %rcx
 466 02d9 488D45C0 		leaq	-64(%rbp), %rax
 467 02dd BA2C0000 		movl	$44, %edx
 467      00
 468 02e2 4889CE   		movq	%rcx, %rsi
 469 02e5 4889C7   		movq	%rax, %rdi
 470 02e8 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 470      00
 471              		.loc 4 44 0 is_stmt 0 discriminator 1
 472 02ed 48C78570 		movq	$4096, -144(%rbp)
 472      FFFFFF00 
 472      100000
 473 02f8 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 473      00
 474 02fd 488B00   		movq	(%rax), %rax
 475 0300 488D55C0 		leaq	-64(%rbp), %rdx
 476 0304 488D4DA0 		leaq	-96(%rbp), %rcx
 477 0308 488D7910 		leaq	16(%rcx), %rdi
 478 030c 488DB570 		leaq	-144(%rbp), %rsi
 478      FFFFFF
 479 0313 4889D1   		movq	%rdx, %rcx
 480 0316 4889FA   		movq	%rdi, %rdx
 481 0319 4889C7   		movq	%rax, %rdi
 482 031c E8000000 		call	_ZN8UnitTest10CheckEqualImmEEvRNS_11TestResultsERKT_RKT0_RKNS_11TestDetailsE
 482      00
 483              	.LEHE14:
 484              	.L36:
 485              	.LEHB15:
  45:testHexIO.cpp **** 	CHECK_ARRAY_EQUAL(expected, data.data + 0x0BE1, 4);
 486              		.loc 4 45 0 is_stmt 1
 487 0321 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 487      00
 488 0326 488B08   		movq	(%rax), %rcx
 489 0329 488D45C0 		leaq	-64(%rbp), %rax
 490 032d BA2D0000 		movl	$45, %edx
 490      00
 491 0332 4889CE   		movq	%rcx, %rsi
 492 0335 4889C7   		movq	%rax, %rdi
 493 0338 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 493      00
 494              		.loc 4 45 0 is_stmt 0 discriminator 1
 495 033d 488B4580 		movq	-128(%rbp), %rax
 496 0341 4805E10B 		addq	$3041, %rax
 496      0000
 497 0347 48898570 		movq	%rax, -144(%rbp)
 497      FFFFFF
 498 034e E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 498      00
 499 0353 488B00   		movq	(%rax), %rax
 500 0356 488D4DC0 		leaq	-64(%rbp), %rcx
 501 035a 488D9570 		leaq	-144(%rbp), %rdx
 501      FFFFFF
 502 0361 488D75E0 		leaq	-32(%rbp), %rsi
 503 0365 4989C8   		movq	%rcx, %r8
 504 0368 B9040000 		movl	$4, %ecx
 504      00
 505 036d 4889C7   		movq	%rax, %rdi
 506 0370 E8000000 		call	_ZN8UnitTest15CheckArrayEqualIA4_hPhEEvRNS_11TestResultsERKT_RKT0_iRKNS_11TestDetailsE
 506      00
 507              	.LEHE15:
 508              	.L39:
  46:testHexIO.cpp **** 	bufDestroy(&mask);
 509              		.loc 4 46 0 is_stmt 1
 510 0375 488D45A0 		leaq	-96(%rbp), %rax
 511 0379 4889C7   		movq	%rax, %rdi
 512              	.LEHB16:
 513 037c E8000000 		call	bufDestroy
 513      00
  47:testHexIO.cpp **** 	bufDestroy(&data);
 514              		.loc 4 47 0
 515 0381 488D4580 		leaq	-128(%rbp), %rax
 516 0385 4889C7   		movq	%rax, %rdi
 517 0388 E8000000 		call	bufDestroy
 517      00
 518              	.LEHE16:
 519              	.LBE5:
  48:testHexIO.cpp **** }
 520              		.loc 4 48 0
 521 038d 488B45E8 		movq	-24(%rbp), %rax
 522 0391 64483304 		xorq	%fs:40, %rax
 522      25280000 
 522      00
 523 039a 0F844F03 		je	.L40
 523      0000
 524 03a0 E9450300 		jmp	.L59
 524      00
 525              	.L42:
 526 03a5 4889C3   		movq	%rax, %rbx
 527              	.LBB6:
  35:testHexIO.cpp **** 	status = bufInitialise(&mask, 1024, 0x00, NULL);
 528              		.loc 4 35 0
 529 03a8 E8000000 		call	__cxa_end_catch
 529      00
 530 03ad 4889D8   		movq	%rbx, %rax
 531 03b0 4889C7   		movq	%rax, %rdi
 532              	.LEHB17:
 533 03b3 E8000000 		call	_Unwind_Resume
 533      00
 534              	.LEHE17:
 535              	.L41:
 536 03b8 4889C7   		movq	%rax, %rdi
 537 03bb E8000000 		call	__cxa_begin_catch
 537      00
 538              	.LEHB18:
 539 03c0 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 539      00
 540 03c5 488B08   		movq	(%rax), %rcx
 541 03c8 488D45C0 		leaq	-64(%rbp), %rax
 542 03cc BA230000 		movl	$35, %edx
 542      00
 543 03d1 4889CE   		movq	%rcx, %rsi
 544 03d4 4889C7   		movq	%rax, %rdi
 545 03d7 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 545      00
  35:testHexIO.cpp **** 	status = bufInitialise(&mask, 1024, 0x00, NULL);
 546              		.loc 4 35 0 is_stmt 0 discriminator 1
 547 03dc E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 547      00
 548 03e1 488B00   		movq	(%rax), %rax
 549 03e4 488D4DC0 		leaq	-64(%rbp), %rcx
 550 03e8 BA000000 		movl	$.LC4, %edx
 550      00
 551 03ed 4889CE   		movq	%rcx, %rsi
 552 03f0 4889C7   		movq	%rax, %rdi
 553 03f3 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 553      00
 554              	.LEHE18:
 555              	.LEHB19:
 556 03f8 E8000000 		call	__cxa_end_catch
 556      00
 557              	.LEHE19:
 558 03fd E9A8FCFF 		jmp	.L15
 558      FF
 559              	.L44:
 560 0402 4889C3   		movq	%rax, %rbx
  37:testHexIO.cpp **** 	status = bufProcessLine(line, 0, &data, &mask, &seg, &recordType, NULL);
 561              		.loc 4 37 0 is_stmt 1
 562 0405 E8000000 		call	__cxa_end_catch
 562      00
 563 040a 4889D8   		movq	%rbx, %rax
 564 040d 4889C7   		movq	%rax, %rdi
 565              	.LEHB20:
 566 0410 E8000000 		call	_Unwind_Resume
 566      00
 567              	.LEHE20:
 568              	.L43:
 569 0415 4889C7   		movq	%rax, %rdi
 570 0418 E8000000 		call	__cxa_begin_catch
 570      00
 571              	.LEHB21:
 572 041d E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 572      00
 573 0422 488B08   		movq	(%rax), %rcx
 574 0425 488D45C0 		leaq	-64(%rbp), %rax
 575 0429 BA250000 		movl	$37, %edx
 575      00
 576 042e 4889CE   		movq	%rcx, %rsi
 577 0431 4889C7   		movq	%rax, %rdi
 578 0434 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 578      00
  37:testHexIO.cpp **** 	status = bufProcessLine(line, 0, &data, &mask, &seg, &recordType, NULL);
 579              		.loc 4 37 0 is_stmt 0 discriminator 1
 580 0439 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 580      00
 581 043e 488B00   		movq	(%rax), %rax
 582 0441 488D4DC0 		leaq	-64(%rbp), %rcx
 583 0445 BA000000 		movl	$.LC4, %edx
 583      00
 584 044a 4889CE   		movq	%rcx, %rsi
 585 044d 4889C7   		movq	%rax, %rdi
 586 0450 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 586      00
 587              	.LEHE21:
 588              	.LEHB22:
 589 0455 E8000000 		call	__cxa_end_catch
 589      00
 590              	.LEHE22:
 591 045a E9B4FCFF 		jmp	.L18
 591      FF
 592              	.L46:
 593 045f 4889C3   		movq	%rax, %rbx
  39:testHexIO.cpp **** 	CHECK_EQUAL(0x00, recordType);
 594              		.loc 4 39 0 is_stmt 1
 595 0462 E8000000 		call	__cxa_end_catch
 595      00
 596 0467 4889D8   		movq	%rbx, %rax
 597 046a 4889C7   		movq	%rax, %rdi
 598              	.LEHB23:
 599 046d E8000000 		call	_Unwind_Resume
 599      00
 600              	.LEHE23:
 601              	.L45:
 602 0472 4889C7   		movq	%rax, %rdi
 603 0475 E8000000 		call	__cxa_begin_catch
 603      00
 604              	.LEHB24:
 605 047a E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 605      00
 606 047f 488B08   		movq	(%rax), %rcx
 607 0482 488D45C0 		leaq	-64(%rbp), %rax
 608 0486 BA270000 		movl	$39, %edx
 608      00
 609 048b 4889CE   		movq	%rcx, %rsi
 610 048e 4889C7   		movq	%rax, %rdi
 611 0491 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 611      00
  39:testHexIO.cpp **** 	CHECK_EQUAL(0x00, recordType);
 612              		.loc 4 39 0 is_stmt 0 discriminator 1
 613 0496 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 613      00
 614 049b 488B00   		movq	(%rax), %rax
 615 049e 488D4DC0 		leaq	-64(%rbp), %rcx
 616 04a2 BA000000 		movl	$.LC4, %edx
 616      00
 617 04a7 4889CE   		movq	%rcx, %rsi
 618 04aa 4889C7   		movq	%rax, %rdi
 619 04ad E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 619      00
 620              	.LEHE24:
 621              	.LEHB25:
 622 04b2 E8000000 		call	__cxa_end_catch
 622      00
 623              	.LEHE25:
 624 04b7 E9DDFCFF 		jmp	.L21
 624      FF
 625              	.L48:
 626 04bc 4889C3   		movq	%rax, %rbx
  40:testHexIO.cpp **** 	CHECK_EQUAL(0x0BE1+4UL, data.length);
 627              		.loc 4 40 0 is_stmt 1
 628 04bf E8000000 		call	__cxa_end_catch
 628      00
 629 04c4 4889D8   		movq	%rbx, %rax
 630 04c7 4889C7   		movq	%rax, %rdi
 631              	.LEHB26:
 632 04ca E8000000 		call	_Unwind_Resume
 632      00
 633              	.LEHE26:
 634              	.L47:
 635 04cf 4889C7   		movq	%rax, %rdi
 636 04d2 E8000000 		call	__cxa_begin_catch
 636      00
 637              	.LEHB27:
 638 04d7 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 638      00
 639 04dc 488B08   		movq	(%rax), %rcx
 640 04df 488D45C0 		leaq	-64(%rbp), %rax
 641 04e3 BA280000 		movl	$40, %edx
 641      00
 642 04e8 4889CE   		movq	%rcx, %rsi
 643 04eb 4889C7   		movq	%rax, %rdi
 644 04ee E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 644      00
  40:testHexIO.cpp **** 	CHECK_EQUAL(0x0BE1+4UL, data.length);
 645              		.loc 4 40 0 is_stmt 0 discriminator 1
 646 04f3 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 646      00
 647 04f8 488B00   		movq	(%rax), %rax
 648 04fb 488D4DC0 		leaq	-64(%rbp), %rcx
 649 04ff BA000000 		movl	$.LC5, %edx
 649      00
 650 0504 4889CE   		movq	%rcx, %rsi
 651 0507 4889C7   		movq	%rax, %rdi
 652 050a E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 652      00
 653              	.LEHE27:
 654              	.LEHB28:
 655 050f E8000000 		call	__cxa_end_catch
 655      00
 656              	.LEHE28:
 657 0514 E9C8FCFF 		jmp	.L24
 657      FF
 658              	.L50:
 659 0519 4889C3   		movq	%rax, %rbx
  41:testHexIO.cpp **** 	CHECK_EQUAL(0x0BE1+4UL, mask.length);
 660              		.loc 4 41 0 is_stmt 1
 661 051c E8000000 		call	__cxa_end_catch
 661      00
 662 0521 4889D8   		movq	%rbx, %rax
 663 0524 4889C7   		movq	%rax, %rdi
 664              	.LEHB29:
 665 0527 E8000000 		call	_Unwind_Resume
 665      00
 666              	.LEHE29:
 667              	.L49:
 668 052c 4889C7   		movq	%rax, %rdi
 669 052f E8000000 		call	__cxa_begin_catch
 669      00
 670              	.LEHB30:
 671 0534 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 671      00
 672 0539 488B08   		movq	(%rax), %rcx
 673 053c 488D45C0 		leaq	-64(%rbp), %rax
 674 0540 BA290000 		movl	$41, %edx
 674      00
 675 0545 4889CE   		movq	%rcx, %rsi
 676 0548 4889C7   		movq	%rax, %rdi
 677 054b E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 677      00
  41:testHexIO.cpp **** 	CHECK_EQUAL(0x0BE1+4UL, mask.length);
 678              		.loc 4 41 0 is_stmt 0 discriminator 1
 679 0550 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 679      00
 680 0555 488B00   		movq	(%rax), %rax
 681 0558 488D4DC0 		leaq	-64(%rbp), %rcx
 682 055c BA000000 		movl	$.LC6, %edx
 682      00
 683 0561 4889CE   		movq	%rcx, %rsi
 684 0564 4889C7   		movq	%rax, %rdi
 685 0567 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 685      00
 686              	.LEHE30:
 687              	.LEHB31:
 688 056c E8000000 		call	__cxa_end_catch
 688      00
 689              	.LEHE31:
 690 0571 E9BBFCFF 		jmp	.L27
 690      FF
 691              	.L52:
 692 0576 4889C3   		movq	%rax, %rbx
  42:testHexIO.cpp **** 	CHECK_EQUAL(4096UL, data.capacity);
 693              		.loc 4 42 0 is_stmt 1
 694 0579 E8000000 		call	__cxa_end_catch
 694      00
 695 057e 4889D8   		movq	%rbx, %rax
 696 0581 4889C7   		movq	%rax, %rdi
 697              	.LEHB32:
 698 0584 E8000000 		call	_Unwind_Resume
 698      00
 699              	.LEHE32:
 700              	.L51:
 701 0589 4889C7   		movq	%rax, %rdi
 702 058c E8000000 		call	__cxa_begin_catch
 702      00
 703              	.LEHB33:
 704 0591 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 704      00
 705 0596 488B08   		movq	(%rax), %rcx
 706 0599 488D45C0 		leaq	-64(%rbp), %rax
 707 059d BA2A0000 		movl	$42, %edx
 707      00
 708 05a2 4889CE   		movq	%rcx, %rsi
 709 05a5 4889C7   		movq	%rax, %rdi
 710 05a8 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 710      00
  42:testHexIO.cpp **** 	CHECK_EQUAL(4096UL, data.capacity);
 711              		.loc 4 42 0 is_stmt 0 discriminator 1
 712 05ad E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 712      00
 713 05b2 488B00   		movq	(%rax), %rax
 714 05b5 488D4DC0 		leaq	-64(%rbp), %rcx
 715 05b9 BA000000 		movl	$.LC7, %edx
 715      00
 716 05be 4889CE   		movq	%rcx, %rsi
 717 05c1 4889C7   		movq	%rax, %rdi
 718 05c4 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 718      00
 719              	.LEHE33:
 720              	.LEHB34:
 721 05c9 E8000000 		call	__cxa_end_catch
 721      00
 722              	.LEHE34:
 723 05ce E9AEFCFF 		jmp	.L30
 723      FF
 724              	.L54:
 725 05d3 4889C3   		movq	%rax, %rbx
  43:testHexIO.cpp **** 	CHECK_EQUAL(4096UL, mask.capacity);
 726              		.loc 4 43 0 is_stmt 1
 727 05d6 E8000000 		call	__cxa_end_catch
 727      00
 728 05db 4889D8   		movq	%rbx, %rax
 729 05de 4889C7   		movq	%rax, %rdi
 730              	.LEHB35:
 731 05e1 E8000000 		call	_Unwind_Resume
 731      00
 732              	.LEHE35:
 733              	.L53:
 734 05e6 4889C7   		movq	%rax, %rdi
 735 05e9 E8000000 		call	__cxa_begin_catch
 735      00
 736              	.LEHB36:
 737 05ee E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 737      00
 738 05f3 488B08   		movq	(%rax), %rcx
 739 05f6 488D45C0 		leaq	-64(%rbp), %rax
 740 05fa BA2B0000 		movl	$43, %edx
 740      00
 741 05ff 4889CE   		movq	%rcx, %rsi
 742 0602 4889C7   		movq	%rax, %rdi
 743 0605 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 743      00
  43:testHexIO.cpp **** 	CHECK_EQUAL(4096UL, mask.capacity);
 744              		.loc 4 43 0 is_stmt 0 discriminator 1
 745 060a E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 745      00
 746 060f 488B00   		movq	(%rax), %rax
 747 0612 488D4DC0 		leaq	-64(%rbp), %rcx
 748 0616 BA000000 		movl	$.LC8, %edx
 748      00
 749 061b 4889CE   		movq	%rcx, %rsi
 750 061e 4889C7   		movq	%rax, %rdi
 751 0621 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 751      00
 752              	.LEHE36:
 753              	.LEHB37:
 754 0626 E8000000 		call	__cxa_end_catch
 754      00
 755              	.LEHE37:
 756 062b E9A1FCFF 		jmp	.L33
 756      FF
 757              	.L56:
 758 0630 4889C3   		movq	%rax, %rbx
  44:testHexIO.cpp **** 	CHECK_ARRAY_EQUAL(expected, data.data + 0x0BE1, 4);
 759              		.loc 4 44 0 is_stmt 1
 760 0633 E8000000 		call	__cxa_end_catch
 760      00
 761 0638 4889D8   		movq	%rbx, %rax
 762 063b 4889C7   		movq	%rax, %rdi
 763              	.LEHB38:
 764 063e E8000000 		call	_Unwind_Resume
 764      00
 765              	.LEHE38:
 766              	.L55:
 767 0643 4889C7   		movq	%rax, %rdi
 768 0646 E8000000 		call	__cxa_begin_catch
 768      00
 769              	.LEHB39:
 770 064b E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 770      00
 771 0650 488B08   		movq	(%rax), %rcx
 772 0653 488D45C0 		leaq	-64(%rbp), %rax
 773 0657 BA2C0000 		movl	$44, %edx
 773      00
 774 065c 4889CE   		movq	%rcx, %rsi
 775 065f 4889C7   		movq	%rax, %rdi
 776 0662 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 776      00
  44:testHexIO.cpp **** 	CHECK_ARRAY_EQUAL(expected, data.data + 0x0BE1, 4);
 777              		.loc 4 44 0 is_stmt 0 discriminator 1
 778 0667 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 778      00
 779 066c 488B00   		movq	(%rax), %rax
 780 066f 488D4DC0 		leaq	-64(%rbp), %rcx
 781 0673 BA000000 		movl	$.LC9, %edx
 781      00
 782 0678 4889CE   		movq	%rcx, %rsi
 783 067b 4889C7   		movq	%rax, %rdi
 784 067e E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 784      00
 785              	.LEHE39:
 786              	.LEHB40:
 787 0683 E8000000 		call	__cxa_end_catch
 787      00
 788              	.LEHE40:
 789 0688 E994FCFF 		jmp	.L36
 789      FF
 790              	.L58:
 791 068d 4889C3   		movq	%rax, %rbx
  45:testHexIO.cpp **** 	bufDestroy(&mask);
 792              		.loc 4 45 0 is_stmt 1
 793 0690 E8000000 		call	__cxa_end_catch
 793      00
 794 0695 4889D8   		movq	%rbx, %rax
 795 0698 4889C7   		movq	%rax, %rdi
 796              	.LEHB41:
 797 069b E8000000 		call	_Unwind_Resume
 797      00
 798              	.LEHE41:
 799              	.L57:
 800 06a0 4889C7   		movq	%rax, %rdi
 801 06a3 E8000000 		call	__cxa_begin_catch
 801      00
 802              	.LEHB42:
 803 06a8 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 803      00
 804 06ad 488B08   		movq	(%rax), %rcx
 805 06b0 488D45C0 		leaq	-64(%rbp), %rax
 806 06b4 BA2D0000 		movl	$45, %edx
 806      00
 807 06b9 4889CE   		movq	%rcx, %rsi
 808 06bc 4889C7   		movq	%rax, %rdi
 809 06bf E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 809      00
  45:testHexIO.cpp **** 	bufDestroy(&mask);
 810              		.loc 4 45 0 is_stmt 0 discriminator 1
 811 06c4 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 811      00
 812 06c9 488B00   		movq	(%rax), %rax
 813 06cc 488D4DC0 		leaq	-64(%rbp), %rcx
 814 06d0 BA000000 		movl	$.LC10, %edx
 814      00
 815 06d5 4889CE   		movq	%rcx, %rsi
 816 06d8 4889C7   		movq	%rax, %rdi
 817 06db E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 817      00
 818              	.LEHE42:
 819              	.LEHB43:
 820 06e0 E8000000 		call	__cxa_end_catch
 820      00
 821              	.LEHE43:
 822 06e5 E98BFCFF 		jmp	.L39
 822      FF
 823              	.L59:
 824              	.LBE6:
 825              		.loc 4 48 0 is_stmt 1
 826 06ea E8000000 		call	__stack_chk_fail
 826      00
 827              	.L40:
 828 06ef 4881C4A8 		addq	$168, %rsp
 828      000000
 829 06f6 5B       		popq	%rbx
 830 06f7 5D       		popq	%rbp
 831              		.cfi_def_cfa 7, 8
 832 06f8 C3       		ret
 833              		.cfi_endproc
 834              	.LFE1090:
 835              		.section	.gcc_except_table,"a",@progbits
 836              		.align 4
 837              	.LLSDA1090:
 838 0000 FF       		.byte	0xff
 839 0001 03       		.byte	0x3
 840 0002 E401     		.uleb128 .LLSDATT1090-.LLSDATTD1090
 841              	.LLSDATTD1090:
 842 0004 01       		.byte	0x1
 843 0005 D801     		.uleb128 .LLSDACSE1090-.LLSDACSB1090
 844              	.LLSDACSB1090:
 845 0007 5D       		.uleb128 .LEHB4-.LFB1090
 846 0008 05       		.uleb128 .LEHE4-.LEHB4
 847 0009 00       		.uleb128 0
 848 000a 00       		.uleb128 0
 849 000b 68       		.uleb128 .LEHB5-.LFB1090
 850 000c 42       		.uleb128 .LEHE5-.LEHB5
 851 000d B807     		.uleb128 .L41-.LFB1090
 852 000f 01       		.uleb128 0x1
 853 0010 C001     		.uleb128 .LEHB6-.LFB1090
 854 0012 05       		.uleb128 .LEHE6-.LEHB6
 855 0013 00       		.uleb128 0
 856 0014 00       		.uleb128 0
 857 0015 CB01     		.uleb128 .LEHB7-.LFB1090
 858 0017 48       		.uleb128 .LEHE7-.LEHB7
 859 0018 9508     		.uleb128 .L43-.LFB1090
 860 001a 01       		.uleb128 0x1
 861 001b C602     		.uleb128 .LEHB8-.LFB1090
 862 001d 05       		.uleb128 .LEHE8-.LEHB8
 863 001e 00       		.uleb128 0
 864 001f 00       		.uleb128 0
 865 0020 D102     		.uleb128 .LEHB9-.LFB1090
 866 0022 48       		.uleb128 .LEHE9-.LEHB9
 867 0023 F208     		.uleb128 .L45-.LFB1090
 868 0025 01       		.uleb128 0x1
 869 0026 9903     		.uleb128 .LEHB10-.LFB1090
 870 0028 48       		.uleb128 .LEHE10-.LEHB10
 871 0029 CF09     		.uleb128 .L47-.LFB1090
 872 002b 01       		.uleb128 0x1
 873 002c E103     		.uleb128 .LEHB11-.LFB1090
 874 002e 50       		.uleb128 .LEHE11-.LEHB11
 875 002f AC0A     		.uleb128 .L49-.LFB1090
 876 0031 01       		.uleb128 0x1
 877 0032 B104     		.uleb128 .LEHB12-.LFB1090
 878 0034 50       		.uleb128 .LEHE12-.LEHB12
 879 0035 890B     		.uleb128 .L51-.LFB1090
 880 0037 01       		.uleb128 0x1
 881 0038 8105     		.uleb128 .LEHB13-.LFB1090
 882 003a 50       		.uleb128 .LEHE13-.LEHB13
 883 003b E60B     		.uleb128 .L53-.LFB1090
 884 003d 01       		.uleb128 0x1
 885 003e D105     		.uleb128 .LEHB14-.LFB1090
 886 0040 50       		.uleb128 .LEHE14-.LEHB14
 887 0041 C30C     		.uleb128 .L55-.LFB1090
 888 0043 01       		.uleb128 0x1
 889 0044 A106     		.uleb128 .LEHB15-.LFB1090
 890 0046 54       		.uleb128 .LEHE15-.LEHB15
 891 0047 A00D     		.uleb128 .L57-.LFB1090
 892 0049 01       		.uleb128 0x1
 893 004a FC06     		.uleb128 .LEHB16-.LFB1090
 894 004c 11       		.uleb128 .LEHE16-.LEHB16
 895 004d 00       		.uleb128 0
 896 004e 00       		.uleb128 0
 897 004f B307     		.uleb128 .LEHB17-.LFB1090
 898 0051 05       		.uleb128 .LEHE17-.LEHB17
 899 0052 00       		.uleb128 0
 900 0053 00       		.uleb128 0
 901 0054 C007     		.uleb128 .LEHB18-.LFB1090
 902 0056 38       		.uleb128 .LEHE18-.LEHB18
 903 0057 A507     		.uleb128 .L42-.LFB1090
 904 0059 00       		.uleb128 0
 905 005a F807     		.uleb128 .LEHB19-.LFB1090
 906 005c 05       		.uleb128 .LEHE19-.LEHB19
 907 005d 00       		.uleb128 0
 908 005e 00       		.uleb128 0
 909 005f 9008     		.uleb128 .LEHB20-.LFB1090
 910 0061 05       		.uleb128 .LEHE20-.LEHB20
 911 0062 00       		.uleb128 0
 912 0063 00       		.uleb128 0
 913 0064 9D08     		.uleb128 .LEHB21-.LFB1090
 914 0066 38       		.uleb128 .LEHE21-.LEHB21
 915 0067 8208     		.uleb128 .L44-.LFB1090
 916 0069 00       		.uleb128 0
 917 006a D508     		.uleb128 .LEHB22-.LFB1090
 918 006c 05       		.uleb128 .LEHE22-.LEHB22
 919 006d 00       		.uleb128 0
 920 006e 00       		.uleb128 0
 921 006f ED08     		.uleb128 .LEHB23-.LFB1090
 922 0071 05       		.uleb128 .LEHE23-.LEHB23
 923 0072 00       		.uleb128 0
 924 0073 00       		.uleb128 0
 925 0074 FA08     		.uleb128 .LEHB24-.LFB1090
 926 0076 38       		.uleb128 .LEHE24-.LEHB24
 927 0077 DF08     		.uleb128 .L46-.LFB1090
 928 0079 00       		.uleb128 0
 929 007a B209     		.uleb128 .LEHB25-.LFB1090
 930 007c 05       		.uleb128 .LEHE25-.LEHB25
 931 007d 00       		.uleb128 0
 932 007e 00       		.uleb128 0
 933 007f CA09     		.uleb128 .LEHB26-.LFB1090
 934 0081 05       		.uleb128 .LEHE26-.LEHB26
 935 0082 00       		.uleb128 0
 936 0083 00       		.uleb128 0
 937 0084 D709     		.uleb128 .LEHB27-.LFB1090
 938 0086 38       		.uleb128 .LEHE27-.LEHB27
 939 0087 BC09     		.uleb128 .L48-.LFB1090
 940 0089 00       		.uleb128 0
 941 008a 8F0A     		.uleb128 .LEHB28-.LFB1090
 942 008c 05       		.uleb128 .LEHE28-.LEHB28
 943 008d 00       		.uleb128 0
 944 008e 00       		.uleb128 0
 945 008f A70A     		.uleb128 .LEHB29-.LFB1090
 946 0091 05       		.uleb128 .LEHE29-.LEHB29
 947 0092 00       		.uleb128 0
 948 0093 00       		.uleb128 0
 949 0094 B40A     		.uleb128 .LEHB30-.LFB1090
 950 0096 38       		.uleb128 .LEHE30-.LEHB30
 951 0097 990A     		.uleb128 .L50-.LFB1090
 952 0099 00       		.uleb128 0
 953 009a EC0A     		.uleb128 .LEHB31-.LFB1090
 954 009c 05       		.uleb128 .LEHE31-.LEHB31
 955 009d 00       		.uleb128 0
 956 009e 00       		.uleb128 0
 957 009f 840B     		.uleb128 .LEHB32-.LFB1090
 958 00a1 05       		.uleb128 .LEHE32-.LEHB32
 959 00a2 00       		.uleb128 0
 960 00a3 00       		.uleb128 0
 961 00a4 910B     		.uleb128 .LEHB33-.LFB1090
 962 00a6 38       		.uleb128 .LEHE33-.LEHB33
 963 00a7 F60A     		.uleb128 .L52-.LFB1090
 964 00a9 00       		.uleb128 0
 965 00aa C90B     		.uleb128 .LEHB34-.LFB1090
 966 00ac 05       		.uleb128 .LEHE34-.LEHB34
 967 00ad 00       		.uleb128 0
 968 00ae 00       		.uleb128 0
 969 00af E10B     		.uleb128 .LEHB35-.LFB1090
 970 00b1 05       		.uleb128 .LEHE35-.LEHB35
 971 00b2 00       		.uleb128 0
 972 00b3 00       		.uleb128 0
 973 00b4 EE0B     		.uleb128 .LEHB36-.LFB1090
 974 00b6 38       		.uleb128 .LEHE36-.LEHB36
 975 00b7 D30B     		.uleb128 .L54-.LFB1090
 976 00b9 00       		.uleb128 0
 977 00ba A60C     		.uleb128 .LEHB37-.LFB1090
 978 00bc 05       		.uleb128 .LEHE37-.LEHB37
 979 00bd 00       		.uleb128 0
 980 00be 00       		.uleb128 0
 981 00bf BE0C     		.uleb128 .LEHB38-.LFB1090
 982 00c1 05       		.uleb128 .LEHE38-.LEHB38
 983 00c2 00       		.uleb128 0
 984 00c3 00       		.uleb128 0
 985 00c4 CB0C     		.uleb128 .LEHB39-.LFB1090
 986 00c6 38       		.uleb128 .LEHE39-.LEHB39
 987 00c7 B00C     		.uleb128 .L56-.LFB1090
 988 00c9 00       		.uleb128 0
 989 00ca 830D     		.uleb128 .LEHB40-.LFB1090
 990 00cc 05       		.uleb128 .LEHE40-.LEHB40
 991 00cd 00       		.uleb128 0
 992 00ce 00       		.uleb128 0
 993 00cf 9B0D     		.uleb128 .LEHB41-.LFB1090
 994 00d1 05       		.uleb128 .LEHE41-.LEHB41
 995 00d2 00       		.uleb128 0
 996 00d3 00       		.uleb128 0
 997 00d4 A80D     		.uleb128 .LEHB42-.LFB1090
 998 00d6 38       		.uleb128 .LEHE42-.LEHB42
 999 00d7 8D0D     		.uleb128 .L58-.LFB1090
 1000 00d9 00       		.uleb128 0
 1001 00da E00D     		.uleb128 .LEHB43-.LFB1090
 1002 00dc 05       		.uleb128 .LEHE43-.LEHB43
 1003 00dd 00       		.uleb128 0
 1004 00de 00       		.uleb128 0
 1005              	.LLSDACSE1090:
 1006 00df 01       		.byte	0x1
 1007 00e0 00       		.byte	0
 1008 00e1 000000   		.align 4
 1009 00e4 00000000 		.long	0
 1010              	
 1011              	.LLSDATT1090:
 1012              		.text
 1014              		.section	.rodata
 1015              	.LC11:
 1016 01ff 48657849 		.string	"HexIO_testValidEOF"
 1016      4F5F7465 
 1016      73745661 
 1016      6C696445 
 1016      4F4600
 1017              		.section	.text._ZN22TestHexIO_testValidEOFC2Ev,"axG",@progbits,_ZN22TestHexIO_testValidEOFC5Ev,com
 1018              		.align 2
 1019              		.weak	_ZN22TestHexIO_testValidEOFC2Ev
 1021              	_ZN22TestHexIO_testValidEOFC2Ev:
 1022              	.LFB1092:
  49:testHexIO.cpp **** 
  50:testHexIO.cpp **** TEST(HexIO_testValidEOF) {
 1023              		.loc 4 50 0
 1024              		.cfi_startproc
 1025 0000 55       		pushq	%rbp
 1026              		.cfi_def_cfa_offset 16
 1027              		.cfi_offset 6, -16
 1028 0001 4889E5   		movq	%rsp, %rbp
 1029              		.cfi_def_cfa_register 6
 1030 0004 4883EC10 		subq	$16, %rsp
 1031 0008 48897DF8 		movq	%rdi, -8(%rbp)
 1032              	.LBB7:
 1033              		.loc 4 50 0
 1034 000c E8000000 		call	_ZN13UnitTestSuite12GetSuiteNameEv
 1034      00
 1035 0011 4889C2   		movq	%rax, %rdx
 1036 0014 488B45F8 		movq	-8(%rbp), %rax
 1037 0018 41B83200 		movl	$50, %r8d
 1037      0000
 1038 001e B9000000 		movl	$.LC1, %ecx
 1038      00
 1039 0023 BE000000 		movl	$.LC11, %esi
 1039      00
 1040 0028 4889C7   		movq	%rax, %rdi
 1041 002b E8000000 		call	_ZN8UnitTest4TestC2EPKcS2_S2_i
 1041      00
 1042 0030 488B45F8 		movq	-8(%rbp), %rax
 1043 0034 48C70000 		movq	$_ZTV22TestHexIO_testValidEOF+16, (%rax)
 1043      000000
 1044              	.LBE7:
 1045 003b C9       		leave
 1046              		.cfi_def_cfa 7, 8
 1047 003c C3       		ret
 1048              		.cfi_endproc
 1049              	.LFE1092:
 1051              		.weak	_ZN22TestHexIO_testValidEOFC1Ev
 1052              		.set	_ZN22TestHexIO_testValidEOFC1Ev,_ZN22TestHexIO_testValidEOFC2Ev
 1053              		.globl	testHexIO_testValidEOFInstance
 1054              		.bss
 1055 0039 00000000 		.align 32
 1055      000000
 1058              	testHexIO_testValidEOFInstance:
 1059 0040 00000000 		.zero	56
 1059      00000000 
 1059      00000000 
 1059      00000000 
 1059      00000000 
 1060              		.globl	adderHexIO_testValidEOF
 1063              	adderHexIO_testValidEOF:
 1064 0078 00       		.zero	1
 1065              		.section	.rodata
 1066              	.LC12:
 1067 0212 3A303030 		.string	":00000001FF\n"
 1067      30303030 
 1067      3146460A 
 1067      00
 1068 021f 00       		.align 8
 1069              	.LC13:
 1070 0220 556E6861 		.string	"Unhandled exception in CHECK_EQUAL(0x01, recordType)"
 1070      6E646C65 
 1070      64206578 
 1070      63657074 
 1070      696F6E20 
 1071 0255 000000   		.align 8
 1072              	.LC14:
 1073 0258 556E6861 		.string	"Unhandled exception in CHECK_EQUAL(0UL, data.length)"
 1073      6E646C65 
 1073      64206578 
 1073      63657074 
 1073      696F6E20 
 1074 028d 000000   		.align 8
 1075              	.LC15:
 1076 0290 556E6861 		.string	"Unhandled exception in CHECK_EQUAL(0UL, mask.length)"
 1076      6E646C65 
 1076      64206578 
 1076      63657074 
 1076      696F6E20 
 1077              		.text
 1078 06f9 90       		.align 2
 1079              		.globl	_ZNK22TestHexIO_testValidEOF7RunImplEv
 1081              	_ZNK22TestHexIO_testValidEOF7RunImplEv:
 1082              	.LFB1094:
 1083              		.loc 4 50 0
 1084              		.cfi_startproc
 1085              		.cfi_personality 0x3,__gxx_personality_v0
 1086              		.cfi_lsda 0x3,.LLSDA1094
 1087 06fa 55       		pushq	%rbp
 1088              		.cfi_def_cfa_offset 16
 1089              		.cfi_offset 6, -16
 1090 06fb 4889E5   		movq	%rsp, %rbp
 1091              		.cfi_def_cfa_register 6
 1092 06fe 53       		pushq	%rbx
 1093 06ff 4881EC98 		subq	$152, %rsp
 1093      000000
 1094              		.cfi_offset 3, -24
 1095 0706 4889BD68 		movq	%rdi, -152(%rbp)
 1095      FFFFFF
 1096              	.LBB8:
  51:testHexIO.cpp **** 	Buffer data, mask;
  52:testHexIO.cpp **** 	BufferStatus status;
  53:testHexIO.cpp **** 	const char *line = ":00000001FF\n";
 1097              		.loc 4 53 0
 1098 070d 48C74588 		movq	$.LC12, -120(%rbp)
 1098      00000000 
  54:testHexIO.cpp **** 	uint8 recordType;
  55:testHexIO.cpp **** 	uint32 seg = 0x00000000;
 1099              		.loc 4 55 0
 1100 0715 C7857CFF 		movl	$0, -132(%rbp)
 1100      FFFF0000 
 1100      0000
  56:testHexIO.cpp **** 	status = bufInitialise(&data, 1024, 0x00, NULL);
 1101              		.loc 4 56 0
 1102 071f 488D4590 		leaq	-112(%rbp), %rax
 1103 0723 B9000000 		movl	$0, %ecx
 1103      00
 1104 0728 BA000000 		movl	$0, %edx
 1104      00
 1105 072d BE000400 		movl	$1024, %esi
 1105      00
 1106 0732 4889C7   		movq	%rax, %rdi
 1107              	.LEHB44:
 1108 0735 E8000000 		call	bufInitialise
 1108      00
 1109              	.LEHE44:
 1110 073a 898578FF 		movl	%eax, -136(%rbp)
 1110      FFFF
 1111              	.LEHB45:
  57:testHexIO.cpp **** 	CHECK_EQUAL(BUF_SUCCESS, status);
 1112              		.loc 4 57 0
 1113 0740 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 1113      00
 1114 0745 488B08   		movq	(%rax), %rcx
 1115 0748 488D45D0 		leaq	-48(%rbp), %rax
 1116 074c BA390000 		movl	$57, %edx
 1116      00
 1117 0751 4889CE   		movq	%rcx, %rsi
 1118 0754 4889C7   		movq	%rax, %rdi
 1119 0757 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 1119      00
 1120              		.loc 4 57 0 is_stmt 0 discriminator 1
 1121 075c C745B000 		movl	$0, -80(%rbp)
 1121      000000
 1122 0763 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 1122      00
 1123 0768 488B00   		movq	(%rax), %rax
 1124 076b 488D4DD0 		leaq	-48(%rbp), %rcx
 1125 076f 488D9578 		leaq	-136(%rbp), %rdx
 1125      FFFFFF
 1126 0776 488D75B0 		leaq	-80(%rbp), %rsi
 1127 077a 4889C7   		movq	%rax, %rdi
 1128 077d E8000000 		call	_ZN8UnitTest10CheckEqualI12BufferStatusS1_EEvRNS_11TestResultsERKT_RKT0_RKNS_11TestDetailsE
 1128      00
 1129              	.LEHE45:
 1130              	.L64:
  58:testHexIO.cpp **** 	status = bufInitialise(&mask, 1024, 0x00, NULL);
 1131              		.loc 4 58 0 is_stmt 1
 1132 0782 488D45B0 		leaq	-80(%rbp), %rax
 1133 0786 B9000000 		movl	$0, %ecx
 1133      00
 1134 078b BA000000 		movl	$0, %edx
 1134      00
 1135 0790 BE000400 		movl	$1024, %esi
 1135      00
 1136 0795 4889C7   		movq	%rax, %rdi
 1137              	.LEHB46:
 1138 0798 E8000000 		call	bufInitialise
 1138      00
 1139              	.LEHE46:
 1140 079d 898578FF 		movl	%eax, -136(%rbp)
 1140      FFFF
 1141              	.LEHB47:
  59:testHexIO.cpp **** 	CHECK_EQUAL(BUF_SUCCESS, status);
 1142              		.loc 4 59 0
 1143 07a3 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 1143      00
 1144 07a8 488B08   		movq	(%rax), %rcx
 1145 07ab 488D45D0 		leaq	-48(%rbp), %rax
 1146 07af BA3B0000 		movl	$59, %edx
 1146      00
 1147 07b4 4889CE   		movq	%rcx, %rsi
 1148 07b7 4889C7   		movq	%rax, %rdi
 1149 07ba E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 1149      00
 1150              		.loc 4 59 0 is_stmt 0 discriminator 1
 1151 07bf C7458000 		movl	$0, -128(%rbp)
 1151      000000
 1152 07c6 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 1152      00
 1153 07cb 488B00   		movq	(%rax), %rax
 1154 07ce 488D4DD0 		leaq	-48(%rbp), %rcx
 1155 07d2 488D9578 		leaq	-136(%rbp), %rdx
 1155      FFFFFF
 1156 07d9 488D7580 		leaq	-128(%rbp), %rsi
 1157 07dd 4889C7   		movq	%rax, %rdi
 1158 07e0 E8000000 		call	_ZN8UnitTest10CheckEqualI12BufferStatusS1_EEvRNS_11TestResultsERKT_RKT0_RKNS_11TestDetailsE
 1158      00
 1159              	.LEHE47:
 1160              	.L67:
  60:testHexIO.cpp **** 	status = bufProcessLine(line, 0, &data, &mask, &seg, &recordType, NULL);
 1161              		.loc 4 60 0 is_stmt 1
 1162 07e5 488DBD77 		leaq	-137(%rbp), %rdi
 1162      FFFFFF
 1163 07ec 488DB57C 		leaq	-132(%rbp), %rsi
 1163      FFFFFF
 1164 07f3 488D4DB0 		leaq	-80(%rbp), %rcx
 1165 07f7 488D5590 		leaq	-112(%rbp), %rdx
 1166 07fb 488B4588 		movq	-120(%rbp), %rax
 1167 07ff 48C70424 		movq	$0, (%rsp)
 1167      00000000 
 1168 0807 4989F9   		movq	%rdi, %r9
 1169 080a 4989F0   		movq	%rsi, %r8
 1170 080d BE000000 		movl	$0, %esi
 1170      00
 1171 0812 4889C7   		movq	%rax, %rdi
 1172              	.LEHB48:
 1173 0815 E8000000 		call	bufProcessLine
 1173      00
 1174              	.LEHE48:
 1175 081a 898578FF 		movl	%eax, -136(%rbp)
 1175      FFFF
 1176              	.LEHB49:
  61:testHexIO.cpp **** 	CHECK_EQUAL(BUF_SUCCESS, status);
 1177              		.loc 4 61 0
 1178 0820 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 1178      00
 1179 0825 488B08   		movq	(%rax), %rcx
 1180 0828 488D45D0 		leaq	-48(%rbp), %rax
 1181 082c BA3D0000 		movl	$61, %edx
 1181      00
 1182 0831 4889CE   		movq	%rcx, %rsi
 1183 0834 4889C7   		movq	%rax, %rdi
 1184 0837 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 1184      00
 1185              		.loc 4 61 0 is_stmt 0 discriminator 1
 1186 083c C7458000 		movl	$0, -128(%rbp)
 1186      000000
 1187 0843 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 1187      00
 1188 0848 488B00   		movq	(%rax), %rax
 1189 084b 488D4DD0 		leaq	-48(%rbp), %rcx
 1190 084f 488D9578 		leaq	-136(%rbp), %rdx
 1190      FFFFFF
 1191 0856 488D7580 		leaq	-128(%rbp), %rsi
 1192 085a 4889C7   		movq	%rax, %rdi
 1193 085d E8000000 		call	_ZN8UnitTest10CheckEqualI12BufferStatusS1_EEvRNS_11TestResultsERKT_RKT0_RKNS_11TestDetailsE
 1193      00
 1194              	.LEHE49:
 1195              	.L70:
 1196              	.LEHB50:
  62:testHexIO.cpp **** 	CHECK_EQUAL(0x01, recordType);
 1197              		.loc 4 62 0 is_stmt 1
 1198 0862 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 1198      00
 1199 0867 488B08   		movq	(%rax), %rcx
 1200 086a 488D45D0 		leaq	-48(%rbp), %rax
 1201 086e BA3E0000 		movl	$62, %edx
 1201      00
 1202 0873 4889CE   		movq	%rcx, %rsi
 1203 0876 4889C7   		movq	%rax, %rdi
 1204 0879 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 1204      00
 1205              		.loc 4 62 0 is_stmt 0 discriminator 1
 1206 087e C7458001 		movl	$1, -128(%rbp)
 1206      000000
 1207 0885 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 1207      00
 1208 088a 488B00   		movq	(%rax), %rax
 1209 088d 488D4DD0 		leaq	-48(%rbp), %rcx
 1210 0891 488D9577 		leaq	-137(%rbp), %rdx
 1210      FFFFFF
 1211 0898 488D7580 		leaq	-128(%rbp), %rsi
 1212 089c 4889C7   		movq	%rax, %rdi
 1213 089f E8000000 		call	_ZN8UnitTest10CheckEqualIihEEvRNS_11TestResultsERKT_RKT0_RKNS_11TestDetailsE
 1213      00
 1214              	.LEHE50:
 1215              	.L73:
 1216              	.LEHB51:
  63:testHexIO.cpp **** 	CHECK_EQUAL(0UL, data.length);
 1217              		.loc 4 63 0 is_stmt 1
 1218 08a4 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 1218      00
 1219 08a9 488B08   		movq	(%rax), %rcx
 1220 08ac 488D45D0 		leaq	-48(%rbp), %rax
 1221 08b0 BA3F0000 		movl	$63, %edx
 1221      00
 1222 08b5 4889CE   		movq	%rcx, %rsi
 1223 08b8 4889C7   		movq	%rax, %rdi
 1224 08bb E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 1224      00
 1225              		.loc 4 63 0 is_stmt 0 discriminator 1
 1226 08c0 48C74580 		movq	$0, -128(%rbp)
 1226      00000000 
 1227 08c8 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 1227      00
 1228 08cd 488B00   		movq	(%rax), %rax
 1229 08d0 488D55D0 		leaq	-48(%rbp), %rdx
 1230 08d4 488D4D90 		leaq	-112(%rbp), %rcx
 1231 08d8 488D7908 		leaq	8(%rcx), %rdi
 1232 08dc 488D7580 		leaq	-128(%rbp), %rsi
 1233 08e0 4889D1   		movq	%rdx, %rcx
 1234 08e3 4889FA   		movq	%rdi, %rdx
 1235 08e6 4889C7   		movq	%rax, %rdi
 1236 08e9 E8000000 		call	_ZN8UnitTest10CheckEqualImmEEvRNS_11TestResultsERKT_RKT0_RKNS_11TestDetailsE
 1236      00
 1237              	.LEHE51:
 1238              	.L76:
 1239              	.LEHB52:
  64:testHexIO.cpp **** 	CHECK_EQUAL(0UL, mask.length);
 1240              		.loc 4 64 0 is_stmt 1
 1241 08ee E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 1241      00
 1242 08f3 488B08   		movq	(%rax), %rcx
 1243 08f6 488D45D0 		leaq	-48(%rbp), %rax
 1244 08fa BA400000 		movl	$64, %edx
 1244      00
 1245 08ff 4889CE   		movq	%rcx, %rsi
 1246 0902 4889C7   		movq	%rax, %rdi
 1247 0905 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 1247      00
 1248              		.loc 4 64 0 is_stmt 0 discriminator 1
 1249 090a 48C74580 		movq	$0, -128(%rbp)
 1249      00000000 
 1250 0912 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 1250      00
 1251 0917 488B00   		movq	(%rax), %rax
 1252 091a 488D55D0 		leaq	-48(%rbp), %rdx
 1253 091e 488D4DB0 		leaq	-80(%rbp), %rcx
 1254 0922 488D7908 		leaq	8(%rcx), %rdi
 1255 0926 488D7580 		leaq	-128(%rbp), %rsi
 1256 092a 4889D1   		movq	%rdx, %rcx
 1257 092d 4889FA   		movq	%rdi, %rdx
 1258 0930 4889C7   		movq	%rax, %rdi
 1259 0933 E8000000 		call	_ZN8UnitTest10CheckEqualImmEEvRNS_11TestResultsERKT_RKT0_RKNS_11TestDetailsE
 1259      00
 1260              	.LEHE52:
 1261              	.L79:
  65:testHexIO.cpp **** 	bufDestroy(&mask);
 1262              		.loc 4 65 0 is_stmt 1
 1263 0938 488D45B0 		leaq	-80(%rbp), %rax
 1264 093c 4889C7   		movq	%rax, %rdi
 1265              	.LEHB53:
 1266 093f E8000000 		call	bufDestroy
 1266      00
  66:testHexIO.cpp **** 	bufDestroy(&data);
 1267              		.loc 4 66 0
 1268 0944 488D4590 		leaq	-112(%rbp), %rax
 1269 0948 4889C7   		movq	%rax, %rdi
 1270 094b E8000000 		call	bufDestroy
 1270      00
 1271              	.LEHE53:
 1272 0950 E92E0200 		jmp	.L92
 1272      00
 1273              	.L81:
 1274 0955 4889C3   		movq	%rax, %rbx
  57:testHexIO.cpp **** 	status = bufInitialise(&mask, 1024, 0x00, NULL);
 1275              		.loc 4 57 0
 1276 0958 E8000000 		call	__cxa_end_catch
 1276      00
 1277 095d 4889D8   		movq	%rbx, %rax
 1278 0960 4889C7   		movq	%rax, %rdi
 1279              	.LEHB54:
 1280 0963 E8000000 		call	_Unwind_Resume
 1280      00
 1281              	.LEHE54:
 1282              	.L80:
 1283 0968 4889C7   		movq	%rax, %rdi
 1284 096b E8000000 		call	__cxa_begin_catch
 1284      00
 1285              	.LEHB55:
 1286 0970 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 1286      00
 1287 0975 488B08   		movq	(%rax), %rcx
 1288 0978 488D45D0 		leaq	-48(%rbp), %rax
 1289 097c BA390000 		movl	$57, %edx
 1289      00
 1290 0981 4889CE   		movq	%rcx, %rsi
 1291 0984 4889C7   		movq	%rax, %rdi
 1292 0987 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 1292      00
  57:testHexIO.cpp **** 	status = bufInitialise(&mask, 1024, 0x00, NULL);
 1293              		.loc 4 57 0 is_stmt 0 discriminator 1
 1294 098c E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 1294      00
 1295 0991 488B00   		movq	(%rax), %rax
 1296 0994 488D4DD0 		leaq	-48(%rbp), %rcx
 1297 0998 BA000000 		movl	$.LC4, %edx
 1297      00
 1298 099d 4889CE   		movq	%rcx, %rsi
 1299 09a0 4889C7   		movq	%rax, %rdi
 1300 09a3 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 1300      00
 1301              	.LEHE55:
 1302              	.LEHB56:
 1303 09a8 E8000000 		call	__cxa_end_catch
 1303      00
 1304              	.LEHE56:
 1305 09ad E9D0FDFF 		jmp	.L64
 1305      FF
 1306              	.L83:
 1307 09b2 4889C3   		movq	%rax, %rbx
  59:testHexIO.cpp **** 	status = bufProcessLine(line, 0, &data, &mask, &seg, &recordType, NULL);
 1308              		.loc 4 59 0 is_stmt 1
 1309 09b5 E8000000 		call	__cxa_end_catch
 1309      00
 1310 09ba 4889D8   		movq	%rbx, %rax
 1311 09bd 4889C7   		movq	%rax, %rdi
 1312              	.LEHB57:
 1313 09c0 E8000000 		call	_Unwind_Resume
 1313      00
 1314              	.LEHE57:
 1315              	.L82:
 1316 09c5 4889C7   		movq	%rax, %rdi
 1317 09c8 E8000000 		call	__cxa_begin_catch
 1317      00
 1318              	.LEHB58:
 1319 09cd E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 1319      00
 1320 09d2 488B08   		movq	(%rax), %rcx
 1321 09d5 488D45D0 		leaq	-48(%rbp), %rax
 1322 09d9 BA3B0000 		movl	$59, %edx
 1322      00
 1323 09de 4889CE   		movq	%rcx, %rsi
 1324 09e1 4889C7   		movq	%rax, %rdi
 1325 09e4 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 1325      00
  59:testHexIO.cpp **** 	status = bufProcessLine(line, 0, &data, &mask, &seg, &recordType, NULL);
 1326              		.loc 4 59 0 is_stmt 0 discriminator 1
 1327 09e9 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 1327      00
 1328 09ee 488B00   		movq	(%rax), %rax
 1329 09f1 488D4DD0 		leaq	-48(%rbp), %rcx
 1330 09f5 BA000000 		movl	$.LC4, %edx
 1330      00
 1331 09fa 4889CE   		movq	%rcx, %rsi
 1332 09fd 4889C7   		movq	%rax, %rdi
 1333 0a00 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 1333      00
 1334              	.LEHE58:
 1335              	.LEHB59:
 1336 0a05 E8000000 		call	__cxa_end_catch
 1336      00
 1337              	.LEHE59:
 1338 0a0a E9D6FDFF 		jmp	.L67
 1338      FF
 1339              	.L85:
 1340 0a0f 4889C3   		movq	%rax, %rbx
  61:testHexIO.cpp **** 	CHECK_EQUAL(0x01, recordType);
 1341              		.loc 4 61 0 is_stmt 1
 1342 0a12 E8000000 		call	__cxa_end_catch
 1342      00
 1343 0a17 4889D8   		movq	%rbx, %rax
 1344 0a1a 4889C7   		movq	%rax, %rdi
 1345              	.LEHB60:
 1346 0a1d E8000000 		call	_Unwind_Resume
 1346      00
 1347              	.LEHE60:
 1348              	.L84:
 1349 0a22 4889C7   		movq	%rax, %rdi
 1350 0a25 E8000000 		call	__cxa_begin_catch
 1350      00
 1351              	.LEHB61:
 1352 0a2a E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 1352      00
 1353 0a2f 488B08   		movq	(%rax), %rcx
 1354 0a32 488D45D0 		leaq	-48(%rbp), %rax
 1355 0a36 BA3D0000 		movl	$61, %edx
 1355      00
 1356 0a3b 4889CE   		movq	%rcx, %rsi
 1357 0a3e 4889C7   		movq	%rax, %rdi
 1358 0a41 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 1358      00
  61:testHexIO.cpp **** 	CHECK_EQUAL(0x01, recordType);
 1359              		.loc 4 61 0 is_stmt 0 discriminator 1
 1360 0a46 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 1360      00
 1361 0a4b 488B00   		movq	(%rax), %rax
 1362 0a4e 488D4DD0 		leaq	-48(%rbp), %rcx
 1363 0a52 BA000000 		movl	$.LC4, %edx
 1363      00
 1364 0a57 4889CE   		movq	%rcx, %rsi
 1365 0a5a 4889C7   		movq	%rax, %rdi
 1366 0a5d E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 1366      00
 1367              	.LEHE61:
 1368              	.LEHB62:
 1369 0a62 E8000000 		call	__cxa_end_catch
 1369      00
 1370              	.LEHE62:
 1371 0a67 E9F6FDFF 		jmp	.L70
 1371      FF
 1372              	.L87:
 1373 0a6c 4889C3   		movq	%rax, %rbx
  62:testHexIO.cpp **** 	CHECK_EQUAL(0UL, data.length);
 1374              		.loc 4 62 0 is_stmt 1
 1375 0a6f E8000000 		call	__cxa_end_catch
 1375      00
 1376 0a74 4889D8   		movq	%rbx, %rax
 1377 0a77 4889C7   		movq	%rax, %rdi
 1378              	.LEHB63:
 1379 0a7a E8000000 		call	_Unwind_Resume
 1379      00
 1380              	.LEHE63:
 1381              	.L86:
 1382 0a7f 4889C7   		movq	%rax, %rdi
 1383 0a82 E8000000 		call	__cxa_begin_catch
 1383      00
 1384              	.LEHB64:
 1385 0a87 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 1385      00
 1386 0a8c 488B08   		movq	(%rax), %rcx
 1387 0a8f 488D45D0 		leaq	-48(%rbp), %rax
 1388 0a93 BA3E0000 		movl	$62, %edx
 1388      00
 1389 0a98 4889CE   		movq	%rcx, %rsi
 1390 0a9b 4889C7   		movq	%rax, %rdi
 1391 0a9e E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 1391      00
  62:testHexIO.cpp **** 	CHECK_EQUAL(0UL, data.length);
 1392              		.loc 4 62 0 is_stmt 0 discriminator 1
 1393 0aa3 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 1393      00
 1394 0aa8 488B00   		movq	(%rax), %rax
 1395 0aab 488D4DD0 		leaq	-48(%rbp), %rcx
 1396 0aaf BA000000 		movl	$.LC13, %edx
 1396      00
 1397 0ab4 4889CE   		movq	%rcx, %rsi
 1398 0ab7 4889C7   		movq	%rax, %rdi
 1399 0aba E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 1399      00
 1400              	.LEHE64:
 1401              	.LEHB65:
 1402 0abf E8000000 		call	__cxa_end_catch
 1402      00
 1403              	.LEHE65:
 1404 0ac4 E9DBFDFF 		jmp	.L73
 1404      FF
 1405              	.L89:
 1406 0ac9 4889C3   		movq	%rax, %rbx
  63:testHexIO.cpp **** 	CHECK_EQUAL(0UL, mask.length);
 1407              		.loc 4 63 0 is_stmt 1
 1408 0acc E8000000 		call	__cxa_end_catch
 1408      00
 1409 0ad1 4889D8   		movq	%rbx, %rax
 1410 0ad4 4889C7   		movq	%rax, %rdi
 1411              	.LEHB66:
 1412 0ad7 E8000000 		call	_Unwind_Resume
 1412      00
 1413              	.LEHE66:
 1414              	.L88:
 1415 0adc 4889C7   		movq	%rax, %rdi
 1416 0adf E8000000 		call	__cxa_begin_catch
 1416      00
 1417              	.LEHB67:
 1418 0ae4 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 1418      00
 1419 0ae9 488B08   		movq	(%rax), %rcx
 1420 0aec 488D45D0 		leaq	-48(%rbp), %rax
 1421 0af0 BA3F0000 		movl	$63, %edx
 1421      00
 1422 0af5 4889CE   		movq	%rcx, %rsi
 1423 0af8 4889C7   		movq	%rax, %rdi
 1424 0afb E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 1424      00
  63:testHexIO.cpp **** 	CHECK_EQUAL(0UL, mask.length);
 1425              		.loc 4 63 0 is_stmt 0 discriminator 1
 1426 0b00 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 1426      00
 1427 0b05 488B00   		movq	(%rax), %rax
 1428 0b08 488D4DD0 		leaq	-48(%rbp), %rcx
 1429 0b0c BA000000 		movl	$.LC14, %edx
 1429      00
 1430 0b11 4889CE   		movq	%rcx, %rsi
 1431 0b14 4889C7   		movq	%rax, %rdi
 1432 0b17 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 1432      00
 1433              	.LEHE67:
 1434              	.LEHB68:
 1435 0b1c E8000000 		call	__cxa_end_catch
 1435      00
 1436              	.LEHE68:
 1437 0b21 E9C8FDFF 		jmp	.L76
 1437      FF
 1438              	.L91:
 1439 0b26 4889C3   		movq	%rax, %rbx
  64:testHexIO.cpp **** 	bufDestroy(&mask);
 1440              		.loc 4 64 0 is_stmt 1
 1441 0b29 E8000000 		call	__cxa_end_catch
 1441      00
 1442 0b2e 4889D8   		movq	%rbx, %rax
 1443 0b31 4889C7   		movq	%rax, %rdi
 1444              	.LEHB69:
 1445 0b34 E8000000 		call	_Unwind_Resume
 1445      00
 1446              	.LEHE69:
 1447              	.L90:
 1448 0b39 4889C7   		movq	%rax, %rdi
 1449 0b3c E8000000 		call	__cxa_begin_catch
 1449      00
 1450              	.LEHB70:
 1451 0b41 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 1451      00
 1452 0b46 488B08   		movq	(%rax), %rcx
 1453 0b49 488D45D0 		leaq	-48(%rbp), %rax
 1454 0b4d BA400000 		movl	$64, %edx
 1454      00
 1455 0b52 4889CE   		movq	%rcx, %rsi
 1456 0b55 4889C7   		movq	%rax, %rdi
 1457 0b58 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 1457      00
  64:testHexIO.cpp **** 	bufDestroy(&mask);
 1458              		.loc 4 64 0 is_stmt 0 discriminator 1
 1459 0b5d E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 1459      00
 1460 0b62 488B00   		movq	(%rax), %rax
 1461 0b65 488D4DD0 		leaq	-48(%rbp), %rcx
 1462 0b69 BA000000 		movl	$.LC15, %edx
 1462      00
 1463 0b6e 4889CE   		movq	%rcx, %rsi
 1464 0b71 4889C7   		movq	%rax, %rdi
 1465 0b74 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 1465      00
 1466              	.LEHE70:
 1467              	.LEHB71:
 1468 0b79 E8000000 		call	__cxa_end_catch
 1468      00
 1469              	.LEHE71:
 1470 0b7e E9B5FDFF 		jmp	.L79
 1470      FF
 1471              	.L92:
 1472              	.LBE8:
  67:testHexIO.cpp **** }
 1473              		.loc 4 67 0 is_stmt 1
 1474 0b83 4881C498 		addq	$152, %rsp
 1474      000000
 1475 0b8a 5B       		popq	%rbx
 1476 0b8b 5D       		popq	%rbp
 1477              		.cfi_def_cfa 7, 8
 1478 0b8c C3       		ret
 1479              		.cfi_endproc
 1480              	.LFE1094:
 1481              		.section	.gcc_except_table
 1482              		.align 4
 1483              	.LLSDA1094:
 1484 00e8 FF       		.byte	0xff
 1485 00e9 03       		.byte	0x3
 1486 00ea A001     		.uleb128 .LLSDATT1094-.LLSDATTD1094
 1487              	.LLSDATTD1094:
 1488 00ec 01       		.byte	0x1
 1489 00ed 9601     		.uleb128 .LLSDACSE1094-.LLSDACSB1094
 1490              	.LLSDACSB1094:
 1491 00ef 3B       		.uleb128 .LEHB44-.LFB1094
 1492 00f0 05       		.uleb128 .LEHE44-.LEHB44
 1493 00f1 00       		.uleb128 0
 1494 00f2 00       		.uleb128 0
 1495 00f3 46       		.uleb128 .LEHB45-.LFB1094
 1496 00f4 42       		.uleb128 .LEHE45-.LEHB45
 1497 00f5 EE04     		.uleb128 .L80-.LFB1094
 1498 00f7 01       		.uleb128 0x1
 1499 00f8 9E01     		.uleb128 .LEHB46-.LFB1094
 1500 00fa 05       		.uleb128 .LEHE46-.LEHB46
 1501 00fb 00       		.uleb128 0
 1502 00fc 00       		.uleb128 0
 1503 00fd A901     		.uleb128 .LEHB47-.LFB1094
 1504 00ff 42       		.uleb128 .LEHE47-.LEHB47
 1505 0100 CB05     		.uleb128 .L82-.LFB1094
 1506 0102 01       		.uleb128 0x1
 1507 0103 9B02     		.uleb128 .LEHB48-.LFB1094
 1508 0105 05       		.uleb128 .LEHE48-.LEHB48
 1509 0106 00       		.uleb128 0
 1510 0107 00       		.uleb128 0
 1511 0108 A602     		.uleb128 .LEHB49-.LFB1094
 1512 010a 42       		.uleb128 .LEHE49-.LEHB49
 1513 010b A806     		.uleb128 .L84-.LFB1094
 1514 010d 01       		.uleb128 0x1
 1515 010e E802     		.uleb128 .LEHB50-.LFB1094
 1516 0110 42       		.uleb128 .LEHE50-.LEHB50
 1517 0111 8507     		.uleb128 .L86-.LFB1094
 1518 0113 01       		.uleb128 0x1
 1519 0114 AA03     		.uleb128 .LEHB51-.LFB1094
 1520 0116 4A       		.uleb128 .LEHE51-.LEHB51
 1521 0117 E207     		.uleb128 .L88-.LFB1094
 1522 0119 01       		.uleb128 0x1
 1523 011a F403     		.uleb128 .LEHB52-.LFB1094
 1524 011c 4A       		.uleb128 .LEHE52-.LEHB52
 1525 011d BF08     		.uleb128 .L90-.LFB1094
 1526 011f 01       		.uleb128 0x1
 1527 0120 C504     		.uleb128 .LEHB53-.LFB1094
 1528 0122 11       		.uleb128 .LEHE53-.LEHB53
 1529 0123 00       		.uleb128 0
 1530 0124 00       		.uleb128 0
 1531 0125 E904     		.uleb128 .LEHB54-.LFB1094
 1532 0127 05       		.uleb128 .LEHE54-.LEHB54
 1533 0128 00       		.uleb128 0
 1534 0129 00       		.uleb128 0
 1535 012a F604     		.uleb128 .LEHB55-.LFB1094
 1536 012c 38       		.uleb128 .LEHE55-.LEHB55
 1537 012d DB04     		.uleb128 .L81-.LFB1094
 1538 012f 00       		.uleb128 0
 1539 0130 AE05     		.uleb128 .LEHB56-.LFB1094
 1540 0132 05       		.uleb128 .LEHE56-.LEHB56
 1541 0133 00       		.uleb128 0
 1542 0134 00       		.uleb128 0
 1543 0135 C605     		.uleb128 .LEHB57-.LFB1094
 1544 0137 05       		.uleb128 .LEHE57-.LEHB57
 1545 0138 00       		.uleb128 0
 1546 0139 00       		.uleb128 0
 1547 013a D305     		.uleb128 .LEHB58-.LFB1094
 1548 013c 38       		.uleb128 .LEHE58-.LEHB58
 1549 013d B805     		.uleb128 .L83-.LFB1094
 1550 013f 00       		.uleb128 0
 1551 0140 8B06     		.uleb128 .LEHB59-.LFB1094
 1552 0142 05       		.uleb128 .LEHE59-.LEHB59
 1553 0143 00       		.uleb128 0
 1554 0144 00       		.uleb128 0
 1555 0145 A306     		.uleb128 .LEHB60-.LFB1094
 1556 0147 05       		.uleb128 .LEHE60-.LEHB60
 1557 0148 00       		.uleb128 0
 1558 0149 00       		.uleb128 0
 1559 014a B006     		.uleb128 .LEHB61-.LFB1094
 1560 014c 38       		.uleb128 .LEHE61-.LEHB61
 1561 014d 9506     		.uleb128 .L85-.LFB1094
 1562 014f 00       		.uleb128 0
 1563 0150 E806     		.uleb128 .LEHB62-.LFB1094
 1564 0152 05       		.uleb128 .LEHE62-.LEHB62
 1565 0153 00       		.uleb128 0
 1566 0154 00       		.uleb128 0
 1567 0155 8007     		.uleb128 .LEHB63-.LFB1094
 1568 0157 05       		.uleb128 .LEHE63-.LEHB63
 1569 0158 00       		.uleb128 0
 1570 0159 00       		.uleb128 0
 1571 015a 8D07     		.uleb128 .LEHB64-.LFB1094
 1572 015c 38       		.uleb128 .LEHE64-.LEHB64
 1573 015d F206     		.uleb128 .L87-.LFB1094
 1574 015f 00       		.uleb128 0
 1575 0160 C507     		.uleb128 .LEHB65-.LFB1094
 1576 0162 05       		.uleb128 .LEHE65-.LEHB65
 1577 0163 00       		.uleb128 0
 1578 0164 00       		.uleb128 0
 1579 0165 DD07     		.uleb128 .LEHB66-.LFB1094
 1580 0167 05       		.uleb128 .LEHE66-.LEHB66
 1581 0168 00       		.uleb128 0
 1582 0169 00       		.uleb128 0
 1583 016a EA07     		.uleb128 .LEHB67-.LFB1094
 1584 016c 38       		.uleb128 .LEHE67-.LEHB67
 1585 016d CF07     		.uleb128 .L89-.LFB1094
 1586 016f 00       		.uleb128 0
 1587 0170 A208     		.uleb128 .LEHB68-.LFB1094
 1588 0172 05       		.uleb128 .LEHE68-.LEHB68
 1589 0173 00       		.uleb128 0
 1590 0174 00       		.uleb128 0
 1591 0175 BA08     		.uleb128 .LEHB69-.LFB1094
 1592 0177 05       		.uleb128 .LEHE69-.LEHB69
 1593 0178 00       		.uleb128 0
 1594 0179 00       		.uleb128 0
 1595 017a C708     		.uleb128 .LEHB70-.LFB1094
 1596 017c 38       		.uleb128 .LEHE70-.LEHB70
 1597 017d AC08     		.uleb128 .L91-.LFB1094
 1598 017f 00       		.uleb128 0
 1599 0180 FF08     		.uleb128 .LEHB71-.LFB1094
 1600 0182 05       		.uleb128 .LEHE71-.LEHB71
 1601 0183 00       		.uleb128 0
 1602 0184 00       		.uleb128 0
 1603              	.LLSDACSE1094:
 1604 0185 01       		.byte	0x1
 1605 0186 00       		.byte	0
 1606 0187 00       		.align 4
 1607 0188 00000000 		.long	0
 1608              	
 1609              	.LLSDATT1094:
 1610              		.text
 1612              		.section	.rodata
 1613              	.LC16:
 1614 02c5 48657849 		.string	"HexIO_testJunkStartCode"
 1614      4F5F7465 
 1614      73744A75 
 1614      6E6B5374 
 1614      61727443 
 1615              		.section	.text._ZN27TestHexIO_testJunkStartCodeC2Ev,"axG",@progbits,_ZN27TestHexIO_testJunkStartCo
 1616              		.align 2
 1617              		.weak	_ZN27TestHexIO_testJunkStartCodeC2Ev
 1619              	_ZN27TestHexIO_testJunkStartCodeC2Ev:
 1620              	.LFB1096:
  68:testHexIO.cpp **** 
  69:testHexIO.cpp **** TEST(HexIO_testJunkStartCode) {
 1621              		.loc 4 69 0
 1622              		.cfi_startproc
 1623 0000 55       		pushq	%rbp
 1624              		.cfi_def_cfa_offset 16
 1625              		.cfi_offset 6, -16
 1626 0001 4889E5   		movq	%rsp, %rbp
 1627              		.cfi_def_cfa_register 6
 1628 0004 4883EC10 		subq	$16, %rsp
 1629 0008 48897DF8 		movq	%rdi, -8(%rbp)
 1630              	.LBB9:
 1631              		.loc 4 69 0
 1632 000c E8000000 		call	_ZN13UnitTestSuite12GetSuiteNameEv
 1632      00
 1633 0011 4889C2   		movq	%rax, %rdx
 1634 0014 488B45F8 		movq	-8(%rbp), %rax
 1635 0018 41B84500 		movl	$69, %r8d
 1635      0000
 1636 001e B9000000 		movl	$.LC1, %ecx
 1636      00
 1637 0023 BE000000 		movl	$.LC16, %esi
 1637      00
 1638 0028 4889C7   		movq	%rax, %rdi
 1639 002b E8000000 		call	_ZN8UnitTest4TestC2EPKcS2_S2_i
 1639      00
 1640 0030 488B45F8 		movq	-8(%rbp), %rax
 1641 0034 48C70000 		movq	$_ZTV27TestHexIO_testJunkStartCode+16, (%rax)
 1641      000000
 1642              	.LBE9:
 1643 003b C9       		leave
 1644              		.cfi_def_cfa 7, 8
 1645 003c C3       		ret
 1646              		.cfi_endproc
 1647              	.LFE1096:
 1649              		.weak	_ZN27TestHexIO_testJunkStartCodeC1Ev
 1650              		.set	_ZN27TestHexIO_testJunkStartCodeC1Ev,_ZN27TestHexIO_testJunkStartCodeC2Ev
 1651              		.globl	testHexIO_testJunkStartCodeInstance
 1652              		.bss
 1653 0079 00000000 		.align 32
 1653      000000
 1656              	testHexIO_testJunkStartCodeInstance:
 1657 0080 00000000 		.zero	56
 1657      00000000 
 1657      00000000 
 1657      00000000 
 1657      00000000 
 1658              		.globl	adderHexIO_testJunkStartCode
 1661              	adderHexIO_testJunkStartCode:
 1662 00b8 00       		.zero	1
 1663              		.section	.rodata
 1664              	.LC17:
 1665 02dd 2E303430 		.string	".040BE10075820022F7\n"
 1665      42453130 
 1665      30373538 
 1665      32303032 
 1665      3246370A 
 1666 02f2 00000000 		.align 8
 1666      0000
 1667              	.LC18:
 1668 02f8 556E6861 		.string	"Unhandled exception in CHECK_EQUAL(HEX_JUNK_START_CODE, status)"
 1668      6E646C65 
 1668      64206578 
 1668      63657074 
 1668      696F6E20 
 1669              		.text
 1670 0b8d 90       		.align 2
 1671              		.globl	_ZNK27TestHexIO_testJunkStartCode7RunImplEv
 1673              	_ZNK27TestHexIO_testJunkStartCode7RunImplEv:
 1674              	.LFB1098:
 1675              		.loc 4 69 0
 1676              		.cfi_startproc
 1677              		.cfi_personality 0x3,__gxx_personality_v0
 1678              		.cfi_lsda 0x3,.LLSDA1098
 1679 0b8e 55       		pushq	%rbp
 1680              		.cfi_def_cfa_offset 16
 1681              		.cfi_offset 6, -16
 1682 0b8f 4889E5   		movq	%rsp, %rbp
 1683              		.cfi_def_cfa_register 6
 1684 0b92 53       		pushq	%rbx
 1685 0b93 4883EC78 		subq	$120, %rsp
 1686              		.cfi_offset 3, -24
 1687 0b97 48897D88 		movq	%rdi, -120(%rbp)
 1688              	.LBB10:
  70:testHexIO.cpp **** 	Buffer data;
  71:testHexIO.cpp **** 	BufferStatus status;
  72:testHexIO.cpp **** 	const char *line = ".040BE10075820022F7\n";
 1689              		.loc 4 72 0
 1690 0b9b 48C745A8 		movq	$.LC17, -88(%rbp)
 1690      00000000 
  73:testHexIO.cpp **** 	uint8 recordType;
  74:testHexIO.cpp **** 	uint32 seg = 0x00000000;
 1691              		.loc 4 74 0
 1692 0ba3 C745A000 		movl	$0, -96(%rbp)
 1692      000000
  75:testHexIO.cpp **** 	status = bufInitialise(&data, 1024, 0x00, NULL);
 1693              		.loc 4 75 0
 1694 0baa 488D45B0 		leaq	-80(%rbp), %rax
 1695 0bae B9000000 		movl	$0, %ecx
 1695      00
 1696 0bb3 BA000000 		movl	$0, %edx
 1696      00
 1697 0bb8 BE000400 		movl	$1024, %esi
 1697      00
 1698 0bbd 4889C7   		movq	%rax, %rdi
 1699              	.LEHB72:
 1700 0bc0 E8000000 		call	bufInitialise
 1700      00
 1701              	.LEHE72:
 1702 0bc5 89459C   		movl	%eax, -100(%rbp)
 1703              	.LEHB73:
  76:testHexIO.cpp **** 	CHECK_EQUAL(BUF_SUCCESS, status);
 1704              		.loc 4 76 0
 1705 0bc8 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 1705      00
 1706 0bcd 488B08   		movq	(%rax), %rcx
 1707 0bd0 488D45D0 		leaq	-48(%rbp), %rax
 1708 0bd4 BA4C0000 		movl	$76, %edx
 1708      00
 1709 0bd9 4889CE   		movq	%rcx, %rsi
 1710 0bdc 4889C7   		movq	%rax, %rdi
 1711 0bdf E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 1711      00
 1712              		.loc 4 76 0 is_stmt 0 discriminator 1
 1713 0be4 C745A400 		movl	$0, -92(%rbp)
 1713      000000
 1714 0beb E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 1714      00
 1715 0bf0 488B00   		movq	(%rax), %rax
 1716 0bf3 488D4DD0 		leaq	-48(%rbp), %rcx
 1717 0bf7 488D559C 		leaq	-100(%rbp), %rdx
 1718 0bfb 488D75A4 		leaq	-92(%rbp), %rsi
 1719 0bff 4889C7   		movq	%rax, %rdi
 1720 0c02 E8000000 		call	_ZN8UnitTest10CheckEqualI12BufferStatusS1_EEvRNS_11TestResultsERKT_RKT0_RKNS_11TestDetailsE
 1720      00
 1721              	.LEHE73:
 1722              	.L97:
  77:testHexIO.cpp **** 	status = bufProcessLine(line, 0, &data, NULL, &seg, &recordType, NULL);
 1723              		.loc 4 77 0 is_stmt 1
 1724 0c07 488D759B 		leaq	-101(%rbp), %rsi
 1725 0c0b 488D4DA0 		leaq	-96(%rbp), %rcx
 1726 0c0f 488D55B0 		leaq	-80(%rbp), %rdx
 1727 0c13 488B45A8 		movq	-88(%rbp), %rax
 1728 0c17 48C70424 		movq	$0, (%rsp)
 1728      00000000 
 1729 0c1f 4989F1   		movq	%rsi, %r9
 1730 0c22 4989C8   		movq	%rcx, %r8
 1731 0c25 B9000000 		movl	$0, %ecx
 1731      00
 1732 0c2a BE000000 		movl	$0, %esi
 1732      00
 1733 0c2f 4889C7   		movq	%rax, %rdi
 1734              	.LEHB74:
 1735 0c32 E8000000 		call	bufProcessLine
 1735      00
 1736              	.LEHE74:
 1737 0c37 89459C   		movl	%eax, -100(%rbp)
 1738              	.LEHB75:
  78:testHexIO.cpp **** 	CHECK_EQUAL(HEX_JUNK_START_CODE, status);
 1739              		.loc 4 78 0
 1740 0c3a E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 1740      00
 1741 0c3f 488B08   		movq	(%rax), %rcx
 1742 0c42 488D45D0 		leaq	-48(%rbp), %rax
 1743 0c46 BA4E0000 		movl	$78, %edx
 1743      00
 1744 0c4b 4889CE   		movq	%rcx, %rsi
 1745 0c4e 4889C7   		movq	%rax, %rdi
 1746 0c51 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 1746      00
 1747              		.loc 4 78 0 is_stmt 0 discriminator 1
 1748 0c56 C745A408 		movl	$8, -92(%rbp)
 1748      000000
 1749 0c5d E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 1749      00
 1750 0c62 488B00   		movq	(%rax), %rax
 1751 0c65 488D4DD0 		leaq	-48(%rbp), %rcx
 1752 0c69 488D559C 		leaq	-100(%rbp), %rdx
 1753 0c6d 488D75A4 		leaq	-92(%rbp), %rsi
 1754 0c71 4889C7   		movq	%rax, %rdi
 1755 0c74 E8000000 		call	_ZN8UnitTest10CheckEqualI12BufferStatusS1_EEvRNS_11TestResultsERKT_RKT0_RKNS_11TestDetailsE
 1755      00
 1756              	.LEHE75:
 1757              	.L100:
  79:testHexIO.cpp **** 	bufDestroy(&data);
 1758              		.loc 4 79 0 is_stmt 1
 1759 0c79 488D45B0 		leaq	-80(%rbp), %rax
 1760 0c7d 4889C7   		movq	%rax, %rdi
 1761              	.LEHB76:
 1762 0c80 E8000000 		call	bufDestroy
 1762      00
 1763              	.LEHE76:
 1764 0c85 E9BA0000 		jmp	.L105
 1764      00
 1765              	.L102:
 1766 0c8a 4889C3   		movq	%rax, %rbx
  76:testHexIO.cpp **** 	status = bufProcessLine(line, 0, &data, NULL, &seg, &recordType, NULL);
 1767              		.loc 4 76 0
 1768 0c8d E8000000 		call	__cxa_end_catch
 1768      00
 1769 0c92 4889D8   		movq	%rbx, %rax
 1770 0c95 4889C7   		movq	%rax, %rdi
 1771              	.LEHB77:
 1772 0c98 E8000000 		call	_Unwind_Resume
 1772      00
 1773              	.LEHE77:
 1774              	.L101:
 1775 0c9d 4889C7   		movq	%rax, %rdi
 1776 0ca0 E8000000 		call	__cxa_begin_catch
 1776      00
 1777              	.LEHB78:
 1778 0ca5 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 1778      00
 1779 0caa 488B08   		movq	(%rax), %rcx
 1780 0cad 488D45D0 		leaq	-48(%rbp), %rax
 1781 0cb1 BA4C0000 		movl	$76, %edx
 1781      00
 1782 0cb6 4889CE   		movq	%rcx, %rsi
 1783 0cb9 4889C7   		movq	%rax, %rdi
 1784 0cbc E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 1784      00
  76:testHexIO.cpp **** 	status = bufProcessLine(line, 0, &data, NULL, &seg, &recordType, NULL);
 1785              		.loc 4 76 0 is_stmt 0 discriminator 1
 1786 0cc1 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 1786      00
 1787 0cc6 488B00   		movq	(%rax), %rax
 1788 0cc9 488D4DD0 		leaq	-48(%rbp), %rcx
 1789 0ccd BA000000 		movl	$.LC4, %edx
 1789      00
 1790 0cd2 4889CE   		movq	%rcx, %rsi
 1791 0cd5 4889C7   		movq	%rax, %rdi
 1792 0cd8 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 1792      00
 1793              	.LEHE78:
 1794              	.LEHB79:
 1795 0cdd E8000000 		call	__cxa_end_catch
 1795      00
 1796              	.LEHE79:
 1797 0ce2 E920FFFF 		jmp	.L97
 1797      FF
 1798              	.L104:
 1799 0ce7 4889C3   		movq	%rax, %rbx
  78:testHexIO.cpp **** 	CHECK_EQUAL(HEX_JUNK_START_CODE, status);
 1800              		.loc 4 78 0 is_stmt 1
 1801 0cea E8000000 		call	__cxa_end_catch
 1801      00
 1802 0cef 4889D8   		movq	%rbx, %rax
 1803 0cf2 4889C7   		movq	%rax, %rdi
 1804              	.LEHB80:
 1805 0cf5 E8000000 		call	_Unwind_Resume
 1805      00
 1806              	.LEHE80:
 1807              	.L103:
 1808 0cfa 4889C7   		movq	%rax, %rdi
 1809 0cfd E8000000 		call	__cxa_begin_catch
 1809      00
 1810              	.LEHB81:
 1811 0d02 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 1811      00
 1812 0d07 488B08   		movq	(%rax), %rcx
 1813 0d0a 488D45D0 		leaq	-48(%rbp), %rax
 1814 0d0e BA4E0000 		movl	$78, %edx
 1814      00
 1815 0d13 4889CE   		movq	%rcx, %rsi
 1816 0d16 4889C7   		movq	%rax, %rdi
 1817 0d19 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 1817      00
  78:testHexIO.cpp **** 	CHECK_EQUAL(HEX_JUNK_START_CODE, status);
 1818              		.loc 4 78 0 is_stmt 0 discriminator 1
 1819 0d1e E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 1819      00
 1820 0d23 488B00   		movq	(%rax), %rax
 1821 0d26 488D4DD0 		leaq	-48(%rbp), %rcx
 1822 0d2a BA000000 		movl	$.LC18, %edx
 1822      00
 1823 0d2f 4889CE   		movq	%rcx, %rsi
 1824 0d32 4889C7   		movq	%rax, %rdi
 1825 0d35 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 1825      00
 1826              	.LEHE81:
 1827              	.LEHB82:
 1828 0d3a E8000000 		call	__cxa_end_catch
 1828      00
 1829              	.LEHE82:
 1830 0d3f E935FFFF 		jmp	.L100
 1830      FF
 1831              	.L105:
 1832              	.LBE10:
  80:testHexIO.cpp **** }
 1833              		.loc 4 80 0 is_stmt 1
 1834 0d44 4883C478 		addq	$120, %rsp
 1835 0d48 5B       		popq	%rbx
 1836 0d49 5D       		popq	%rbp
 1837              		.cfi_def_cfa 7, 8
 1838 0d4a C3       		ret
 1839              		.cfi_endproc
 1840              	.LFE1098:
 1841              		.section	.gcc_except_table
 1842              		.align 4
 1843              	.LLSDA1098:
 1844 018c FF       		.byte	0xff
 1845 018d 03       		.byte	0x3
 1846 018e 41       		.uleb128 .LLSDATT1098-.LLSDATTD1098
 1847              	.LLSDATTD1098:
 1848 018f 01       		.byte	0x1
 1849 0190 39       		.uleb128 .LLSDACSE1098-.LLSDACSB1098
 1850              	.LLSDACSB1098:
 1851 0191 32       		.uleb128 .LEHB72-.LFB1098
 1852 0192 05       		.uleb128 .LEHE72-.LEHB72
 1853 0193 00       		.uleb128 0
 1854 0194 00       		.uleb128 0
 1855 0195 3A       		.uleb128 .LEHB73-.LFB1098
 1856 0196 3F       		.uleb128 .LEHE73-.LEHB73
 1857 0197 8F02     		.uleb128 .L101-.LFB1098
 1858 0199 01       		.uleb128 0x1
 1859 019a A401     		.uleb128 .LEHB74-.LFB1098
 1860 019c 05       		.uleb128 .LEHE74-.LEHB74
 1861 019d 00       		.uleb128 0
 1862 019e 00       		.uleb128 0
 1863 019f AC01     		.uleb128 .LEHB75-.LFB1098
 1864 01a1 3F       		.uleb128 .LEHE75-.LEHB75
 1865 01a2 EC02     		.uleb128 .L103-.LFB1098
 1866 01a4 01       		.uleb128 0x1
 1867 01a5 F201     		.uleb128 .LEHB76-.LFB1098
 1868 01a7 05       		.uleb128 .LEHE76-.LEHB76
 1869 01a8 00       		.uleb128 0
 1870 01a9 00       		.uleb128 0
 1871 01aa 8A02     		.uleb128 .LEHB77-.LFB1098
 1872 01ac 05       		.uleb128 .LEHE77-.LEHB77
 1873 01ad 00       		.uleb128 0
 1874 01ae 00       		.uleb128 0
 1875 01af 9702     		.uleb128 .LEHB78-.LFB1098
 1876 01b1 38       		.uleb128 .LEHE78-.LEHB78
 1877 01b2 FC01     		.uleb128 .L102-.LFB1098
 1878 01b4 00       		.uleb128 0
 1879 01b5 CF02     		.uleb128 .LEHB79-.LFB1098
 1880 01b7 05       		.uleb128 .LEHE79-.LEHB79
 1881 01b8 00       		.uleb128 0
 1882 01b9 00       		.uleb128 0
 1883 01ba E702     		.uleb128 .LEHB80-.LFB1098
 1884 01bc 05       		.uleb128 .LEHE80-.LEHB80
 1885 01bd 00       		.uleb128 0
 1886 01be 00       		.uleb128 0
 1887 01bf F402     		.uleb128 .LEHB81-.LFB1098
 1888 01c1 38       		.uleb128 .LEHE81-.LEHB81
 1889 01c2 D902     		.uleb128 .L104-.LFB1098
 1890 01c4 00       		.uleb128 0
 1891 01c5 AC03     		.uleb128 .LEHB82-.LFB1098
 1892 01c7 05       		.uleb128 .LEHE82-.LEHB82
 1893 01c8 00       		.uleb128 0
 1894 01c9 00       		.uleb128 0
 1895              	.LLSDACSE1098:
 1896 01ca 01       		.byte	0x1
 1897 01cb 00       		.byte	0
 1898              		.align 4
 1899 01cc 00000000 		.long	0
 1900              	
 1901              	.LLSDATT1098:
 1902              		.text
 1904              		.section	.rodata
 1905              	.LC19:
 1906 0338 48657849 		.string	"HexIO_testJunkByteCount"
 1906      4F5F7465 
 1906      73744A75 
 1906      6E6B4279 
 1906      7465436F 
 1907              		.section	.text._ZN27TestHexIO_testJunkByteCountC2Ev,"axG",@progbits,_ZN27TestHexIO_testJunkByteCou
 1908              		.align 2
 1909              		.weak	_ZN27TestHexIO_testJunkByteCountC2Ev
 1911              	_ZN27TestHexIO_testJunkByteCountC2Ev:
 1912              	.LFB1100:
  81:testHexIO.cpp **** 
  82:testHexIO.cpp **** TEST(HexIO_testJunkByteCount) {
 1913              		.loc 4 82 0
 1914              		.cfi_startproc
 1915 0000 55       		pushq	%rbp
 1916              		.cfi_def_cfa_offset 16
 1917              		.cfi_offset 6, -16
 1918 0001 4889E5   		movq	%rsp, %rbp
 1919              		.cfi_def_cfa_register 6
 1920 0004 4883EC10 		subq	$16, %rsp
 1921 0008 48897DF8 		movq	%rdi, -8(%rbp)
 1922              	.LBB11:
 1923              		.loc 4 82 0
 1924 000c E8000000 		call	_ZN13UnitTestSuite12GetSuiteNameEv
 1924      00
 1925 0011 4889C2   		movq	%rax, %rdx
 1926 0014 488B45F8 		movq	-8(%rbp), %rax
 1927 0018 41B85200 		movl	$82, %r8d
 1927      0000
 1928 001e B9000000 		movl	$.LC1, %ecx
 1928      00
 1929 0023 BE000000 		movl	$.LC19, %esi
 1929      00
 1930 0028 4889C7   		movq	%rax, %rdi
 1931 002b E8000000 		call	_ZN8UnitTest4TestC2EPKcS2_S2_i
 1931      00
 1932 0030 488B45F8 		movq	-8(%rbp), %rax
 1933 0034 48C70000 		movq	$_ZTV27TestHexIO_testJunkByteCount+16, (%rax)
 1933      000000
 1934              	.LBE11:
 1935 003b C9       		leave
 1936              		.cfi_def_cfa 7, 8
 1937 003c C3       		ret
 1938              		.cfi_endproc
 1939              	.LFE1100:
 1941              		.weak	_ZN27TestHexIO_testJunkByteCountC1Ev
 1942              		.set	_ZN27TestHexIO_testJunkByteCountC1Ev,_ZN27TestHexIO_testJunkByteCountC2Ev
 1943              		.globl	testHexIO_testJunkByteCountInstance
 1944              		.bss
 1945 00b9 00000000 		.align 32
 1945      000000
 1948              	testHexIO_testJunkByteCountInstance:
 1949 00c0 00000000 		.zero	56
 1949      00000000 
 1949      00000000 
 1949      00000000 
 1949      00000000 
 1950              		.globl	adderHexIO_testJunkByteCount
 1953              	adderHexIO_testJunkByteCount:
 1954 00f8 00       		.zero	1
 1955              		.section	.rodata
 1956              	.LC20:
 1957 0350 3A2E2E30 		.string	":..0BE10075820022F7\n"
 1957      42453130 
 1957      30373538 
 1957      32303032 
 1957      3246370A 
 1958 0365 000000   		.align 8
 1959              	.LC21:
 1960 0368 556E6861 		.string	"Unhandled exception in CHECK_EQUAL(HEX_JUNK_BYTE_COUNT, status)"
 1960      6E646C65 
 1960      64206578 
 1960      63657074 
 1960      696F6E20 
 1961              		.text
 1962 0d4b 90       		.align 2
 1963              		.globl	_ZNK27TestHexIO_testJunkByteCount7RunImplEv
 1965              	_ZNK27TestHexIO_testJunkByteCount7RunImplEv:
 1966              	.LFB1102:
 1967              		.loc 4 82 0
 1968              		.cfi_startproc
 1969              		.cfi_personality 0x3,__gxx_personality_v0
 1970              		.cfi_lsda 0x3,.LLSDA1102
 1971 0d4c 55       		pushq	%rbp
 1972              		.cfi_def_cfa_offset 16
 1973              		.cfi_offset 6, -16
 1974 0d4d 4889E5   		movq	%rsp, %rbp
 1975              		.cfi_def_cfa_register 6
 1976 0d50 53       		pushq	%rbx
 1977 0d51 4883EC78 		subq	$120, %rsp
 1978              		.cfi_offset 3, -24
 1979 0d55 48897D88 		movq	%rdi, -120(%rbp)
 1980              	.LBB12:
  83:testHexIO.cpp **** 	Buffer data;
  84:testHexIO.cpp **** 	BufferStatus status;
  85:testHexIO.cpp **** 	const char *line = ":..0BE10075820022F7\n";
 1981              		.loc 4 85 0
 1982 0d59 48C745A8 		movq	$.LC20, -88(%rbp)
 1982      00000000 
  86:testHexIO.cpp **** 	uint8 recordType;
  87:testHexIO.cpp **** 	uint32 seg = 0x00000000;
 1983              		.loc 4 87 0
 1984 0d61 C745A000 		movl	$0, -96(%rbp)
 1984      000000
  88:testHexIO.cpp **** 	status = bufInitialise(&data, 1024, 0x00, NULL);
 1985              		.loc 4 88 0
 1986 0d68 488D45B0 		leaq	-80(%rbp), %rax
 1987 0d6c B9000000 		movl	$0, %ecx
 1987      00
 1988 0d71 BA000000 		movl	$0, %edx
 1988      00
 1989 0d76 BE000400 		movl	$1024, %esi
 1989      00
 1990 0d7b 4889C7   		movq	%rax, %rdi
 1991              	.LEHB83:
 1992 0d7e E8000000 		call	bufInitialise
 1992      00
 1993              	.LEHE83:
 1994 0d83 89459C   		movl	%eax, -100(%rbp)
 1995              	.LEHB84:
  89:testHexIO.cpp **** 	CHECK_EQUAL(BUF_SUCCESS, status);
 1996              		.loc 4 89 0
 1997 0d86 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 1997      00
 1998 0d8b 488B08   		movq	(%rax), %rcx
 1999 0d8e 488D45D0 		leaq	-48(%rbp), %rax
 2000 0d92 BA590000 		movl	$89, %edx
 2000      00
 2001 0d97 4889CE   		movq	%rcx, %rsi
 2002 0d9a 4889C7   		movq	%rax, %rdi
 2003 0d9d E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 2003      00
 2004              		.loc 4 89 0 is_stmt 0 discriminator 1
 2005 0da2 C745A400 		movl	$0, -92(%rbp)
 2005      000000
 2006 0da9 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 2006      00
 2007 0dae 488B00   		movq	(%rax), %rax
 2008 0db1 488D4DD0 		leaq	-48(%rbp), %rcx
 2009 0db5 488D559C 		leaq	-100(%rbp), %rdx
 2010 0db9 488D75A4 		leaq	-92(%rbp), %rsi
 2011 0dbd 4889C7   		movq	%rax, %rdi
 2012 0dc0 E8000000 		call	_ZN8UnitTest10CheckEqualI12BufferStatusS1_EEvRNS_11TestResultsERKT_RKT0_RKNS_11TestDetailsE
 2012      00
 2013              	.LEHE84:
 2014              	.L110:
  90:testHexIO.cpp **** 	status = bufProcessLine(line, 0, &data, NULL, &seg, &recordType, NULL);
 2015              		.loc 4 90 0 is_stmt 1
 2016 0dc5 488D759B 		leaq	-101(%rbp), %rsi
 2017 0dc9 488D4DA0 		leaq	-96(%rbp), %rcx
 2018 0dcd 488D55B0 		leaq	-80(%rbp), %rdx
 2019 0dd1 488B45A8 		movq	-88(%rbp), %rax
 2020 0dd5 48C70424 		movq	$0, (%rsp)
 2020      00000000 
 2021 0ddd 4989F1   		movq	%rsi, %r9
 2022 0de0 4989C8   		movq	%rcx, %r8
 2023 0de3 B9000000 		movl	$0, %ecx
 2023      00
 2024 0de8 BE000000 		movl	$0, %esi
 2024      00
 2025 0ded 4889C7   		movq	%rax, %rdi
 2026              	.LEHB85:
 2027 0df0 E8000000 		call	bufProcessLine
 2027      00
 2028              	.LEHE85:
 2029 0df5 89459C   		movl	%eax, -100(%rbp)
 2030              	.LEHB86:
  91:testHexIO.cpp **** 	CHECK_EQUAL(HEX_JUNK_BYTE_COUNT, status);
 2031              		.loc 4 91 0
 2032 0df8 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 2032      00
 2033 0dfd 488B08   		movq	(%rax), %rcx
 2034 0e00 488D45D0 		leaq	-48(%rbp), %rax
 2035 0e04 BA5B0000 		movl	$91, %edx
 2035      00
 2036 0e09 4889CE   		movq	%rcx, %rsi
 2037 0e0c 4889C7   		movq	%rax, %rdi
 2038 0e0f E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 2038      00
 2039              		.loc 4 91 0 is_stmt 0 discriminator 1
 2040 0e14 C745A409 		movl	$9, -92(%rbp)
 2040      000000
 2041 0e1b E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 2041      00
 2042 0e20 488B00   		movq	(%rax), %rax
 2043 0e23 488D4DD0 		leaq	-48(%rbp), %rcx
 2044 0e27 488D559C 		leaq	-100(%rbp), %rdx
 2045 0e2b 488D75A4 		leaq	-92(%rbp), %rsi
 2046 0e2f 4889C7   		movq	%rax, %rdi
 2047 0e32 E8000000 		call	_ZN8UnitTest10CheckEqualI12BufferStatusS1_EEvRNS_11TestResultsERKT_RKT0_RKNS_11TestDetailsE
 2047      00
 2048              	.LEHE86:
 2049              	.L113:
  92:testHexIO.cpp **** 	bufDestroy(&data);
 2050              		.loc 4 92 0 is_stmt 1
 2051 0e37 488D45B0 		leaq	-80(%rbp), %rax
 2052 0e3b 4889C7   		movq	%rax, %rdi
 2053              	.LEHB87:
 2054 0e3e E8000000 		call	bufDestroy
 2054      00
 2055              	.LEHE87:
 2056 0e43 E9BA0000 		jmp	.L118
 2056      00
 2057              	.L115:
 2058 0e48 4889C3   		movq	%rax, %rbx
  89:testHexIO.cpp **** 	status = bufProcessLine(line, 0, &data, NULL, &seg, &recordType, NULL);
 2059              		.loc 4 89 0
 2060 0e4b E8000000 		call	__cxa_end_catch
 2060      00
 2061 0e50 4889D8   		movq	%rbx, %rax
 2062 0e53 4889C7   		movq	%rax, %rdi
 2063              	.LEHB88:
 2064 0e56 E8000000 		call	_Unwind_Resume
 2064      00
 2065              	.LEHE88:
 2066              	.L114:
 2067 0e5b 4889C7   		movq	%rax, %rdi
 2068 0e5e E8000000 		call	__cxa_begin_catch
 2068      00
 2069              	.LEHB89:
 2070 0e63 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 2070      00
 2071 0e68 488B08   		movq	(%rax), %rcx
 2072 0e6b 488D45D0 		leaq	-48(%rbp), %rax
 2073 0e6f BA590000 		movl	$89, %edx
 2073      00
 2074 0e74 4889CE   		movq	%rcx, %rsi
 2075 0e77 4889C7   		movq	%rax, %rdi
 2076 0e7a E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 2076      00
  89:testHexIO.cpp **** 	status = bufProcessLine(line, 0, &data, NULL, &seg, &recordType, NULL);
 2077              		.loc 4 89 0 is_stmt 0 discriminator 1
 2078 0e7f E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 2078      00
 2079 0e84 488B00   		movq	(%rax), %rax
 2080 0e87 488D4DD0 		leaq	-48(%rbp), %rcx
 2081 0e8b BA000000 		movl	$.LC4, %edx
 2081      00
 2082 0e90 4889CE   		movq	%rcx, %rsi
 2083 0e93 4889C7   		movq	%rax, %rdi
 2084 0e96 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 2084      00
 2085              	.LEHE89:
 2086              	.LEHB90:
 2087 0e9b E8000000 		call	__cxa_end_catch
 2087      00
 2088              	.LEHE90:
 2089 0ea0 E920FFFF 		jmp	.L110
 2089      FF
 2090              	.L117:
 2091 0ea5 4889C3   		movq	%rax, %rbx
  91:testHexIO.cpp **** 	CHECK_EQUAL(HEX_JUNK_BYTE_COUNT, status);
 2092              		.loc 4 91 0 is_stmt 1
 2093 0ea8 E8000000 		call	__cxa_end_catch
 2093      00
 2094 0ead 4889D8   		movq	%rbx, %rax
 2095 0eb0 4889C7   		movq	%rax, %rdi
 2096              	.LEHB91:
 2097 0eb3 E8000000 		call	_Unwind_Resume
 2097      00
 2098              	.LEHE91:
 2099              	.L116:
 2100 0eb8 4889C7   		movq	%rax, %rdi
 2101 0ebb E8000000 		call	__cxa_begin_catch
 2101      00
 2102              	.LEHB92:
 2103 0ec0 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 2103      00
 2104 0ec5 488B08   		movq	(%rax), %rcx
 2105 0ec8 488D45D0 		leaq	-48(%rbp), %rax
 2106 0ecc BA5B0000 		movl	$91, %edx
 2106      00
 2107 0ed1 4889CE   		movq	%rcx, %rsi
 2108 0ed4 4889C7   		movq	%rax, %rdi
 2109 0ed7 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 2109      00
  91:testHexIO.cpp **** 	CHECK_EQUAL(HEX_JUNK_BYTE_COUNT, status);
 2110              		.loc 4 91 0 is_stmt 0 discriminator 1
 2111 0edc E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 2111      00
 2112 0ee1 488B00   		movq	(%rax), %rax
 2113 0ee4 488D4DD0 		leaq	-48(%rbp), %rcx
 2114 0ee8 BA000000 		movl	$.LC21, %edx
 2114      00
 2115 0eed 4889CE   		movq	%rcx, %rsi
 2116 0ef0 4889C7   		movq	%rax, %rdi
 2117 0ef3 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 2117      00
 2118              	.LEHE92:
 2119              	.LEHB93:
 2120 0ef8 E8000000 		call	__cxa_end_catch
 2120      00
 2121              	.LEHE93:
 2122 0efd E935FFFF 		jmp	.L113
 2122      FF
 2123              	.L118:
 2124              	.LBE12:
  93:testHexIO.cpp **** }
 2125              		.loc 4 93 0 is_stmt 1
 2126 0f02 4883C478 		addq	$120, %rsp
 2127 0f06 5B       		popq	%rbx
 2128 0f07 5D       		popq	%rbp
 2129              		.cfi_def_cfa 7, 8
 2130 0f08 C3       		ret
 2131              		.cfi_endproc
 2132              	.LFE1102:
 2133              		.section	.gcc_except_table
 2134              		.align 4
 2135              	.LLSDA1102:
 2136 01d0 FF       		.byte	0xff
 2137 01d1 03       		.byte	0x3
 2138 01d2 41       		.uleb128 .LLSDATT1102-.LLSDATTD1102
 2139              	.LLSDATTD1102:
 2140 01d3 01       		.byte	0x1
 2141 01d4 39       		.uleb128 .LLSDACSE1102-.LLSDACSB1102
 2142              	.LLSDACSB1102:
 2143 01d5 32       		.uleb128 .LEHB83-.LFB1102
 2144 01d6 05       		.uleb128 .LEHE83-.LEHB83
 2145 01d7 00       		.uleb128 0
 2146 01d8 00       		.uleb128 0
 2147 01d9 3A       		.uleb128 .LEHB84-.LFB1102
 2148 01da 3F       		.uleb128 .LEHE84-.LEHB84
 2149 01db 8F02     		.uleb128 .L114-.LFB1102
 2150 01dd 01       		.uleb128 0x1
 2151 01de A401     		.uleb128 .LEHB85-.LFB1102
 2152 01e0 05       		.uleb128 .LEHE85-.LEHB85
 2153 01e1 00       		.uleb128 0
 2154 01e2 00       		.uleb128 0
 2155 01e3 AC01     		.uleb128 .LEHB86-.LFB1102
 2156 01e5 3F       		.uleb128 .LEHE86-.LEHB86
 2157 01e6 EC02     		.uleb128 .L116-.LFB1102
 2158 01e8 01       		.uleb128 0x1
 2159 01e9 F201     		.uleb128 .LEHB87-.LFB1102
 2160 01eb 05       		.uleb128 .LEHE87-.LEHB87
 2161 01ec 00       		.uleb128 0
 2162 01ed 00       		.uleb128 0
 2163 01ee 8A02     		.uleb128 .LEHB88-.LFB1102
 2164 01f0 05       		.uleb128 .LEHE88-.LEHB88
 2165 01f1 00       		.uleb128 0
 2166 01f2 00       		.uleb128 0
 2167 01f3 9702     		.uleb128 .LEHB89-.LFB1102
 2168 01f5 38       		.uleb128 .LEHE89-.LEHB89
 2169 01f6 FC01     		.uleb128 .L115-.LFB1102
 2170 01f8 00       		.uleb128 0
 2171 01f9 CF02     		.uleb128 .LEHB90-.LFB1102
 2172 01fb 05       		.uleb128 .LEHE90-.LEHB90
 2173 01fc 00       		.uleb128 0
 2174 01fd 00       		.uleb128 0
 2175 01fe E702     		.uleb128 .LEHB91-.LFB1102
 2176 0200 05       		.uleb128 .LEHE91-.LEHB91
 2177 0201 00       		.uleb128 0
 2178 0202 00       		.uleb128 0
 2179 0203 F402     		.uleb128 .LEHB92-.LFB1102
 2180 0205 38       		.uleb128 .LEHE92-.LEHB92
 2181 0206 D902     		.uleb128 .L117-.LFB1102
 2182 0208 00       		.uleb128 0
 2183 0209 AC03     		.uleb128 .LEHB93-.LFB1102
 2184 020b 05       		.uleb128 .LEHE93-.LEHB93
 2185 020c 00       		.uleb128 0
 2186 020d 00       		.uleb128 0
 2187              	.LLSDACSE1102:
 2188 020e 01       		.byte	0x1
 2189 020f 00       		.byte	0
 2190              		.align 4
 2191 0210 00000000 		.long	0
 2192              	
 2193              	.LLSDATT1102:
 2194              		.text
 2196              		.section	.rodata
 2197              	.LC22:
 2198 03a8 48657849 		.string	"HexIO_testJunkAddrMsb"
 2198      4F5F7465 
 2198      73744A75 
 2198      6E6B4164 
 2198      64724D73 
 2199              		.section	.text._ZN25TestHexIO_testJunkAddrMsbC2Ev,"axG",@progbits,_ZN25TestHexIO_testJunkAddrMsbC5
 2200              		.align 2
 2201              		.weak	_ZN25TestHexIO_testJunkAddrMsbC2Ev
 2203              	_ZN25TestHexIO_testJunkAddrMsbC2Ev:
 2204              	.LFB1104:
  94:testHexIO.cpp **** 
  95:testHexIO.cpp **** TEST(HexIO_testJunkAddrMsb) {
 2205              		.loc 4 95 0
 2206              		.cfi_startproc
 2207 0000 55       		pushq	%rbp
 2208              		.cfi_def_cfa_offset 16
 2209              		.cfi_offset 6, -16
 2210 0001 4889E5   		movq	%rsp, %rbp
 2211              		.cfi_def_cfa_register 6
 2212 0004 4883EC10 		subq	$16, %rsp
 2213 0008 48897DF8 		movq	%rdi, -8(%rbp)
 2214              	.LBB13:
 2215              		.loc 4 95 0
 2216 000c E8000000 		call	_ZN13UnitTestSuite12GetSuiteNameEv
 2216      00
 2217 0011 4889C2   		movq	%rax, %rdx
 2218 0014 488B45F8 		movq	-8(%rbp), %rax
 2219 0018 41B85F00 		movl	$95, %r8d
 2219      0000
 2220 001e B9000000 		movl	$.LC1, %ecx
 2220      00
 2221 0023 BE000000 		movl	$.LC22, %esi
 2221      00
 2222 0028 4889C7   		movq	%rax, %rdi
 2223 002b E8000000 		call	_ZN8UnitTest4TestC2EPKcS2_S2_i
 2223      00
 2224 0030 488B45F8 		movq	-8(%rbp), %rax
 2225 0034 48C70000 		movq	$_ZTV25TestHexIO_testJunkAddrMsb+16, (%rax)
 2225      000000
 2226              	.LBE13:
 2227 003b C9       		leave
 2228              		.cfi_def_cfa 7, 8
 2229 003c C3       		ret
 2230              		.cfi_endproc
 2231              	.LFE1104:
 2233              		.weak	_ZN25TestHexIO_testJunkAddrMsbC1Ev
 2234              		.set	_ZN25TestHexIO_testJunkAddrMsbC1Ev,_ZN25TestHexIO_testJunkAddrMsbC2Ev
 2235              		.globl	testHexIO_testJunkAddrMsbInstance
 2236              		.bss
 2237 00f9 00000000 		.align 32
 2237      000000
 2240              	testHexIO_testJunkAddrMsbInstance:
 2241 0100 00000000 		.zero	56
 2241      00000000 
 2241      00000000 
 2241      00000000 
 2241      00000000 
 2242              		.globl	adderHexIO_testJunkAddrMsb
 2245              	adderHexIO_testJunkAddrMsb:
 2246 0138 00       		.zero	1
 2247              		.section	.rodata
 2248              	.LC23:
 2249 03be 3A30342E 		.string	":04..E10075820022F7\n"
 2249      2E453130 
 2249      30373538 
 2249      32303032 
 2249      3246370A 
 2250 03d3 00000000 		.align 8
 2250      00
 2251              	.LC24:
 2252 03d8 556E6861 		.string	"Unhandled exception in CHECK_EQUAL(HEX_JUNK_ADDR_MSB, status)"
 2252      6E646C65 
 2252      64206578 
 2252      63657074 
 2252      696F6E20 
 2253              		.text
 2254 0f09 90       		.align 2
 2255              		.globl	_ZNK25TestHexIO_testJunkAddrMsb7RunImplEv
 2257              	_ZNK25TestHexIO_testJunkAddrMsb7RunImplEv:
 2258              	.LFB1106:
 2259              		.loc 4 95 0
 2260              		.cfi_startproc
 2261              		.cfi_personality 0x3,__gxx_personality_v0
 2262              		.cfi_lsda 0x3,.LLSDA1106
 2263 0f0a 55       		pushq	%rbp
 2264              		.cfi_def_cfa_offset 16
 2265              		.cfi_offset 6, -16
 2266 0f0b 4889E5   		movq	%rsp, %rbp
 2267              		.cfi_def_cfa_register 6
 2268 0f0e 53       		pushq	%rbx
 2269 0f0f 4883EC78 		subq	$120, %rsp
 2270              		.cfi_offset 3, -24
 2271 0f13 48897D88 		movq	%rdi, -120(%rbp)
 2272              	.LBB14:
  96:testHexIO.cpp **** 	Buffer data;
  97:testHexIO.cpp **** 	BufferStatus status;
  98:testHexIO.cpp **** 	const char *line = ":04..E10075820022F7\n";
 2273              		.loc 4 98 0
 2274 0f17 48C745A8 		movq	$.LC23, -88(%rbp)
 2274      00000000 
  99:testHexIO.cpp **** 	uint8 recordType;
 100:testHexIO.cpp **** 	uint32 seg = 0x00000000;
 2275              		.loc 4 100 0
 2276 0f1f C745A000 		movl	$0, -96(%rbp)
 2276      000000
 101:testHexIO.cpp **** 	status = bufInitialise(&data, 1024, 0x00, NULL);
 2277              		.loc 4 101 0
 2278 0f26 488D45B0 		leaq	-80(%rbp), %rax
 2279 0f2a B9000000 		movl	$0, %ecx
 2279      00
 2280 0f2f BA000000 		movl	$0, %edx
 2280      00
 2281 0f34 BE000400 		movl	$1024, %esi
 2281      00
 2282 0f39 4889C7   		movq	%rax, %rdi
 2283              	.LEHB94:
 2284 0f3c E8000000 		call	bufInitialise
 2284      00
 2285              	.LEHE94:
 2286 0f41 89459C   		movl	%eax, -100(%rbp)
 2287              	.LEHB95:
 102:testHexIO.cpp **** 	CHECK_EQUAL(BUF_SUCCESS, status);
 2288              		.loc 4 102 0
 2289 0f44 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 2289      00
 2290 0f49 488B08   		movq	(%rax), %rcx
 2291 0f4c 488D45D0 		leaq	-48(%rbp), %rax
 2292 0f50 BA660000 		movl	$102, %edx
 2292      00
 2293 0f55 4889CE   		movq	%rcx, %rsi
 2294 0f58 4889C7   		movq	%rax, %rdi
 2295 0f5b E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 2295      00
 2296              		.loc 4 102 0 is_stmt 0 discriminator 1
 2297 0f60 C745A400 		movl	$0, -92(%rbp)
 2297      000000
 2298 0f67 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 2298      00
 2299 0f6c 488B00   		movq	(%rax), %rax
 2300 0f6f 488D4DD0 		leaq	-48(%rbp), %rcx
 2301 0f73 488D559C 		leaq	-100(%rbp), %rdx
 2302 0f77 488D75A4 		leaq	-92(%rbp), %rsi
 2303 0f7b 4889C7   		movq	%rax, %rdi
 2304 0f7e E8000000 		call	_ZN8UnitTest10CheckEqualI12BufferStatusS1_EEvRNS_11TestResultsERKT_RKT0_RKNS_11TestDetailsE
 2304      00
 2305              	.LEHE95:
 2306              	.L123:
 103:testHexIO.cpp **** 	status = bufProcessLine(line, 0, &data, NULL, &seg, &recordType, NULL);
 2307              		.loc 4 103 0 is_stmt 1
 2308 0f83 488D759B 		leaq	-101(%rbp), %rsi
 2309 0f87 488D4DA0 		leaq	-96(%rbp), %rcx
 2310 0f8b 488D55B0 		leaq	-80(%rbp), %rdx
 2311 0f8f 488B45A8 		movq	-88(%rbp), %rax
 2312 0f93 48C70424 		movq	$0, (%rsp)
 2312      00000000 
 2313 0f9b 4989F1   		movq	%rsi, %r9
 2314 0f9e 4989C8   		movq	%rcx, %r8
 2315 0fa1 B9000000 		movl	$0, %ecx
 2315      00
 2316 0fa6 BE000000 		movl	$0, %esi
 2316      00
 2317 0fab 4889C7   		movq	%rax, %rdi
 2318              	.LEHB96:
 2319 0fae E8000000 		call	bufProcessLine
 2319      00
 2320              	.LEHE96:
 2321 0fb3 89459C   		movl	%eax, -100(%rbp)
 2322              	.LEHB97:
 104:testHexIO.cpp **** 	CHECK_EQUAL(HEX_JUNK_ADDR_MSB, status);
 2323              		.loc 4 104 0
 2324 0fb6 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 2324      00
 2325 0fbb 488B08   		movq	(%rax), %rcx
 2326 0fbe 488D45D0 		leaq	-48(%rbp), %rax
 2327 0fc2 BA680000 		movl	$104, %edx
 2327      00
 2328 0fc7 4889CE   		movq	%rcx, %rsi
 2329 0fca 4889C7   		movq	%rax, %rdi
 2330 0fcd E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 2330      00
 2331              		.loc 4 104 0 is_stmt 0 discriminator 1
 2332 0fd2 C745A40A 		movl	$10, -92(%rbp)
 2332      000000
 2333 0fd9 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 2333      00
 2334 0fde 488B00   		movq	(%rax), %rax
 2335 0fe1 488D4DD0 		leaq	-48(%rbp), %rcx
 2336 0fe5 488D559C 		leaq	-100(%rbp), %rdx
 2337 0fe9 488D75A4 		leaq	-92(%rbp), %rsi
 2338 0fed 4889C7   		movq	%rax, %rdi
 2339 0ff0 E8000000 		call	_ZN8UnitTest10CheckEqualI12BufferStatusS1_EEvRNS_11TestResultsERKT_RKT0_RKNS_11TestDetailsE
 2339      00
 2340              	.LEHE97:
 2341              	.L126:
 105:testHexIO.cpp **** 	bufDestroy(&data);
 2342              		.loc 4 105 0 is_stmt 1
 2343 0ff5 488D45B0 		leaq	-80(%rbp), %rax
 2344 0ff9 4889C7   		movq	%rax, %rdi
 2345              	.LEHB98:
 2346 0ffc E8000000 		call	bufDestroy
 2346      00
 2347              	.LEHE98:
 2348 1001 E9BA0000 		jmp	.L131
 2348      00
 2349              	.L128:
 2350 1006 4889C3   		movq	%rax, %rbx
 102:testHexIO.cpp **** 	status = bufProcessLine(line, 0, &data, NULL, &seg, &recordType, NULL);
 2351              		.loc 4 102 0
 2352 1009 E8000000 		call	__cxa_end_catch
 2352      00
 2353 100e 4889D8   		movq	%rbx, %rax
 2354 1011 4889C7   		movq	%rax, %rdi
 2355              	.LEHB99:
 2356 1014 E8000000 		call	_Unwind_Resume
 2356      00
 2357              	.LEHE99:
 2358              	.L127:
 2359 1019 4889C7   		movq	%rax, %rdi
 2360 101c E8000000 		call	__cxa_begin_catch
 2360      00
 2361              	.LEHB100:
 2362 1021 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 2362      00
 2363 1026 488B08   		movq	(%rax), %rcx
 2364 1029 488D45D0 		leaq	-48(%rbp), %rax
 2365 102d BA660000 		movl	$102, %edx
 2365      00
 2366 1032 4889CE   		movq	%rcx, %rsi
 2367 1035 4889C7   		movq	%rax, %rdi
 2368 1038 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 2368      00
 102:testHexIO.cpp **** 	status = bufProcessLine(line, 0, &data, NULL, &seg, &recordType, NULL);
 2369              		.loc 4 102 0 is_stmt 0 discriminator 1
 2370 103d E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 2370      00
 2371 1042 488B00   		movq	(%rax), %rax
 2372 1045 488D4DD0 		leaq	-48(%rbp), %rcx
 2373 1049 BA000000 		movl	$.LC4, %edx
 2373      00
 2374 104e 4889CE   		movq	%rcx, %rsi
 2375 1051 4889C7   		movq	%rax, %rdi
 2376 1054 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 2376      00
 2377              	.LEHE100:
 2378              	.LEHB101:
 2379 1059 E8000000 		call	__cxa_end_catch
 2379      00
 2380              	.LEHE101:
 2381 105e E920FFFF 		jmp	.L123
 2381      FF
 2382              	.L130:
 2383 1063 4889C3   		movq	%rax, %rbx
 104:testHexIO.cpp **** 	CHECK_EQUAL(HEX_JUNK_ADDR_MSB, status);
 2384              		.loc 4 104 0 is_stmt 1
 2385 1066 E8000000 		call	__cxa_end_catch
 2385      00
 2386 106b 4889D8   		movq	%rbx, %rax
 2387 106e 4889C7   		movq	%rax, %rdi
 2388              	.LEHB102:
 2389 1071 E8000000 		call	_Unwind_Resume
 2389      00
 2390              	.LEHE102:
 2391              	.L129:
 2392 1076 4889C7   		movq	%rax, %rdi
 2393 1079 E8000000 		call	__cxa_begin_catch
 2393      00
 2394              	.LEHB103:
 2395 107e E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 2395      00
 2396 1083 488B08   		movq	(%rax), %rcx
 2397 1086 488D45D0 		leaq	-48(%rbp), %rax
 2398 108a BA680000 		movl	$104, %edx
 2398      00
 2399 108f 4889CE   		movq	%rcx, %rsi
 2400 1092 4889C7   		movq	%rax, %rdi
 2401 1095 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 2401      00
 104:testHexIO.cpp **** 	CHECK_EQUAL(HEX_JUNK_ADDR_MSB, status);
 2402              		.loc 4 104 0 is_stmt 0 discriminator 1
 2403 109a E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 2403      00
 2404 109f 488B00   		movq	(%rax), %rax
 2405 10a2 488D4DD0 		leaq	-48(%rbp), %rcx
 2406 10a6 BA000000 		movl	$.LC24, %edx
 2406      00
 2407 10ab 4889CE   		movq	%rcx, %rsi
 2408 10ae 4889C7   		movq	%rax, %rdi
 2409 10b1 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 2409      00
 2410              	.LEHE103:
 2411              	.LEHB104:
 2412 10b6 E8000000 		call	__cxa_end_catch
 2412      00
 2413              	.LEHE104:
 2414 10bb E935FFFF 		jmp	.L126
 2414      FF
 2415              	.L131:
 2416              	.LBE14:
 106:testHexIO.cpp **** }
 2417              		.loc 4 106 0 is_stmt 1
 2418 10c0 4883C478 		addq	$120, %rsp
 2419 10c4 5B       		popq	%rbx
 2420 10c5 5D       		popq	%rbp
 2421              		.cfi_def_cfa 7, 8
 2422 10c6 C3       		ret
 2423              		.cfi_endproc
 2424              	.LFE1106:
 2425              		.section	.gcc_except_table
 2426              		.align 4
 2427              	.LLSDA1106:
 2428 0214 FF       		.byte	0xff
 2429 0215 03       		.byte	0x3
 2430 0216 41       		.uleb128 .LLSDATT1106-.LLSDATTD1106
 2431              	.LLSDATTD1106:
 2432 0217 01       		.byte	0x1
 2433 0218 39       		.uleb128 .LLSDACSE1106-.LLSDACSB1106
 2434              	.LLSDACSB1106:
 2435 0219 32       		.uleb128 .LEHB94-.LFB1106
 2436 021a 05       		.uleb128 .LEHE94-.LEHB94
 2437 021b 00       		.uleb128 0
 2438 021c 00       		.uleb128 0
 2439 021d 3A       		.uleb128 .LEHB95-.LFB1106
 2440 021e 3F       		.uleb128 .LEHE95-.LEHB95
 2441 021f 8F02     		.uleb128 .L127-.LFB1106
 2442 0221 01       		.uleb128 0x1
 2443 0222 A401     		.uleb128 .LEHB96-.LFB1106
 2444 0224 05       		.uleb128 .LEHE96-.LEHB96
 2445 0225 00       		.uleb128 0
 2446 0226 00       		.uleb128 0
 2447 0227 AC01     		.uleb128 .LEHB97-.LFB1106
 2448 0229 3F       		.uleb128 .LEHE97-.LEHB97
 2449 022a EC02     		.uleb128 .L129-.LFB1106
 2450 022c 01       		.uleb128 0x1
 2451 022d F201     		.uleb128 .LEHB98-.LFB1106
 2452 022f 05       		.uleb128 .LEHE98-.LEHB98
 2453 0230 00       		.uleb128 0
 2454 0231 00       		.uleb128 0
 2455 0232 8A02     		.uleb128 .LEHB99-.LFB1106
 2456 0234 05       		.uleb128 .LEHE99-.LEHB99
 2457 0235 00       		.uleb128 0
 2458 0236 00       		.uleb128 0
 2459 0237 9702     		.uleb128 .LEHB100-.LFB1106
 2460 0239 38       		.uleb128 .LEHE100-.LEHB100
 2461 023a FC01     		.uleb128 .L128-.LFB1106
 2462 023c 00       		.uleb128 0
 2463 023d CF02     		.uleb128 .LEHB101-.LFB1106
 2464 023f 05       		.uleb128 .LEHE101-.LEHB101
 2465 0240 00       		.uleb128 0
 2466 0241 00       		.uleb128 0
 2467 0242 E702     		.uleb128 .LEHB102-.LFB1106
 2468 0244 05       		.uleb128 .LEHE102-.LEHB102
 2469 0245 00       		.uleb128 0
 2470 0246 00       		.uleb128 0
 2471 0247 F402     		.uleb128 .LEHB103-.LFB1106
 2472 0249 38       		.uleb128 .LEHE103-.LEHB103
 2473 024a D902     		.uleb128 .L130-.LFB1106
 2474 024c 00       		.uleb128 0
 2475 024d AC03     		.uleb128 .LEHB104-.LFB1106
 2476 024f 05       		.uleb128 .LEHE104-.LEHB104
 2477 0250 00       		.uleb128 0
 2478 0251 00       		.uleb128 0
 2479              	.LLSDACSE1106:
 2480 0252 01       		.byte	0x1
 2481 0253 00       		.byte	0
 2482              		.align 4
 2483 0254 00000000 		.long	0
 2484              	
 2485              	.LLSDATT1106:
 2486              		.text
 2488              		.section	.rodata
 2489              	.LC25:
 2490 0416 48657849 		.string	"HexIO_testJunkAddrLsb"
 2490      4F5F7465 
 2490      73744A75 
 2490      6E6B4164 
 2490      64724C73 
 2491              		.section	.text._ZN25TestHexIO_testJunkAddrLsbC2Ev,"axG",@progbits,_ZN25TestHexIO_testJunkAddrLsbC5
 2492              		.align 2
 2493              		.weak	_ZN25TestHexIO_testJunkAddrLsbC2Ev
 2495              	_ZN25TestHexIO_testJunkAddrLsbC2Ev:
 2496              	.LFB1108:
 107:testHexIO.cpp **** 
 108:testHexIO.cpp **** TEST(HexIO_testJunkAddrLsb) {
 2497              		.loc 4 108 0
 2498              		.cfi_startproc
 2499 0000 55       		pushq	%rbp
 2500              		.cfi_def_cfa_offset 16
 2501              		.cfi_offset 6, -16
 2502 0001 4889E5   		movq	%rsp, %rbp
 2503              		.cfi_def_cfa_register 6
 2504 0004 4883EC10 		subq	$16, %rsp
 2505 0008 48897DF8 		movq	%rdi, -8(%rbp)
 2506              	.LBB15:
 2507              		.loc 4 108 0
 2508 000c E8000000 		call	_ZN13UnitTestSuite12GetSuiteNameEv
 2508      00
 2509 0011 4889C2   		movq	%rax, %rdx
 2510 0014 488B45F8 		movq	-8(%rbp), %rax
 2511 0018 41B86C00 		movl	$108, %r8d
 2511      0000
 2512 001e B9000000 		movl	$.LC1, %ecx
 2512      00
 2513 0023 BE000000 		movl	$.LC25, %esi
 2513      00
 2514 0028 4889C7   		movq	%rax, %rdi
 2515 002b E8000000 		call	_ZN8UnitTest4TestC2EPKcS2_S2_i
 2515      00
 2516 0030 488B45F8 		movq	-8(%rbp), %rax
 2517 0034 48C70000 		movq	$_ZTV25TestHexIO_testJunkAddrLsb+16, (%rax)
 2517      000000
 2518              	.LBE15:
 2519 003b C9       		leave
 2520              		.cfi_def_cfa 7, 8
 2521 003c C3       		ret
 2522              		.cfi_endproc
 2523              	.LFE1108:
 2525              		.weak	_ZN25TestHexIO_testJunkAddrLsbC1Ev
 2526              		.set	_ZN25TestHexIO_testJunkAddrLsbC1Ev,_ZN25TestHexIO_testJunkAddrLsbC2Ev
 2527              		.globl	testHexIO_testJunkAddrLsbInstance
 2528              		.bss
 2529 0139 00000000 		.align 32
 2529      000000
 2532              	testHexIO_testJunkAddrLsbInstance:
 2533 0140 00000000 		.zero	56
 2533      00000000 
 2533      00000000 
 2533      00000000 
 2533      00000000 
 2534              		.globl	adderHexIO_testJunkAddrLsb
 2537              	adderHexIO_testJunkAddrLsb:
 2538 0178 00       		.zero	1
 2539              		.section	.rodata
 2540              	.LC26:
 2541 042c 3A303430 		.string	":040B..0075820022F7\n"
 2541      422E2E30 
 2541      30373538 
 2541      32303032 
 2541      3246370A 
 2542 0441 00000000 		.align 8
 2542      000000
 2543              	.LC27:
 2544 0448 556E6861 		.string	"Unhandled exception in CHECK_EQUAL(HEX_JUNK_ADDR_LSB, status)"
 2544      6E646C65 
 2544      64206578 
 2544      63657074 
 2544      696F6E20 
 2545              		.text
 2546 10c7 90       		.align 2
 2547              		.globl	_ZNK25TestHexIO_testJunkAddrLsb7RunImplEv
 2549              	_ZNK25TestHexIO_testJunkAddrLsb7RunImplEv:
 2550              	.LFB1110:
 2551              		.loc 4 108 0
 2552              		.cfi_startproc
 2553              		.cfi_personality 0x3,__gxx_personality_v0
 2554              		.cfi_lsda 0x3,.LLSDA1110
 2555 10c8 55       		pushq	%rbp
 2556              		.cfi_def_cfa_offset 16
 2557              		.cfi_offset 6, -16
 2558 10c9 4889E5   		movq	%rsp, %rbp
 2559              		.cfi_def_cfa_register 6
 2560 10cc 53       		pushq	%rbx
 2561 10cd 4883EC78 		subq	$120, %rsp
 2562              		.cfi_offset 3, -24
 2563 10d1 48897D88 		movq	%rdi, -120(%rbp)
 2564              	.LBB16:
 109:testHexIO.cpp **** 	Buffer data;
 110:testHexIO.cpp **** 	BufferStatus status;
 111:testHexIO.cpp **** 	const char *line = ":040B..0075820022F7\n";
 2565              		.loc 4 111 0
 2566 10d5 48C745A8 		movq	$.LC26, -88(%rbp)
 2566      00000000 
 112:testHexIO.cpp **** 	uint8 recordType;
 113:testHexIO.cpp **** 	uint32 seg = 0x00000000;
 2567              		.loc 4 113 0
 2568 10dd C745A000 		movl	$0, -96(%rbp)
 2568      000000
 114:testHexIO.cpp **** 	status = bufInitialise(&data, 1024, 0x00, NULL);
 2569              		.loc 4 114 0
 2570 10e4 488D45B0 		leaq	-80(%rbp), %rax
 2571 10e8 B9000000 		movl	$0, %ecx
 2571      00
 2572 10ed BA000000 		movl	$0, %edx
 2572      00
 2573 10f2 BE000400 		movl	$1024, %esi
 2573      00
 2574 10f7 4889C7   		movq	%rax, %rdi
 2575              	.LEHB105:
 2576 10fa E8000000 		call	bufInitialise
 2576      00
 2577              	.LEHE105:
 2578 10ff 89459C   		movl	%eax, -100(%rbp)
 2579              	.LEHB106:
 115:testHexIO.cpp **** 	CHECK_EQUAL(BUF_SUCCESS, status);
 2580              		.loc 4 115 0
 2581 1102 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 2581      00
 2582 1107 488B08   		movq	(%rax), %rcx
 2583 110a 488D45D0 		leaq	-48(%rbp), %rax
 2584 110e BA730000 		movl	$115, %edx
 2584      00
 2585 1113 4889CE   		movq	%rcx, %rsi
 2586 1116 4889C7   		movq	%rax, %rdi
 2587 1119 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 2587      00
 2588              		.loc 4 115 0 is_stmt 0 discriminator 1
 2589 111e C745A400 		movl	$0, -92(%rbp)
 2589      000000
 2590 1125 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 2590      00
 2591 112a 488B00   		movq	(%rax), %rax
 2592 112d 488D4DD0 		leaq	-48(%rbp), %rcx
 2593 1131 488D559C 		leaq	-100(%rbp), %rdx
 2594 1135 488D75A4 		leaq	-92(%rbp), %rsi
 2595 1139 4889C7   		movq	%rax, %rdi
 2596 113c E8000000 		call	_ZN8UnitTest10CheckEqualI12BufferStatusS1_EEvRNS_11TestResultsERKT_RKT0_RKNS_11TestDetailsE
 2596      00
 2597              	.LEHE106:
 2598              	.L136:
 116:testHexIO.cpp **** 	status = bufProcessLine(line, 0, &data, NULL, &seg, &recordType, NULL);
 2599              		.loc 4 116 0 is_stmt 1
 2600 1141 488D759B 		leaq	-101(%rbp), %rsi
 2601 1145 488D4DA0 		leaq	-96(%rbp), %rcx
 2602 1149 488D55B0 		leaq	-80(%rbp), %rdx
 2603 114d 488B45A8 		movq	-88(%rbp), %rax
 2604 1151 48C70424 		movq	$0, (%rsp)
 2604      00000000 
 2605 1159 4989F1   		movq	%rsi, %r9
 2606 115c 4989C8   		movq	%rcx, %r8
 2607 115f B9000000 		movl	$0, %ecx
 2607      00
 2608 1164 BE000000 		movl	$0, %esi
 2608      00
 2609 1169 4889C7   		movq	%rax, %rdi
 2610              	.LEHB107:
 2611 116c E8000000 		call	bufProcessLine
 2611      00
 2612              	.LEHE107:
 2613 1171 89459C   		movl	%eax, -100(%rbp)
 2614              	.LEHB108:
 117:testHexIO.cpp **** 	CHECK_EQUAL(HEX_JUNK_ADDR_LSB, status);
 2615              		.loc 4 117 0
 2616 1174 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 2616      00
 2617 1179 488B08   		movq	(%rax), %rcx
 2618 117c 488D45D0 		leaq	-48(%rbp), %rax
 2619 1180 BA750000 		movl	$117, %edx
 2619      00
 2620 1185 4889CE   		movq	%rcx, %rsi
 2621 1188 4889C7   		movq	%rax, %rdi
 2622 118b E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 2622      00
 2623              		.loc 4 117 0 is_stmt 0 discriminator 1
 2624 1190 C745A40B 		movl	$11, -92(%rbp)
 2624      000000
 2625 1197 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 2625      00
 2626 119c 488B00   		movq	(%rax), %rax
 2627 119f 488D4DD0 		leaq	-48(%rbp), %rcx
 2628 11a3 488D559C 		leaq	-100(%rbp), %rdx
 2629 11a7 488D75A4 		leaq	-92(%rbp), %rsi
 2630 11ab 4889C7   		movq	%rax, %rdi
 2631 11ae E8000000 		call	_ZN8UnitTest10CheckEqualI12BufferStatusS1_EEvRNS_11TestResultsERKT_RKT0_RKNS_11TestDetailsE
 2631      00
 2632              	.LEHE108:
 2633              	.L139:
 118:testHexIO.cpp **** 	bufDestroy(&data);
 2634              		.loc 4 118 0 is_stmt 1
 2635 11b3 488D45B0 		leaq	-80(%rbp), %rax
 2636 11b7 4889C7   		movq	%rax, %rdi
 2637              	.LEHB109:
 2638 11ba E8000000 		call	bufDestroy
 2638      00
 2639              	.LEHE109:
 2640 11bf E9BA0000 		jmp	.L144
 2640      00
 2641              	.L141:
 2642 11c4 4889C3   		movq	%rax, %rbx
 115:testHexIO.cpp **** 	status = bufProcessLine(line, 0, &data, NULL, &seg, &recordType, NULL);
 2643              		.loc 4 115 0
 2644 11c7 E8000000 		call	__cxa_end_catch
 2644      00
 2645 11cc 4889D8   		movq	%rbx, %rax
 2646 11cf 4889C7   		movq	%rax, %rdi
 2647              	.LEHB110:
 2648 11d2 E8000000 		call	_Unwind_Resume
 2648      00
 2649              	.LEHE110:
 2650              	.L140:
 2651 11d7 4889C7   		movq	%rax, %rdi
 2652 11da E8000000 		call	__cxa_begin_catch
 2652      00
 2653              	.LEHB111:
 2654 11df E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 2654      00
 2655 11e4 488B08   		movq	(%rax), %rcx
 2656 11e7 488D45D0 		leaq	-48(%rbp), %rax
 2657 11eb BA730000 		movl	$115, %edx
 2657      00
 2658 11f0 4889CE   		movq	%rcx, %rsi
 2659 11f3 4889C7   		movq	%rax, %rdi
 2660 11f6 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 2660      00
 115:testHexIO.cpp **** 	status = bufProcessLine(line, 0, &data, NULL, &seg, &recordType, NULL);
 2661              		.loc 4 115 0 is_stmt 0 discriminator 1
 2662 11fb E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 2662      00
 2663 1200 488B00   		movq	(%rax), %rax
 2664 1203 488D4DD0 		leaq	-48(%rbp), %rcx
 2665 1207 BA000000 		movl	$.LC4, %edx
 2665      00
 2666 120c 4889CE   		movq	%rcx, %rsi
 2667 120f 4889C7   		movq	%rax, %rdi
 2668 1212 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 2668      00
 2669              	.LEHE111:
 2670              	.LEHB112:
 2671 1217 E8000000 		call	__cxa_end_catch
 2671      00
 2672              	.LEHE112:
 2673 121c E920FFFF 		jmp	.L136
 2673      FF
 2674              	.L143:
 2675 1221 4889C3   		movq	%rax, %rbx
 117:testHexIO.cpp **** 	CHECK_EQUAL(HEX_JUNK_ADDR_LSB, status);
 2676              		.loc 4 117 0 is_stmt 1
 2677 1224 E8000000 		call	__cxa_end_catch
 2677      00
 2678 1229 4889D8   		movq	%rbx, %rax
 2679 122c 4889C7   		movq	%rax, %rdi
 2680              	.LEHB113:
 2681 122f E8000000 		call	_Unwind_Resume
 2681      00
 2682              	.LEHE113:
 2683              	.L142:
 2684 1234 4889C7   		movq	%rax, %rdi
 2685 1237 E8000000 		call	__cxa_begin_catch
 2685      00
 2686              	.LEHB114:
 2687 123c E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 2687      00
 2688 1241 488B08   		movq	(%rax), %rcx
 2689 1244 488D45D0 		leaq	-48(%rbp), %rax
 2690 1248 BA750000 		movl	$117, %edx
 2690      00
 2691 124d 4889CE   		movq	%rcx, %rsi
 2692 1250 4889C7   		movq	%rax, %rdi
 2693 1253 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 2693      00
 117:testHexIO.cpp **** 	CHECK_EQUAL(HEX_JUNK_ADDR_LSB, status);
 2694              		.loc 4 117 0 is_stmt 0 discriminator 1
 2695 1258 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 2695      00
 2696 125d 488B00   		movq	(%rax), %rax
 2697 1260 488D4DD0 		leaq	-48(%rbp), %rcx
 2698 1264 BA000000 		movl	$.LC27, %edx
 2698      00
 2699 1269 4889CE   		movq	%rcx, %rsi
 2700 126c 4889C7   		movq	%rax, %rdi
 2701 126f E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 2701      00
 2702              	.LEHE114:
 2703              	.LEHB115:
 2704 1274 E8000000 		call	__cxa_end_catch
 2704      00
 2705              	.LEHE115:
 2706 1279 E935FFFF 		jmp	.L139
 2706      FF
 2707              	.L144:
 2708              	.LBE16:
 119:testHexIO.cpp **** }
 2709              		.loc 4 119 0 is_stmt 1
 2710 127e 4883C478 		addq	$120, %rsp
 2711 1282 5B       		popq	%rbx
 2712 1283 5D       		popq	%rbp
 2713              		.cfi_def_cfa 7, 8
 2714 1284 C3       		ret
 2715              		.cfi_endproc
 2716              	.LFE1110:
 2717              		.section	.gcc_except_table
 2718              		.align 4
 2719              	.LLSDA1110:
 2720 0258 FF       		.byte	0xff
 2721 0259 03       		.byte	0x3
 2722 025a 41       		.uleb128 .LLSDATT1110-.LLSDATTD1110
 2723              	.LLSDATTD1110:
 2724 025b 01       		.byte	0x1
 2725 025c 39       		.uleb128 .LLSDACSE1110-.LLSDACSB1110
 2726              	.LLSDACSB1110:
 2727 025d 32       		.uleb128 .LEHB105-.LFB1110
 2728 025e 05       		.uleb128 .LEHE105-.LEHB105
 2729 025f 00       		.uleb128 0
 2730 0260 00       		.uleb128 0
 2731 0261 3A       		.uleb128 .LEHB106-.LFB1110
 2732 0262 3F       		.uleb128 .LEHE106-.LEHB106
 2733 0263 8F02     		.uleb128 .L140-.LFB1110
 2734 0265 01       		.uleb128 0x1
 2735 0266 A401     		.uleb128 .LEHB107-.LFB1110
 2736 0268 05       		.uleb128 .LEHE107-.LEHB107
 2737 0269 00       		.uleb128 0
 2738 026a 00       		.uleb128 0
 2739 026b AC01     		.uleb128 .LEHB108-.LFB1110
 2740 026d 3F       		.uleb128 .LEHE108-.LEHB108
 2741 026e EC02     		.uleb128 .L142-.LFB1110
 2742 0270 01       		.uleb128 0x1
 2743 0271 F201     		.uleb128 .LEHB109-.LFB1110
 2744 0273 05       		.uleb128 .LEHE109-.LEHB109
 2745 0274 00       		.uleb128 0
 2746 0275 00       		.uleb128 0
 2747 0276 8A02     		.uleb128 .LEHB110-.LFB1110
 2748 0278 05       		.uleb128 .LEHE110-.LEHB110
 2749 0279 00       		.uleb128 0
 2750 027a 00       		.uleb128 0
 2751 027b 9702     		.uleb128 .LEHB111-.LFB1110
 2752 027d 38       		.uleb128 .LEHE111-.LEHB111
 2753 027e FC01     		.uleb128 .L141-.LFB1110
 2754 0280 00       		.uleb128 0
 2755 0281 CF02     		.uleb128 .LEHB112-.LFB1110
 2756 0283 05       		.uleb128 .LEHE112-.LEHB112
 2757 0284 00       		.uleb128 0
 2758 0285 00       		.uleb128 0
 2759 0286 E702     		.uleb128 .LEHB113-.LFB1110
 2760 0288 05       		.uleb128 .LEHE113-.LEHB113
 2761 0289 00       		.uleb128 0
 2762 028a 00       		.uleb128 0
 2763 028b F402     		.uleb128 .LEHB114-.LFB1110
 2764 028d 38       		.uleb128 .LEHE114-.LEHB114
 2765 028e D902     		.uleb128 .L143-.LFB1110
 2766 0290 00       		.uleb128 0
 2767 0291 AC03     		.uleb128 .LEHB115-.LFB1110
 2768 0293 05       		.uleb128 .LEHE115-.LEHB115
 2769 0294 00       		.uleb128 0
 2770 0295 00       		.uleb128 0
 2771              	.LLSDACSE1110:
 2772 0296 01       		.byte	0x1
 2773 0297 00       		.byte	0
 2774              		.align 4
 2775 0298 00000000 		.long	0
 2776              	
 2777              	.LLSDATT1110:
 2778              		.text
 2780              		.section	.rodata
 2781              	.LC28:
 2782 0486 48657849 		.string	"HexIO_testJunkRecType"
 2782      4F5F7465 
 2782      73744A75 
 2782      6E6B5265 
 2782      63547970 
 2783              		.section	.text._ZN25TestHexIO_testJunkRecTypeC2Ev,"axG",@progbits,_ZN25TestHexIO_testJunkRecTypeC5
 2784              		.align 2
 2785              		.weak	_ZN25TestHexIO_testJunkRecTypeC2Ev
 2787              	_ZN25TestHexIO_testJunkRecTypeC2Ev:
 2788              	.LFB1112:
 120:testHexIO.cpp **** 
 121:testHexIO.cpp **** TEST(HexIO_testJunkRecType) {
 2789              		.loc 4 121 0
 2790              		.cfi_startproc
 2791 0000 55       		pushq	%rbp
 2792              		.cfi_def_cfa_offset 16
 2793              		.cfi_offset 6, -16
 2794 0001 4889E5   		movq	%rsp, %rbp
 2795              		.cfi_def_cfa_register 6
 2796 0004 4883EC10 		subq	$16, %rsp
 2797 0008 48897DF8 		movq	%rdi, -8(%rbp)
 2798              	.LBB17:
 2799              		.loc 4 121 0
 2800 000c E8000000 		call	_ZN13UnitTestSuite12GetSuiteNameEv
 2800      00
 2801 0011 4889C2   		movq	%rax, %rdx
 2802 0014 488B45F8 		movq	-8(%rbp), %rax
 2803 0018 41B87900 		movl	$121, %r8d
 2803      0000
 2804 001e B9000000 		movl	$.LC1, %ecx
 2804      00
 2805 0023 BE000000 		movl	$.LC28, %esi
 2805      00
 2806 0028 4889C7   		movq	%rax, %rdi
 2807 002b E8000000 		call	_ZN8UnitTest4TestC2EPKcS2_S2_i
 2807      00
 2808 0030 488B45F8 		movq	-8(%rbp), %rax
 2809 0034 48C70000 		movq	$_ZTV25TestHexIO_testJunkRecType+16, (%rax)
 2809      000000
 2810              	.LBE17:
 2811 003b C9       		leave
 2812              		.cfi_def_cfa 7, 8
 2813 003c C3       		ret
 2814              		.cfi_endproc
 2815              	.LFE1112:
 2817              		.weak	_ZN25TestHexIO_testJunkRecTypeC1Ev
 2818              		.set	_ZN25TestHexIO_testJunkRecTypeC1Ev,_ZN25TestHexIO_testJunkRecTypeC2Ev
 2819              		.globl	testHexIO_testJunkRecTypeInstance
 2820              		.bss
 2821 0179 00000000 		.align 32
 2821      000000
 2824              	testHexIO_testJunkRecTypeInstance:
 2825 0180 00000000 		.zero	56
 2825      00000000 
 2825      00000000 
 2825      00000000 
 2825      00000000 
 2826              		.globl	adderHexIO_testJunkRecType
 2829              	adderHexIO_testJunkRecType:
 2830 01b8 00       		.zero	1
 2831              		.section	.rodata
 2832              	.LC29:
 2833 049c 3A303430 		.string	":040BE1..75820022F7\n"
 2833      4245312E 
 2833      2E373538 
 2833      32303032 
 2833      3246370A 
 2834 04b1 00000000 		.align 8
 2834      000000
 2835              	.LC30:
 2836 04b8 556E6861 		.string	"Unhandled exception in CHECK_EQUAL(HEX_JUNK_REC_TYPE, status)"
 2836      6E646C65 
 2836      64206578 
 2836      63657074 
 2836      696F6E20 
 2837              		.text
 2838 1285 90       		.align 2
 2839              		.globl	_ZNK25TestHexIO_testJunkRecType7RunImplEv
 2841              	_ZNK25TestHexIO_testJunkRecType7RunImplEv:
 2842              	.LFB1114:
 2843              		.loc 4 121 0
 2844              		.cfi_startproc
 2845              		.cfi_personality 0x3,__gxx_personality_v0
 2846              		.cfi_lsda 0x3,.LLSDA1114
 2847 1286 55       		pushq	%rbp
 2848              		.cfi_def_cfa_offset 16
 2849              		.cfi_offset 6, -16
 2850 1287 4889E5   		movq	%rsp, %rbp
 2851              		.cfi_def_cfa_register 6
 2852 128a 53       		pushq	%rbx
 2853 128b 4883EC78 		subq	$120, %rsp
 2854              		.cfi_offset 3, -24
 2855 128f 48897D88 		movq	%rdi, -120(%rbp)
 2856              	.LBB18:
 122:testHexIO.cpp **** 	Buffer data;
 123:testHexIO.cpp **** 	BufferStatus status;
 124:testHexIO.cpp **** 	const char *line = ":040BE1..75820022F7\n";
 2857              		.loc 4 124 0
 2858 1293 48C745A8 		movq	$.LC29, -88(%rbp)
 2858      00000000 
 125:testHexIO.cpp **** 	uint8 recordType;
 126:testHexIO.cpp **** 	uint32 seg = 0x00000000;
 2859              		.loc 4 126 0
 2860 129b C745A000 		movl	$0, -96(%rbp)
 2860      000000
 127:testHexIO.cpp **** 	status = bufInitialise(&data, 1024, 0x00, NULL);
 2861              		.loc 4 127 0
 2862 12a2 488D45B0 		leaq	-80(%rbp), %rax
 2863 12a6 B9000000 		movl	$0, %ecx
 2863      00
 2864 12ab BA000000 		movl	$0, %edx
 2864      00
 2865 12b0 BE000400 		movl	$1024, %esi
 2865      00
 2866 12b5 4889C7   		movq	%rax, %rdi
 2867              	.LEHB116:
 2868 12b8 E8000000 		call	bufInitialise
 2868      00
 2869              	.LEHE116:
 2870 12bd 89459C   		movl	%eax, -100(%rbp)
 2871              	.LEHB117:
 128:testHexIO.cpp **** 	CHECK_EQUAL(BUF_SUCCESS, status);
 2872              		.loc 4 128 0
 2873 12c0 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 2873      00
 2874 12c5 488B08   		movq	(%rax), %rcx
 2875 12c8 488D45D0 		leaq	-48(%rbp), %rax
 2876 12cc BA800000 		movl	$128, %edx
 2876      00
 2877 12d1 4889CE   		movq	%rcx, %rsi
 2878 12d4 4889C7   		movq	%rax, %rdi
 2879 12d7 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 2879      00
 2880              		.loc 4 128 0 is_stmt 0 discriminator 1
 2881 12dc C745A400 		movl	$0, -92(%rbp)
 2881      000000
 2882 12e3 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 2882      00
 2883 12e8 488B00   		movq	(%rax), %rax
 2884 12eb 488D4DD0 		leaq	-48(%rbp), %rcx
 2885 12ef 488D559C 		leaq	-100(%rbp), %rdx
 2886 12f3 488D75A4 		leaq	-92(%rbp), %rsi
 2887 12f7 4889C7   		movq	%rax, %rdi
 2888 12fa E8000000 		call	_ZN8UnitTest10CheckEqualI12BufferStatusS1_EEvRNS_11TestResultsERKT_RKT0_RKNS_11TestDetailsE
 2888      00
 2889              	.LEHE117:
 2890              	.L149:
 129:testHexIO.cpp **** 	status = bufProcessLine(line, 0, &data, NULL, &seg, &recordType, NULL);
 2891              		.loc 4 129 0 is_stmt 1
 2892 12ff 488D759B 		leaq	-101(%rbp), %rsi
 2893 1303 488D4DA0 		leaq	-96(%rbp), %rcx
 2894 1307 488D55B0 		leaq	-80(%rbp), %rdx
 2895 130b 488B45A8 		movq	-88(%rbp), %rax
 2896 130f 48C70424 		movq	$0, (%rsp)
 2896      00000000 
 2897 1317 4989F1   		movq	%rsi, %r9
 2898 131a 4989C8   		movq	%rcx, %r8
 2899 131d B9000000 		movl	$0, %ecx
 2899      00
 2900 1322 BE000000 		movl	$0, %esi
 2900      00
 2901 1327 4889C7   		movq	%rax, %rdi
 2902              	.LEHB118:
 2903 132a E8000000 		call	bufProcessLine
 2903      00
 2904              	.LEHE118:
 2905 132f 89459C   		movl	%eax, -100(%rbp)
 2906              	.LEHB119:
 130:testHexIO.cpp **** 	CHECK_EQUAL(HEX_JUNK_REC_TYPE, status);
 2907              		.loc 4 130 0
 2908 1332 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 2908      00
 2909 1337 488B08   		movq	(%rax), %rcx
 2910 133a 488D45D0 		leaq	-48(%rbp), %rax
 2911 133e BA820000 		movl	$130, %edx
 2911      00
 2912 1343 4889CE   		movq	%rcx, %rsi
 2913 1346 4889C7   		movq	%rax, %rdi
 2914 1349 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 2914      00
 2915              		.loc 4 130 0 is_stmt 0 discriminator 1
 2916 134e C745A40C 		movl	$12, -92(%rbp)
 2916      000000
 2917 1355 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 2917      00
 2918 135a 488B00   		movq	(%rax), %rax
 2919 135d 488D4DD0 		leaq	-48(%rbp), %rcx
 2920 1361 488D559C 		leaq	-100(%rbp), %rdx
 2921 1365 488D75A4 		leaq	-92(%rbp), %rsi
 2922 1369 4889C7   		movq	%rax, %rdi
 2923 136c E8000000 		call	_ZN8UnitTest10CheckEqualI12BufferStatusS1_EEvRNS_11TestResultsERKT_RKT0_RKNS_11TestDetailsE
 2923      00
 2924              	.LEHE119:
 2925              	.L152:
 131:testHexIO.cpp **** 	bufDestroy(&data);
 2926              		.loc 4 131 0 is_stmt 1
 2927 1371 488D45B0 		leaq	-80(%rbp), %rax
 2928 1375 4889C7   		movq	%rax, %rdi
 2929              	.LEHB120:
 2930 1378 E8000000 		call	bufDestroy
 2930      00
 2931              	.LEHE120:
 2932 137d E9BA0000 		jmp	.L157
 2932      00
 2933              	.L154:
 2934 1382 4889C3   		movq	%rax, %rbx
 128:testHexIO.cpp **** 	status = bufProcessLine(line, 0, &data, NULL, &seg, &recordType, NULL);
 2935              		.loc 4 128 0
 2936 1385 E8000000 		call	__cxa_end_catch
 2936      00
 2937 138a 4889D8   		movq	%rbx, %rax
 2938 138d 4889C7   		movq	%rax, %rdi
 2939              	.LEHB121:
 2940 1390 E8000000 		call	_Unwind_Resume
 2940      00
 2941              	.LEHE121:
 2942              	.L153:
 2943 1395 4889C7   		movq	%rax, %rdi
 2944 1398 E8000000 		call	__cxa_begin_catch
 2944      00
 2945              	.LEHB122:
 2946 139d E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 2946      00
 2947 13a2 488B08   		movq	(%rax), %rcx
 2948 13a5 488D45D0 		leaq	-48(%rbp), %rax
 2949 13a9 BA800000 		movl	$128, %edx
 2949      00
 2950 13ae 4889CE   		movq	%rcx, %rsi
 2951 13b1 4889C7   		movq	%rax, %rdi
 2952 13b4 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 2952      00
 128:testHexIO.cpp **** 	status = bufProcessLine(line, 0, &data, NULL, &seg, &recordType, NULL);
 2953              		.loc 4 128 0 is_stmt 0 discriminator 1
 2954 13b9 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 2954      00
 2955 13be 488B00   		movq	(%rax), %rax
 2956 13c1 488D4DD0 		leaq	-48(%rbp), %rcx
 2957 13c5 BA000000 		movl	$.LC4, %edx
 2957      00
 2958 13ca 4889CE   		movq	%rcx, %rsi
 2959 13cd 4889C7   		movq	%rax, %rdi
 2960 13d0 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 2960      00
 2961              	.LEHE122:
 2962              	.LEHB123:
 2963 13d5 E8000000 		call	__cxa_end_catch
 2963      00
 2964              	.LEHE123:
 2965 13da E920FFFF 		jmp	.L149
 2965      FF
 2966              	.L156:
 2967 13df 4889C3   		movq	%rax, %rbx
 130:testHexIO.cpp **** 	CHECK_EQUAL(HEX_JUNK_REC_TYPE, status);
 2968              		.loc 4 130 0 is_stmt 1
 2969 13e2 E8000000 		call	__cxa_end_catch
 2969      00
 2970 13e7 4889D8   		movq	%rbx, %rax
 2971 13ea 4889C7   		movq	%rax, %rdi
 2972              	.LEHB124:
 2973 13ed E8000000 		call	_Unwind_Resume
 2973      00
 2974              	.LEHE124:
 2975              	.L155:
 2976 13f2 4889C7   		movq	%rax, %rdi
 2977 13f5 E8000000 		call	__cxa_begin_catch
 2977      00
 2978              	.LEHB125:
 2979 13fa E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 2979      00
 2980 13ff 488B08   		movq	(%rax), %rcx
 2981 1402 488D45D0 		leaq	-48(%rbp), %rax
 2982 1406 BA820000 		movl	$130, %edx
 2982      00
 2983 140b 4889CE   		movq	%rcx, %rsi
 2984 140e 4889C7   		movq	%rax, %rdi
 2985 1411 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 2985      00
 130:testHexIO.cpp **** 	CHECK_EQUAL(HEX_JUNK_REC_TYPE, status);
 2986              		.loc 4 130 0 is_stmt 0 discriminator 1
 2987 1416 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 2987      00
 2988 141b 488B00   		movq	(%rax), %rax
 2989 141e 488D4DD0 		leaq	-48(%rbp), %rcx
 2990 1422 BA000000 		movl	$.LC30, %edx
 2990      00
 2991 1427 4889CE   		movq	%rcx, %rsi
 2992 142a 4889C7   		movq	%rax, %rdi
 2993 142d E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 2993      00
 2994              	.LEHE125:
 2995              	.LEHB126:
 2996 1432 E8000000 		call	__cxa_end_catch
 2996      00
 2997              	.LEHE126:
 2998 1437 E935FFFF 		jmp	.L152
 2998      FF
 2999              	.L157:
 3000              	.LBE18:
 132:testHexIO.cpp **** }
 3001              		.loc 4 132 0 is_stmt 1
 3002 143c 4883C478 		addq	$120, %rsp
 3003 1440 5B       		popq	%rbx
 3004 1441 5D       		popq	%rbp
 3005              		.cfi_def_cfa 7, 8
 3006 1442 C3       		ret
 3007              		.cfi_endproc
 3008              	.LFE1114:
 3009              		.section	.gcc_except_table
 3010              		.align 4
 3011              	.LLSDA1114:
 3012 029c FF       		.byte	0xff
 3013 029d 03       		.byte	0x3
 3014 029e 41       		.uleb128 .LLSDATT1114-.LLSDATTD1114
 3015              	.LLSDATTD1114:
 3016 029f 01       		.byte	0x1
 3017 02a0 39       		.uleb128 .LLSDACSE1114-.LLSDACSB1114
 3018              	.LLSDACSB1114:
 3019 02a1 32       		.uleb128 .LEHB116-.LFB1114
 3020 02a2 05       		.uleb128 .LEHE116-.LEHB116
 3021 02a3 00       		.uleb128 0
 3022 02a4 00       		.uleb128 0
 3023 02a5 3A       		.uleb128 .LEHB117-.LFB1114
 3024 02a6 3F       		.uleb128 .LEHE117-.LEHB117
 3025 02a7 8F02     		.uleb128 .L153-.LFB1114
 3026 02a9 01       		.uleb128 0x1
 3027 02aa A401     		.uleb128 .LEHB118-.LFB1114
 3028 02ac 05       		.uleb128 .LEHE118-.LEHB118
 3029 02ad 00       		.uleb128 0
 3030 02ae 00       		.uleb128 0
 3031 02af AC01     		.uleb128 .LEHB119-.LFB1114
 3032 02b1 3F       		.uleb128 .LEHE119-.LEHB119
 3033 02b2 EC02     		.uleb128 .L155-.LFB1114
 3034 02b4 01       		.uleb128 0x1
 3035 02b5 F201     		.uleb128 .LEHB120-.LFB1114
 3036 02b7 05       		.uleb128 .LEHE120-.LEHB120
 3037 02b8 00       		.uleb128 0
 3038 02b9 00       		.uleb128 0
 3039 02ba 8A02     		.uleb128 .LEHB121-.LFB1114
 3040 02bc 05       		.uleb128 .LEHE121-.LEHB121
 3041 02bd 00       		.uleb128 0
 3042 02be 00       		.uleb128 0
 3043 02bf 9702     		.uleb128 .LEHB122-.LFB1114
 3044 02c1 38       		.uleb128 .LEHE122-.LEHB122
 3045 02c2 FC01     		.uleb128 .L154-.LFB1114
 3046 02c4 00       		.uleb128 0
 3047 02c5 CF02     		.uleb128 .LEHB123-.LFB1114
 3048 02c7 05       		.uleb128 .LEHE123-.LEHB123
 3049 02c8 00       		.uleb128 0
 3050 02c9 00       		.uleb128 0
 3051 02ca E702     		.uleb128 .LEHB124-.LFB1114
 3052 02cc 05       		.uleb128 .LEHE124-.LEHB124
 3053 02cd 00       		.uleb128 0
 3054 02ce 00       		.uleb128 0
 3055 02cf F402     		.uleb128 .LEHB125-.LFB1114
 3056 02d1 38       		.uleb128 .LEHE125-.LEHB125
 3057 02d2 D902     		.uleb128 .L156-.LFB1114
 3058 02d4 00       		.uleb128 0
 3059 02d5 AC03     		.uleb128 .LEHB126-.LFB1114
 3060 02d7 05       		.uleb128 .LEHE126-.LEHB126
 3061 02d8 00       		.uleb128 0
 3062 02d9 00       		.uleb128 0
 3063              	.LLSDACSE1114:
 3064 02da 01       		.byte	0x1
 3065 02db 00       		.byte	0
 3066              		.align 4
 3067 02dc 00000000 		.long	0
 3068              	
 3069              	.LLSDATT1114:
 3070              		.text
 3072              		.section	.rodata
 3073              	.LC31:
 3074 04f6 48657849 		.string	"HexIO_testJunkDataByte"
 3074      4F5F7465 
 3074      73744A75 
 3074      6E6B4461 
 3074      74614279 
 3075              		.section	.text._ZN26TestHexIO_testJunkDataByteC2Ev,"axG",@progbits,_ZN26TestHexIO_testJunkDataByte
 3076              		.align 2
 3077              		.weak	_ZN26TestHexIO_testJunkDataByteC2Ev
 3079              	_ZN26TestHexIO_testJunkDataByteC2Ev:
 3080              	.LFB1116:
 133:testHexIO.cpp **** 
 134:testHexIO.cpp **** TEST(HexIO_testJunkDataByte) {
 3081              		.loc 4 134 0
 3082              		.cfi_startproc
 3083 0000 55       		pushq	%rbp
 3084              		.cfi_def_cfa_offset 16
 3085              		.cfi_offset 6, -16
 3086 0001 4889E5   		movq	%rsp, %rbp
 3087              		.cfi_def_cfa_register 6
 3088 0004 4883EC10 		subq	$16, %rsp
 3089 0008 48897DF8 		movq	%rdi, -8(%rbp)
 3090              	.LBB19:
 3091              		.loc 4 134 0
 3092 000c E8000000 		call	_ZN13UnitTestSuite12GetSuiteNameEv
 3092      00
 3093 0011 4889C2   		movq	%rax, %rdx
 3094 0014 488B45F8 		movq	-8(%rbp), %rax
 3095 0018 41B88600 		movl	$134, %r8d
 3095      0000
 3096 001e B9000000 		movl	$.LC1, %ecx
 3096      00
 3097 0023 BE000000 		movl	$.LC31, %esi
 3097      00
 3098 0028 4889C7   		movq	%rax, %rdi
 3099 002b E8000000 		call	_ZN8UnitTest4TestC2EPKcS2_S2_i
 3099      00
 3100 0030 488B45F8 		movq	-8(%rbp), %rax
 3101 0034 48C70000 		movq	$_ZTV26TestHexIO_testJunkDataByte+16, (%rax)
 3101      000000
 3102              	.LBE19:
 3103 003b C9       		leave
 3104              		.cfi_def_cfa 7, 8
 3105 003c C3       		ret
 3106              		.cfi_endproc
 3107              	.LFE1116:
 3109              		.weak	_ZN26TestHexIO_testJunkDataByteC1Ev
 3110              		.set	_ZN26TestHexIO_testJunkDataByteC1Ev,_ZN26TestHexIO_testJunkDataByteC2Ev
 3111              		.globl	testHexIO_testJunkDataByteInstance
 3112              		.bss
 3113 01b9 00000000 		.align 32
 3113      000000
 3116              	testHexIO_testJunkDataByteInstance:
 3117 01c0 00000000 		.zero	56
 3117      00000000 
 3117      00000000 
 3117      00000000 
 3117      00000000 
 3118              		.globl	adderHexIO_testJunkDataByte
 3121              	adderHexIO_testJunkDataByte:
 3122 01f8 00       		.zero	1
 3123              		.section	.rodata
 3124              	.LC32:
 3125 050d 3A303430 		.string	":040BE100..820022F7\n"
 3125      42453130 
 3125      302E2E38 
 3125      32303032 
 3125      3246370A 
 3126 0522 00000000 		.align 8
 3126      0000
 3127              	.LC33:
 3128 0528 556E6861 		.string	"Unhandled exception in CHECK_EQUAL(HEX_JUNK_DATA_BYTE, status)"
 3128      6E646C65 
 3128      64206578 
 3128      63657074 
 3128      696F6E20 
 3129              		.text
 3130 1443 90       		.align 2
 3131              		.globl	_ZNK26TestHexIO_testJunkDataByte7RunImplEv
 3133              	_ZNK26TestHexIO_testJunkDataByte7RunImplEv:
 3134              	.LFB1118:
 3135              		.loc 4 134 0
 3136              		.cfi_startproc
 3137              		.cfi_personality 0x3,__gxx_personality_v0
 3138              		.cfi_lsda 0x3,.LLSDA1118
 3139 1444 55       		pushq	%rbp
 3140              		.cfi_def_cfa_offset 16
 3141              		.cfi_offset 6, -16
 3142 1445 4889E5   		movq	%rsp, %rbp
 3143              		.cfi_def_cfa_register 6
 3144 1448 53       		pushq	%rbx
 3145 1449 4883EC78 		subq	$120, %rsp
 3146              		.cfi_offset 3, -24
 3147 144d 48897D88 		movq	%rdi, -120(%rbp)
 3148              	.LBB20:
 135:testHexIO.cpp **** 	Buffer data;
 136:testHexIO.cpp **** 	BufferStatus status;
 137:testHexIO.cpp **** 	const char *line = ":040BE100..820022F7\n";
 3149              		.loc 4 137 0
 3150 1451 48C745A8 		movq	$.LC32, -88(%rbp)
 3150      00000000 
 138:testHexIO.cpp **** 	uint8 recordType;
 139:testHexIO.cpp **** 	uint32 seg = 0x00000000;
 3151              		.loc 4 139 0
 3152 1459 C745A000 		movl	$0, -96(%rbp)
 3152      000000
 140:testHexIO.cpp **** 	status = bufInitialise(&data, 1024, 0x00, NULL);
 3153              		.loc 4 140 0
 3154 1460 488D45B0 		leaq	-80(%rbp), %rax
 3155 1464 B9000000 		movl	$0, %ecx
 3155      00
 3156 1469 BA000000 		movl	$0, %edx
 3156      00
 3157 146e BE000400 		movl	$1024, %esi
 3157      00
 3158 1473 4889C7   		movq	%rax, %rdi
 3159              	.LEHB127:
 3160 1476 E8000000 		call	bufInitialise
 3160      00
 3161              	.LEHE127:
 3162 147b 89459C   		movl	%eax, -100(%rbp)
 3163              	.LEHB128:
 141:testHexIO.cpp **** 	CHECK_EQUAL(BUF_SUCCESS, status);
 3164              		.loc 4 141 0
 3165 147e E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 3165      00
 3166 1483 488B08   		movq	(%rax), %rcx
 3167 1486 488D45D0 		leaq	-48(%rbp), %rax
 3168 148a BA8D0000 		movl	$141, %edx
 3168      00
 3169 148f 4889CE   		movq	%rcx, %rsi
 3170 1492 4889C7   		movq	%rax, %rdi
 3171 1495 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 3171      00
 3172              		.loc 4 141 0 is_stmt 0 discriminator 1
 3173 149a C745A400 		movl	$0, -92(%rbp)
 3173      000000
 3174 14a1 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 3174      00
 3175 14a6 488B00   		movq	(%rax), %rax
 3176 14a9 488D4DD0 		leaq	-48(%rbp), %rcx
 3177 14ad 488D559C 		leaq	-100(%rbp), %rdx
 3178 14b1 488D75A4 		leaq	-92(%rbp), %rsi
 3179 14b5 4889C7   		movq	%rax, %rdi
 3180 14b8 E8000000 		call	_ZN8UnitTest10CheckEqualI12BufferStatusS1_EEvRNS_11TestResultsERKT_RKT0_RKNS_11TestDetailsE
 3180      00
 3181              	.LEHE128:
 3182              	.L162:
 142:testHexIO.cpp **** 	status = bufProcessLine(line, 0, &data, NULL, &seg, &recordType, NULL);
 3183              		.loc 4 142 0 is_stmt 1
 3184 14bd 488D759B 		leaq	-101(%rbp), %rsi
 3185 14c1 488D4DA0 		leaq	-96(%rbp), %rcx
 3186 14c5 488D55B0 		leaq	-80(%rbp), %rdx
 3187 14c9 488B45A8 		movq	-88(%rbp), %rax
 3188 14cd 48C70424 		movq	$0, (%rsp)
 3188      00000000 
 3189 14d5 4989F1   		movq	%rsi, %r9
 3190 14d8 4989C8   		movq	%rcx, %r8
 3191 14db B9000000 		movl	$0, %ecx
 3191      00
 3192 14e0 BE000000 		movl	$0, %esi
 3192      00
 3193 14e5 4889C7   		movq	%rax, %rdi
 3194              	.LEHB129:
 3195 14e8 E8000000 		call	bufProcessLine
 3195      00
 3196              	.LEHE129:
 3197 14ed 89459C   		movl	%eax, -100(%rbp)
 3198              	.LEHB130:
 143:testHexIO.cpp **** 	CHECK_EQUAL(HEX_JUNK_DATA_BYTE, status);
 3199              		.loc 4 143 0
 3200 14f0 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 3200      00
 3201 14f5 488B08   		movq	(%rax), %rcx
 3202 14f8 488D45D0 		leaq	-48(%rbp), %rax
 3203 14fc BA8F0000 		movl	$143, %edx
 3203      00
 3204 1501 4889CE   		movq	%rcx, %rsi
 3205 1504 4889C7   		movq	%rax, %rdi
 3206 1507 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 3206      00
 3207              		.loc 4 143 0 is_stmt 0 discriminator 1
 3208 150c C745A40E 		movl	$14, -92(%rbp)
 3208      000000
 3209 1513 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 3209      00
 3210 1518 488B00   		movq	(%rax), %rax
 3211 151b 488D4DD0 		leaq	-48(%rbp), %rcx
 3212 151f 488D559C 		leaq	-100(%rbp), %rdx
 3213 1523 488D75A4 		leaq	-92(%rbp), %rsi
 3214 1527 4889C7   		movq	%rax, %rdi
 3215 152a E8000000 		call	_ZN8UnitTest10CheckEqualI12BufferStatusS1_EEvRNS_11TestResultsERKT_RKT0_RKNS_11TestDetailsE
 3215      00
 3216              	.LEHE130:
 3217              	.L165:
 144:testHexIO.cpp **** 	bufDestroy(&data);
 3218              		.loc 4 144 0 is_stmt 1
 3219 152f 488D45B0 		leaq	-80(%rbp), %rax
 3220 1533 4889C7   		movq	%rax, %rdi
 3221              	.LEHB131:
 3222 1536 E8000000 		call	bufDestroy
 3222      00
 3223              	.LEHE131:
 3224 153b E9BA0000 		jmp	.L170
 3224      00
 3225              	.L167:
 3226 1540 4889C3   		movq	%rax, %rbx
 141:testHexIO.cpp **** 	status = bufProcessLine(line, 0, &data, NULL, &seg, &recordType, NULL);
 3227              		.loc 4 141 0
 3228 1543 E8000000 		call	__cxa_end_catch
 3228      00
 3229 1548 4889D8   		movq	%rbx, %rax
 3230 154b 4889C7   		movq	%rax, %rdi
 3231              	.LEHB132:
 3232 154e E8000000 		call	_Unwind_Resume
 3232      00
 3233              	.LEHE132:
 3234              	.L166:
 3235 1553 4889C7   		movq	%rax, %rdi
 3236 1556 E8000000 		call	__cxa_begin_catch
 3236      00
 3237              	.LEHB133:
 3238 155b E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 3238      00
 3239 1560 488B08   		movq	(%rax), %rcx
 3240 1563 488D45D0 		leaq	-48(%rbp), %rax
 3241 1567 BA8D0000 		movl	$141, %edx
 3241      00
 3242 156c 4889CE   		movq	%rcx, %rsi
 3243 156f 4889C7   		movq	%rax, %rdi
 3244 1572 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 3244      00
 141:testHexIO.cpp **** 	status = bufProcessLine(line, 0, &data, NULL, &seg, &recordType, NULL);
 3245              		.loc 4 141 0 is_stmt 0 discriminator 1
 3246 1577 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 3246      00
 3247 157c 488B00   		movq	(%rax), %rax
 3248 157f 488D4DD0 		leaq	-48(%rbp), %rcx
 3249 1583 BA000000 		movl	$.LC4, %edx
 3249      00
 3250 1588 4889CE   		movq	%rcx, %rsi
 3251 158b 4889C7   		movq	%rax, %rdi
 3252 158e E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 3252      00
 3253              	.LEHE133:
 3254              	.LEHB134:
 3255 1593 E8000000 		call	__cxa_end_catch
 3255      00
 3256              	.LEHE134:
 3257 1598 E920FFFF 		jmp	.L162
 3257      FF
 3258              	.L169:
 3259 159d 4889C3   		movq	%rax, %rbx
 143:testHexIO.cpp **** 	CHECK_EQUAL(HEX_JUNK_DATA_BYTE, status);
 3260              		.loc 4 143 0 is_stmt 1
 3261 15a0 E8000000 		call	__cxa_end_catch
 3261      00
 3262 15a5 4889D8   		movq	%rbx, %rax
 3263 15a8 4889C7   		movq	%rax, %rdi
 3264              	.LEHB135:
 3265 15ab E8000000 		call	_Unwind_Resume
 3265      00
 3266              	.LEHE135:
 3267              	.L168:
 3268 15b0 4889C7   		movq	%rax, %rdi
 3269 15b3 E8000000 		call	__cxa_begin_catch
 3269      00
 3270              	.LEHB136:
 3271 15b8 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 3271      00
 3272 15bd 488B08   		movq	(%rax), %rcx
 3273 15c0 488D45D0 		leaq	-48(%rbp), %rax
 3274 15c4 BA8F0000 		movl	$143, %edx
 3274      00
 3275 15c9 4889CE   		movq	%rcx, %rsi
 3276 15cc 4889C7   		movq	%rax, %rdi
 3277 15cf E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 3277      00
 143:testHexIO.cpp **** 	CHECK_EQUAL(HEX_JUNK_DATA_BYTE, status);
 3278              		.loc 4 143 0 is_stmt 0 discriminator 1
 3279 15d4 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 3279      00
 3280 15d9 488B00   		movq	(%rax), %rax
 3281 15dc 488D4DD0 		leaq	-48(%rbp), %rcx
 3282 15e0 BA000000 		movl	$.LC33, %edx
 3282      00
 3283 15e5 4889CE   		movq	%rcx, %rsi
 3284 15e8 4889C7   		movq	%rax, %rdi
 3285 15eb E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 3285      00
 3286              	.LEHE136:
 3287              	.LEHB137:
 3288 15f0 E8000000 		call	__cxa_end_catch
 3288      00
 3289              	.LEHE137:
 3290 15f5 E935FFFF 		jmp	.L165
 3290      FF
 3291              	.L170:
 3292              	.LBE20:
 145:testHexIO.cpp **** }
 3293              		.loc 4 145 0 is_stmt 1
 3294 15fa 4883C478 		addq	$120, %rsp
 3295 15fe 5B       		popq	%rbx
 3296 15ff 5D       		popq	%rbp
 3297              		.cfi_def_cfa 7, 8
 3298 1600 C3       		ret
 3299              		.cfi_endproc
 3300              	.LFE1118:
 3301              		.section	.gcc_except_table
 3302              		.align 4
 3303              	.LLSDA1118:
 3304 02e0 FF       		.byte	0xff
 3305 02e1 03       		.byte	0x3
 3306 02e2 41       		.uleb128 .LLSDATT1118-.LLSDATTD1118
 3307              	.LLSDATTD1118:
 3308 02e3 01       		.byte	0x1
 3309 02e4 39       		.uleb128 .LLSDACSE1118-.LLSDACSB1118
 3310              	.LLSDACSB1118:
 3311 02e5 32       		.uleb128 .LEHB127-.LFB1118
 3312 02e6 05       		.uleb128 .LEHE127-.LEHB127
 3313 02e7 00       		.uleb128 0
 3314 02e8 00       		.uleb128 0
 3315 02e9 3A       		.uleb128 .LEHB128-.LFB1118
 3316 02ea 3F       		.uleb128 .LEHE128-.LEHB128
 3317 02eb 8F02     		.uleb128 .L166-.LFB1118
 3318 02ed 01       		.uleb128 0x1
 3319 02ee A401     		.uleb128 .LEHB129-.LFB1118
 3320 02f0 05       		.uleb128 .LEHE129-.LEHB129
 3321 02f1 00       		.uleb128 0
 3322 02f2 00       		.uleb128 0
 3323 02f3 AC01     		.uleb128 .LEHB130-.LFB1118
 3324 02f5 3F       		.uleb128 .LEHE130-.LEHB130
 3325 02f6 EC02     		.uleb128 .L168-.LFB1118
 3326 02f8 01       		.uleb128 0x1
 3327 02f9 F201     		.uleb128 .LEHB131-.LFB1118
 3328 02fb 05       		.uleb128 .LEHE131-.LEHB131
 3329 02fc 00       		.uleb128 0
 3330 02fd 00       		.uleb128 0
 3331 02fe 8A02     		.uleb128 .LEHB132-.LFB1118
 3332 0300 05       		.uleb128 .LEHE132-.LEHB132
 3333 0301 00       		.uleb128 0
 3334 0302 00       		.uleb128 0
 3335 0303 9702     		.uleb128 .LEHB133-.LFB1118
 3336 0305 38       		.uleb128 .LEHE133-.LEHB133
 3337 0306 FC01     		.uleb128 .L167-.LFB1118
 3338 0308 00       		.uleb128 0
 3339 0309 CF02     		.uleb128 .LEHB134-.LFB1118
 3340 030b 05       		.uleb128 .LEHE134-.LEHB134
 3341 030c 00       		.uleb128 0
 3342 030d 00       		.uleb128 0
 3343 030e E702     		.uleb128 .LEHB135-.LFB1118
 3344 0310 05       		.uleb128 .LEHE135-.LEHB135
 3345 0311 00       		.uleb128 0
 3346 0312 00       		.uleb128 0
 3347 0313 F402     		.uleb128 .LEHB136-.LFB1118
 3348 0315 38       		.uleb128 .LEHE136-.LEHB136
 3349 0316 D902     		.uleb128 .L169-.LFB1118
 3350 0318 00       		.uleb128 0
 3351 0319 AC03     		.uleb128 .LEHB137-.LFB1118
 3352 031b 05       		.uleb128 .LEHE137-.LEHB137
 3353 031c 00       		.uleb128 0
 3354 031d 00       		.uleb128 0
 3355              	.LLSDACSE1118:
 3356 031e 01       		.byte	0x1
 3357 031f 00       		.byte	0
 3358              		.align 4
 3359 0320 00000000 		.long	0
 3360              	
 3361              	.LLSDATT1118:
 3362              		.text
 3364              		.section	.rodata
 3365              	.LC34:
 3366 0567 48657849 		.string	"HexIO_testJunkChecksum"
 3366      4F5F7465 
 3366      73744A75 
 3366      6E6B4368 
 3366      65636B73 
 3367              		.section	.text._ZN26TestHexIO_testJunkChecksumC2Ev,"axG",@progbits,_ZN26TestHexIO_testJunkChecksum
 3368              		.align 2
 3369              		.weak	_ZN26TestHexIO_testJunkChecksumC2Ev
 3371              	_ZN26TestHexIO_testJunkChecksumC2Ev:
 3372              	.LFB1120:
 146:testHexIO.cpp **** 
 147:testHexIO.cpp **** TEST(HexIO_testJunkChecksum) {
 3373              		.loc 4 147 0
 3374              		.cfi_startproc
 3375 0000 55       		pushq	%rbp
 3376              		.cfi_def_cfa_offset 16
 3377              		.cfi_offset 6, -16
 3378 0001 4889E5   		movq	%rsp, %rbp
 3379              		.cfi_def_cfa_register 6
 3380 0004 4883EC10 		subq	$16, %rsp
 3381 0008 48897DF8 		movq	%rdi, -8(%rbp)
 3382              	.LBB21:
 3383              		.loc 4 147 0
 3384 000c E8000000 		call	_ZN13UnitTestSuite12GetSuiteNameEv
 3384      00
 3385 0011 4889C2   		movq	%rax, %rdx
 3386 0014 488B45F8 		movq	-8(%rbp), %rax
 3387 0018 41B89300 		movl	$147, %r8d
 3387      0000
 3388 001e B9000000 		movl	$.LC1, %ecx
 3388      00
 3389 0023 BE000000 		movl	$.LC34, %esi
 3389      00
 3390 0028 4889C7   		movq	%rax, %rdi
 3391 002b E8000000 		call	_ZN8UnitTest4TestC2EPKcS2_S2_i
 3391      00
 3392 0030 488B45F8 		movq	-8(%rbp), %rax
 3393 0034 48C70000 		movq	$_ZTV26TestHexIO_testJunkChecksum+16, (%rax)
 3393      000000
 3394              	.LBE21:
 3395 003b C9       		leave
 3396              		.cfi_def_cfa 7, 8
 3397 003c C3       		ret
 3398              		.cfi_endproc
 3399              	.LFE1120:
 3401              		.weak	_ZN26TestHexIO_testJunkChecksumC1Ev
 3402              		.set	_ZN26TestHexIO_testJunkChecksumC1Ev,_ZN26TestHexIO_testJunkChecksumC2Ev
 3403              		.globl	testHexIO_testJunkChecksumInstance
 3404              		.bss
 3405 01f9 00000000 		.align 32
 3405      000000
 3408              	testHexIO_testJunkChecksumInstance:
 3409 0200 00000000 		.zero	56
 3409      00000000 
 3409      00000000 
 3409      00000000 
 3409      00000000 
 3410              		.globl	adderHexIO_testJunkChecksum
 3413              	adderHexIO_testJunkChecksum:
 3414 0238 00       		.zero	1
 3415              		.section	.rodata
 3416              	.LC35:
 3417 057e 3A303430 		.string	":040BE10075820022..\n"
 3417      42453130 
 3417      30373538 
 3417      32303032 
 3417      322E2E0A 
 3418 0593 00000000 		.align 8
 3418      00
 3419              	.LC36:
 3420 0598 556E6861 		.string	"Unhandled exception in CHECK_EQUAL(HEX_JUNK_CHECKSUM, status)"
 3420      6E646C65 
 3420      64206578 
 3420      63657074 
 3420      696F6E20 
 3421              		.text
 3422 1601 90       		.align 2
 3423              		.globl	_ZNK26TestHexIO_testJunkChecksum7RunImplEv
 3425              	_ZNK26TestHexIO_testJunkChecksum7RunImplEv:
 3426              	.LFB1122:
 3427              		.loc 4 147 0
 3428              		.cfi_startproc
 3429              		.cfi_personality 0x3,__gxx_personality_v0
 3430              		.cfi_lsda 0x3,.LLSDA1122
 3431 1602 55       		pushq	%rbp
 3432              		.cfi_def_cfa_offset 16
 3433              		.cfi_offset 6, -16
 3434 1603 4889E5   		movq	%rsp, %rbp
 3435              		.cfi_def_cfa_register 6
 3436 1606 53       		pushq	%rbx
 3437 1607 4883EC78 		subq	$120, %rsp
 3438              		.cfi_offset 3, -24
 3439 160b 48897D88 		movq	%rdi, -120(%rbp)
 3440              	.LBB22:
 148:testHexIO.cpp **** 	Buffer data;
 149:testHexIO.cpp **** 	BufferStatus status;
 150:testHexIO.cpp **** 	const char *line = ":040BE10075820022..\n";
 3441              		.loc 4 150 0
 3442 160f 48C745A8 		movq	$.LC35, -88(%rbp)
 3442      00000000 
 151:testHexIO.cpp **** 	uint8 recordType;
 152:testHexIO.cpp **** 	uint32 seg = 0x00000000;
 3443              		.loc 4 152 0
 3444 1617 C745A000 		movl	$0, -96(%rbp)
 3444      000000
 153:testHexIO.cpp **** 	status = bufInitialise(&data, 1024, 0x00, NULL);
 3445              		.loc 4 153 0
 3446 161e 488D45B0 		leaq	-80(%rbp), %rax
 3447 1622 B9000000 		movl	$0, %ecx
 3447      00
 3448 1627 BA000000 		movl	$0, %edx
 3448      00
 3449 162c BE000400 		movl	$1024, %esi
 3449      00
 3450 1631 4889C7   		movq	%rax, %rdi
 3451              	.LEHB138:
 3452 1634 E8000000 		call	bufInitialise
 3452      00
 3453              	.LEHE138:
 3454 1639 89459C   		movl	%eax, -100(%rbp)
 3455              	.LEHB139:
 154:testHexIO.cpp **** 	CHECK_EQUAL(BUF_SUCCESS, status);
 3456              		.loc 4 154 0
 3457 163c E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 3457      00
 3458 1641 488B08   		movq	(%rax), %rcx
 3459 1644 488D45D0 		leaq	-48(%rbp), %rax
 3460 1648 BA9A0000 		movl	$154, %edx
 3460      00
 3461 164d 4889CE   		movq	%rcx, %rsi
 3462 1650 4889C7   		movq	%rax, %rdi
 3463 1653 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 3463      00
 3464              		.loc 4 154 0 is_stmt 0 discriminator 1
 3465 1658 C745A400 		movl	$0, -92(%rbp)
 3465      000000
 3466 165f E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 3466      00
 3467 1664 488B00   		movq	(%rax), %rax
 3468 1667 488D4DD0 		leaq	-48(%rbp), %rcx
 3469 166b 488D559C 		leaq	-100(%rbp), %rdx
 3470 166f 488D75A4 		leaq	-92(%rbp), %rsi
 3471 1673 4889C7   		movq	%rax, %rdi
 3472 1676 E8000000 		call	_ZN8UnitTest10CheckEqualI12BufferStatusS1_EEvRNS_11TestResultsERKT_RKT0_RKNS_11TestDetailsE
 3472      00
 3473              	.LEHE139:
 3474              	.L175:
 155:testHexIO.cpp **** 	status = bufProcessLine(line, 0, &data, NULL, &seg, &recordType, NULL);
 3475              		.loc 4 155 0 is_stmt 1
 3476 167b 488D759B 		leaq	-101(%rbp), %rsi
 3477 167f 488D4DA0 		leaq	-96(%rbp), %rcx
 3478 1683 488D55B0 		leaq	-80(%rbp), %rdx
 3479 1687 488B45A8 		movq	-88(%rbp), %rax
 3480 168b 48C70424 		movq	$0, (%rsp)
 3480      00000000 
 3481 1693 4989F1   		movq	%rsi, %r9
 3482 1696 4989C8   		movq	%rcx, %r8
 3483 1699 B9000000 		movl	$0, %ecx
 3483      00
 3484 169e BE000000 		movl	$0, %esi
 3484      00
 3485 16a3 4889C7   		movq	%rax, %rdi
 3486              	.LEHB140:
 3487 16a6 E8000000 		call	bufProcessLine
 3487      00
 3488              	.LEHE140:
 3489 16ab 89459C   		movl	%eax, -100(%rbp)
 3490              	.LEHB141:
 156:testHexIO.cpp **** 	CHECK_EQUAL(HEX_JUNK_CHECKSUM, status);
 3491              		.loc 4 156 0
 3492 16ae E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 3492      00
 3493 16b3 488B08   		movq	(%rax), %rcx
 3494 16b6 488D45D0 		leaq	-48(%rbp), %rax
 3495 16ba BA9C0000 		movl	$156, %edx
 3495      00
 3496 16bf 4889CE   		movq	%rcx, %rsi
 3497 16c2 4889C7   		movq	%rax, %rdi
 3498 16c5 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 3498      00
 3499              		.loc 4 156 0 is_stmt 0 discriminator 1
 3500 16ca C745A40F 		movl	$15, -92(%rbp)
 3500      000000
 3501 16d1 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 3501      00
 3502 16d6 488B00   		movq	(%rax), %rax
 3503 16d9 488D4DD0 		leaq	-48(%rbp), %rcx
 3504 16dd 488D559C 		leaq	-100(%rbp), %rdx
 3505 16e1 488D75A4 		leaq	-92(%rbp), %rsi
 3506 16e5 4889C7   		movq	%rax, %rdi
 3507 16e8 E8000000 		call	_ZN8UnitTest10CheckEqualI12BufferStatusS1_EEvRNS_11TestResultsERKT_RKT0_RKNS_11TestDetailsE
 3507      00
 3508              	.LEHE141:
 3509              	.L178:
 157:testHexIO.cpp **** 	bufDestroy(&data);
 3510              		.loc 4 157 0 is_stmt 1
 3511 16ed 488D45B0 		leaq	-80(%rbp), %rax
 3512 16f1 4889C7   		movq	%rax, %rdi
 3513              	.LEHB142:
 3514 16f4 E8000000 		call	bufDestroy
 3514      00
 3515              	.LEHE142:
 3516 16f9 E9BA0000 		jmp	.L183
 3516      00
 3517              	.L180:
 3518 16fe 4889C3   		movq	%rax, %rbx
 154:testHexIO.cpp **** 	status = bufProcessLine(line, 0, &data, NULL, &seg, &recordType, NULL);
 3519              		.loc 4 154 0
 3520 1701 E8000000 		call	__cxa_end_catch
 3520      00
 3521 1706 4889D8   		movq	%rbx, %rax
 3522 1709 4889C7   		movq	%rax, %rdi
 3523              	.LEHB143:
 3524 170c E8000000 		call	_Unwind_Resume
 3524      00
 3525              	.LEHE143:
 3526              	.L179:
 3527 1711 4889C7   		movq	%rax, %rdi
 3528 1714 E8000000 		call	__cxa_begin_catch
 3528      00
 3529              	.LEHB144:
 3530 1719 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 3530      00
 3531 171e 488B08   		movq	(%rax), %rcx
 3532 1721 488D45D0 		leaq	-48(%rbp), %rax
 3533 1725 BA9A0000 		movl	$154, %edx
 3533      00
 3534 172a 4889CE   		movq	%rcx, %rsi
 3535 172d 4889C7   		movq	%rax, %rdi
 3536 1730 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 3536      00
 154:testHexIO.cpp **** 	status = bufProcessLine(line, 0, &data, NULL, &seg, &recordType, NULL);
 3537              		.loc 4 154 0 is_stmt 0 discriminator 1
 3538 1735 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 3538      00
 3539 173a 488B00   		movq	(%rax), %rax
 3540 173d 488D4DD0 		leaq	-48(%rbp), %rcx
 3541 1741 BA000000 		movl	$.LC4, %edx
 3541      00
 3542 1746 4889CE   		movq	%rcx, %rsi
 3543 1749 4889C7   		movq	%rax, %rdi
 3544 174c E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 3544      00
 3545              	.LEHE144:
 3546              	.LEHB145:
 3547 1751 E8000000 		call	__cxa_end_catch
 3547      00
 3548              	.LEHE145:
 3549 1756 E920FFFF 		jmp	.L175
 3549      FF
 3550              	.L182:
 3551 175b 4889C3   		movq	%rax, %rbx
 156:testHexIO.cpp **** 	CHECK_EQUAL(HEX_JUNK_CHECKSUM, status);
 3552              		.loc 4 156 0 is_stmt 1
 3553 175e E8000000 		call	__cxa_end_catch
 3553      00
 3554 1763 4889D8   		movq	%rbx, %rax
 3555 1766 4889C7   		movq	%rax, %rdi
 3556              	.LEHB146:
 3557 1769 E8000000 		call	_Unwind_Resume
 3557      00
 3558              	.LEHE146:
 3559              	.L181:
 3560 176e 4889C7   		movq	%rax, %rdi
 3561 1771 E8000000 		call	__cxa_begin_catch
 3561      00
 3562              	.LEHB147:
 3563 1776 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 3563      00
 3564 177b 488B08   		movq	(%rax), %rcx
 3565 177e 488D45D0 		leaq	-48(%rbp), %rax
 3566 1782 BA9C0000 		movl	$156, %edx
 3566      00
 3567 1787 4889CE   		movq	%rcx, %rsi
 3568 178a 4889C7   		movq	%rax, %rdi
 3569 178d E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 3569      00
 156:testHexIO.cpp **** 	CHECK_EQUAL(HEX_JUNK_CHECKSUM, status);
 3570              		.loc 4 156 0 is_stmt 0 discriminator 1
 3571 1792 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 3571      00
 3572 1797 488B00   		movq	(%rax), %rax
 3573 179a 488D4DD0 		leaq	-48(%rbp), %rcx
 3574 179e BA000000 		movl	$.LC36, %edx
 3574      00
 3575 17a3 4889CE   		movq	%rcx, %rsi
 3576 17a6 4889C7   		movq	%rax, %rdi
 3577 17a9 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 3577      00
 3578              	.LEHE147:
 3579              	.LEHB148:
 3580 17ae E8000000 		call	__cxa_end_catch
 3580      00
 3581              	.LEHE148:
 3582 17b3 E935FFFF 		jmp	.L178
 3582      FF
 3583              	.L183:
 3584              	.LBE22:
 158:testHexIO.cpp **** }
 3585              		.loc 4 158 0 is_stmt 1
 3586 17b8 4883C478 		addq	$120, %rsp
 3587 17bc 5B       		popq	%rbx
 3588 17bd 5D       		popq	%rbp
 3589              		.cfi_def_cfa 7, 8
 3590 17be C3       		ret
 3591              		.cfi_endproc
 3592              	.LFE1122:
 3593              		.section	.gcc_except_table
 3594              		.align 4
 3595              	.LLSDA1122:
 3596 0324 FF       		.byte	0xff
 3597 0325 03       		.byte	0x3
 3598 0326 41       		.uleb128 .LLSDATT1122-.LLSDATTD1122
 3599              	.LLSDATTD1122:
 3600 0327 01       		.byte	0x1
 3601 0328 39       		.uleb128 .LLSDACSE1122-.LLSDACSB1122
 3602              	.LLSDACSB1122:
 3603 0329 32       		.uleb128 .LEHB138-.LFB1122
 3604 032a 05       		.uleb128 .LEHE138-.LEHB138
 3605 032b 00       		.uleb128 0
 3606 032c 00       		.uleb128 0
 3607 032d 3A       		.uleb128 .LEHB139-.LFB1122
 3608 032e 3F       		.uleb128 .LEHE139-.LEHB139
 3609 032f 8F02     		.uleb128 .L179-.LFB1122
 3610 0331 01       		.uleb128 0x1
 3611 0332 A401     		.uleb128 .LEHB140-.LFB1122
 3612 0334 05       		.uleb128 .LEHE140-.LEHB140
 3613 0335 00       		.uleb128 0
 3614 0336 00       		.uleb128 0
 3615 0337 AC01     		.uleb128 .LEHB141-.LFB1122
 3616 0339 3F       		.uleb128 .LEHE141-.LEHB141
 3617 033a EC02     		.uleb128 .L181-.LFB1122
 3618 033c 01       		.uleb128 0x1
 3619 033d F201     		.uleb128 .LEHB142-.LFB1122
 3620 033f 05       		.uleb128 .LEHE142-.LEHB142
 3621 0340 00       		.uleb128 0
 3622 0341 00       		.uleb128 0
 3623 0342 8A02     		.uleb128 .LEHB143-.LFB1122
 3624 0344 05       		.uleb128 .LEHE143-.LEHB143
 3625 0345 00       		.uleb128 0
 3626 0346 00       		.uleb128 0
 3627 0347 9702     		.uleb128 .LEHB144-.LFB1122
 3628 0349 38       		.uleb128 .LEHE144-.LEHB144
 3629 034a FC01     		.uleb128 .L180-.LFB1122
 3630 034c 00       		.uleb128 0
 3631 034d CF02     		.uleb128 .LEHB145-.LFB1122
 3632 034f 05       		.uleb128 .LEHE145-.LEHB145
 3633 0350 00       		.uleb128 0
 3634 0351 00       		.uleb128 0
 3635 0352 E702     		.uleb128 .LEHB146-.LFB1122
 3636 0354 05       		.uleb128 .LEHE146-.LEHB146
 3637 0355 00       		.uleb128 0
 3638 0356 00       		.uleb128 0
 3639 0357 F402     		.uleb128 .LEHB147-.LFB1122
 3640 0359 38       		.uleb128 .LEHE147-.LEHB147
 3641 035a D902     		.uleb128 .L182-.LFB1122
 3642 035c 00       		.uleb128 0
 3643 035d AC03     		.uleb128 .LEHB148-.LFB1122
 3644 035f 05       		.uleb128 .LEHE148-.LEHB148
 3645 0360 00       		.uleb128 0
 3646 0361 00       		.uleb128 0
 3647              	.LLSDACSE1122:
 3648 0362 01       		.byte	0x1
 3649 0363 00       		.byte	0
 3650              		.align 4
 3651 0364 00000000 		.long	0
 3652              	
 3653              	.LLSDATT1122:
 3654              		.text
 3656              		.section	.rodata
 3657              	.LC37:
 3658 05d6 48657849 		.string	"HexIO_testBadChecksum"
 3658      4F5F7465 
 3658      73744261 
 3658      64436865 
 3658      636B7375 
 3659              		.section	.text._ZN25TestHexIO_testBadChecksumC2Ev,"axG",@progbits,_ZN25TestHexIO_testBadChecksumC5
 3660              		.align 2
 3661              		.weak	_ZN25TestHexIO_testBadChecksumC2Ev
 3663              	_ZN25TestHexIO_testBadChecksumC2Ev:
 3664              	.LFB1124:
 159:testHexIO.cpp **** 
 160:testHexIO.cpp **** TEST(HexIO_testBadChecksum) {
 3665              		.loc 4 160 0
 3666              		.cfi_startproc
 3667 0000 55       		pushq	%rbp
 3668              		.cfi_def_cfa_offset 16
 3669              		.cfi_offset 6, -16
 3670 0001 4889E5   		movq	%rsp, %rbp
 3671              		.cfi_def_cfa_register 6
 3672 0004 4883EC10 		subq	$16, %rsp
 3673 0008 48897DF8 		movq	%rdi, -8(%rbp)
 3674              	.LBB23:
 3675              		.loc 4 160 0
 3676 000c E8000000 		call	_ZN13UnitTestSuite12GetSuiteNameEv
 3676      00
 3677 0011 4889C2   		movq	%rax, %rdx
 3678 0014 488B45F8 		movq	-8(%rbp), %rax
 3679 0018 41B8A000 		movl	$160, %r8d
 3679      0000
 3680 001e B9000000 		movl	$.LC1, %ecx
 3680      00
 3681 0023 BE000000 		movl	$.LC37, %esi
 3681      00
 3682 0028 4889C7   		movq	%rax, %rdi
 3683 002b E8000000 		call	_ZN8UnitTest4TestC2EPKcS2_S2_i
 3683      00
 3684 0030 488B45F8 		movq	-8(%rbp), %rax
 3685 0034 48C70000 		movq	$_ZTV25TestHexIO_testBadChecksum+16, (%rax)
 3685      000000
 3686              	.LBE23:
 3687 003b C9       		leave
 3688              		.cfi_def_cfa 7, 8
 3689 003c C3       		ret
 3690              		.cfi_endproc
 3691              	.LFE1124:
 3693              		.weak	_ZN25TestHexIO_testBadChecksumC1Ev
 3694              		.set	_ZN25TestHexIO_testBadChecksumC1Ev,_ZN25TestHexIO_testBadChecksumC2Ev
 3695              		.globl	testHexIO_testBadChecksumInstance
 3696              		.bss
 3697 0239 00000000 		.align 32
 3697      000000
 3700              	testHexIO_testBadChecksumInstance:
 3701 0240 00000000 		.zero	56
 3701      00000000 
 3701      00000000 
 3701      00000000 
 3701      00000000 
 3702              		.globl	adderHexIO_testBadChecksum
 3705              	adderHexIO_testBadChecksum:
 3706 0278 00       		.zero	1
 3707              		.section	.rodata
 3708              	.LC38:
 3709 05ec 3A303430 		.string	":040BE10075820022F8\n"
 3709      42453130 
 3709      30373538 
 3709      32303032 
 3709      3246380A 
 3710 0601 00000000 		.align 8
 3710      000000
 3711              	.LC39:
 3712 0608 556E6861 		.string	"Unhandled exception in CHECK_EQUAL(HEX_BAD_CHECKSUM, status)"
 3712      6E646C65 
 3712      64206578 
 3712      63657074 
 3712      696F6E20 
 3713              		.text
 3714 17bf 90       		.align 2
 3715              		.globl	_ZNK25TestHexIO_testBadChecksum7RunImplEv
 3717              	_ZNK25TestHexIO_testBadChecksum7RunImplEv:
 3718              	.LFB1126:
 3719              		.loc 4 160 0
 3720              		.cfi_startproc
 3721              		.cfi_personality 0x3,__gxx_personality_v0
 3722              		.cfi_lsda 0x3,.LLSDA1126
 3723 17c0 55       		pushq	%rbp
 3724              		.cfi_def_cfa_offset 16
 3725              		.cfi_offset 6, -16
 3726 17c1 4889E5   		movq	%rsp, %rbp
 3727              		.cfi_def_cfa_register 6
 3728 17c4 53       		pushq	%rbx
 3729 17c5 4883EC78 		subq	$120, %rsp
 3730              		.cfi_offset 3, -24
 3731 17c9 48897D88 		movq	%rdi, -120(%rbp)
 3732              	.LBB24:
 161:testHexIO.cpp **** 	Buffer data;
 162:testHexIO.cpp **** 	BufferStatus status;
 163:testHexIO.cpp **** 	const char *line = ":040BE10075820022F8\n";
 3733              		.loc 4 163 0
 3734 17cd 48C745A8 		movq	$.LC38, -88(%rbp)
 3734      00000000 
 164:testHexIO.cpp **** 	uint8 recordType;
 165:testHexIO.cpp **** 	uint32 seg = 0x00000000;
 3735              		.loc 4 165 0
 3736 17d5 C745A000 		movl	$0, -96(%rbp)
 3736      000000
 166:testHexIO.cpp **** 	status = bufInitialise(&data, 1024, 0x00, NULL);
 3737              		.loc 4 166 0
 3738 17dc 488D45B0 		leaq	-80(%rbp), %rax
 3739 17e0 B9000000 		movl	$0, %ecx
 3739      00
 3740 17e5 BA000000 		movl	$0, %edx
 3740      00
 3741 17ea BE000400 		movl	$1024, %esi
 3741      00
 3742 17ef 4889C7   		movq	%rax, %rdi
 3743              	.LEHB149:
 3744 17f2 E8000000 		call	bufInitialise
 3744      00
 3745              	.LEHE149:
 3746 17f7 89459C   		movl	%eax, -100(%rbp)
 3747              	.LEHB150:
 167:testHexIO.cpp **** 	CHECK_EQUAL(BUF_SUCCESS, status);
 3748              		.loc 4 167 0
 3749 17fa E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 3749      00
 3750 17ff 488B08   		movq	(%rax), %rcx
 3751 1802 488D45D0 		leaq	-48(%rbp), %rax
 3752 1806 BAA70000 		movl	$167, %edx
 3752      00
 3753 180b 4889CE   		movq	%rcx, %rsi
 3754 180e 4889C7   		movq	%rax, %rdi
 3755 1811 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 3755      00
 3756              		.loc 4 167 0 is_stmt 0 discriminator 1
 3757 1816 C745A400 		movl	$0, -92(%rbp)
 3757      000000
 3758 181d E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 3758      00
 3759 1822 488B00   		movq	(%rax), %rax
 3760 1825 488D4DD0 		leaq	-48(%rbp), %rcx
 3761 1829 488D559C 		leaq	-100(%rbp), %rdx
 3762 182d 488D75A4 		leaq	-92(%rbp), %rsi
 3763 1831 4889C7   		movq	%rax, %rdi
 3764 1834 E8000000 		call	_ZN8UnitTest10CheckEqualI12BufferStatusS1_EEvRNS_11TestResultsERKT_RKT0_RKNS_11TestDetailsE
 3764      00
 3765              	.LEHE150:
 3766              	.L188:
 168:testHexIO.cpp **** 	status = bufProcessLine(line, 0, &data, NULL, &seg, &recordType, NULL);
 3767              		.loc 4 168 0 is_stmt 1
 3768 1839 488D759B 		leaq	-101(%rbp), %rsi
 3769 183d 488D4DA0 		leaq	-96(%rbp), %rcx
 3770 1841 488D55B0 		leaq	-80(%rbp), %rdx
 3771 1845 488B45A8 		movq	-88(%rbp), %rax
 3772 1849 48C70424 		movq	$0, (%rsp)
 3772      00000000 
 3773 1851 4989F1   		movq	%rsi, %r9
 3774 1854 4989C8   		movq	%rcx, %r8
 3775 1857 B9000000 		movl	$0, %ecx
 3775      00
 3776 185c BE000000 		movl	$0, %esi
 3776      00
 3777 1861 4889C7   		movq	%rax, %rdi
 3778              	.LEHB151:
 3779 1864 E8000000 		call	bufProcessLine
 3779      00
 3780              	.LEHE151:
 3781 1869 89459C   		movl	%eax, -100(%rbp)
 3782              	.LEHB152:
 169:testHexIO.cpp **** 	CHECK_EQUAL(HEX_BAD_CHECKSUM, status);
 3783              		.loc 4 169 0
 3784 186c E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 3784      00
 3785 1871 488B08   		movq	(%rax), %rcx
 3786 1874 488D45D0 		leaq	-48(%rbp), %rax
 3787 1878 BAA90000 		movl	$169, %edx
 3787      00
 3788 187d 4889CE   		movq	%rcx, %rsi
 3789 1880 4889C7   		movq	%rax, %rdi
 3790 1883 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 3790      00
 3791              		.loc 4 169 0 is_stmt 0 discriminator 1
 3792 1888 C745A410 		movl	$16, -92(%rbp)
 3792      000000
 3793 188f E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 3793      00
 3794 1894 488B00   		movq	(%rax), %rax
 3795 1897 488D4DD0 		leaq	-48(%rbp), %rcx
 3796 189b 488D559C 		leaq	-100(%rbp), %rdx
 3797 189f 488D75A4 		leaq	-92(%rbp), %rsi
 3798 18a3 4889C7   		movq	%rax, %rdi
 3799 18a6 E8000000 		call	_ZN8UnitTest10CheckEqualI12BufferStatusS1_EEvRNS_11TestResultsERKT_RKT0_RKNS_11TestDetailsE
 3799      00
 3800              	.LEHE152:
 3801              	.L191:
 170:testHexIO.cpp **** 	bufDestroy(&data);
 3802              		.loc 4 170 0 is_stmt 1
 3803 18ab 488D45B0 		leaq	-80(%rbp), %rax
 3804 18af 4889C7   		movq	%rax, %rdi
 3805              	.LEHB153:
 3806 18b2 E8000000 		call	bufDestroy
 3806      00
 3807              	.LEHE153:
 3808 18b7 E9BA0000 		jmp	.L196
 3808      00
 3809              	.L193:
 3810 18bc 4889C3   		movq	%rax, %rbx
 167:testHexIO.cpp **** 	status = bufProcessLine(line, 0, &data, NULL, &seg, &recordType, NULL);
 3811              		.loc 4 167 0
 3812 18bf E8000000 		call	__cxa_end_catch
 3812      00
 3813 18c4 4889D8   		movq	%rbx, %rax
 3814 18c7 4889C7   		movq	%rax, %rdi
 3815              	.LEHB154:
 3816 18ca E8000000 		call	_Unwind_Resume
 3816      00
 3817              	.LEHE154:
 3818              	.L192:
 3819 18cf 4889C7   		movq	%rax, %rdi
 3820 18d2 E8000000 		call	__cxa_begin_catch
 3820      00
 3821              	.LEHB155:
 3822 18d7 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 3822      00
 3823 18dc 488B08   		movq	(%rax), %rcx
 3824 18df 488D45D0 		leaq	-48(%rbp), %rax
 3825 18e3 BAA70000 		movl	$167, %edx
 3825      00
 3826 18e8 4889CE   		movq	%rcx, %rsi
 3827 18eb 4889C7   		movq	%rax, %rdi
 3828 18ee E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 3828      00
 167:testHexIO.cpp **** 	status = bufProcessLine(line, 0, &data, NULL, &seg, &recordType, NULL);
 3829              		.loc 4 167 0 is_stmt 0 discriminator 1
 3830 18f3 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 3830      00
 3831 18f8 488B00   		movq	(%rax), %rax
 3832 18fb 488D4DD0 		leaq	-48(%rbp), %rcx
 3833 18ff BA000000 		movl	$.LC4, %edx
 3833      00
 3834 1904 4889CE   		movq	%rcx, %rsi
 3835 1907 4889C7   		movq	%rax, %rdi
 3836 190a E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 3836      00
 3837              	.LEHE155:
 3838              	.LEHB156:
 3839 190f E8000000 		call	__cxa_end_catch
 3839      00
 3840              	.LEHE156:
 3841 1914 E920FFFF 		jmp	.L188
 3841      FF
 3842              	.L195:
 3843 1919 4889C3   		movq	%rax, %rbx
 169:testHexIO.cpp **** 	CHECK_EQUAL(HEX_BAD_CHECKSUM, status);
 3844              		.loc 4 169 0 is_stmt 1
 3845 191c E8000000 		call	__cxa_end_catch
 3845      00
 3846 1921 4889D8   		movq	%rbx, %rax
 3847 1924 4889C7   		movq	%rax, %rdi
 3848              	.LEHB157:
 3849 1927 E8000000 		call	_Unwind_Resume
 3849      00
 3850              	.LEHE157:
 3851              	.L194:
 3852 192c 4889C7   		movq	%rax, %rdi
 3853 192f E8000000 		call	__cxa_begin_catch
 3853      00
 3854              	.LEHB158:
 3855 1934 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 3855      00
 3856 1939 488B08   		movq	(%rax), %rcx
 3857 193c 488D45D0 		leaq	-48(%rbp), %rax
 3858 1940 BAA90000 		movl	$169, %edx
 3858      00
 3859 1945 4889CE   		movq	%rcx, %rsi
 3860 1948 4889C7   		movq	%rax, %rdi
 3861 194b E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 3861      00
 169:testHexIO.cpp **** 	CHECK_EQUAL(HEX_BAD_CHECKSUM, status);
 3862              		.loc 4 169 0 is_stmt 0 discriminator 1
 3863 1950 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 3863      00
 3864 1955 488B00   		movq	(%rax), %rax
 3865 1958 488D4DD0 		leaq	-48(%rbp), %rcx
 3866 195c BA000000 		movl	$.LC39, %edx
 3866      00
 3867 1961 4889CE   		movq	%rcx, %rsi
 3868 1964 4889C7   		movq	%rax, %rdi
 3869 1967 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 3869      00
 3870              	.LEHE158:
 3871              	.LEHB159:
 3872 196c E8000000 		call	__cxa_end_catch
 3872      00
 3873              	.LEHE159:
 3874 1971 E935FFFF 		jmp	.L191
 3874      FF
 3875              	.L196:
 3876              	.LBE24:
 171:testHexIO.cpp **** }
 3877              		.loc 4 171 0 is_stmt 1
 3878 1976 4883C478 		addq	$120, %rsp
 3879 197a 5B       		popq	%rbx
 3880 197b 5D       		popq	%rbp
 3881              		.cfi_def_cfa 7, 8
 3882 197c C3       		ret
 3883              		.cfi_endproc
 3884              	.LFE1126:
 3885              		.section	.gcc_except_table
 3886              		.align 4
 3887              	.LLSDA1126:
 3888 0368 FF       		.byte	0xff
 3889 0369 03       		.byte	0x3
 3890 036a 41       		.uleb128 .LLSDATT1126-.LLSDATTD1126
 3891              	.LLSDATTD1126:
 3892 036b 01       		.byte	0x1
 3893 036c 39       		.uleb128 .LLSDACSE1126-.LLSDACSB1126
 3894              	.LLSDACSB1126:
 3895 036d 32       		.uleb128 .LEHB149-.LFB1126
 3896 036e 05       		.uleb128 .LEHE149-.LEHB149
 3897 036f 00       		.uleb128 0
 3898 0370 00       		.uleb128 0
 3899 0371 3A       		.uleb128 .LEHB150-.LFB1126
 3900 0372 3F       		.uleb128 .LEHE150-.LEHB150
 3901 0373 8F02     		.uleb128 .L192-.LFB1126
 3902 0375 01       		.uleb128 0x1
 3903 0376 A401     		.uleb128 .LEHB151-.LFB1126
 3904 0378 05       		.uleb128 .LEHE151-.LEHB151
 3905 0379 00       		.uleb128 0
 3906 037a 00       		.uleb128 0
 3907 037b AC01     		.uleb128 .LEHB152-.LFB1126
 3908 037d 3F       		.uleb128 .LEHE152-.LEHB152
 3909 037e EC02     		.uleb128 .L194-.LFB1126
 3910 0380 01       		.uleb128 0x1
 3911 0381 F201     		.uleb128 .LEHB153-.LFB1126
 3912 0383 05       		.uleb128 .LEHE153-.LEHB153
 3913 0384 00       		.uleb128 0
 3914 0385 00       		.uleb128 0
 3915 0386 8A02     		.uleb128 .LEHB154-.LFB1126
 3916 0388 05       		.uleb128 .LEHE154-.LEHB154
 3917 0389 00       		.uleb128 0
 3918 038a 00       		.uleb128 0
 3919 038b 9702     		.uleb128 .LEHB155-.LFB1126
 3920 038d 38       		.uleb128 .LEHE155-.LEHB155
 3921 038e FC01     		.uleb128 .L193-.LFB1126
 3922 0390 00       		.uleb128 0
 3923 0391 CF02     		.uleb128 .LEHB156-.LFB1126
 3924 0393 05       		.uleb128 .LEHE156-.LEHB156
 3925 0394 00       		.uleb128 0
 3926 0395 00       		.uleb128 0
 3927 0396 E702     		.uleb128 .LEHB157-.LFB1126
 3928 0398 05       		.uleb128 .LEHE157-.LEHB157
 3929 0399 00       		.uleb128 0
 3930 039a 00       		.uleb128 0
 3931 039b F402     		.uleb128 .LEHB158-.LFB1126
 3932 039d 38       		.uleb128 .LEHE158-.LEHB158
 3933 039e D902     		.uleb128 .L195-.LFB1126
 3934 03a0 00       		.uleb128 0
 3935 03a1 AC03     		.uleb128 .LEHB159-.LFB1126
 3936 03a3 05       		.uleb128 .LEHE159-.LEHB159
 3937 03a4 00       		.uleb128 0
 3938 03a5 00       		.uleb128 0
 3939              	.LLSDACSE1126:
 3940 03a6 01       		.byte	0x1
 3941 03a7 00       		.byte	0
 3942              		.align 4
 3943 03a8 00000000 		.long	0
 3944              	
 3945              	.LLSDATT1126:
 3946              		.text
 3948              		.section	.rodata
 3949              	.LC40:
 3950 0645 48657849 		.string	"HexIO_testCorruptLine"
 3950      4F5F7465 
 3950      7374436F 
 3950      72727570 
 3950      744C696E 
 3951              		.section	.text._ZN25TestHexIO_testCorruptLineC2Ev,"axG",@progbits,_ZN25TestHexIO_testCorruptLineC5
 3952              		.align 2
 3953              		.weak	_ZN25TestHexIO_testCorruptLineC2Ev
 3955              	_ZN25TestHexIO_testCorruptLineC2Ev:
 3956              	.LFB1128:
 172:testHexIO.cpp **** 
 173:testHexIO.cpp **** TEST(HexIO_testCorruptLine) {
 3957              		.loc 4 173 0
 3958              		.cfi_startproc
 3959 0000 55       		pushq	%rbp
 3960              		.cfi_def_cfa_offset 16
 3961              		.cfi_offset 6, -16
 3962 0001 4889E5   		movq	%rsp, %rbp
 3963              		.cfi_def_cfa_register 6
 3964 0004 4883EC10 		subq	$16, %rsp
 3965 0008 48897DF8 		movq	%rdi, -8(%rbp)
 3966              	.LBB25:
 3967              		.loc 4 173 0
 3968 000c E8000000 		call	_ZN13UnitTestSuite12GetSuiteNameEv
 3968      00
 3969 0011 4889C2   		movq	%rax, %rdx
 3970 0014 488B45F8 		movq	-8(%rbp), %rax
 3971 0018 41B8AD00 		movl	$173, %r8d
 3971      0000
 3972 001e B9000000 		movl	$.LC1, %ecx
 3972      00
 3973 0023 BE000000 		movl	$.LC40, %esi
 3973      00
 3974 0028 4889C7   		movq	%rax, %rdi
 3975 002b E8000000 		call	_ZN8UnitTest4TestC2EPKcS2_S2_i
 3975      00
 3976 0030 488B45F8 		movq	-8(%rbp), %rax
 3977 0034 48C70000 		movq	$_ZTV25TestHexIO_testCorruptLine+16, (%rax)
 3977      000000
 3978              	.LBE25:
 3979 003b C9       		leave
 3980              		.cfi_def_cfa 7, 8
 3981 003c C3       		ret
 3982              		.cfi_endproc
 3983              	.LFE1128:
 3985              		.weak	_ZN25TestHexIO_testCorruptLineC1Ev
 3986              		.set	_ZN25TestHexIO_testCorruptLineC1Ev,_ZN25TestHexIO_testCorruptLineC2Ev
 3987              		.globl	testHexIO_testCorruptLineInstance
 3988              		.bss
 3989 0279 00000000 		.align 32
 3989      000000
 3992              	testHexIO_testCorruptLineInstance:
 3993 0280 00000000 		.zero	56
 3993      00000000 
 3993      00000000 
 3993      00000000 
 3993      00000000 
 3994              		.globl	adderHexIO_testCorruptLine
 3997              	adderHexIO_testCorruptLine:
 3998 02b8 00       		.zero	1
 3999              		.section	.rodata
 4000              	.LC41:
 4001 065b 3A303430 		.string	":040BE10075820022F7 \n"
 4001      42453130 
 4001      30373538 
 4001      32303032 
 4001      32463720 
 4002 0671 00000000 		.align 8
 4002      000000
 4003              	.LC42:
 4004 0678 556E6861 		.string	"Unhandled exception in CHECK_EQUAL(HEX_CORRUPT_LINE, status)"
 4004      6E646C65 
 4004      64206578 
 4004      63657074 
 4004      696F6E20 
 4005              		.text
 4006 197d 90       		.align 2
 4007              		.globl	_ZNK25TestHexIO_testCorruptLine7RunImplEv
 4009              	_ZNK25TestHexIO_testCorruptLine7RunImplEv:
 4010              	.LFB1130:
 4011              		.loc 4 173 0
 4012              		.cfi_startproc
 4013              		.cfi_personality 0x3,__gxx_personality_v0
 4014              		.cfi_lsda 0x3,.LLSDA1130
 4015 197e 55       		pushq	%rbp
 4016              		.cfi_def_cfa_offset 16
 4017              		.cfi_offset 6, -16
 4018 197f 4889E5   		movq	%rsp, %rbp
 4019              		.cfi_def_cfa_register 6
 4020 1982 53       		pushq	%rbx
 4021 1983 4883EC78 		subq	$120, %rsp
 4022              		.cfi_offset 3, -24
 4023 1987 48897D88 		movq	%rdi, -120(%rbp)
 4024              	.LBB26:
 174:testHexIO.cpp **** 	Buffer data;
 175:testHexIO.cpp **** 	BufferStatus status;
 176:testHexIO.cpp **** 	const char *line = ":040BE10075820022F7 \n";
 4025              		.loc 4 176 0
 4026 198b 48C745A8 		movq	$.LC41, -88(%rbp)
 4026      00000000 
 177:testHexIO.cpp **** 	uint8 recordType;
 178:testHexIO.cpp **** 	uint32 seg = 0x00000000;
 4027              		.loc 4 178 0
 4028 1993 C745A000 		movl	$0, -96(%rbp)
 4028      000000
 179:testHexIO.cpp **** 	status = bufInitialise(&data, 1024, 0x00, NULL);
 4029              		.loc 4 179 0
 4030 199a 488D45B0 		leaq	-80(%rbp), %rax
 4031 199e B9000000 		movl	$0, %ecx
 4031      00
 4032 19a3 BA000000 		movl	$0, %edx
 4032      00
 4033 19a8 BE000400 		movl	$1024, %esi
 4033      00
 4034 19ad 4889C7   		movq	%rax, %rdi
 4035              	.LEHB160:
 4036 19b0 E8000000 		call	bufInitialise
 4036      00
 4037              	.LEHE160:
 4038 19b5 89459C   		movl	%eax, -100(%rbp)
 4039              	.LEHB161:
 180:testHexIO.cpp **** 	CHECK_EQUAL(BUF_SUCCESS, status);
 4040              		.loc 4 180 0
 4041 19b8 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 4041      00
 4042 19bd 488B08   		movq	(%rax), %rcx
 4043 19c0 488D45D0 		leaq	-48(%rbp), %rax
 4044 19c4 BAB40000 		movl	$180, %edx
 4044      00
 4045 19c9 4889CE   		movq	%rcx, %rsi
 4046 19cc 4889C7   		movq	%rax, %rdi
 4047 19cf E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 4047      00
 4048              		.loc 4 180 0 is_stmt 0 discriminator 1
 4049 19d4 C745A400 		movl	$0, -92(%rbp)
 4049      000000
 4050 19db E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 4050      00
 4051 19e0 488B00   		movq	(%rax), %rax
 4052 19e3 488D4DD0 		leaq	-48(%rbp), %rcx
 4053 19e7 488D559C 		leaq	-100(%rbp), %rdx
 4054 19eb 488D75A4 		leaq	-92(%rbp), %rsi
 4055 19ef 4889C7   		movq	%rax, %rdi
 4056 19f2 E8000000 		call	_ZN8UnitTest10CheckEqualI12BufferStatusS1_EEvRNS_11TestResultsERKT_RKT0_RKNS_11TestDetailsE
 4056      00
 4057              	.LEHE161:
 4058              	.L201:
 181:testHexIO.cpp **** 	status = bufProcessLine(line, 0, &data, NULL, &seg, &recordType, NULL);
 4059              		.loc 4 181 0 is_stmt 1
 4060 19f7 488D759B 		leaq	-101(%rbp), %rsi
 4061 19fb 488D4DA0 		leaq	-96(%rbp), %rcx
 4062 19ff 488D55B0 		leaq	-80(%rbp), %rdx
 4063 1a03 488B45A8 		movq	-88(%rbp), %rax
 4064 1a07 48C70424 		movq	$0, (%rsp)
 4064      00000000 
 4065 1a0f 4989F1   		movq	%rsi, %r9
 4066 1a12 4989C8   		movq	%rcx, %r8
 4067 1a15 B9000000 		movl	$0, %ecx
 4067      00
 4068 1a1a BE000000 		movl	$0, %esi
 4068      00
 4069 1a1f 4889C7   		movq	%rax, %rdi
 4070              	.LEHB162:
 4071 1a22 E8000000 		call	bufProcessLine
 4071      00
 4072              	.LEHE162:
 4073 1a27 89459C   		movl	%eax, -100(%rbp)
 4074              	.LEHB163:
 182:testHexIO.cpp **** 	CHECK_EQUAL(HEX_CORRUPT_LINE, status);
 4075              		.loc 4 182 0
 4076 1a2a E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 4076      00
 4077 1a2f 488B08   		movq	(%rax), %rcx
 4078 1a32 488D45D0 		leaq	-48(%rbp), %rax
 4079 1a36 BAB60000 		movl	$182, %edx
 4079      00
 4080 1a3b 4889CE   		movq	%rcx, %rsi
 4081 1a3e 4889C7   		movq	%rax, %rdi
 4082 1a41 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 4082      00
 4083              		.loc 4 182 0 is_stmt 0 discriminator 1
 4084 1a46 C745A411 		movl	$17, -92(%rbp)
 4084      000000
 4085 1a4d E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 4085      00
 4086 1a52 488B00   		movq	(%rax), %rax
 4087 1a55 488D4DD0 		leaq	-48(%rbp), %rcx
 4088 1a59 488D559C 		leaq	-100(%rbp), %rdx
 4089 1a5d 488D75A4 		leaq	-92(%rbp), %rsi
 4090 1a61 4889C7   		movq	%rax, %rdi
 4091 1a64 E8000000 		call	_ZN8UnitTest10CheckEqualI12BufferStatusS1_EEvRNS_11TestResultsERKT_RKT0_RKNS_11TestDetailsE
 4091      00
 4092              	.LEHE163:
 4093              	.L204:
 183:testHexIO.cpp **** 	bufDestroy(&data);
 4094              		.loc 4 183 0 is_stmt 1
 4095 1a69 488D45B0 		leaq	-80(%rbp), %rax
 4096 1a6d 4889C7   		movq	%rax, %rdi
 4097              	.LEHB164:
 4098 1a70 E8000000 		call	bufDestroy
 4098      00
 4099              	.LEHE164:
 4100 1a75 E9BA0000 		jmp	.L209
 4100      00
 4101              	.L206:
 4102 1a7a 4889C3   		movq	%rax, %rbx
 180:testHexIO.cpp **** 	status = bufProcessLine(line, 0, &data, NULL, &seg, &recordType, NULL);
 4103              		.loc 4 180 0
 4104 1a7d E8000000 		call	__cxa_end_catch
 4104      00
 4105 1a82 4889D8   		movq	%rbx, %rax
 4106 1a85 4889C7   		movq	%rax, %rdi
 4107              	.LEHB165:
 4108 1a88 E8000000 		call	_Unwind_Resume
 4108      00
 4109              	.LEHE165:
 4110              	.L205:
 4111 1a8d 4889C7   		movq	%rax, %rdi
 4112 1a90 E8000000 		call	__cxa_begin_catch
 4112      00
 4113              	.LEHB166:
 4114 1a95 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 4114      00
 4115 1a9a 488B08   		movq	(%rax), %rcx
 4116 1a9d 488D45D0 		leaq	-48(%rbp), %rax
 4117 1aa1 BAB40000 		movl	$180, %edx
 4117      00
 4118 1aa6 4889CE   		movq	%rcx, %rsi
 4119 1aa9 4889C7   		movq	%rax, %rdi
 4120 1aac E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 4120      00
 180:testHexIO.cpp **** 	status = bufProcessLine(line, 0, &data, NULL, &seg, &recordType, NULL);
 4121              		.loc 4 180 0 is_stmt 0 discriminator 1
 4122 1ab1 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 4122      00
 4123 1ab6 488B00   		movq	(%rax), %rax
 4124 1ab9 488D4DD0 		leaq	-48(%rbp), %rcx
 4125 1abd BA000000 		movl	$.LC4, %edx
 4125      00
 4126 1ac2 4889CE   		movq	%rcx, %rsi
 4127 1ac5 4889C7   		movq	%rax, %rdi
 4128 1ac8 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 4128      00
 4129              	.LEHE166:
 4130              	.LEHB167:
 4131 1acd E8000000 		call	__cxa_end_catch
 4131      00
 4132              	.LEHE167:
 4133 1ad2 E920FFFF 		jmp	.L201
 4133      FF
 4134              	.L208:
 4135 1ad7 4889C3   		movq	%rax, %rbx
 182:testHexIO.cpp **** 	CHECK_EQUAL(HEX_CORRUPT_LINE, status);
 4136              		.loc 4 182 0 is_stmt 1
 4137 1ada E8000000 		call	__cxa_end_catch
 4137      00
 4138 1adf 4889D8   		movq	%rbx, %rax
 4139 1ae2 4889C7   		movq	%rax, %rdi
 4140              	.LEHB168:
 4141 1ae5 E8000000 		call	_Unwind_Resume
 4141      00
 4142              	.LEHE168:
 4143              	.L207:
 4144 1aea 4889C7   		movq	%rax, %rdi
 4145 1aed E8000000 		call	__cxa_begin_catch
 4145      00
 4146              	.LEHB169:
 4147 1af2 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 4147      00
 4148 1af7 488B08   		movq	(%rax), %rcx
 4149 1afa 488D45D0 		leaq	-48(%rbp), %rax
 4150 1afe BAB60000 		movl	$182, %edx
 4150      00
 4151 1b03 4889CE   		movq	%rcx, %rsi
 4152 1b06 4889C7   		movq	%rax, %rdi
 4153 1b09 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 4153      00
 182:testHexIO.cpp **** 	CHECK_EQUAL(HEX_CORRUPT_LINE, status);
 4154              		.loc 4 182 0 is_stmt 0 discriminator 1
 4155 1b0e E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 4155      00
 4156 1b13 488B00   		movq	(%rax), %rax
 4157 1b16 488D4DD0 		leaq	-48(%rbp), %rcx
 4158 1b1a BA000000 		movl	$.LC42, %edx
 4158      00
 4159 1b1f 4889CE   		movq	%rcx, %rsi
 4160 1b22 4889C7   		movq	%rax, %rdi
 4161 1b25 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 4161      00
 4162              	.LEHE169:
 4163              	.LEHB170:
 4164 1b2a E8000000 		call	__cxa_end_catch
 4164      00
 4165              	.LEHE170:
 4166 1b2f E935FFFF 		jmp	.L204
 4166      FF
 4167              	.L209:
 4168              	.LBE26:
 184:testHexIO.cpp **** }
 4169              		.loc 4 184 0 is_stmt 1
 4170 1b34 4883C478 		addq	$120, %rsp
 4171 1b38 5B       		popq	%rbx
 4172 1b39 5D       		popq	%rbp
 4173              		.cfi_def_cfa 7, 8
 4174 1b3a C3       		ret
 4175              		.cfi_endproc
 4176              	.LFE1130:
 4177              		.section	.gcc_except_table
 4178              		.align 4
 4179              	.LLSDA1130:
 4180 03ac FF       		.byte	0xff
 4181 03ad 03       		.byte	0x3
 4182 03ae 41       		.uleb128 .LLSDATT1130-.LLSDATTD1130
 4183              	.LLSDATTD1130:
 4184 03af 01       		.byte	0x1
 4185 03b0 39       		.uleb128 .LLSDACSE1130-.LLSDACSB1130
 4186              	.LLSDACSB1130:
 4187 03b1 32       		.uleb128 .LEHB160-.LFB1130
 4188 03b2 05       		.uleb128 .LEHE160-.LEHB160
 4189 03b3 00       		.uleb128 0
 4190 03b4 00       		.uleb128 0
 4191 03b5 3A       		.uleb128 .LEHB161-.LFB1130
 4192 03b6 3F       		.uleb128 .LEHE161-.LEHB161
 4193 03b7 8F02     		.uleb128 .L205-.LFB1130
 4194 03b9 01       		.uleb128 0x1
 4195 03ba A401     		.uleb128 .LEHB162-.LFB1130
 4196 03bc 05       		.uleb128 .LEHE162-.LEHB162
 4197 03bd 00       		.uleb128 0
 4198 03be 00       		.uleb128 0
 4199 03bf AC01     		.uleb128 .LEHB163-.LFB1130
 4200 03c1 3F       		.uleb128 .LEHE163-.LEHB163
 4201 03c2 EC02     		.uleb128 .L207-.LFB1130
 4202 03c4 01       		.uleb128 0x1
 4203 03c5 F201     		.uleb128 .LEHB164-.LFB1130
 4204 03c7 05       		.uleb128 .LEHE164-.LEHB164
 4205 03c8 00       		.uleb128 0
 4206 03c9 00       		.uleb128 0
 4207 03ca 8A02     		.uleb128 .LEHB165-.LFB1130
 4208 03cc 05       		.uleb128 .LEHE165-.LEHB165
 4209 03cd 00       		.uleb128 0
 4210 03ce 00       		.uleb128 0
 4211 03cf 9702     		.uleb128 .LEHB166-.LFB1130
 4212 03d1 38       		.uleb128 .LEHE166-.LEHB166
 4213 03d2 FC01     		.uleb128 .L206-.LFB1130
 4214 03d4 00       		.uleb128 0
 4215 03d5 CF02     		.uleb128 .LEHB167-.LFB1130
 4216 03d7 05       		.uleb128 .LEHE167-.LEHB167
 4217 03d8 00       		.uleb128 0
 4218 03d9 00       		.uleb128 0
 4219 03da E702     		.uleb128 .LEHB168-.LFB1130
 4220 03dc 05       		.uleb128 .LEHE168-.LEHB168
 4221 03dd 00       		.uleb128 0
 4222 03de 00       		.uleb128 0
 4223 03df F402     		.uleb128 .LEHB169-.LFB1130
 4224 03e1 38       		.uleb128 .LEHE169-.LEHB169
 4225 03e2 D902     		.uleb128 .L208-.LFB1130
 4226 03e4 00       		.uleb128 0
 4227 03e5 AC03     		.uleb128 .LEHB170-.LFB1130
 4228 03e7 05       		.uleb128 .LEHE170-.LEHB170
 4229 03e8 00       		.uleb128 0
 4230 03e9 00       		.uleb128 0
 4231              	.LLSDACSE1130:
 4232 03ea 01       		.byte	0x1
 4233 03eb 00       		.byte	0
 4234              		.align 4
 4235 03ec 00000000 		.long	0
 4236              	
 4237              	.LLSDATT1130:
 4238              		.text
 4240              		.section	.rodata
 4241              	.LC43:
 4242 06b5 746D7046 		.string	"tmpFile.hex"
 4242      696C652E 
 4242      68657800 
 4243              	.LC44:
 4244 06c1 66696C65 		.string	"file.is_open()"
 4244      2E69735F 
 4244      6F70656E 
 4244      282900
 4245              		.align 8
 4246              	.LC45:
 4247 06d0 556E6861 		.string	"Unhandled exception in CHECK(file.is_open())"
 4247      6E646C65 
 4247      64206578 
 4247      63657074 
 4247      696F6E20 
 4248 06fd 000000   		.align 8
 4249              	.LC46:
 4250 0700 556E6861 		.string	"Unhandled exception in CHECK_EQUAL(expected.size(), (unsigned int)length)"
 4250      6E646C65 
 4250      64206578 
 4250      63657074 
 4250      696F6E20 
 4251 074a 00000000 		.align 8
 4251      0000
 4252              	.LC47:
 4253 0750 556E6861 		.string	"Unhandled exception in CHECK_ARRAY_EQUAL(expected.c_str(), (const char *)fileData)"
 4253      6E646C65 
 4253      64206578 
 4253      63657074 
 4253      696F6E20 
 4254 07a3 00000000 		.align 8
 4254      00
 4255              	.LC48:
 4256 07a8 556E6861 		.string	"Unhandled exception in CHECK_EQUAL(data.length, readbackData.length)"
 4256      6E646C65 
 4256      64206578 
 4256      63657074 
 4256      696F6E20 
 4257 07ed 000000   		.align 8
 4258              	.LC49:
 4259 07f0 556E6861 		.string	"Unhandled exception in CHECK_ARRAY_EQUAL(data.data, readbackData.data)"
 4259      6E646C65 
 4259      64206578 
 4259      63657074 
 4259      696F6E20 
 4260 0837 00       		.align 8
 4261              	.LC50:
 4262 0838 556E6861 		.string	"Unhandled exception in CHECK_EQUAL(mask.length, readbackMask.length)"
 4262      6E646C65 
 4262      64206578 
 4262      63657074 
 4262      696F6E20 
 4263 087d 000000   		.align 8
 4264              	.LC51:
 4265 0880 556E6861 		.string	"Unhandled exception in CHECK_ARRAY_EQUAL(mask.data, readbackMask.data)"
 4265      6E646C65 
 4265      64206578 
 4265      63657074 
 4265      696F6E20 
 4266              		.text
 4267              		.globl	_Z13testRoundTripPKcz
 4269              	_Z13testRoundTripPKcz:
 4270              	.LFB1131:
 185:testHexIO.cpp **** 
 186:testHexIO.cpp **** void testRoundTrip(const char *firstLine, ...) {
 4271              		.loc 4 186 0
 4272              		.cfi_startproc
 4273              		.cfi_personality 0x3,__gxx_personality_v0
 4274              		.cfi_lsda 0x3,.LLSDA1131
 4275 1b3b 55       		pushq	%rbp
 4276              		.cfi_def_cfa_offset 16
 4277              		.cfi_offset 6, -16
 4278 1b3c 4889E5   		movq	%rsp, %rbp
 4279              		.cfi_def_cfa_register 6
 4280 1b3f 53       		pushq	%rbx
 4281 1b40 4881ECD8 		subq	$984, %rsp
 4281      030000
 4282              		.cfi_offset 3, -24
 4283 1b47 4889B548 		movq	%rsi, -184(%rbp)
 4283      FFFFFF
 4284 1b4e 48899550 		movq	%rdx, -176(%rbp)
 4284      FFFFFF
 4285 1b55 48898D58 		movq	%rcx, -168(%rbp)
 4285      FFFFFF
 4286 1b5c 4C898560 		movq	%r8, -160(%rbp)
 4286      FFFFFF
 4287 1b63 4C898D68 		movq	%r9, -152(%rbp)
 4287      FFFFFF
 4288 1b6a 84C0     		testb	%al, %al
 4289 1b6c 7423     		je	.L211
 4290              		.loc 4 186 0
 4291 1b6e 0F298570 		movaps	%xmm0, -144(%rbp)
 4291      FFFFFF
 4292 1b75 0F294D80 		movaps	%xmm1, -128(%rbp)
 4293 1b79 0F295590 		movaps	%xmm2, -112(%rbp)
 4294 1b7d 0F295DA0 		movaps	%xmm3, -96(%rbp)
 4295 1b81 0F2965B0 		movaps	%xmm4, -80(%rbp)
 4296 1b85 0F296DC0 		movaps	%xmm5, -64(%rbp)
 4297 1b89 0F2975D0 		movaps	%xmm6, -48(%rbp)
 4298 1b8d 0F297DE0 		movaps	%xmm7, -32(%rbp)
 4299              	.L211:
 4300 1b91 4889BD28 		movq	%rdi, -984(%rbp)
 4300      FCFFFF
 4301 1b98 64488B04 		movq	%fs:40, %rax
 4301      25280000 
 4301      00
 4302 1ba1 48898538 		movq	%rax, -200(%rbp)
 4302      FFFFFF
 4303 1ba8 31C0     		xorl	%eax, %eax
 4304              	.LBB27:
 187:testHexIO.cpp **** 	const char *const FILENAME = "tmpFile.hex";
 4305              		.loc 4 187 0
 4306 1baa 48C78550 		movq	$.LC43, -944(%rbp)
 4306      FCFFFF00 
 4306      000000
 188:testHexIO.cpp **** 	Buffer data, mask, readbackData, readbackMask;
 189:testHexIO.cpp **** 	BufferStatus status;
 190:testHexIO.cpp **** 	va_list vl;
 191:testHexIO.cpp **** 	const char *line;
 192:testHexIO.cpp **** 	string expected;
 4307              		.loc 4 192 0
 4308 1bb5 488D8540 		leaq	-960(%rbp), %rax
 4308      FCFFFF
 4309 1bbc 4889C7   		movq	%rax, %rdi
 4310              	.LEHB171:
 4311 1bbf E8000000 		call	_ZNSsC1Ev
 4311      00
 4312              	.LEHE171:
 193:testHexIO.cpp **** 	uint8 recordType;
 194:testHexIO.cpp **** 	uint32 seg = 0x00000000;
 4313              		.loc 4 194 0
 4314 1bc4 C78538FC 		movl	$0, -968(%rbp)
 4314      FFFF0000 
 4314      0000
 195:testHexIO.cpp **** 	status = bufInitialise(&data, 1024, 0x00, NULL);
 4315              		.loc 4 195 0
 4316 1bce 488D8580 		leaq	-896(%rbp), %rax
 4316      FCFFFF
 4317 1bd5 B9000000 		movl	$0, %ecx
 4317      00
 4318 1bda BA000000 		movl	$0, %edx
 4318      00
 4319 1bdf BE000400 		movl	$1024, %esi
 4319      00
 4320 1be4 4889C7   		movq	%rax, %rdi
 4321              	.LEHB172:
 4322 1be7 E8000000 		call	bufInitialise
 4322      00
 4323              	.LEHE172:
 4324 1bec 898534FC 		movl	%eax, -972(%rbp)
 4324      FFFF
 4325              	.LEHB173:
 196:testHexIO.cpp **** 	CHECK_EQUAL(BUF_SUCCESS, status);
 4326              		.loc 4 196 0
 4327 1bf2 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 4327      00
 4328              		.loc 4 196 0 is_stmt 0 discriminator 1
 4329 1bf7 488B08   		movq	(%rax), %rcx
 4330 1bfa 488D8500 		leaq	-768(%rbp), %rax
 4330      FDFFFF
 4331 1c01 BAC40000 		movl	$196, %edx
 4331      00
 4332 1c06 4889CE   		movq	%rcx, %rsi
 4333 1c09 4889C7   		movq	%rax, %rdi
 4334 1c0c E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 4334      00
 4335 1c11 C785E0FC 		movl	$0, -800(%rbp)
 4335      FFFF0000 
 4335      0000
 4336 1c1b E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 4336      00
 4337 1c20 488B00   		movq	(%rax), %rax
 4338 1c23 488D8D00 		leaq	-768(%rbp), %rcx
 4338      FDFFFF
 4339 1c2a 488D9534 		leaq	-972(%rbp), %rdx
 4339      FCFFFF
 4340 1c31 488DB5E0 		leaq	-800(%rbp), %rsi
 4340      FCFFFF
 4341 1c38 4889C7   		movq	%rax, %rdi
 4342 1c3b E8000000 		call	_ZN8UnitTest10CheckEqualI12BufferStatusS1_EEvRNS_11TestResultsERKT_RKT0_RKNS_11TestDetailsE
 4342      00
 4343              	.LEHE173:
 4344              	.L219:
 197:testHexIO.cpp **** 	status = bufInitialise(&mask, 1024, 0x00, NULL);
 4345              		.loc 4 197 0 is_stmt 1
 4346 1c40 488D85A0 		leaq	-864(%rbp), %rax
 4346      FCFFFF
 4347 1c47 B9000000 		movl	$0, %ecx
 4347      00
 4348 1c4c BA000000 		movl	$0, %edx
 4348      00
 4349 1c51 BE000400 		movl	$1024, %esi
 4349      00
 4350 1c56 4889C7   		movq	%rax, %rdi
 4351              	.LEHB174:
 4352 1c59 E8000000 		call	bufInitialise
 4352      00
 4353              	.LEHE174:
 4354 1c5e 898534FC 		movl	%eax, -972(%rbp)
 4354      FFFF
 4355              	.LEHB175:
 198:testHexIO.cpp **** 	CHECK_EQUAL(BUF_SUCCESS, status);
 4356              		.loc 4 198 0
 4357 1c64 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 4357      00
 4358              		.loc 4 198 0 is_stmt 0 discriminator 1
 4359 1c69 488B08   		movq	(%rax), %rcx
 4360 1c6c 488D8500 		leaq	-768(%rbp), %rax
 4360      FDFFFF
 4361 1c73 BAC60000 		movl	$198, %edx
 4361      00
 4362 1c78 4889CE   		movq	%rcx, %rsi
 4363 1c7b 4889C7   		movq	%rax, %rdi
 4364 1c7e E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 4364      00
 4365 1c83 C785E0FC 		movl	$0, -800(%rbp)
 4365      FFFF0000 
 4365      0000
 4366 1c8d E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 4366      00
 4367 1c92 488B00   		movq	(%rax), %rax
 4368 1c95 488D8D00 		leaq	-768(%rbp), %rcx
 4368      FDFFFF
 4369 1c9c 488D9534 		leaq	-972(%rbp), %rdx
 4369      FCFFFF
 4370 1ca3 488DB5E0 		leaq	-800(%rbp), %rsi
 4370      FCFFFF
 4371 1caa 4889C7   		movq	%rax, %rdi
 4372 1cad E8000000 		call	_ZN8UnitTest10CheckEqualI12BufferStatusS1_EEvRNS_11TestResultsERKT_RKT0_RKNS_11TestDetailsE
 4372      00
 4373              	.LEHE175:
 4374              	.L222:
 199:testHexIO.cpp **** 	va_start(vl, firstLine);
 4375              		.loc 4 199 0 is_stmt 1
 4376 1cb2 C78568FC 		movl	$8, -920(%rbp)
 4376      FFFF0800 
 4376      0000
 4377 1cbc C7856CFC 		movl	$48, -916(%rbp)
 4377      FFFF3000 
 4377      0000
 4378 1cc6 488D4510 		leaq	16(%rbp), %rax
 4379 1cca 48898570 		movq	%rax, -912(%rbp)
 4379      FCFFFF
 4380 1cd1 488D8540 		leaq	-192(%rbp), %rax
 4380      FFFFFF
 4381 1cd8 48898578 		movq	%rax, -904(%rbp)
 4381      FCFFFF
 200:testHexIO.cpp **** 	line = firstLine;
 4382              		.loc 4 200 0
 4383 1cdf 488B8528 		movq	-984(%rbp), %rax
 4383      FCFFFF
 4384 1ce6 48898548 		movq	%rax, -952(%rbp)
 4384      FCFFFF
 4385              	.L214:
 201:testHexIO.cpp **** 	do {
 202:testHexIO.cpp **** 		status = bufProcessLine(line, 0, &data, &mask, &seg, &recordType, NULL);
 4386              		.loc 4 202 0
 4387 1ced 488DBD33 		leaq	-973(%rbp), %rdi
 4387      FCFFFF
 4388 1cf4 488DB538 		leaq	-968(%rbp), %rsi
 4388      FCFFFF
 4389 1cfb 488D8DA0 		leaq	-864(%rbp), %rcx
 4389      FCFFFF
 4390 1d02 488D9580 		leaq	-896(%rbp), %rdx
 4390      FCFFFF
 4391 1d09 488B8548 		movq	-952(%rbp), %rax
 4391      FCFFFF
 4392 1d10 48C70424 		movq	$0, (%rsp)
 4392      00000000 
 4393 1d18 4989F9   		movq	%rdi, %r9
 4394 1d1b 4989F0   		movq	%rsi, %r8
 4395 1d1e BE000000 		movl	$0, %esi
 4395      00
 4396 1d23 4889C7   		movq	%rax, %rdi
 4397              	.LEHB176:
 4398 1d26 E8000000 		call	bufProcessLine
 4398      00
 4399              	.LEHE176:
 4400 1d2b 898534FC 		movl	%eax, -972(%rbp)
 4400      FFFF
 4401              	.LEHB177:
 203:testHexIO.cpp **** 		CHECK_EQUAL(BUF_SUCCESS, status);
 4402              		.loc 4 203 0
 4403 1d31 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 4403      00
 4404              		.loc 4 203 0 is_stmt 0 discriminator 1
 4405 1d36 488B08   		movq	(%rax), %rcx
 4406 1d39 488D8500 		leaq	-768(%rbp), %rax
 4406      FDFFFF
 4407 1d40 BACB0000 		movl	$203, %edx
 4407      00
 4408 1d45 4889CE   		movq	%rcx, %rsi
 4409 1d48 4889C7   		movq	%rax, %rdi
 4410 1d4b E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 4410      00
 4411 1d50 C785E0FC 		movl	$0, -800(%rbp)
 4411      FFFF0000 
 4411      0000
 4412 1d5a E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 4412      00
 4413 1d5f 488B00   		movq	(%rax), %rax
 4414 1d62 488D8D00 		leaq	-768(%rbp), %rcx
 4414      FDFFFF
 4415 1d69 488D9534 		leaq	-972(%rbp), %rdx
 4415      FCFFFF
 4416 1d70 488DB5E0 		leaq	-800(%rbp), %rsi
 4416      FCFFFF
 4417 1d77 4889C7   		movq	%rax, %rdi
 4418 1d7a E8000000 		call	_ZN8UnitTest10CheckEqualI12BufferStatusS1_EEvRNS_11TestResultsERKT_RKT0_RKNS_11TestDetailsE
 4418      00
 4419              	.LEHE177:
 4420              	.L225:
 204:testHexIO.cpp **** 		expected += line;
 4421              		.loc 4 204 0 is_stmt 1
 4422 1d7f 488B9548 		movq	-952(%rbp), %rdx
 4422      FCFFFF
 4423 1d86 488D8540 		leaq	-960(%rbp), %rax
 4423      FCFFFF
 4424 1d8d 4889D6   		movq	%rdx, %rsi
 4425 1d90 4889C7   		movq	%rax, %rdi
 4426              	.LEHB178:
 4427 1d93 E8000000 		call	_ZNSspLEPKc
 4427      00
 205:testHexIO.cpp **** 		expected += '\n';
 4428              		.loc 4 205 0
 4429 1d98 488D8540 		leaq	-960(%rbp), %rax
 4429      FCFFFF
 4430 1d9f BE0A0000 		movl	$10, %esi
 4430      00
 4431 1da4 4889C7   		movq	%rax, %rdi
 4432 1da7 E8000000 		call	_ZNSspLEc
 4432      00
 206:testHexIO.cpp **** 		line = va_arg(vl, const char *);
 4433              		.loc 4 206 0
 4434 1dac 8B8568FC 		movl	-920(%rbp), %eax
 4434      FFFF
 4435 1db2 83F830   		cmpl	$48, %eax
 4436 1db5 7323     		jnb	.L212
 4437              		.loc 4 206 0 is_stmt 0 discriminator 2
 4438 1db7 488B9578 		movq	-904(%rbp), %rdx
 4438      FCFFFF
 4439 1dbe 8B8568FC 		movl	-920(%rbp), %eax
 4439      FFFF
 4440 1dc4 89C0     		movl	%eax, %eax
 4441 1dc6 4801D0   		addq	%rdx, %rax
 4442 1dc9 8B9568FC 		movl	-920(%rbp), %edx
 4442      FFFF
 4443 1dcf 83C208   		addl	$8, %edx
 4444 1dd2 899568FC 		movl	%edx, -920(%rbp)
 4444      FFFF
 4445 1dd8 EB15     		jmp	.L213
 4446              	.L212:
 4447              		.loc 4 206 0 discriminator 1
 4448 1dda 488B9570 		movq	-912(%rbp), %rdx
 4448      FCFFFF
 4449 1de1 4889D0   		movq	%rdx, %rax
 4450 1de4 4883C208 		addq	$8, %rdx
 4451 1de8 48899570 		movq	%rdx, -912(%rbp)
 4451      FCFFFF
 4452              	.L213:
 4453 1def 488B00   		movq	(%rax), %rax
 4454 1df2 48898548 		movq	%rax, -952(%rbp)
 4454      FCFFFF
 201:testHexIO.cpp **** 		status = bufProcessLine(line, 0, &data, &mask, &seg, &recordType, NULL);
 4455              		.loc 4 201 0 is_stmt 1 discriminator 1
 4456 1df9 4883BD48 		cmpq	$0, -952(%rbp)
 4456      FCFFFF00 
 4457 1e01 0F85E6FE 		jne	.L214
 4457      FFFF
 207:testHexIO.cpp **** 	} while ( line );
 208:testHexIO.cpp **** 	expected += ":00000001FF\n";
 4458              		.loc 4 208 0
 4459 1e07 488D8540 		leaq	-960(%rbp), %rax
 4459      FCFFFF
 4460 1e0e BE000000 		movl	$.LC12, %esi
 4460      00
 4461 1e13 4889C7   		movq	%rax, %rdi
 4462 1e16 E8000000 		call	_ZNSspLEPKc
 4462      00
 209:testHexIO.cpp **** 	va_end(vl);
 210:testHexIO.cpp **** 	status = bufWriteToIntelHexFile(&data, &mask, FILENAME, 16, false, NULL);
 4463              		.loc 4 210 0
 4464 1e1b 488DB5A0 		leaq	-864(%rbp), %rsi
 4464      FCFFFF
 4465 1e22 488D8580 		leaq	-896(%rbp), %rax
 4465      FCFFFF
 4466 1e29 41B90000 		movl	$0, %r9d
 4466      0000
 4467 1e2f 41B80000 		movl	$0, %r8d
 4467      0000
 4468 1e35 B9100000 		movl	$16, %ecx
 4468      00
 4469 1e3a BA000000 		movl	$.LC43, %edx
 4469      00
 4470 1e3f 4889C7   		movq	%rax, %rdi
 4471 1e42 E8000000 		call	bufWriteToIntelHexFile
 4471      00
 4472              	.LEHE178:
 4473 1e47 898534FC 		movl	%eax, -972(%rbp)
 4473      FFFF
 4474              	.LEHB179:
 211:testHexIO.cpp **** 	CHECK_EQUAL(BUF_SUCCESS, status);
 4475              		.loc 4 211 0
 4476 1e4d E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 4476      00
 4477              		.loc 4 211 0 is_stmt 0 discriminator 1
 4478 1e52 488B08   		movq	(%rax), %rcx
 4479 1e55 488D8500 		leaq	-768(%rbp), %rax
 4479      FDFFFF
 4480 1e5c BAD30000 		movl	$211, %edx
 4480      00
 4481 1e61 4889CE   		movq	%rcx, %rsi
 4482 1e64 4889C7   		movq	%rax, %rdi
 4483 1e67 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 4483      00
 4484 1e6c C785E0FC 		movl	$0, -800(%rbp)
 4484      FFFF0000 
 4484      0000
 4485 1e76 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 4485      00
 4486 1e7b 488B00   		movq	(%rax), %rax
 4487 1e7e 488D8D00 		leaq	-768(%rbp), %rcx
 4487      FDFFFF
 4488 1e85 488D9534 		leaq	-972(%rbp), %rdx
 4488      FCFFFF
 4489 1e8c 488DB5E0 		leaq	-800(%rbp), %rsi
 4489      FCFFFF
 4490 1e93 4889C7   		movq	%rax, %rdi
 4491 1e96 E8000000 		call	_ZN8UnitTest10CheckEqualI12BufferStatusS1_EEvRNS_11TestResultsERKT_RKT0_RKNS_11TestDetailsE
 4491      00
 4492              	.LEHE179:
 4493              	.L228:
 212:testHexIO.cpp **** 
 213:testHexIO.cpp **** 	ifstream file;
 4494              		.loc 4 213 0 is_stmt 1
 4495 1e9b 488D8530 		leaq	-720(%rbp), %rax
 4495      FDFFFF
 4496 1ea2 4889C7   		movq	%rax, %rdi
 4497              	.LEHB180:
 4498 1ea5 E8000000 		call	_ZNSt14basic_ifstreamIcSt11char_traitsIcEEC1Ev
 4498      00
 4499              	.LEHE180:
 214:testHexIO.cpp **** 	streamoff length;
 215:testHexIO.cpp **** 	file.open(FILENAME, ios::in|ios::ate);
 4500              		.loc 4 215 0
 4501 1eaa BE020000 		movl	$2, %esi
 4501      00
 4502 1eaf BF080000 		movl	$8, %edi
 4502      00
 4503 1eb4 E8000000 		call	_ZStorSt13_Ios_OpenmodeS_
 4503      00
 4504 1eb9 89C2     		movl	%eax, %edx
 4505 1ebb 488D8530 		leaq	-720(%rbp), %rax
 4505      FDFFFF
 4506 1ec2 BE000000 		movl	$.LC43, %esi
 4506      00
 4507 1ec7 4889C7   		movq	%rax, %rdi
 4508              	.LEHB181:
 4509 1eca E8000000 		call	_ZNSt14basic_ifstreamIcSt11char_traitsIcEE4openEPKcSt13_Ios_Openmode
 4509      00
 4510              	.LEHE181:
 216:testHexIO.cpp **** 	CHECK(file.is_open());
 4511              		.loc 4 216 0
 4512 1ecf 488D8530 		leaq	-720(%rbp), %rax
 4512      FDFFFF
 4513 1ed6 4889C7   		movq	%rax, %rdi
 4514              	.LEHB182:
 4515 1ed9 E8000000 		call	_ZNSt14basic_ifstreamIcSt11char_traitsIcEE7is_openEv
 4515      00
 4516 1ede 0FB6C0   		movzbl	%al, %eax
 4517 1ee1 89C7     		movl	%eax, %edi
 4518 1ee3 E8000000 		call	_ZN8UnitTest5CheckIbEEbT_
 4518      00
 4519 1ee8 83F001   		xorl	$1, %eax
 4520 1eeb 84C0     		testb	%al, %al
 4521 1eed 743E     		je	.L215
 4522              		.loc 4 216 0 is_stmt 0 discriminator 1
 4523 1eef E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 4523      00
 4524 1ef4 488B08   		movq	(%rax), %rcx
 4525 1ef7 488D8500 		leaq	-768(%rbp), %rax
 4525      FDFFFF
 4526 1efe BAD80000 		movl	$216, %edx
 4526      00
 4527 1f03 4889CE   		movq	%rcx, %rsi
 4528 1f06 4889C7   		movq	%rax, %rdi
 4529 1f09 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 4529      00
 4530 1f0e E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 4530      00
 4531 1f13 488B00   		movq	(%rax), %rax
 4532 1f16 488D8D00 		leaq	-768(%rbp), %rcx
 4532      FDFFFF
 4533 1f1d BA000000 		movl	$.LC44, %edx
 4533      00
 4534 1f22 4889CE   		movq	%rcx, %rsi
 4535 1f25 4889C7   		movq	%rax, %rdi
 4536 1f28 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 4536      00
 4537              	.LEHE182:
 4538              	.L215:
 217:testHexIO.cpp **** 	length = file.tellg();
 4539              		.loc 4 217 0 is_stmt 1
 4540 1f2d 488D8530 		leaq	-720(%rbp), %rax
 4540      FDFFFF
 4541 1f34 4889C7   		movq	%rax, %rdi
 4542              	.LEHB183:
 4543 1f37 E8000000 		call	_ZNSi5tellgEv
 4543      00
 4544              	.LEHE183:
 4545 1f3c 48898520 		movq	%rax, -736(%rbp)
 4545      FDFFFF
 4546 1f43 48899528 		movq	%rdx, -728(%rbp)
 4546      FDFFFF
 4547 1f4a 488D8520 		leaq	-736(%rbp), %rax
 4547      FDFFFF
 4548 1f51 4889C7   		movq	%rax, %rdi
 4549 1f54 E8000000 		call	_ZNKSt4fposI11__mbstate_tEcvlEv
 4549      00
 4550 1f59 48898558 		movq	%rax, -936(%rbp)
 4550      FCFFFF
 4551              	.LEHB184:
 218:testHexIO.cpp **** 	CHECK_EQUAL(expected.size(), (unsigned int)length);
 4552              		.loc 4 218 0
 4553 1f60 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 4553      00
 4554              		.loc 4 218 0 is_stmt 0 discriminator 1
 4555 1f65 488B08   		movq	(%rax), %rcx
 4556 1f68 488D8500 		leaq	-768(%rbp), %rax
 4556      FDFFFF
 4557 1f6f BADA0000 		movl	$218, %edx
 4557      00
 4558 1f74 4889CE   		movq	%rcx, %rsi
 4559 1f77 4889C7   		movq	%rax, %rdi
 4560 1f7a E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 4560      00
 4561 1f7f 488B8558 		movq	-936(%rbp), %rax
 4561      FCFFFF
 4562 1f86 8985C0FC 		movl	%eax, -832(%rbp)
 4562      FFFF
 4563 1f8c 488D8540 		leaq	-960(%rbp), %rax
 4563      FCFFFF
 4564 1f93 4889C7   		movq	%rax, %rdi
 4565 1f96 E8000000 		call	_ZNKSs4sizeEv
 4565      00
 4566 1f9b 488985E0 		movq	%rax, -800(%rbp)
 4566      FCFFFF
 4567 1fa2 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 4567      00
 4568 1fa7 488B00   		movq	(%rax), %rax
 4569 1faa 488D8D00 		leaq	-768(%rbp), %rcx
 4569      FDFFFF
 4570 1fb1 488D95C0 		leaq	-832(%rbp), %rdx
 4570      FCFFFF
 4571 1fb8 488DB5E0 		leaq	-800(%rbp), %rsi
 4571      FCFFFF
 4572 1fbf 4889C7   		movq	%rax, %rdi
 4573 1fc2 E8000000 		call	_ZN8UnitTest10CheckEqualImjEEvRNS_11TestResultsERKT_RKT0_RKNS_11TestDetailsE
 4573      00
 4574              	.LEHE184:
 4575              	.L234:
 219:testHexIO.cpp **** 	char *fileData = new char[(unsigned int)length];
 4576              		.loc 4 219 0 is_stmt 1
 4577 1fc7 488B8558 		movq	-936(%rbp), %rax
 4577      FCFFFF
 4578 1fce 89C0     		movl	%eax, %eax
 4579 1fd0 4889C7   		movq	%rax, %rdi
 4580              	.LEHB185:
 4581 1fd3 E8000000 		call	_Znam
 4581      00
 4582 1fd8 48898560 		movq	%rax, -928(%rbp)
 4582      FCFFFF
 220:testHexIO.cpp **** 	file.seekg(0, ios::beg);
 4583              		.loc 4 220 0
 4584 1fdf 488D8530 		leaq	-720(%rbp), %rax
 4584      FDFFFF
 4585 1fe6 BA000000 		movl	$0, %edx
 4585      00
 4586 1feb BE000000 		movl	$0, %esi
 4586      00
 4587 1ff0 4889C7   		movq	%rax, %rdi
 4588 1ff3 E8000000 		call	_ZNSi5seekgElSt12_Ios_Seekdir
 4588      00
 221:testHexIO.cpp **** 	file.read(fileData, (streamsize)length);
 4589              		.loc 4 221 0
 4590 1ff8 488B9558 		movq	-936(%rbp), %rdx
 4590      FCFFFF
 4591 1fff 488B8D60 		movq	-928(%rbp), %rcx
 4591      FCFFFF
 4592 2006 488D8530 		leaq	-720(%rbp), %rax
 4592      FDFFFF
 4593 200d 4889CE   		movq	%rcx, %rsi
 4594 2010 4889C7   		movq	%rax, %rdi
 4595 2013 E8000000 		call	_ZNSi4readEPcl
 4595      00
 222:testHexIO.cpp **** 	file.close();
 4596              		.loc 4 222 0
 4597 2018 488D8530 		leaq	-720(%rbp), %rax
 4597      FDFFFF
 4598 201f 4889C7   		movq	%rax, %rdi
 4599 2022 E8000000 		call	_ZNSt14basic_ifstreamIcSt11char_traitsIcEE5closeEv
 4599      00
 4600              	.LEHE185:
 4601              	.LEHB186:
 223:testHexIO.cpp **** 	CHECK_ARRAY_EQUAL(expected.c_str(), (const char *)fileData, (int)length);
 4602              		.loc 4 223 0
 4603 2027 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 4603      00
 4604 202c 488B08   		movq	(%rax), %rcx
 4605 202f 488D8500 		leaq	-768(%rbp), %rax
 4605      FDFFFF
 4606 2036 BADF0000 		movl	$223, %edx
 4606      00
 4607 203b 4889CE   		movq	%rcx, %rsi
 4608 203e 4889C7   		movq	%rax, %rdi
 4609 2041 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 4609      00
 4610              		.loc 4 223 0 is_stmt 0 discriminator 1
 4611 2046 488B8558 		movq	-936(%rbp), %rax
 4611      FCFFFF
 4612 204d 89C3     		movl	%eax, %ebx
 4613 204f 488B8560 		movq	-928(%rbp), %rax
 4613      FCFFFF
 4614 2056 488985E0 		movq	%rax, -800(%rbp)
 4614      FCFFFF
 4615 205d 488D8540 		leaq	-960(%rbp), %rax
 4615      FCFFFF
 4616 2064 4889C7   		movq	%rax, %rdi
 4617 2067 E8000000 		call	_ZNKSs5c_strEv
 4617      00
 4618 206c 488985C0 		movq	%rax, -832(%rbp)
 4618      FCFFFF
 4619 2073 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 4619      00
 4620 2078 488B00   		movq	(%rax), %rax
 4621 207b 488D8D00 		leaq	-768(%rbp), %rcx
 4621      FDFFFF
 4622 2082 488D95E0 		leaq	-800(%rbp), %rdx
 4622      FCFFFF
 4623 2089 488DB5C0 		leaq	-832(%rbp), %rsi
 4623      FCFFFF
 4624 2090 4989C8   		movq	%rcx, %r8
 4625 2093 89D9     		movl	%ebx, %ecx
 4626 2095 4889C7   		movq	%rax, %rdi
 4627 2098 E8000000 		call	_ZN8UnitTest15CheckArrayEqualIPKcS2_EEvRNS_11TestResultsERKT_RKT0_iRKNS_11TestDetailsE
 4627      00
 4628              	.LEHE186:
 4629              	.L237:
 224:testHexIO.cpp **** 
 225:testHexIO.cpp **** 	status = bufInitialise(&readbackData, 1024, 0x00, NULL);
 4630              		.loc 4 225 0 is_stmt 1
 4631 209d 488D85C0 		leaq	-832(%rbp), %rax
 4631      FCFFFF
 4632 20a4 B9000000 		movl	$0, %ecx
 4632      00
 4633 20a9 BA000000 		movl	$0, %edx
 4633      00
 4634 20ae BE000400 		movl	$1024, %esi
 4634      00
 4635 20b3 4889C7   		movq	%rax, %rdi
 4636              	.LEHB187:
 4637 20b6 E8000000 		call	bufInitialise
 4637      00
 4638              	.LEHE187:
 4639 20bb 898534FC 		movl	%eax, -972(%rbp)
 4639      FFFF
 4640              	.LEHB188:
 226:testHexIO.cpp **** 	CHECK_EQUAL(BUF_SUCCESS, status);
 4641              		.loc 4 226 0
 4642 20c1 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 4642      00
 4643              		.loc 4 226 0 is_stmt 0 discriminator 1
 4644 20c6 488B08   		movq	(%rax), %rcx
 4645 20c9 488D8500 		leaq	-768(%rbp), %rax
 4645      FDFFFF
 4646 20d0 BAE20000 		movl	$226, %edx
 4646      00
 4647 20d5 4889CE   		movq	%rcx, %rsi
 4648 20d8 4889C7   		movq	%rax, %rdi
 4649 20db E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 4649      00
 4650 20e0 C785E0FC 		movl	$0, -800(%rbp)
 4650      FFFF0000 
 4650      0000
 4651 20ea E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 4651      00
 4652 20ef 488B00   		movq	(%rax), %rax
 4653 20f2 488D8D00 		leaq	-768(%rbp), %rcx
 4653      FDFFFF
 4654 20f9 488D9534 		leaq	-972(%rbp), %rdx
 4654      FCFFFF
 4655 2100 488DB5E0 		leaq	-800(%rbp), %rsi
 4655      FCFFFF
 4656 2107 4889C7   		movq	%rax, %rdi
 4657 210a E8000000 		call	_ZN8UnitTest10CheckEqualI12BufferStatusS1_EEvRNS_11TestResultsERKT_RKT0_RKNS_11TestDetailsE
 4657      00
 4658              	.LEHE188:
 4659              	.L240:
 227:testHexIO.cpp **** 	status = bufInitialise(&readbackMask, 1024, 0x00, NULL);
 4660              		.loc 4 227 0 is_stmt 1
 4661 210f 488D85E0 		leaq	-800(%rbp), %rax
 4661      FCFFFF
 4662 2116 B9000000 		movl	$0, %ecx
 4662      00
 4663 211b BA000000 		movl	$0, %edx
 4663      00
 4664 2120 BE000400 		movl	$1024, %esi
 4664      00
 4665 2125 4889C7   		movq	%rax, %rdi
 4666              	.LEHB189:
 4667 2128 E8000000 		call	bufInitialise
 4667      00
 4668              	.LEHE189:
 4669 212d 898534FC 		movl	%eax, -972(%rbp)
 4669      FFFF
 4670              	.LEHB190:
 228:testHexIO.cpp **** 	CHECK_EQUAL(BUF_SUCCESS, status);
 4671              		.loc 4 228 0
 4672 2133 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 4672      00
 4673              		.loc 4 228 0 is_stmt 0 discriminator 1
 4674 2138 488B08   		movq	(%rax), %rcx
 4675 213b 488D8500 		leaq	-768(%rbp), %rax
 4675      FDFFFF
 4676 2142 BAE40000 		movl	$228, %edx
 4676      00
 4677 2147 4889CE   		movq	%rcx, %rsi
 4678 214a 4889C7   		movq	%rax, %rdi
 4679 214d E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 4679      00
 4680 2152 C7853CFC 		movl	$0, -964(%rbp)
 4680      FFFF0000 
 4680      0000
 4681 215c E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 4681      00
 4682 2161 488B00   		movq	(%rax), %rax
 4683 2164 488D8D00 		leaq	-768(%rbp), %rcx
 4683      FDFFFF
 4684 216b 488D9534 		leaq	-972(%rbp), %rdx
 4684      FCFFFF
 4685 2172 488DB53C 		leaq	-964(%rbp), %rsi
 4685      FCFFFF
 4686 2179 4889C7   		movq	%rax, %rdi
 4687 217c E8000000 		call	_ZN8UnitTest10CheckEqualI12BufferStatusS1_EEvRNS_11TestResultsERKT_RKT0_RKNS_11TestDetailsE
 4687      00
 4688              	.LEHE190:
 4689              	.L243:
 229:testHexIO.cpp **** 	status = bufReadFromIntelHexFile(&readbackData, &readbackMask, FILENAME, NULL);
 4690              		.loc 4 229 0 is_stmt 1
 4691 2181 488DB5E0 		leaq	-800(%rbp), %rsi
 4691      FCFFFF
 4692 2188 488D85C0 		leaq	-832(%rbp), %rax
 4692      FCFFFF
 4693 218f B9000000 		movl	$0, %ecx
 4693      00
 4694 2194 BA000000 		movl	$.LC43, %edx
 4694      00
 4695 2199 4889C7   		movq	%rax, %rdi
 4696              	.LEHB191:
 4697 219c E8000000 		call	bufReadFromIntelHexFile
 4697      00
 4698              	.LEHE191:
 4699 21a1 898534FC 		movl	%eax, -972(%rbp)
 4699      FFFF
 4700              	.LEHB192:
 230:testHexIO.cpp **** 	CHECK_EQUAL(BUF_SUCCESS, status);
 4701              		.loc 4 230 0
 4702 21a7 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 4702      00
 4703              		.loc 4 230 0 is_stmt 0 discriminator 1
 4704 21ac 488B08   		movq	(%rax), %rcx
 4705 21af 488D8500 		leaq	-768(%rbp), %rax
 4705      FDFFFF
 4706 21b6 BAE60000 		movl	$230, %edx
 4706      00
 4707 21bb 4889CE   		movq	%rcx, %rsi
 4708 21be 4889C7   		movq	%rax, %rdi
 4709 21c1 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 4709      00
 4710 21c6 C7853CFC 		movl	$0, -964(%rbp)
 4710      FFFF0000 
 4710      0000
 4711 21d0 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 4711      00
 4712 21d5 488B00   		movq	(%rax), %rax
 4713 21d8 488D8D00 		leaq	-768(%rbp), %rcx
 4713      FDFFFF
 4714 21df 488D9534 		leaq	-972(%rbp), %rdx
 4714      FCFFFF
 4715 21e6 488DB53C 		leaq	-964(%rbp), %rsi
 4715      FCFFFF
 4716 21ed 4889C7   		movq	%rax, %rdi
 4717 21f0 E8000000 		call	_ZN8UnitTest10CheckEqualI12BufferStatusS1_EEvRNS_11TestResultsERKT_RKT0_RKNS_11TestDetailsE
 4717      00
 4718              	.LEHE192:
 4719              	.L246:
 4720              	.LEHB193:
 231:testHexIO.cpp **** 	CHECK_EQUAL(data.length, readbackData.length);
 4721              		.loc 4 231 0 is_stmt 1
 4722 21f5 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 4722      00
 4723 21fa 488B08   		movq	(%rax), %rcx
 4724 21fd 488D8500 		leaq	-768(%rbp), %rax
 4724      FDFFFF
 4725 2204 BAE70000 		movl	$231, %edx
 4725      00
 4726 2209 4889CE   		movq	%rcx, %rsi
 4727 220c 4889C7   		movq	%rax, %rdi
 4728 220f E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 4728      00
 4729              		.loc 4 231 0 is_stmt 0 discriminator 1
 4730 2214 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 4730      00
 4731 2219 488B00   		movq	(%rax), %rax
 4732 221c 488D9500 		leaq	-768(%rbp), %rdx
 4732      FDFFFF
 4733 2223 488D8DC0 		leaq	-832(%rbp), %rcx
 4733      FCFFFF
 4734 222a 488D7908 		leaq	8(%rcx), %rdi
 4735 222e 488D8D80 		leaq	-896(%rbp), %rcx
 4735      FCFFFF
 4736 2235 488D7108 		leaq	8(%rcx), %rsi
 4737 2239 4889D1   		movq	%rdx, %rcx
 4738 223c 4889FA   		movq	%rdi, %rdx
 4739 223f 4889C7   		movq	%rax, %rdi
 4740 2242 E8000000 		call	_ZN8UnitTest10CheckEqualImmEEvRNS_11TestResultsERKT_RKT0_RKNS_11TestDetailsE
 4740      00
 4741              	.LEHE193:
 4742              	.L249:
 4743              	.LEHB194:
 232:testHexIO.cpp **** 	CHECK_ARRAY_EQUAL(data.data, readbackData.data, (int)data.length);
 4744              		.loc 4 232 0 is_stmt 1
 4745 2247 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 4745      00
 4746 224c 488B08   		movq	(%rax), %rcx
 4747 224f 488D8500 		leaq	-768(%rbp), %rax
 4747      FDFFFF
 4748 2256 BAE80000 		movl	$232, %edx
 4748      00
 4749 225b 4889CE   		movq	%rcx, %rsi
 4750 225e 4889C7   		movq	%rax, %rdi
 4751 2261 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 4751      00
 4752              		.loc 4 232 0 is_stmt 0 discriminator 1
 4753 2266 488B8588 		movq	-888(%rbp), %rax
 4753      FCFFFF
 4754 226d 89C3     		movl	%eax, %ebx
 4755 226f E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 4755      00
 4756 2274 488B00   		movq	(%rax), %rax
 4757 2277 488D8D00 		leaq	-768(%rbp), %rcx
 4757      FDFFFF
 4758 227e 488D95C0 		leaq	-832(%rbp), %rdx
 4758      FCFFFF
 4759 2285 488DB580 		leaq	-896(%rbp), %rsi
 4759      FCFFFF
 4760 228c 4989C8   		movq	%rcx, %r8
 4761 228f 89D9     		movl	%ebx, %ecx
 4762 2291 4889C7   		movq	%rax, %rdi
 4763 2294 E8000000 		call	_ZN8UnitTest15CheckArrayEqualIPhS1_EEvRNS_11TestResultsERKT_RKT0_iRKNS_11TestDetailsE
 4763      00
 4764              	.LEHE194:
 4765              	.L252:
 4766              	.LEHB195:
 233:testHexIO.cpp **** 	CHECK_EQUAL(mask.length, readbackMask.length);
 4767              		.loc 4 233 0 is_stmt 1
 4768 2299 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 4768      00
 4769 229e 488B08   		movq	(%rax), %rcx
 4770 22a1 488D8500 		leaq	-768(%rbp), %rax
 4770      FDFFFF
 4771 22a8 BAE90000 		movl	$233, %edx
 4771      00
 4772 22ad 4889CE   		movq	%rcx, %rsi
 4773 22b0 4889C7   		movq	%rax, %rdi
 4774 22b3 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 4774      00
 4775              		.loc 4 233 0 is_stmt 0 discriminator 1
 4776 22b8 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 4776      00
 4777 22bd 488B00   		movq	(%rax), %rax
 4778 22c0 488D9500 		leaq	-768(%rbp), %rdx
 4778      FDFFFF
 4779 22c7 488D8DE0 		leaq	-800(%rbp), %rcx
 4779      FCFFFF
 4780 22ce 488D7908 		leaq	8(%rcx), %rdi
 4781 22d2 488D8DA0 		leaq	-864(%rbp), %rcx
 4781      FCFFFF
 4782 22d9 488D7108 		leaq	8(%rcx), %rsi
 4783 22dd 4889D1   		movq	%rdx, %rcx
 4784 22e0 4889FA   		movq	%rdi, %rdx
 4785 22e3 4889C7   		movq	%rax, %rdi
 4786 22e6 E8000000 		call	_ZN8UnitTest10CheckEqualImmEEvRNS_11TestResultsERKT_RKT0_RKNS_11TestDetailsE
 4786      00
 4787              	.LEHE195:
 4788              	.L255:
 4789              	.LEHB196:
 234:testHexIO.cpp **** 	CHECK_ARRAY_EQUAL(mask.data, readbackMask.data, (int)mask.length);
 4790              		.loc 4 234 0 is_stmt 1
 4791 22eb E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 4791      00
 4792 22f0 488B08   		movq	(%rax), %rcx
 4793 22f3 488D8500 		leaq	-768(%rbp), %rax
 4793      FDFFFF
 4794 22fa BAEA0000 		movl	$234, %edx
 4794      00
 4795 22ff 4889CE   		movq	%rcx, %rsi
 4796 2302 4889C7   		movq	%rax, %rdi
 4797 2305 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 4797      00
 4798              		.loc 4 234 0 is_stmt 0 discriminator 1
 4799 230a 488B85A8 		movq	-856(%rbp), %rax
 4799      FCFFFF
 4800 2311 89C3     		movl	%eax, %ebx
 4801 2313 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 4801      00
 4802 2318 488B00   		movq	(%rax), %rax
 4803 231b 488D8D00 		leaq	-768(%rbp), %rcx
 4803      FDFFFF
 4804 2322 488D95E0 		leaq	-800(%rbp), %rdx
 4804      FCFFFF
 4805 2329 488DB5A0 		leaq	-864(%rbp), %rsi
 4805      FCFFFF
 4806 2330 4989C8   		movq	%rcx, %r8
 4807 2333 89D9     		movl	%ebx, %ecx
 4808 2335 4889C7   		movq	%rax, %rdi
 4809 2338 E8000000 		call	_ZN8UnitTest15CheckArrayEqualIPhS1_EEvRNS_11TestResultsERKT_RKT0_iRKNS_11TestDetailsE
 4809      00
 4810              	.LEHE196:
 4811              	.L258:
 235:testHexIO.cpp **** 	
 236:testHexIO.cpp **** 	bufDestroy(&readbackMask);
 4812              		.loc 4 236 0 is_stmt 1
 4813 233d 488D85E0 		leaq	-800(%rbp), %rax
 4813      FCFFFF
 4814 2344 4889C7   		movq	%rax, %rdi
 4815              	.LEHB197:
 4816 2347 E8000000 		call	bufDestroy
 4816      00
 237:testHexIO.cpp **** 	bufDestroy(&readbackData);
 4817              		.loc 4 237 0
 4818 234c 488D85C0 		leaq	-832(%rbp), %rax
 4818      FCFFFF
 4819 2353 4889C7   		movq	%rax, %rdi
 4820 2356 E8000000 		call	bufDestroy
 4820      00
 238:testHexIO.cpp **** 	bufDestroy(&mask);
 4821              		.loc 4 238 0
 4822 235b 488D85A0 		leaq	-864(%rbp), %rax
 4822      FCFFFF
 4823 2362 4889C7   		movq	%rax, %rdi
 4824 2365 E8000000 		call	bufDestroy
 4824      00
 239:testHexIO.cpp **** 	bufDestroy(&data);
 4825              		.loc 4 239 0
 4826 236a 488D8580 		leaq	-896(%rbp), %rax
 4826      FCFFFF
 4827 2371 4889C7   		movq	%rax, %rdi
 4828 2374 E8000000 		call	bufDestroy
 4828      00
 4829              	.LEHE197:
 213:testHexIO.cpp **** 	streamoff length;
 4830              		.loc 4 213 0
 4831 2379 488D8530 		leaq	-720(%rbp), %rax
 4831      FDFFFF
 4832 2380 4889C7   		movq	%rax, %rdi
 4833              	.LEHB198:
 4834 2383 E8000000 		call	_ZNSt14basic_ifstreamIcSt11char_traitsIcEED1Ev
 4834      00
 4835              	.LEHE198:
 4836              		.loc 4 239 0
 4837 2388 488D8540 		leaq	-960(%rbp), %rax
 4837      FCFFFF
 4838 238f 4889C7   		movq	%rax, %rdi
 4839              	.LEHB199:
 4840 2392 E8000000 		call	_ZNSsD1Ev
 4840      00
 4841              	.LEHE199:
 4842              	.LBE27:
 240:testHexIO.cpp **** }
 4843              		.loc 4 240 0
 4844 2397 488B8538 		movq	-200(%rbp), %rax
 4844      FFFFFF
 4845 239e 64483304 		xorq	%fs:40, %rax
 4845      25280000 
 4845      00
 4846 23a7 0F844E05 		je	.L259
 4846      0000
 4847 23ad E9440500 		jmp	.L290
 4847      00
 4848              	.L262:
 4849 23b2 4889C3   		movq	%rax, %rbx
 4850              	.LBB28:
 196:testHexIO.cpp **** 	status = bufInitialise(&mask, 1024, 0x00, NULL);
 4851              		.loc 4 196 0
 4852 23b5 E8000000 		call	__cxa_end_catch
 4852      00
 4853 23ba E91D0500 		jmp	.L217
 4853      00
 4854              	.L261:
 4855 23bf 4889C7   		movq	%rax, %rdi
 4856 23c2 E8000000 		call	__cxa_begin_catch
 4856      00
 4857              	.LEHB200:
 4858 23c7 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 4858      00
 4859 23cc 488B08   		movq	(%rax), %rcx
 4860 23cf 488D8500 		leaq	-768(%rbp), %rax
 4860      FDFFFF
 4861 23d6 BAC40000 		movl	$196, %edx
 4861      00
 4862 23db 4889CE   		movq	%rcx, %rsi
 4863 23de 4889C7   		movq	%rax, %rdi
 4864 23e1 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 4864      00
 196:testHexIO.cpp **** 	status = bufInitialise(&mask, 1024, 0x00, NULL);
 4865              		.loc 4 196 0 is_stmt 0 discriminator 1
 4866 23e6 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 4866      00
 4867 23eb 488B00   		movq	(%rax), %rax
 4868 23ee 488D8D00 		leaq	-768(%rbp), %rcx
 4868      FDFFFF
 4869 23f5 BA000000 		movl	$.LC4, %edx
 4869      00
 4870 23fa 4889CE   		movq	%rcx, %rsi
 4871 23fd 4889C7   		movq	%rax, %rdi
 4872 2400 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 4872      00
 4873              	.LEHE200:
 4874              	.LEHB201:
 4875 2405 E8000000 		call	__cxa_end_catch
 4875      00
 4876              	.LEHE201:
 196:testHexIO.cpp **** 	status = bufInitialise(&mask, 1024, 0x00, NULL);
 4877              		.loc 4 196 0
 4878 240a E931F8FF 		jmp	.L219
 4878      FF
 4879              	.L264:
 4880 240f 4889C3   		movq	%rax, %rbx
 198:testHexIO.cpp **** 	va_start(vl, firstLine);
 4881              		.loc 4 198 0 is_stmt 1
 4882 2412 E8000000 		call	__cxa_end_catch
 4882      00
 4883 2417 E9C00400 		jmp	.L217
 4883      00
 4884              	.L263:
 4885 241c 4889C7   		movq	%rax, %rdi
 4886 241f E8000000 		call	__cxa_begin_catch
 4886      00
 4887              	.LEHB202:
 4888 2424 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 4888      00
 4889 2429 488B08   		movq	(%rax), %rcx
 4890 242c 488D8500 		leaq	-768(%rbp), %rax
 4890      FDFFFF
 4891 2433 BAC60000 		movl	$198, %edx
 4891      00
 4892 2438 4889CE   		movq	%rcx, %rsi
 4893 243b 4889C7   		movq	%rax, %rdi
 4894 243e E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 4894      00
 198:testHexIO.cpp **** 	va_start(vl, firstLine);
 4895              		.loc 4 198 0 is_stmt 0 discriminator 1
 4896 2443 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 4896      00
 4897 2448 488B00   		movq	(%rax), %rax
 4898 244b 488D8D00 		leaq	-768(%rbp), %rcx
 4898      FDFFFF
 4899 2452 BA000000 		movl	$.LC4, %edx
 4899      00
 4900 2457 4889CE   		movq	%rcx, %rsi
 4901 245a 4889C7   		movq	%rax, %rdi
 4902 245d E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 4902      00
 4903              	.LEHE202:
 4904              	.LEHB203:
 4905 2462 E8000000 		call	__cxa_end_catch
 4905      00
 4906              	.LEHE203:
 198:testHexIO.cpp **** 	va_start(vl, firstLine);
 4907              		.loc 4 198 0
 4908 2467 E946F8FF 		jmp	.L222
 4908      FF
 4909              	.L266:
 4910 246c 4889C3   		movq	%rax, %rbx
 203:testHexIO.cpp **** 		expected += line;
 4911              		.loc 4 203 0 is_stmt 1
 4912 246f E8000000 		call	__cxa_end_catch
 4912      00
 4913 2474 E9630400 		jmp	.L217
 4913      00
 4914              	.L265:
 4915 2479 4889C7   		movq	%rax, %rdi
 4916 247c E8000000 		call	__cxa_begin_catch
 4916      00
 4917              	.LEHB204:
 4918 2481 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 4918      00
 4919 2486 488B08   		movq	(%rax), %rcx
 4920 2489 488D8500 		leaq	-768(%rbp), %rax
 4920      FDFFFF
 4921 2490 BACB0000 		movl	$203, %edx
 4921      00
 4922 2495 4889CE   		movq	%rcx, %rsi
 4923 2498 4889C7   		movq	%rax, %rdi
 4924 249b E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 4924      00
 203:testHexIO.cpp **** 		expected += line;
 4925              		.loc 4 203 0 is_stmt 0 discriminator 1
 4926 24a0 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 4926      00
 4927 24a5 488B00   		movq	(%rax), %rax
 4928 24a8 488D8D00 		leaq	-768(%rbp), %rcx
 4928      FDFFFF
 4929 24af BA000000 		movl	$.LC4, %edx
 4929      00
 4930 24b4 4889CE   		movq	%rcx, %rsi
 4931 24b7 4889C7   		movq	%rax, %rdi
 4932 24ba E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 4932      00
 4933              	.LEHE204:
 4934              	.LEHB205:
 4935 24bf E8000000 		call	__cxa_end_catch
 4935      00
 4936              	.LEHE205:
 203:testHexIO.cpp **** 		expected += line;
 4937              		.loc 4 203 0
 4938 24c4 E9B6F8FF 		jmp	.L225
 4938      FF
 4939              	.L268:
 4940 24c9 4889C3   		movq	%rax, %rbx
 211:testHexIO.cpp **** 
 4941              		.loc 4 211 0 is_stmt 1
 4942 24cc E8000000 		call	__cxa_end_catch
 4942      00
 4943 24d1 E9060400 		jmp	.L217
 4943      00
 4944              	.L267:
 4945 24d6 4889C7   		movq	%rax, %rdi
 4946 24d9 E8000000 		call	__cxa_begin_catch
 4946      00
 4947              	.LEHB206:
 4948 24de E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 4948      00
 4949 24e3 488B08   		movq	(%rax), %rcx
 4950 24e6 488D8500 		leaq	-768(%rbp), %rax
 4950      FDFFFF
 4951 24ed BAD30000 		movl	$211, %edx
 4951      00
 4952 24f2 4889CE   		movq	%rcx, %rsi
 4953 24f5 4889C7   		movq	%rax, %rdi
 4954 24f8 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 4954      00
 211:testHexIO.cpp **** 
 4955              		.loc 4 211 0 is_stmt 0 discriminator 1
 4956 24fd E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 4956      00
 4957 2502 488B00   		movq	(%rax), %rax
 4958 2505 488D8D00 		leaq	-768(%rbp), %rcx
 4958      FDFFFF
 4959 250c BA000000 		movl	$.LC4, %edx
 4959      00
 4960 2511 4889CE   		movq	%rcx, %rsi
 4961 2514 4889C7   		movq	%rax, %rdi
 4962 2517 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 4962      00
 4963              	.LEHE206:
 4964              	.LEHB207:
 4965 251c E8000000 		call	__cxa_end_catch
 4965      00
 4966              	.LEHE207:
 211:testHexIO.cpp **** 
 4967              		.loc 4 211 0
 4968 2521 E975F9FF 		jmp	.L228
 4968      FF
 4969              	.L271:
 4970 2526 4889C3   		movq	%rax, %rbx
 216:testHexIO.cpp **** 	length = file.tellg();
 4971              		.loc 4 216 0 is_stmt 1
 4972 2529 E8000000 		call	__cxa_end_catch
 4972      00
 4973 252e E9950300 		jmp	.L230
 4973      00
 4974              	.L270:
 4975 2533 4889C7   		movq	%rax, %rdi
 4976 2536 E8000000 		call	__cxa_begin_catch
 4976      00
 4977              	.LEHB208:
 4978 253b E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 4978      00
 4979 2540 488B08   		movq	(%rax), %rcx
 4980 2543 488D8500 		leaq	-768(%rbp), %rax
 4980      FDFFFF
 4981 254a BAD80000 		movl	$216, %edx
 4981      00
 4982 254f 4889CE   		movq	%rcx, %rsi
 4983 2552 4889C7   		movq	%rax, %rdi
 4984 2555 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 4984      00
 216:testHexIO.cpp **** 	length = file.tellg();
 4985              		.loc 4 216 0 is_stmt 0 discriminator 1
 4986 255a E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 4986      00
 4987 255f 488B00   		movq	(%rax), %rax
 4988 2562 488D8D00 		leaq	-768(%rbp), %rcx
 4988      FDFFFF
 4989 2569 BA000000 		movl	$.LC45, %edx
 4989      00
 4990 256e 4889CE   		movq	%rcx, %rsi
 4991 2571 4889C7   		movq	%rax, %rdi
 4992 2574 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 4992      00
 4993              	.LEHE208:
 4994              	.LEHB209:
 4995 2579 E8000000 		call	__cxa_end_catch
 4995      00
 4996              	.LEHE209:
 216:testHexIO.cpp **** 	length = file.tellg();
 4997              		.loc 4 216 0
 4998 257e E9AAF9FF 		jmp	.L215
 4998      FF
 4999              	.L273:
 5000 2583 4889C3   		movq	%rax, %rbx
 218:testHexIO.cpp **** 	char *fileData = new char[(unsigned int)length];
 5001              		.loc 4 218 0 is_stmt 1
 5002 2586 E8000000 		call	__cxa_end_catch
 5002      00
 5003 258b E9380300 		jmp	.L230
 5003      00
 5004              	.L272:
 5005 2590 4889C7   		movq	%rax, %rdi
 5006 2593 E8000000 		call	__cxa_begin_catch
 5006      00
 5007              	.LEHB210:
 5008 2598 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 5008      00
 5009 259d 488B08   		movq	(%rax), %rcx
 5010 25a0 488D8500 		leaq	-768(%rbp), %rax
 5010      FDFFFF
 5011 25a7 BADA0000 		movl	$218, %edx
 5011      00
 5012 25ac 4889CE   		movq	%rcx, %rsi
 5013 25af 4889C7   		movq	%rax, %rdi
 5014 25b2 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 5014      00
 218:testHexIO.cpp **** 	char *fileData = new char[(unsigned int)length];
 5015              		.loc 4 218 0 is_stmt 0 discriminator 1
 5016 25b7 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 5016      00
 5017 25bc 488B00   		movq	(%rax), %rax
 5018 25bf 488D8D00 		leaq	-768(%rbp), %rcx
 5018      FDFFFF
 5019 25c6 BA000000 		movl	$.LC46, %edx
 5019      00
 5020 25cb 4889CE   		movq	%rcx, %rsi
 5021 25ce 4889C7   		movq	%rax, %rdi
 5022 25d1 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 5022      00
 5023              	.LEHE210:
 5024              	.LEHB211:
 5025 25d6 E8000000 		call	__cxa_end_catch
 5025      00
 5026              	.LEHE211:
 218:testHexIO.cpp **** 	char *fileData = new char[(unsigned int)length];
 5027              		.loc 4 218 0
 5028 25db E9E7F9FF 		jmp	.L234
 5028      FF
 5029              	.L275:
 5030 25e0 4889C3   		movq	%rax, %rbx
 223:testHexIO.cpp **** 
 5031              		.loc 4 223 0 is_stmt 1
 5032 25e3 E8000000 		call	__cxa_end_catch
 5032      00
 5033 25e8 E9DB0200 		jmp	.L230
 5033      00
 5034              	.L274:
 5035 25ed 4889C7   		movq	%rax, %rdi
 5036 25f0 E8000000 		call	__cxa_begin_catch
 5036      00
 5037              	.LEHB212:
 5038 25f5 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 5038      00
 5039 25fa 488B08   		movq	(%rax), %rcx
 5040 25fd 488D8500 		leaq	-768(%rbp), %rax
 5040      FDFFFF
 5041 2604 BADF0000 		movl	$223, %edx
 5041      00
 5042 2609 4889CE   		movq	%rcx, %rsi
 5043 260c 4889C7   		movq	%rax, %rdi
 5044 260f E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 5044      00
 223:testHexIO.cpp **** 
 5045              		.loc 4 223 0 is_stmt 0 discriminator 1
 5046 2614 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 5046      00
 5047 2619 488B00   		movq	(%rax), %rax
 5048 261c 488D8D00 		leaq	-768(%rbp), %rcx
 5048      FDFFFF
 5049 2623 BA000000 		movl	$.LC47, %edx
 5049      00
 5050 2628 4889CE   		movq	%rcx, %rsi
 5051 262b 4889C7   		movq	%rax, %rdi
 5052 262e E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 5052      00
 5053              	.LEHE212:
 5054              	.LEHB213:
 5055 2633 E8000000 		call	__cxa_end_catch
 5055      00
 5056              	.LEHE213:
 223:testHexIO.cpp **** 
 5057              		.loc 4 223 0
 5058 2638 E960FAFF 		jmp	.L237
 5058      FF
 5059              	.L277:
 5060 263d 4889C3   		movq	%rax, %rbx
 226:testHexIO.cpp **** 	status = bufInitialise(&readbackMask, 1024, 0x00, NULL);
 5061              		.loc 4 226 0 is_stmt 1
 5062 2640 E8000000 		call	__cxa_end_catch
 5062      00
 5063 2645 E97E0200 		jmp	.L230
 5063      00
 5064              	.L276:
 5065 264a 4889C7   		movq	%rax, %rdi
 5066 264d E8000000 		call	__cxa_begin_catch
 5066      00
 5067              	.LEHB214:
 5068 2652 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 5068      00
 5069 2657 488B08   		movq	(%rax), %rcx
 5070 265a 488D8500 		leaq	-768(%rbp), %rax
 5070      FDFFFF
 5071 2661 BAE20000 		movl	$226, %edx
 5071      00
 5072 2666 4889CE   		movq	%rcx, %rsi
 5073 2669 4889C7   		movq	%rax, %rdi
 5074 266c E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 5074      00
 226:testHexIO.cpp **** 	status = bufInitialise(&readbackMask, 1024, 0x00, NULL);
 5075              		.loc 4 226 0 is_stmt 0 discriminator 1
 5076 2671 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 5076      00
 5077 2676 488B00   		movq	(%rax), %rax
 5078 2679 488D8D00 		leaq	-768(%rbp), %rcx
 5078      FDFFFF
 5079 2680 BA000000 		movl	$.LC4, %edx
 5079      00
 5080 2685 4889CE   		movq	%rcx, %rsi
 5081 2688 4889C7   		movq	%rax, %rdi
 5082 268b E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 5082      00
 5083              	.LEHE214:
 5084              	.LEHB215:
 5085 2690 E8000000 		call	__cxa_end_catch
 5085      00
 5086              	.LEHE215:
 226:testHexIO.cpp **** 	status = bufInitialise(&readbackMask, 1024, 0x00, NULL);
 5087              		.loc 4 226 0
 5088 2695 E975FAFF 		jmp	.L240
 5088      FF
 5089              	.L279:
 5090 269a 4889C3   		movq	%rax, %rbx
 228:testHexIO.cpp **** 	status = bufReadFromIntelHexFile(&readbackData, &readbackMask, FILENAME, NULL);
 5091              		.loc 4 228 0 is_stmt 1
 5092 269d E8000000 		call	__cxa_end_catch
 5092      00
 5093 26a2 E9210200 		jmp	.L230
 5093      00
 5094              	.L278:
 5095 26a7 4889C7   		movq	%rax, %rdi
 5096 26aa E8000000 		call	__cxa_begin_catch
 5096      00
 5097              	.LEHB216:
 5098 26af E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 5098      00
 5099 26b4 488B08   		movq	(%rax), %rcx
 5100 26b7 488D8500 		leaq	-768(%rbp), %rax
 5100      FDFFFF
 5101 26be BAE40000 		movl	$228, %edx
 5101      00
 5102 26c3 4889CE   		movq	%rcx, %rsi
 5103 26c6 4889C7   		movq	%rax, %rdi
 5104 26c9 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 5104      00
 228:testHexIO.cpp **** 	status = bufReadFromIntelHexFile(&readbackData, &readbackMask, FILENAME, NULL);
 5105              		.loc 4 228 0 is_stmt 0 discriminator 1
 5106 26ce E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 5106      00
 5107 26d3 488B00   		movq	(%rax), %rax
 5108 26d6 488D8D00 		leaq	-768(%rbp), %rcx
 5108      FDFFFF
 5109 26dd BA000000 		movl	$.LC4, %edx
 5109      00
 5110 26e2 4889CE   		movq	%rcx, %rsi
 5111 26e5 4889C7   		movq	%rax, %rdi
 5112 26e8 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 5112      00
 5113              	.LEHE216:
 5114              	.LEHB217:
 5115 26ed E8000000 		call	__cxa_end_catch
 5115      00
 5116              	.LEHE217:
 228:testHexIO.cpp **** 	status = bufReadFromIntelHexFile(&readbackData, &readbackMask, FILENAME, NULL);
 5117              		.loc 4 228 0
 5118 26f2 E98AFAFF 		jmp	.L243
 5118      FF
 5119              	.L281:
 5120 26f7 4889C3   		movq	%rax, %rbx
 230:testHexIO.cpp **** 	CHECK_EQUAL(data.length, readbackData.length);
 5121              		.loc 4 230 0 is_stmt 1
 5122 26fa E8000000 		call	__cxa_end_catch
 5122      00
 5123 26ff E9C40100 		jmp	.L230
 5123      00
 5124              	.L280:
 5125 2704 4889C7   		movq	%rax, %rdi
 5126 2707 E8000000 		call	__cxa_begin_catch
 5126      00
 5127              	.LEHB218:
 5128 270c E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 5128      00
 5129 2711 488B08   		movq	(%rax), %rcx
 5130 2714 488D8500 		leaq	-768(%rbp), %rax
 5130      FDFFFF
 5131 271b BAE60000 		movl	$230, %edx
 5131      00
 5132 2720 4889CE   		movq	%rcx, %rsi
 5133 2723 4889C7   		movq	%rax, %rdi
 5134 2726 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 5134      00
 230:testHexIO.cpp **** 	CHECK_EQUAL(data.length, readbackData.length);
 5135              		.loc 4 230 0 is_stmt 0 discriminator 1
 5136 272b E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 5136      00
 5137 2730 488B00   		movq	(%rax), %rax
 5138 2733 488D8D00 		leaq	-768(%rbp), %rcx
 5138      FDFFFF
 5139 273a BA000000 		movl	$.LC4, %edx
 5139      00
 5140 273f 4889CE   		movq	%rcx, %rsi
 5141 2742 4889C7   		movq	%rax, %rdi
 5142 2745 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 5142      00
 5143              	.LEHE218:
 5144              	.LEHB219:
 5145 274a E8000000 		call	__cxa_end_catch
 5145      00
 5146              	.LEHE219:
 230:testHexIO.cpp **** 	CHECK_EQUAL(data.length, readbackData.length);
 5147              		.loc 4 230 0
 5148 274f E9A1FAFF 		jmp	.L246
 5148      FF
 5149              	.L283:
 5150 2754 4889C3   		movq	%rax, %rbx
 231:testHexIO.cpp **** 	CHECK_ARRAY_EQUAL(data.data, readbackData.data, (int)data.length);
 5151              		.loc 4 231 0 is_stmt 1
 5152 2757 E8000000 		call	__cxa_end_catch
 5152      00
 5153 275c E9670100 		jmp	.L230
 5153      00
 5154              	.L282:
 5155 2761 4889C7   		movq	%rax, %rdi
 5156 2764 E8000000 		call	__cxa_begin_catch
 5156      00
 5157              	.LEHB220:
 5158 2769 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 5158      00
 5159 276e 488B08   		movq	(%rax), %rcx
 5160 2771 488D8500 		leaq	-768(%rbp), %rax
 5160      FDFFFF
 5161 2778 BAE70000 		movl	$231, %edx
 5161      00
 5162 277d 4889CE   		movq	%rcx, %rsi
 5163 2780 4889C7   		movq	%rax, %rdi
 5164 2783 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 5164      00
 231:testHexIO.cpp **** 	CHECK_ARRAY_EQUAL(data.data, readbackData.data, (int)data.length);
 5165              		.loc 4 231 0 is_stmt 0 discriminator 1
 5166 2788 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 5166      00
 5167 278d 488B00   		movq	(%rax), %rax
 5168 2790 488D8D00 		leaq	-768(%rbp), %rcx
 5168      FDFFFF
 5169 2797 BA000000 		movl	$.LC48, %edx
 5169      00
 5170 279c 4889CE   		movq	%rcx, %rsi
 5171 279f 4889C7   		movq	%rax, %rdi
 5172 27a2 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 5172      00
 5173              	.LEHE220:
 5174              	.LEHB221:
 5175 27a7 E8000000 		call	__cxa_end_catch
 5175      00
 5176              	.LEHE221:
 231:testHexIO.cpp **** 	CHECK_ARRAY_EQUAL(data.data, readbackData.data, (int)data.length);
 5177              		.loc 4 231 0
 5178 27ac E996FAFF 		jmp	.L249
 5178      FF
 5179              	.L285:
 5180 27b1 4889C3   		movq	%rax, %rbx
 232:testHexIO.cpp **** 	CHECK_EQUAL(mask.length, readbackMask.length);
 5181              		.loc 4 232 0 is_stmt 1
 5182 27b4 E8000000 		call	__cxa_end_catch
 5182      00
 5183 27b9 E90A0100 		jmp	.L230
 5183      00
 5184              	.L284:
 5185 27be 4889C7   		movq	%rax, %rdi
 5186 27c1 E8000000 		call	__cxa_begin_catch
 5186      00
 5187              	.LEHB222:
 5188 27c6 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 5188      00
 5189 27cb 488B08   		movq	(%rax), %rcx
 5190 27ce 488D8500 		leaq	-768(%rbp), %rax
 5190      FDFFFF
 5191 27d5 BAE80000 		movl	$232, %edx
 5191      00
 5192 27da 4889CE   		movq	%rcx, %rsi
 5193 27dd 4889C7   		movq	%rax, %rdi
 5194 27e0 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 5194      00
 232:testHexIO.cpp **** 	CHECK_EQUAL(mask.length, readbackMask.length);
 5195              		.loc 4 232 0 is_stmt 0 discriminator 1
 5196 27e5 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 5196      00
 5197 27ea 488B00   		movq	(%rax), %rax
 5198 27ed 488D8D00 		leaq	-768(%rbp), %rcx
 5198      FDFFFF
 5199 27f4 BA000000 		movl	$.LC49, %edx
 5199      00
 5200 27f9 4889CE   		movq	%rcx, %rsi
 5201 27fc 4889C7   		movq	%rax, %rdi
 5202 27ff E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 5202      00
 5203              	.LEHE222:
 5204              	.LEHB223:
 5205 2804 E8000000 		call	__cxa_end_catch
 5205      00
 5206              	.LEHE223:
 232:testHexIO.cpp **** 	CHECK_EQUAL(mask.length, readbackMask.length);
 5207              		.loc 4 232 0
 5208 2809 E98BFAFF 		jmp	.L252
 5208      FF
 5209              	.L287:
 5210 280e 4889C3   		movq	%rax, %rbx
 233:testHexIO.cpp **** 	CHECK_ARRAY_EQUAL(mask.data, readbackMask.data, (int)mask.length);
 5211              		.loc 4 233 0 is_stmt 1
 5212 2811 E8000000 		call	__cxa_end_catch
 5212      00
 5213 2816 E9AD0000 		jmp	.L230
 5213      00
 5214              	.L286:
 5215 281b 4889C7   		movq	%rax, %rdi
 5216 281e E8000000 		call	__cxa_begin_catch
 5216      00
 5217              	.LEHB224:
 5218 2823 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 5218      00
 5219 2828 488B08   		movq	(%rax), %rcx
 5220 282b 488D8500 		leaq	-768(%rbp), %rax
 5220      FDFFFF
 5221 2832 BAE90000 		movl	$233, %edx
 5221      00
 5222 2837 4889CE   		movq	%rcx, %rsi
 5223 283a 4889C7   		movq	%rax, %rdi
 5224 283d E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 5224      00
 233:testHexIO.cpp **** 	CHECK_ARRAY_EQUAL(mask.data, readbackMask.data, (int)mask.length);
 5225              		.loc 4 233 0 is_stmt 0 discriminator 1
 5226 2842 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 5226      00
 5227 2847 488B00   		movq	(%rax), %rax
 5228 284a 488D8D00 		leaq	-768(%rbp), %rcx
 5228      FDFFFF
 5229 2851 BA000000 		movl	$.LC50, %edx
 5229      00
 5230 2856 4889CE   		movq	%rcx, %rsi
 5231 2859 4889C7   		movq	%rax, %rdi
 5232 285c E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 5232      00
 5233              	.LEHE224:
 5234              	.LEHB225:
 5235 2861 E8000000 		call	__cxa_end_catch
 5235      00
 5236              	.LEHE225:
 233:testHexIO.cpp **** 	CHECK_ARRAY_EQUAL(mask.data, readbackMask.data, (int)mask.length);
 5237              		.loc 4 233 0
 5238 2866 E980FAFF 		jmp	.L255
 5238      FF
 5239              	.L289:
 5240 286b 4889C3   		movq	%rax, %rbx
 234:testHexIO.cpp **** 	
 5241              		.loc 4 234 0 is_stmt 1
 5242 286e E8000000 		call	__cxa_end_catch
 5242      00
 5243 2873 EB53     		jmp	.L230
 5244              	.L288:
 5245 2875 4889C7   		movq	%rax, %rdi
 5246 2878 E8000000 		call	__cxa_begin_catch
 5246      00
 5247              	.LEHB226:
 5248 287d E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 5248      00
 5249 2882 488B08   		movq	(%rax), %rcx
 5250 2885 488D8500 		leaq	-768(%rbp), %rax
 5250      FDFFFF
 5251 288c BAEA0000 		movl	$234, %edx
 5251      00
 5252 2891 4889CE   		movq	%rcx, %rsi
 5253 2894 4889C7   		movq	%rax, %rdi
 5254 2897 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 5254      00
 234:testHexIO.cpp **** 	
 5255              		.loc 4 234 0 is_stmt 0 discriminator 1
 5256 289c E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 5256      00
 5257 28a1 488B00   		movq	(%rax), %rax
 5258 28a4 488D8D00 		leaq	-768(%rbp), %rcx
 5258      FDFFFF
 5259 28ab BA000000 		movl	$.LC51, %edx
 5259      00
 5260 28b0 4889CE   		movq	%rcx, %rsi
 5261 28b3 4889C7   		movq	%rax, %rdi
 5262 28b6 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 5262      00
 5263              	.LEHE226:
 5264              	.LEHB227:
 5265 28bb E8000000 		call	__cxa_end_catch
 5265      00
 5266              	.LEHE227:
 234:testHexIO.cpp **** 	
 5267              		.loc 4 234 0
 5268 28c0 E978FAFF 		jmp	.L258
 5268      FF
 5269              	.L269:
 5270 28c5 4889C3   		movq	%rax, %rbx
 5271              	.L230:
 213:testHexIO.cpp **** 	streamoff length;
 5272              		.loc 4 213 0 is_stmt 1
 5273 28c8 488D8530 		leaq	-720(%rbp), %rax
 5273      FDFFFF
 5274 28cf 4889C7   		movq	%rax, %rdi
 5275 28d2 E8000000 		call	_ZNSt14basic_ifstreamIcSt11char_traitsIcEED1Ev
 5275      00
 5276 28d7 EB03     		jmp	.L217
 5277              	.L260:
 5278 28d9 4889C3   		movq	%rax, %rbx
 5279              	.L217:
 239:testHexIO.cpp **** }
 5280              		.loc 4 239 0
 5281 28dc 488D8540 		leaq	-960(%rbp), %rax
 5281      FCFFFF
 5282 28e3 4889C7   		movq	%rax, %rdi
 5283 28e6 E8000000 		call	_ZNSsD1Ev
 5283      00
 5284 28eb 4889D8   		movq	%rbx, %rax
 5285 28ee 4889C7   		movq	%rax, %rdi
 5286              	.LEHB228:
 5287 28f1 E8000000 		call	_Unwind_Resume
 5287      00
 5288              	.LEHE228:
 5289              	.L290:
 5290              	.LBE28:
 5291              		.loc 4 240 0
 5292 28f6 E8000000 		call	__stack_chk_fail
 5292      00
 5293              	.L259:
 5294 28fb 4881C4D8 		addq	$984, %rsp
 5294      030000
 5295 2902 5B       		popq	%rbx
 5296 2903 5D       		popq	%rbp
 5297              		.cfi_def_cfa 7, 8
 5298 2904 C3       		ret
 5299              		.cfi_endproc
 5300              	.LFE1131:
 5301              		.section	.gcc_except_table
 5302              		.align 4
 5303              	.LLSDA1131:
 5304 03f0 FF       		.byte	0xff
 5305 03f1 03       		.byte	0x3
 5306 03f2 E402     		.uleb128 .LLSDATT1131-.LLSDATTD1131
 5307              	.LLSDATTD1131:
 5308 03f4 01       		.byte	0x1
 5309 03f5 DA02     		.uleb128 .LLSDACSE1131-.LLSDACSB1131
 5310              	.LLSDACSB1131:
 5311 03f7 8401     		.uleb128 .LEHB171-.LFB1131
 5312 03f9 05       		.uleb128 .LEHE171-.LEHB171
 5313 03fa 00       		.uleb128 0
 5314 03fb 00       		.uleb128 0
 5315 03fc AC01     		.uleb128 .LEHB172-.LFB1131
 5316 03fe 05       		.uleb128 .LEHE172-.LEHB172
 5317 03ff 9E1B     		.uleb128 .L260-.LFB1131
 5318 0401 00       		.uleb128 0
 5319 0402 B701     		.uleb128 .LEHB173-.LFB1131
 5320 0404 4E       		.uleb128 .LEHE173-.LEHB173
 5321 0405 8411     		.uleb128 .L261-.LFB1131
 5322 0407 01       		.uleb128 0x1
 5323 0408 9E02     		.uleb128 .LEHB174-.LFB1131
 5324 040a 05       		.uleb128 .LEHE174-.LEHB174
 5325 040b 9E1B     		.uleb128 .L260-.LFB1131
 5326 040d 00       		.uleb128 0
 5327 040e A902     		.uleb128 .LEHB175-.LFB1131
 5328 0410 4E       		.uleb128 .LEHE175-.LEHB175
 5329 0411 E111     		.uleb128 .L263-.LFB1131
 5330 0413 01       		.uleb128 0x1
 5331 0414 EB03     		.uleb128 .LEHB176-.LFB1131
 5332 0416 05       		.uleb128 .LEHE176-.LEHB176
 5333 0417 9E1B     		.uleb128 .L260-.LFB1131
 5334 0419 00       		.uleb128 0
 5335 041a F603     		.uleb128 .LEHB177-.LFB1131
 5336 041c 4E       		.uleb128 .LEHE177-.LEHB177
 5337 041d BE12     		.uleb128 .L265-.LFB1131
 5338 041f 01       		.uleb128 0x1
 5339 0420 D804     		.uleb128 .LEHB178-.LFB1131
 5340 0422 B401     		.uleb128 .LEHE178-.LEHB178
 5341 0424 9E1B     		.uleb128 .L260-.LFB1131
 5342 0426 00       		.uleb128 0
 5343 0427 9206     		.uleb128 .LEHB179-.LFB1131
 5344 0429 4E       		.uleb128 .LEHE179-.LEHB179
 5345 042a 9B13     		.uleb128 .L267-.LFB1131
 5346 042c 01       		.uleb128 0x1
 5347 042d EA06     		.uleb128 .LEHB180-.LFB1131
 5348 042f 05       		.uleb128 .LEHE180-.LEHB180
 5349 0430 9E1B     		.uleb128 .L260-.LFB1131
 5350 0432 00       		.uleb128 0
 5351 0433 8F07     		.uleb128 .LEHB181-.LFB1131
 5352 0435 05       		.uleb128 .LEHE181-.LEHB181
 5353 0436 8A1B     		.uleb128 .L269-.LFB1131
 5354 0438 00       		.uleb128 0
 5355 0439 9E07     		.uleb128 .LEHB182-.LFB1131
 5356 043b 54       		.uleb128 .LEHE182-.LEHB182
 5357 043c F813     		.uleb128 .L270-.LFB1131
 5358 043e 01       		.uleb128 0x1
 5359 043f FC07     		.uleb128 .LEHB183-.LFB1131
 5360 0441 05       		.uleb128 .LEHE183-.LEHB183
 5361 0442 8A1B     		.uleb128 .L269-.LFB1131
 5362 0444 00       		.uleb128 0
 5363 0445 A508     		.uleb128 .LEHB184-.LFB1131
 5364 0447 67       		.uleb128 .LEHE184-.LEHB184
 5365 0448 D514     		.uleb128 .L272-.LFB1131
 5366 044a 01       		.uleb128 0x1
 5367 044b 9809     		.uleb128 .LEHB185-.LFB1131
 5368 044d 54       		.uleb128 .LEHE185-.LEHB185
 5369 044e 8A1B     		.uleb128 .L269-.LFB1131
 5370 0450 00       		.uleb128 0
 5371 0451 EC09     		.uleb128 .LEHB186-.LFB1131
 5372 0453 76       		.uleb128 .LEHE186-.LEHB186
 5373 0454 B215     		.uleb128 .L274-.LFB1131
 5374 0456 01       		.uleb128 0x1
 5375 0457 FB0A     		.uleb128 .LEHB187-.LFB1131
 5376 0459 05       		.uleb128 .LEHE187-.LEHB187
 5377 045a 8A1B     		.uleb128 .L269-.LFB1131
 5378 045c 00       		.uleb128 0
 5379 045d 860B     		.uleb128 .LEHB188-.LFB1131
 5380 045f 4E       		.uleb128 .LEHE188-.LEHB188
 5381 0460 8F16     		.uleb128 .L276-.LFB1131
 5382 0462 01       		.uleb128 0x1
 5383 0463 ED0B     		.uleb128 .LEHB189-.LFB1131
 5384 0465 05       		.uleb128 .LEHE189-.LEHB189
 5385 0466 8A1B     		.uleb128 .L269-.LFB1131
 5386 0468 00       		.uleb128 0
 5387 0469 F80B     		.uleb128 .LEHB190-.LFB1131
 5388 046b 4E       		.uleb128 .LEHE190-.LEHB190
 5389 046c EC16     		.uleb128 .L278-.LFB1131
 5390 046e 01       		.uleb128 0x1
 5391 046f E10C     		.uleb128 .LEHB191-.LFB1131
 5392 0471 05       		.uleb128 .LEHE191-.LEHB191
 5393 0472 8A1B     		.uleb128 .L269-.LFB1131
 5394 0474 00       		.uleb128 0
 5395 0475 EC0C     		.uleb128 .LEHB192-.LFB1131
 5396 0477 4E       		.uleb128 .LEHE192-.LEHB192
 5397 0478 C917     		.uleb128 .L280-.LFB1131
 5398 047a 01       		.uleb128 0x1
 5399 047b BA0D     		.uleb128 .LEHB193-.LFB1131
 5400 047d 52       		.uleb128 .LEHE193-.LEHB193
 5401 047e A618     		.uleb128 .L282-.LFB1131
 5402 0480 01       		.uleb128 0x1
 5403 0481 8C0E     		.uleb128 .LEHB194-.LFB1131
 5404 0483 52       		.uleb128 .LEHE194-.LEHB194
 5405 0484 8319     		.uleb128 .L284-.LFB1131
 5406 0486 01       		.uleb128 0x1
 5407 0487 DE0E     		.uleb128 .LEHB195-.LFB1131
 5408 0489 52       		.uleb128 .LEHE195-.LEHB195
 5409 048a E019     		.uleb128 .L286-.LFB1131
 5410 048c 01       		.uleb128 0x1
 5411 048d B00F     		.uleb128 .LEHB196-.LFB1131
 5412 048f 52       		.uleb128 .LEHE196-.LEHB196
 5413 0490 BA1A     		.uleb128 .L288-.LFB1131
 5414 0492 01       		.uleb128 0x1
 5415 0493 8C10     		.uleb128 .LEHB197-.LFB1131
 5416 0495 32       		.uleb128 .LEHE197-.LEHB197
 5417 0496 8A1B     		.uleb128 .L269-.LFB1131
 5418 0498 00       		.uleb128 0
 5419 0499 C810     		.uleb128 .LEHB198-.LFB1131
 5420 049b 05       		.uleb128 .LEHE198-.LEHB198
 5421 049c 9E1B     		.uleb128 .L260-.LFB1131
 5422 049e 00       		.uleb128 0
 5423 049f D710     		.uleb128 .LEHB199-.LFB1131
 5424 04a1 05       		.uleb128 .LEHE199-.LEHB199
 5425 04a2 00       		.uleb128 0
 5426 04a3 00       		.uleb128 0
 5427 04a4 8C11     		.uleb128 .LEHB200-.LFB1131
 5428 04a6 3E       		.uleb128 .LEHE200-.LEHB200
 5429 04a7 F710     		.uleb128 .L262-.LFB1131
 5430 04a9 00       		.uleb128 0
 5431 04aa CA11     		.uleb128 .LEHB201-.LFB1131
 5432 04ac 05       		.uleb128 .LEHE201-.LEHB201
 5433 04ad 9E1B     		.uleb128 .L260-.LFB1131
 5434 04af 00       		.uleb128 0
 5435 04b0 E911     		.uleb128 .LEHB202-.LFB1131
 5436 04b2 3E       		.uleb128 .LEHE202-.LEHB202
 5437 04b3 D411     		.uleb128 .L264-.LFB1131
 5438 04b5 00       		.uleb128 0
 5439 04b6 A712     		.uleb128 .LEHB203-.LFB1131
 5440 04b8 05       		.uleb128 .LEHE203-.LEHB203
 5441 04b9 9E1B     		.uleb128 .L260-.LFB1131
 5442 04bb 00       		.uleb128 0
 5443 04bc C612     		.uleb128 .LEHB204-.LFB1131
 5444 04be 3E       		.uleb128 .LEHE204-.LEHB204
 5445 04bf B112     		.uleb128 .L266-.LFB1131
 5446 04c1 00       		.uleb128 0
 5447 04c2 8413     		.uleb128 .LEHB205-.LFB1131
 5448 04c4 05       		.uleb128 .LEHE205-.LEHB205
 5449 04c5 9E1B     		.uleb128 .L260-.LFB1131
 5450 04c7 00       		.uleb128 0
 5451 04c8 A313     		.uleb128 .LEHB206-.LFB1131
 5452 04ca 3E       		.uleb128 .LEHE206-.LEHB206
 5453 04cb 8E13     		.uleb128 .L268-.LFB1131
 5454 04cd 00       		.uleb128 0
 5455 04ce E113     		.uleb128 .LEHB207-.LFB1131
 5456 04d0 05       		.uleb128 .LEHE207-.LEHB207
 5457 04d1 9E1B     		.uleb128 .L260-.LFB1131
 5458 04d3 00       		.uleb128 0
 5459 04d4 8014     		.uleb128 .LEHB208-.LFB1131
 5460 04d6 3E       		.uleb128 .LEHE208-.LEHB208
 5461 04d7 EB13     		.uleb128 .L271-.LFB1131
 5462 04d9 00       		.uleb128 0
 5463 04da BE14     		.uleb128 .LEHB209-.LFB1131
 5464 04dc 05       		.uleb128 .LEHE209-.LEHB209
 5465 04dd 8A1B     		.uleb128 .L269-.LFB1131
 5466 04df 00       		.uleb128 0
 5467 04e0 DD14     		.uleb128 .LEHB210-.LFB1131
 5468 04e2 3E       		.uleb128 .LEHE210-.LEHB210
 5469 04e3 C814     		.uleb128 .L273-.LFB1131
 5470 04e5 00       		.uleb128 0
 5471 04e6 9B15     		.uleb128 .LEHB211-.LFB1131
 5472 04e8 05       		.uleb128 .LEHE211-.LEHB211
 5473 04e9 8A1B     		.uleb128 .L269-.LFB1131
 5474 04eb 00       		.uleb128 0
 5475 04ec BA15     		.uleb128 .LEHB212-.LFB1131
 5476 04ee 3E       		.uleb128 .LEHE212-.LEHB212
 5477 04ef A515     		.uleb128 .L275-.LFB1131
 5478 04f1 00       		.uleb128 0
 5479 04f2 F815     		.uleb128 .LEHB213-.LFB1131
 5480 04f4 05       		.uleb128 .LEHE213-.LEHB213
 5481 04f5 8A1B     		.uleb128 .L269-.LFB1131
 5482 04f7 00       		.uleb128 0
 5483 04f8 9716     		.uleb128 .LEHB214-.LFB1131
 5484 04fa 3E       		.uleb128 .LEHE214-.LEHB214
 5485 04fb 8216     		.uleb128 .L277-.LFB1131
 5486 04fd 00       		.uleb128 0
 5487 04fe D516     		.uleb128 .LEHB215-.LFB1131
 5488 0500 05       		.uleb128 .LEHE215-.LEHB215
 5489 0501 8A1B     		.uleb128 .L269-.LFB1131
 5490 0503 00       		.uleb128 0
 5491 0504 F416     		.uleb128 .LEHB216-.LFB1131
 5492 0506 3E       		.uleb128 .LEHE216-.LEHB216
 5493 0507 DF16     		.uleb128 .L279-.LFB1131
 5494 0509 00       		.uleb128 0
 5495 050a B217     		.uleb128 .LEHB217-.LFB1131
 5496 050c 05       		.uleb128 .LEHE217-.LEHB217
 5497 050d 8A1B     		.uleb128 .L269-.LFB1131
 5498 050f 00       		.uleb128 0
 5499 0510 D117     		.uleb128 .LEHB218-.LFB1131
 5500 0512 3E       		.uleb128 .LEHE218-.LEHB218
 5501 0513 BC17     		.uleb128 .L281-.LFB1131
 5502 0515 00       		.uleb128 0
 5503 0516 8F18     		.uleb128 .LEHB219-.LFB1131
 5504 0518 05       		.uleb128 .LEHE219-.LEHB219
 5505 0519 8A1B     		.uleb128 .L269-.LFB1131
 5506 051b 00       		.uleb128 0
 5507 051c AE18     		.uleb128 .LEHB220-.LFB1131
 5508 051e 3E       		.uleb128 .LEHE220-.LEHB220
 5509 051f 9918     		.uleb128 .L283-.LFB1131
 5510 0521 00       		.uleb128 0
 5511 0522 EC18     		.uleb128 .LEHB221-.LFB1131
 5512 0524 05       		.uleb128 .LEHE221-.LEHB221
 5513 0525 8A1B     		.uleb128 .L269-.LFB1131
 5514 0527 00       		.uleb128 0
 5515 0528 8B19     		.uleb128 .LEHB222-.LFB1131
 5516 052a 3E       		.uleb128 .LEHE222-.LEHB222
 5517 052b F618     		.uleb128 .L285-.LFB1131
 5518 052d 00       		.uleb128 0
 5519 052e C919     		.uleb128 .LEHB223-.LFB1131
 5520 0530 05       		.uleb128 .LEHE223-.LEHB223
 5521 0531 8A1B     		.uleb128 .L269-.LFB1131
 5522 0533 00       		.uleb128 0
 5523 0534 E819     		.uleb128 .LEHB224-.LFB1131
 5524 0536 3E       		.uleb128 .LEHE224-.LEHB224
 5525 0537 D319     		.uleb128 .L287-.LFB1131
 5526 0539 00       		.uleb128 0
 5527 053a A61A     		.uleb128 .LEHB225-.LFB1131
 5528 053c 05       		.uleb128 .LEHE225-.LEHB225
 5529 053d 8A1B     		.uleb128 .L269-.LFB1131
 5530 053f 00       		.uleb128 0
 5531 0540 C21A     		.uleb128 .LEHB226-.LFB1131
 5532 0542 3E       		.uleb128 .LEHE226-.LEHB226
 5533 0543 B01A     		.uleb128 .L289-.LFB1131
 5534 0545 00       		.uleb128 0
 5535 0546 801B     		.uleb128 .LEHB227-.LFB1131
 5536 0548 05       		.uleb128 .LEHE227-.LEHB227
 5537 0549 8A1B     		.uleb128 .L269-.LFB1131
 5538 054b 00       		.uleb128 0
 5539 054c B61B     		.uleb128 .LEHB228-.LFB1131
 5540 054e 05       		.uleb128 .LEHE228-.LEHB228
 5541 054f 00       		.uleb128 0
 5542 0550 00       		.uleb128 0
 5543              	.LLSDACSE1131:
 5544 0551 01       		.byte	0x1
 5545 0552 00       		.byte	0
 5546 0553 00       		.align 4
 5547 0554 00000000 		.long	0
 5548              	
 5549              	.LLSDATT1131:
 5550              		.text
 5552              		.section	.rodata
 5553              	.LC52:
 5554 08c7 48657849 		.string	"HexIO_testRoundTrip"
 5554      4F5F7465 
 5554      7374526F 
 5554      756E6454 
 5554      72697000 
 5555              		.section	.text._ZN23TestHexIO_testRoundTripC2Ev,"axG",@progbits,_ZN23TestHexIO_testRoundTripC5Ev,c
 5556              		.align 2
 5557              		.weak	_ZN23TestHexIO_testRoundTripC2Ev
 5559              	_ZN23TestHexIO_testRoundTripC2Ev:
 5560              	.LFB1133:
 241:testHexIO.cpp **** 
 242:testHexIO.cpp **** TEST(HexIO_testRoundTrip) {
 5561              		.loc 4 242 0
 5562              		.cfi_startproc
 5563 0000 55       		pushq	%rbp
 5564              		.cfi_def_cfa_offset 16
 5565              		.cfi_offset 6, -16
 5566 0001 4889E5   		movq	%rsp, %rbp
 5567              		.cfi_def_cfa_register 6
 5568 0004 4883EC10 		subq	$16, %rsp
 5569 0008 48897DF8 		movq	%rdi, -8(%rbp)
 5570              	.LBB29:
 5571              		.loc 4 242 0
 5572 000c E8000000 		call	_ZN13UnitTestSuite12GetSuiteNameEv
 5572      00
 5573 0011 4889C2   		movq	%rax, %rdx
 5574 0014 488B45F8 		movq	-8(%rbp), %rax
 5575 0018 41B8F200 		movl	$242, %r8d
 5575      0000
 5576 001e B9000000 		movl	$.LC1, %ecx
 5576      00
 5577 0023 BE000000 		movl	$.LC52, %esi
 5577      00
 5578 0028 4889C7   		movq	%rax, %rdi
 5579 002b E8000000 		call	_ZN8UnitTest4TestC2EPKcS2_S2_i
 5579      00
 5580 0030 488B45F8 		movq	-8(%rbp), %rax
 5581 0034 48C70000 		movq	$_ZTV23TestHexIO_testRoundTrip+16, (%rax)
 5581      000000
 5582              	.LBE29:
 5583 003b C9       		leave
 5584              		.cfi_def_cfa 7, 8
 5585 003c C3       		ret
 5586              		.cfi_endproc
 5587              	.LFE1133:
 5589              		.weak	_ZN23TestHexIO_testRoundTripC1Ev
 5590              		.set	_ZN23TestHexIO_testRoundTripC1Ev,_ZN23TestHexIO_testRoundTripC2Ev
 5591              		.globl	testHexIO_testRoundTripInstance
 5592              		.bss
 5593 02b9 00000000 		.align 32
 5593      000000
 5596              	testHexIO_testRoundTripInstance:
 5597 02c0 00000000 		.zero	56
 5597      00000000 
 5597      00000000 
 5597      00000000 
 5597      00000000 
 5598              		.globl	adderHexIO_testRoundTrip
 5601              	adderHexIO_testRoundTrip:
 5602 02f8 00       		.zero	1
 5603              		.section	.rodata
 5604              	.LC53:
 5605 08db 3A303631 		.string	":061270000895F894FFCF81"
 5605      32373030 
 5605      30303839 
 5605      35463839 
 5605      34464643 
 5606 08f3 00000000 		.align 8
 5606      00
 5607              	.LC54:
 5608 08f8 3A313031 		.string	":10126000E80083FF01C03DDC17701093E9001F9177"
 5608      32363030 
 5608      30453830 
 5608      30383346 
 5608      46303143 
 5609 0924 00000000 		.align 8
 5610              	.LC55:
 5611 0928 3A313031 		.string	":101250000801882361F01091E9001092E900809163"
 5611      32353030 
 5611      30303830 
 5611      31383832 
 5611      33363146 
 5612 0954 00000000 		.align 8
 5613              	.LC56:
 5614 0958 3A313031 		.string	":10121000E10082FF0AC08091E20082FF06C0809157"
 5614      32313030 
 5614      30453130 
 5614      30383246 
 5614      46304143 
 5615 0984 00000000 		.align 8
 5616              	.LC57:
 5617 0988 3A313031 		.string	":10120000E200A5DD80E060E042E18EDD71DF8091EB"
 5617      32303030 
 5617      30453230 
 5617      30413544 
 5617      44383045 
 5618 09b4 00000000 		.align 8
 5619              	.LC58:
 5620 09b8 3A313031 		.string	":1011F000E2008E7F8093E2008091E2008061809324"
 5620      31463030 
 5620      30453230 
 5620      30384537 
 5620      46383039 
 5621              	.LC59:
 5622 09e4 3A303631 		.string	":061220000895F894FFCFD1"
 5622      32323030 
 5622      30303839 
 5622      35463839 
 5622      34464643 
 5623              	.LC60:
 5624 09fc 3A303130 		.string	":0100CF00CF61"
 5624      30434630 
 5624      30434636 
 5624      3100
 5625 0a0a 00000000 		.align 8
 5625      0000
 5626              	.LC61:
 5627 0a10 3A304530 		.string	":0E00C00085BF889585B78F7D85BFF8CFF894F2"
 5627      30433030 
 5627      30383542 
 5627      46383839 
 5627      35383542 
 5628              		.align 8
 5629              	.LC62:
 5630 0a38 3A313030 		.string	":1000B0009BBD8ABD89B7806489BF789485B780620B"
 5630      30423030 
 5630      30394242 
 5630      44384142 
 5630      44383942 
 5631 0a64 00000000 		.align 8
 5632              	.LC63:
 5633 0a68 3A313030 		.string	":1000A00018958FEF8ABB1FBC8DE08EBD89E09DE364"
 5633      30413030 
 5633      30313839 
 5633      35384645 
 5633      46384142 
 5634 0a94 00000000 		.align 8
 5635              	.LC64:
 5636 0a98 3A313030 		.string	":1000B0009BBD8ABD89B7FFFFFFFFFF9485B78062B4"
 5636      30423030 
 5636      30394242 
 5636      44384142 
 5636      44383942 
 5637 0ac4 00000000 		.align 8
 5638              	.LC65:
 5639 0ac8 3A313030 		.string	":10001000BEBAFECA6E3B8209D926430DADDEADDE07"
 5639      30313030 
 5639      30424542 
 5639      41464543 
 5639      41364533 
 5640 0af4 00000000 		.align 8
 5641              	.LC66:
 5642 0af8 3A313030 		.string	":10000000BEBAFECA6E3B8209D926430DADDEADDE17"
 5642      30303030 
 5642      30424542 
 5642      41464543 
 5642      41364533 
 5643              	.LC67:
 5644 0b24 3A303230 		.string	":020000021000EC"
 5644      30303030 
 5644      32313030 
 5644      30454300 
 5645 0b34 00000000 		.align 8
 5646              	.LC68:
 5647 0b38 3A313046 		.string	":10FFF000BEBAFECA6E3B8209D926430DADDEADDE28"
 5647      46463030 
 5647      30424542 
 5647      41464543 
 5647      41364533 
 5648 0b64 00000000 		.align 8
 5649              	.LC69:
 5650 0b68 3A313046 		.string	":10FFE000BEBAFECA6E3B8209D926430DADDEADDE38"
 5650      46453030 
 5650      30424542 
 5650      41464543 
 5650      41364533 
 5651              		.text
 5652 2905 90       		.align 2
 5653              		.globl	_ZNK23TestHexIO_testRoundTrip7RunImplEv
 5655              	_ZNK23TestHexIO_testRoundTrip7RunImplEv:
 5656              	.LFB1135:
 5657              		.loc 4 242 0
 5658              		.cfi_startproc
 5659 2906 55       		pushq	%rbp
 5660              		.cfi_def_cfa_offset 16
 5661              		.cfi_offset 6, -16
 5662 2907 4889E5   		movq	%rsp, %rbp
 5663              		.cfi_def_cfa_register 6
 5664 290a 4883EC20 		subq	$32, %rsp
 5665 290e 48897DF8 		movq	%rdi, -8(%rbp)
 243:testHexIO.cpp **** 	testRoundTrip(
 244:testHexIO.cpp **** 		":1011F000E2008E7F8093E2008091E2008061809324",
 245:testHexIO.cpp **** 		":10120000E200A5DD80E060E042E18EDD71DF8091EB",
 246:testHexIO.cpp **** 		":10121000E10082FF0AC08091E20082FF06C0809157",
 247:testHexIO.cpp **** 		":101250000801882361F01091E9001092E900809163",
 248:testHexIO.cpp **** 		":10126000E80083FF01C03DDC17701093E9001F9177",
 249:testHexIO.cpp **** 		":061270000895F894FFCF81",
 250:testHexIO.cpp **** 		NULL);
 5666              		.loc 4 250 0
 5667 2912 48C70424 		movq	$0, (%rsp)
 5667      00000000 
 5668 291a 41B90000 		movl	$.LC53, %r9d
 5668      0000
 5669 2920 41B80000 		movl	$.LC54, %r8d
 5669      0000
 5670 2926 B9000000 		movl	$.LC55, %ecx
 5670      00
 5671 292b BA000000 		movl	$.LC56, %edx
 5671      00
 5672 2930 BE000000 		movl	$.LC57, %esi
 5672      00
 5673 2935 BF000000 		movl	$.LC58, %edi
 5673      00
 5674 293a B8000000 		movl	$0, %eax
 5674      00
 5675 293f E8000000 		call	_Z13testRoundTripPKcz
 5675      00
 251:testHexIO.cpp **** 	testRoundTrip(
 252:testHexIO.cpp **** 		":1011F000E2008E7F8093E2008091E2008061809324",
 253:testHexIO.cpp **** 		":10120000E200A5DD80E060E042E18EDD71DF8091EB",
 254:testHexIO.cpp **** 		":10121000E10082FF0AC08091E20082FF06C0809157",
 255:testHexIO.cpp **** 		":061220000895F894FFCFD1",
 256:testHexIO.cpp **** 		":101250000801882361F01091E9001092E900809163",
 257:testHexIO.cpp **** 		":10126000E80083FF01C03DDC17701093E9001F9177",
 258:testHexIO.cpp **** 		":061270000895F894FFCF81",
 259:testHexIO.cpp **** 		NULL);
 5676              		.loc 4 259 0
 5677 2944 48C74424 		movq	$0, 8(%rsp)
 5677      08000000 
 5677      00
 5678 294d 48C70424 		movq	$.LC53, (%rsp)
 5678      00000000 
 5679 2955 41B90000 		movl	$.LC54, %r9d
 5679      0000
 5680 295b 41B80000 		movl	$.LC55, %r8d
 5680      0000
 5681 2961 B9000000 		movl	$.LC59, %ecx
 5681      00
 5682 2966 BA000000 		movl	$.LC56, %edx
 5682      00
 5683 296b BE000000 		movl	$.LC57, %esi
 5683      00
 5684 2970 BF000000 		movl	$.LC58, %edi
 5684      00
 5685 2975 B8000000 		movl	$0, %eax
 5685      00
 5686 297a E8000000 		call	_Z13testRoundTripPKcz
 5686      00
 260:testHexIO.cpp **** 	testRoundTrip(
 261:testHexIO.cpp **** 		":1000A00018958FEF8ABB1FBC8DE08EBD89E09DE364",
 262:testHexIO.cpp **** 		":1000B0009BBD8ABD89B7806489BF789485B780620B",
 263:testHexIO.cpp **** 		":0E00C00085BF889585B78F7D85BFF8CFF894F2",
 264:testHexIO.cpp **** 		":0100CF00CF61",
 265:testHexIO.cpp **** 		NULL);
 5687              		.loc 4 265 0
 5688 297f 41B80000 		movl	$0, %r8d
 5688      0000
 5689 2985 B9000000 		movl	$.LC60, %ecx
 5689      00
 5690 298a BA000000 		movl	$.LC61, %edx
 5690      00
 5691 298f BE000000 		movl	$.LC62, %esi
 5691      00
 5692 2994 BF000000 		movl	$.LC63, %edi
 5692      00
 5693 2999 B8000000 		movl	$0, %eax
 5693      00
 5694 299e E8000000 		call	_Z13testRoundTripPKcz
 5694      00
 266:testHexIO.cpp **** 	testRoundTrip(
 267:testHexIO.cpp **** 		":1000B0009BBD8ABD89B7FFFFFFFFFF9485B78062B4",
 268:testHexIO.cpp **** 		NULL);
 5695              		.loc 4 268 0
 5696 29a3 BE000000 		movl	$0, %esi
 5696      00
 5697 29a8 BF000000 		movl	$.LC64, %edi
 5697      00
 5698 29ad B8000000 		movl	$0, %eax
 5698      00
 5699 29b2 E8000000 		call	_Z13testRoundTripPKcz
 5699      00
 269:testHexIO.cpp **** 	testRoundTrip(
 270:testHexIO.cpp **** 		":10FFE000BEBAFECA6E3B8209D926430DADDEADDE38",
 271:testHexIO.cpp **** 		":10FFF000BEBAFECA6E3B8209D926430DADDEADDE28",
 272:testHexIO.cpp **** 		":020000021000EC",
 273:testHexIO.cpp **** 		":10000000BEBAFECA6E3B8209D926430DADDEADDE17",
 274:testHexIO.cpp **** 		":10001000BEBAFECA6E3B8209D926430DADDEADDE07",
 275:testHexIO.cpp **** 		NULL);
 5700              		.loc 4 275 0
 5701 29b7 41B90000 		movl	$0, %r9d
 5701      0000
 5702 29bd 41B80000 		movl	$.LC65, %r8d
 5702      0000
 5703 29c3 B9000000 		movl	$.LC66, %ecx
 5703      00
 5704 29c8 BA000000 		movl	$.LC67, %edx
 5704      00
 5705 29cd BE000000 		movl	$.LC68, %esi
 5705      00
 5706 29d2 BF000000 		movl	$.LC69, %edi
 5706      00
 5707 29d7 B8000000 		movl	$0, %eax
 5707      00
 5708 29dc E8000000 		call	_Z13testRoundTripPKcz
 5708      00
 276:testHexIO.cpp **** 	}
 5709              		.loc 4 276 0
 5710 29e1 C9       		leave
 5711              		.cfi_def_cfa 7, 8
 5712 29e2 C3       		ret
 5713              		.cfi_endproc
 5714              	.LFE1135:
 5716              		.section	.rodata
 5717 0b94 00000000 		.align 8
 5718              	.LC70:
 5719 0b98 556E6861 		.string	"Unhandled exception in CHECK_EQUAL(data.length, mask.length)"
 5719      6E646C65 
 5719      64206578 
 5719      63657074 
 5719      696F6E20 
 5720 0bd5 000000   		.align 8
 5721              	.LC71:
 5722 0bd8 556E6861 		.string	"Unhandled exception in CHECK_ARRAY_EQUAL(expectedWriteMap, mask.data)"
 5722      6E646C65 
 5722      64206578 
 5722      63657074 
 5722      696F6E20 
 5723              		.text
 5724              		.globl	_Z18testDeriveWriteMapPKcS0_
 5726              	_Z18testDeriveWriteMapPKcS0_:
 5727              	.LFB1136:
 277:testHexIO.cpp **** 
 278:testHexIO.cpp **** 
 279:testHexIO.cpp **** void testDeriveWriteMap(const char *inputData, const char *expectedWriteMap) {
 5728              		.loc 4 279 0
 5729              		.cfi_startproc
 5730              		.cfi_personality 0x3,__gxx_personality_v0
 5731              		.cfi_lsda 0x3,.LLSDA1136
 5732 29e3 55       		pushq	%rbp
 5733              		.cfi_def_cfa_offset 16
 5734              		.cfi_offset 6, -16
 5735 29e4 4889E5   		movq	%rsp, %rbp
 5736              		.cfi_def_cfa_register 6
 5737 29e7 53       		pushq	%rbx
 5738 29e8 4881EC88 		subq	$136, %rsp
 5738      000000
 5739              		.cfi_offset 3, -24
 5740 29ef 4889BD78 		movq	%rdi, -136(%rbp)
 5740      FFFFFF
 5741 29f6 4889B570 		movq	%rsi, -144(%rbp)
 5741      FFFFFF
 5742              	.LBB30:
 280:testHexIO.cpp **** 	Buffer data, mask;
 281:testHexIO.cpp **** 	BufferStatus status;
 282:testHexIO.cpp **** 	status = bufInitialise(&data, 1024, '.', NULL);
 5743              		.loc 4 282 0
 5744 29fd 488D4590 		leaq	-112(%rbp), %rax
 5745 2a01 B9000000 		movl	$0, %ecx
 5745      00
 5746 2a06 BA2E0000 		movl	$46, %edx
 5746      00
 5747 2a0b BE000400 		movl	$1024, %esi
 5747      00
 5748 2a10 4889C7   		movq	%rax, %rdi
 5749              	.LEHB229:
 5750 2a13 E8000000 		call	bufInitialise
 5750      00
 5751              	.LEHE229:
 5752 2a18 894580   		movl	%eax, -128(%rbp)
 5753              	.LEHB230:
 283:testHexIO.cpp **** 	CHECK_EQUAL(BUF_SUCCESS, status);
 5754              		.loc 4 283 0
 5755 2a1b E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 5755      00
 5756 2a20 488B08   		movq	(%rax), %rcx
 5757 2a23 488D45D0 		leaq	-48(%rbp), %rax
 5758 2a27 BA1B0100 		movl	$283, %edx
 5758      00
 5759 2a2c 4889CE   		movq	%rcx, %rsi
 5760 2a2f 4889C7   		movq	%rax, %rdi
 5761 2a32 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 5761      00
 5762              		.loc 4 283 0 is_stmt 0 discriminator 1
 5763 2a37 C745B000 		movl	$0, -80(%rbp)
 5763      000000
 5764 2a3e E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 5764      00
 5765 2a43 488B00   		movq	(%rax), %rax
 5766 2a46 488D4DD0 		leaq	-48(%rbp), %rcx
 5767 2a4a 488D5580 		leaq	-128(%rbp), %rdx
 5768 2a4e 488D75B0 		leaq	-80(%rbp), %rsi
 5769 2a52 4889C7   		movq	%rax, %rdi
 5770 2a55 E8000000 		call	_ZN8UnitTest10CheckEqualI12BufferStatusS1_EEvRNS_11TestResultsERKT_RKT0_RKNS_11TestDetailsE
 5770      00
 5771              	.LEHE230:
 5772              	.L300:
 284:testHexIO.cpp **** 	status = bufInitialise(&mask, 1024, 0x00, NULL);
 5773              		.loc 4 284 0 is_stmt 1
 5774 2a5a 488D45B0 		leaq	-80(%rbp), %rax
 5775 2a5e B9000000 		movl	$0, %ecx
 5775      00
 5776 2a63 BA000000 		movl	$0, %edx
 5776      00
 5777 2a68 BE000400 		movl	$1024, %esi
 5777      00
 5778 2a6d 4889C7   		movq	%rax, %rdi
 5779              	.LEHB231:
 5780 2a70 E8000000 		call	bufInitialise
 5780      00
 5781              	.LEHE231:
 5782 2a75 894580   		movl	%eax, -128(%rbp)
 5783              	.LEHB232:
 285:testHexIO.cpp **** 	CHECK_EQUAL(BUF_SUCCESS, status);
 5784              		.loc 4 285 0
 5785 2a78 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 5785      00
 5786 2a7d 488B08   		movq	(%rax), %rcx
 5787 2a80 488D45D0 		leaq	-48(%rbp), %rax
 5788 2a84 BA1D0100 		movl	$285, %edx
 5788      00
 5789 2a89 4889CE   		movq	%rcx, %rsi
 5790 2a8c 4889C7   		movq	%rax, %rdi
 5791 2a8f E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 5791      00
 5792              		.loc 4 285 0 is_stmt 0 discriminator 1
 5793 2a94 C7458400 		movl	$0, -124(%rbp)
 5793      000000
 5794 2a9b E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 5794      00
 5795 2aa0 488B00   		movq	(%rax), %rax
 5796 2aa3 488D4DD0 		leaq	-48(%rbp), %rcx
 5797 2aa7 488D5580 		leaq	-128(%rbp), %rdx
 5798 2aab 488D7584 		leaq	-124(%rbp), %rsi
 5799 2aaf 4889C7   		movq	%rax, %rdi
 5800 2ab2 E8000000 		call	_ZN8UnitTest10CheckEqualI12BufferStatusS1_EEvRNS_11TestResultsERKT_RKT0_RKNS_11TestDetailsE
 5800      00
 5801              	.LEHE232:
 5802              	.L303:
 286:testHexIO.cpp **** 	status = bufWriteBlock(&data, 0x00000000, (const uint8 *)inputData, strlen(inputData), NULL);
 5803              		.loc 4 286 0 is_stmt 1
 5804 2ab7 488B8578 		movq	-136(%rbp), %rax
 5804      FFFFFF
 5805 2abe 4889C7   		movq	%rax, %rdi
 5806 2ac1 E8000000 		call	strlen
 5806      00
 5807 2ac6 4889C1   		movq	%rax, %rcx
 5808 2ac9 488B9578 		movq	-136(%rbp), %rdx
 5808      FFFFFF
 5809 2ad0 488D4590 		leaq	-112(%rbp), %rax
 5810 2ad4 41B80000 		movl	$0, %r8d
 5810      0000
 5811 2ada BE000000 		movl	$0, %esi
 5811      00
 5812 2adf 4889C7   		movq	%rax, %rdi
 5813              	.LEHB233:
 5814 2ae2 E8000000 		call	bufWriteBlock
 5814      00
 5815              	.LEHE233:
 5816 2ae7 894580   		movl	%eax, -128(%rbp)
 5817              	.LEHB234:
 287:testHexIO.cpp **** 	CHECK_EQUAL(BUF_SUCCESS, status);
 5818              		.loc 4 287 0
 5819 2aea E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 5819      00
 5820 2aef 488B08   		movq	(%rax), %rcx
 5821 2af2 488D45D0 		leaq	-48(%rbp), %rax
 5822 2af6 BA1F0100 		movl	$287, %edx
 5822      00
 5823 2afb 4889CE   		movq	%rcx, %rsi
 5824 2afe 4889C7   		movq	%rax, %rdi
 5825 2b01 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 5825      00
 5826              		.loc 4 287 0 is_stmt 0 discriminator 1
 5827 2b06 C7458400 		movl	$0, -124(%rbp)
 5827      000000
 5828 2b0d E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 5828      00
 5829 2b12 488B00   		movq	(%rax), %rax
 5830 2b15 488D4DD0 		leaq	-48(%rbp), %rcx
 5831 2b19 488D5580 		leaq	-128(%rbp), %rdx
 5832 2b1d 488D7584 		leaq	-124(%rbp), %rsi
 5833 2b21 4889C7   		movq	%rax, %rdi
 5834 2b24 E8000000 		call	_ZN8UnitTest10CheckEqualI12BufferStatusS1_EEvRNS_11TestResultsERKT_RKT0_RKNS_11TestDetailsE
 5834      00
 5835              	.LEHE234:
 5836              	.L306:
 288:testHexIO.cpp **** 	status = bufDeriveMask(&data, &mask, NULL);
 5837              		.loc 4 288 0 is_stmt 1
 5838 2b29 488D4DB0 		leaq	-80(%rbp), %rcx
 5839 2b2d 488D4590 		leaq	-112(%rbp), %rax
 5840 2b31 BA000000 		movl	$0, %edx
 5840      00
 5841 2b36 4889CE   		movq	%rcx, %rsi
 5842 2b39 4889C7   		movq	%rax, %rdi
 5843              	.LEHB235:
 5844 2b3c E8000000 		call	bufDeriveMask
 5844      00
 5845              	.LEHE235:
 5846 2b41 894580   		movl	%eax, -128(%rbp)
 5847              	.LEHB236:
 289:testHexIO.cpp **** 	CHECK_EQUAL(BUF_SUCCESS, status);
 5848              		.loc 4 289 0
 5849 2b44 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 5849      00
 5850 2b49 488B08   		movq	(%rax), %rcx
 5851 2b4c 488D45D0 		leaq	-48(%rbp), %rax
 5852 2b50 BA210100 		movl	$289, %edx
 5852      00
 5853 2b55 4889CE   		movq	%rcx, %rsi
 5854 2b58 4889C7   		movq	%rax, %rdi
 5855 2b5b E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 5855      00
 5856              		.loc 4 289 0 is_stmt 0 discriminator 1
 5857 2b60 C7458400 		movl	$0, -124(%rbp)
 5857      000000
 5858 2b67 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 5858      00
 5859 2b6c 488B00   		movq	(%rax), %rax
 5860 2b6f 488D4DD0 		leaq	-48(%rbp), %rcx
 5861 2b73 488D5580 		leaq	-128(%rbp), %rdx
 5862 2b77 488D7584 		leaq	-124(%rbp), %rsi
 5863 2b7b 4889C7   		movq	%rax, %rdi
 5864 2b7e E8000000 		call	_ZN8UnitTest10CheckEqualI12BufferStatusS1_EEvRNS_11TestResultsERKT_RKT0_RKNS_11TestDetailsE
 5864      00
 5865              	.LEHE236:
 5866              	.L309:
 5867              	.LEHB237:
 290:testHexIO.cpp **** 	CHECK_EQUAL(data.length, mask.length);
 5868              		.loc 4 290 0 is_stmt 1
 5869 2b83 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 5869      00
 5870 2b88 488B08   		movq	(%rax), %rcx
 5871 2b8b 488D45D0 		leaq	-48(%rbp), %rax
 5872 2b8f BA220100 		movl	$290, %edx
 5872      00
 5873 2b94 4889CE   		movq	%rcx, %rsi
 5874 2b97 4889C7   		movq	%rax, %rdi
 5875 2b9a E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 5875      00
 5876              		.loc 4 290 0 is_stmt 0 discriminator 1
 5877 2b9f E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 5877      00
 5878 2ba4 488B00   		movq	(%rax), %rax
 5879 2ba7 488D55D0 		leaq	-48(%rbp), %rdx
 5880 2bab 488D4DB0 		leaq	-80(%rbp), %rcx
 5881 2baf 488D7908 		leaq	8(%rcx), %rdi
 5882 2bb3 488D4D90 		leaq	-112(%rbp), %rcx
 5883 2bb7 488D7108 		leaq	8(%rcx), %rsi
 5884 2bbb 4889D1   		movq	%rdx, %rcx
 5885 2bbe 4889FA   		movq	%rdi, %rdx
 5886 2bc1 4889C7   		movq	%rax, %rdi
 5887 2bc4 E8000000 		call	_ZN8UnitTest10CheckEqualImmEEvRNS_11TestResultsERKT_RKT0_RKNS_11TestDetailsE
 5887      00
 5888              	.LEHE237:
 5889              	.L312:
 5890              	.LBB31:
 291:testHexIO.cpp **** 	for ( size_t i = 0; i < mask.length; i++ ) {
 5891              		.loc 4 291 0 is_stmt 1
 5892 2bc9 48C74588 		movq	$0, -120(%rbp)
 5892      00000000 
 5893 2bd1 EB35     		jmp	.L294
 5894              	.L297:
 292:testHexIO.cpp **** 		if ( mask.data[i] ) {
 5895              		.loc 4 292 0
 5896 2bd3 488B55B0 		movq	-80(%rbp), %rdx
 5897 2bd7 488B4588 		movq	-120(%rbp), %rax
 5898 2bdb 4801D0   		addq	%rdx, %rax
 5899 2bde 0FB600   		movzbl	(%rax), %eax
 5900 2be1 84C0     		testb	%al, %al
 5901 2be3 7410     		je	.L295
 293:testHexIO.cpp **** 			mask.data[i] = '*';
 5902              		.loc 4 293 0
 5903 2be5 488B55B0 		movq	-80(%rbp), %rdx
 5904 2be9 488B4588 		movq	-120(%rbp), %rax
 5905 2bed 4801D0   		addq	%rdx, %rax
 5906 2bf0 C6002A   		movb	$42, (%rax)
 5907 2bf3 EB0E     		jmp	.L296
 5908              	.L295:
 294:testHexIO.cpp **** 		} else {
 295:testHexIO.cpp **** 			mask.data[i] = '.';
 5909              		.loc 4 295 0
 5910 2bf5 488B55B0 		movq	-80(%rbp), %rdx
 5911 2bf9 488B4588 		movq	-120(%rbp), %rax
 5912 2bfd 4801D0   		addq	%rdx, %rax
 5913 2c00 C6002E   		movb	$46, (%rax)
 5914              	.L296:
 291:testHexIO.cpp **** 		if ( mask.data[i] ) {
 5915              		.loc 4 291 0
 5916 2c03 48834588 		addq	$1, -120(%rbp)
 5916      01
 5917              	.L294:
 291:testHexIO.cpp **** 		if ( mask.data[i] ) {
 5918              		.loc 4 291 0 is_stmt 0 discriminator 1
 5919 2c08 488B45B8 		movq	-72(%rbp), %rax
 5920 2c0c 483B4588 		cmpq	-120(%rbp), %rax
 5921 2c10 77C1     		ja	.L297
 5922              	.LEHB238:
 5923              	.LBE31:
 296:testHexIO.cpp **** 		}
 297:testHexIO.cpp **** 	}
 298:testHexIO.cpp **** 	CHECK_ARRAY_EQUAL(expectedWriteMap, mask.data, (int)mask.length);
 5924              		.loc 4 298 0 is_stmt 1
 5925 2c12 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 5925      00
 5926 2c17 488B08   		movq	(%rax), %rcx
 5927 2c1a 488D45D0 		leaq	-48(%rbp), %rax
 5928 2c1e BA2A0100 		movl	$298, %edx
 5928      00
 5929 2c23 4889CE   		movq	%rcx, %rsi
 5930 2c26 4889C7   		movq	%rax, %rdi
 5931 2c29 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 5931      00
 5932              		.loc 4 298 0 is_stmt 0 discriminator 1
 5933 2c2e 488B45B8 		movq	-72(%rbp), %rax
 5934 2c32 89C3     		movl	%eax, %ebx
 5935 2c34 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 5935      00
 5936 2c39 488B00   		movq	(%rax), %rax
 5937 2c3c 488D4DD0 		leaq	-48(%rbp), %rcx
 5938 2c40 488D55B0 		leaq	-80(%rbp), %rdx
 5939 2c44 488DB570 		leaq	-144(%rbp), %rsi
 5939      FFFFFF
 5940 2c4b 4989C8   		movq	%rcx, %r8
 5941 2c4e 89D9     		movl	%ebx, %ecx
 5942 2c50 4889C7   		movq	%rax, %rdi
 5943 2c53 E8000000 		call	_ZN8UnitTest15CheckArrayEqualIPKcPhEEvRNS_11TestResultsERKT_RKT0_iRKNS_11TestDetailsE
 5943      00
 5944              	.LEHE238:
 5945              	.L315:
 299:testHexIO.cpp **** 	bufDestroy(&data);
 5946              		.loc 4 299 0 is_stmt 1
 5947 2c58 488D4590 		leaq	-112(%rbp), %rax
 5948 2c5c 4889C7   		movq	%rax, %rdi
 5949              	.LEHB239:
 5950 2c5f E8000000 		call	bufDestroy
 5950      00
 300:testHexIO.cpp **** 	bufDestroy(&mask);
 5951              		.loc 4 300 0
 5952 2c64 488D45B0 		leaq	-80(%rbp), %rax
 5953 2c68 4889C7   		movq	%rax, %rdi
 5954 2c6b E8000000 		call	bufDestroy
 5954      00
 5955              	.LEHE239:
 5956 2c70 E92E0200 		jmp	.L328
 5956      00
 5957              	.L317:
 5958 2c75 4889C3   		movq	%rax, %rbx
 283:testHexIO.cpp **** 	status = bufInitialise(&mask, 1024, 0x00, NULL);
 5959              		.loc 4 283 0
 5960 2c78 E8000000 		call	__cxa_end_catch
 5960      00
 5961 2c7d 4889D8   		movq	%rbx, %rax
 5962 2c80 4889C7   		movq	%rax, %rdi
 5963              	.LEHB240:
 5964 2c83 E8000000 		call	_Unwind_Resume
 5964      00
 5965              	.LEHE240:
 5966              	.L316:
 5967 2c88 4889C7   		movq	%rax, %rdi
 5968 2c8b E8000000 		call	__cxa_begin_catch
 5968      00
 5969              	.LEHB241:
 5970 2c90 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 5970      00
 5971 2c95 488B08   		movq	(%rax), %rcx
 5972 2c98 488D45D0 		leaq	-48(%rbp), %rax
 5973 2c9c BA1B0100 		movl	$283, %edx
 5973      00
 5974 2ca1 4889CE   		movq	%rcx, %rsi
 5975 2ca4 4889C7   		movq	%rax, %rdi
 5976 2ca7 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 5976      00
 283:testHexIO.cpp **** 	status = bufInitialise(&mask, 1024, 0x00, NULL);
 5977              		.loc 4 283 0 is_stmt 0 discriminator 1
 5978 2cac E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 5978      00
 5979 2cb1 488B00   		movq	(%rax), %rax
 5980 2cb4 488D4DD0 		leaq	-48(%rbp), %rcx
 5981 2cb8 BA000000 		movl	$.LC4, %edx
 5981      00
 5982 2cbd 4889CE   		movq	%rcx, %rsi
 5983 2cc0 4889C7   		movq	%rax, %rdi
 5984 2cc3 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 5984      00
 5985              	.LEHE241:
 5986              	.LEHB242:
 5987 2cc8 E8000000 		call	__cxa_end_catch
 5987      00
 5988              	.LEHE242:
 5989 2ccd E988FDFF 		jmp	.L300
 5989      FF
 5990              	.L319:
 5991 2cd2 4889C3   		movq	%rax, %rbx
 285:testHexIO.cpp **** 	status = bufWriteBlock(&data, 0x00000000, (const uint8 *)inputData, strlen(inputData), NULL);
 5992              		.loc 4 285 0 is_stmt 1
 5993 2cd5 E8000000 		call	__cxa_end_catch
 5993      00
 5994 2cda 4889D8   		movq	%rbx, %rax
 5995 2cdd 4889C7   		movq	%rax, %rdi
 5996              	.LEHB243:
 5997 2ce0 E8000000 		call	_Unwind_Resume
 5997      00
 5998              	.LEHE243:
 5999              	.L318:
 6000 2ce5 4889C7   		movq	%rax, %rdi
 6001 2ce8 E8000000 		call	__cxa_begin_catch
 6001      00
 6002              	.LEHB244:
 6003 2ced E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 6003      00
 6004 2cf2 488B08   		movq	(%rax), %rcx
 6005 2cf5 488D45D0 		leaq	-48(%rbp), %rax
 6006 2cf9 BA1D0100 		movl	$285, %edx
 6006      00
 6007 2cfe 4889CE   		movq	%rcx, %rsi
 6008 2d01 4889C7   		movq	%rax, %rdi
 6009 2d04 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 6009      00
 285:testHexIO.cpp **** 	status = bufWriteBlock(&data, 0x00000000, (const uint8 *)inputData, strlen(inputData), NULL);
 6010              		.loc 4 285 0 is_stmt 0 discriminator 1
 6011 2d09 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 6011      00
 6012 2d0e 488B00   		movq	(%rax), %rax
 6013 2d11 488D4DD0 		leaq	-48(%rbp), %rcx
 6014 2d15 BA000000 		movl	$.LC4, %edx
 6014      00
 6015 2d1a 4889CE   		movq	%rcx, %rsi
 6016 2d1d 4889C7   		movq	%rax, %rdi
 6017 2d20 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 6017      00
 6018              	.LEHE244:
 6019              	.LEHB245:
 6020 2d25 E8000000 		call	__cxa_end_catch
 6020      00
 6021              	.LEHE245:
 6022 2d2a E988FDFF 		jmp	.L303
 6022      FF
 6023              	.L321:
 6024 2d2f 4889C3   		movq	%rax, %rbx
 287:testHexIO.cpp **** 	status = bufDeriveMask(&data, &mask, NULL);
 6025              		.loc 4 287 0 is_stmt 1
 6026 2d32 E8000000 		call	__cxa_end_catch
 6026      00
 6027 2d37 4889D8   		movq	%rbx, %rax
 6028 2d3a 4889C7   		movq	%rax, %rdi
 6029              	.LEHB246:
 6030 2d3d E8000000 		call	_Unwind_Resume
 6030      00
 6031              	.LEHE246:
 6032              	.L320:
 6033 2d42 4889C7   		movq	%rax, %rdi
 6034 2d45 E8000000 		call	__cxa_begin_catch
 6034      00
 6035              	.LEHB247:
 6036 2d4a E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 6036      00
 6037 2d4f 488B08   		movq	(%rax), %rcx
 6038 2d52 488D45D0 		leaq	-48(%rbp), %rax
 6039 2d56 BA1F0100 		movl	$287, %edx
 6039      00
 6040 2d5b 4889CE   		movq	%rcx, %rsi
 6041 2d5e 4889C7   		movq	%rax, %rdi
 6042 2d61 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 6042      00
 287:testHexIO.cpp **** 	status = bufDeriveMask(&data, &mask, NULL);
 6043              		.loc 4 287 0 is_stmt 0 discriminator 1
 6044 2d66 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 6044      00
 6045 2d6b 488B00   		movq	(%rax), %rax
 6046 2d6e 488D4DD0 		leaq	-48(%rbp), %rcx
 6047 2d72 BA000000 		movl	$.LC4, %edx
 6047      00
 6048 2d77 4889CE   		movq	%rcx, %rsi
 6049 2d7a 4889C7   		movq	%rax, %rdi
 6050 2d7d E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 6050      00
 6051              	.LEHE247:
 6052              	.LEHB248:
 6053 2d82 E8000000 		call	__cxa_end_catch
 6053      00
 6054              	.LEHE248:
 6055 2d87 E99DFDFF 		jmp	.L306
 6055      FF
 6056              	.L323:
 6057 2d8c 4889C3   		movq	%rax, %rbx
 289:testHexIO.cpp **** 	CHECK_EQUAL(data.length, mask.length);
 6058              		.loc 4 289 0 is_stmt 1
 6059 2d8f E8000000 		call	__cxa_end_catch
 6059      00
 6060 2d94 4889D8   		movq	%rbx, %rax
 6061 2d97 4889C7   		movq	%rax, %rdi
 6062              	.LEHB249:
 6063 2d9a E8000000 		call	_Unwind_Resume
 6063      00
 6064              	.LEHE249:
 6065              	.L322:
 6066 2d9f 4889C7   		movq	%rax, %rdi
 6067 2da2 E8000000 		call	__cxa_begin_catch
 6067      00
 6068              	.LEHB250:
 6069 2da7 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 6069      00
 6070 2dac 488B08   		movq	(%rax), %rcx
 6071 2daf 488D45D0 		leaq	-48(%rbp), %rax
 6072 2db3 BA210100 		movl	$289, %edx
 6072      00
 6073 2db8 4889CE   		movq	%rcx, %rsi
 6074 2dbb 4889C7   		movq	%rax, %rdi
 6075 2dbe E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 6075      00
 289:testHexIO.cpp **** 	CHECK_EQUAL(data.length, mask.length);
 6076              		.loc 4 289 0 is_stmt 0 discriminator 1
 6077 2dc3 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 6077      00
 6078 2dc8 488B00   		movq	(%rax), %rax
 6079 2dcb 488D4DD0 		leaq	-48(%rbp), %rcx
 6080 2dcf BA000000 		movl	$.LC4, %edx
 6080      00
 6081 2dd4 4889CE   		movq	%rcx, %rsi
 6082 2dd7 4889C7   		movq	%rax, %rdi
 6083 2dda E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 6083      00
 6084              	.LEHE250:
 6085              	.LEHB251:
 6086 2ddf E8000000 		call	__cxa_end_catch
 6086      00
 6087              	.LEHE251:
 6088 2de4 E99AFDFF 		jmp	.L309
 6088      FF
 6089              	.L325:
 6090 2de9 4889C3   		movq	%rax, %rbx
 290:testHexIO.cpp **** 	for ( size_t i = 0; i < mask.length; i++ ) {
 6091              		.loc 4 290 0 is_stmt 1
 6092 2dec E8000000 		call	__cxa_end_catch
 6092      00
 6093 2df1 4889D8   		movq	%rbx, %rax
 6094 2df4 4889C7   		movq	%rax, %rdi
 6095              	.LEHB252:
 6096 2df7 E8000000 		call	_Unwind_Resume
 6096      00
 6097              	.LEHE252:
 6098              	.L324:
 6099 2dfc 4889C7   		movq	%rax, %rdi
 6100 2dff E8000000 		call	__cxa_begin_catch
 6100      00
 6101              	.LEHB253:
 6102 2e04 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 6102      00
 6103 2e09 488B08   		movq	(%rax), %rcx
 6104 2e0c 488D45D0 		leaq	-48(%rbp), %rax
 6105 2e10 BA220100 		movl	$290, %edx
 6105      00
 6106 2e15 4889CE   		movq	%rcx, %rsi
 6107 2e18 4889C7   		movq	%rax, %rdi
 6108 2e1b E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 6108      00
 290:testHexIO.cpp **** 	for ( size_t i = 0; i < mask.length; i++ ) {
 6109              		.loc 4 290 0 is_stmt 0 discriminator 1
 6110 2e20 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 6110      00
 6111 2e25 488B00   		movq	(%rax), %rax
 6112 2e28 488D4DD0 		leaq	-48(%rbp), %rcx
 6113 2e2c BA000000 		movl	$.LC70, %edx
 6113      00
 6114 2e31 4889CE   		movq	%rcx, %rsi
 6115 2e34 4889C7   		movq	%rax, %rdi
 6116 2e37 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 6116      00
 6117              	.LEHE253:
 6118              	.LEHB254:
 6119 2e3c E8000000 		call	__cxa_end_catch
 6119      00
 6120              	.LEHE254:
 6121 2e41 E983FDFF 		jmp	.L312
 6121      FF
 6122              	.L327:
 6123 2e46 4889C3   		movq	%rax, %rbx
 298:testHexIO.cpp **** 	bufDestroy(&data);
 6124              		.loc 4 298 0 is_stmt 1
 6125 2e49 E8000000 		call	__cxa_end_catch
 6125      00
 6126 2e4e 4889D8   		movq	%rbx, %rax
 6127 2e51 4889C7   		movq	%rax, %rdi
 6128              	.LEHB255:
 6129 2e54 E8000000 		call	_Unwind_Resume
 6129      00
 6130              	.LEHE255:
 6131              	.L326:
 6132 2e59 4889C7   		movq	%rax, %rdi
 6133 2e5c E8000000 		call	__cxa_begin_catch
 6133      00
 6134              	.LEHB256:
 6135 2e61 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv
 6135      00
 6136 2e66 488B08   		movq	(%rax), %rcx
 6137 2e69 488D45D0 		leaq	-48(%rbp), %rax
 6138 2e6d BA2A0100 		movl	$298, %edx
 6138      00
 6139 2e72 4889CE   		movq	%rcx, %rsi
 6140 2e75 4889C7   		movq	%rax, %rdi
 6141 2e78 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i
 6141      00
 298:testHexIO.cpp **** 	bufDestroy(&data);
 6142              		.loc 4 298 0 is_stmt 0 discriminator 1
 6143 2e7d E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv
 6143      00
 6144 2e82 488B00   		movq	(%rax), %rax
 6145 2e85 488D4DD0 		leaq	-48(%rbp), %rcx
 6146 2e89 BA000000 		movl	$.LC71, %edx
 6146      00
 6147 2e8e 4889CE   		movq	%rcx, %rsi
 6148 2e91 4889C7   		movq	%rax, %rdi
 6149 2e94 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 6149      00
 6150              	.LEHE256:
 6151              	.LEHB257:
 6152 2e99 E8000000 		call	__cxa_end_catch
 6152      00
 6153              	.LEHE257:
 6154 2e9e E9B5FDFF 		jmp	.L315
 6154      FF
 6155              	.L328:
 6156              	.LBE30:
 301:testHexIO.cpp **** }
 6157              		.loc 4 301 0 is_stmt 1
 6158 2ea3 4881C488 		addq	$136, %rsp
 6158      000000
 6159 2eaa 5B       		popq	%rbx
 6160 2eab 5D       		popq	%rbp
 6161              		.cfi_def_cfa 7, 8
 6162 2eac C3       		ret
 6163              		.cfi_endproc
 6164              	.LFE1136:
 6165              		.section	.gcc_except_table
 6166              		.align 4
 6167              	.LLSDA1136:
 6168 0558 FF       		.byte	0xff
 6169 0559 03       		.byte	0x3
 6170 055a A401     		.uleb128 .LLSDATT1136-.LLSDATTD1136
 6171              	.LLSDATTD1136:
 6172 055c 01       		.byte	0x1
 6173 055d 9B01     		.uleb128 .LLSDACSE1136-.LLSDACSB1136
 6174              	.LLSDACSB1136:
 6175 055f 30       		.uleb128 .LEHB229-.LFB1136
 6176 0560 05       		.uleb128 .LEHE229-.LEHB229
 6177 0561 00       		.uleb128 0
 6178 0562 00       		.uleb128 0
 6179 0563 38       		.uleb128 .LEHB230-.LFB1136
 6180 0564 3F       		.uleb128 .LEHE230-.LEHB230
 6181 0565 A505     		.uleb128 .L316-.LFB1136
 6182 0567 01       		.uleb128 0x1
 6183 0568 8D01     		.uleb128 .LEHB231-.LFB1136
 6184 056a 05       		.uleb128 .LEHE231-.LEHB231
 6185 056b 00       		.uleb128 0
 6186 056c 00       		.uleb128 0
 6187 056d 9501     		.uleb128 .LEHB232-.LFB1136
 6188 056f 3F       		.uleb128 .LEHE232-.LEHB232
 6189 0570 8206     		.uleb128 .L318-.LFB1136
 6190 0572 01       		.uleb128 0x1
 6191 0573 FF01     		.uleb128 .LEHB233-.LFB1136
 6192 0575 05       		.uleb128 .LEHE233-.LEHB233
 6193 0576 00       		.uleb128 0
 6194 0577 00       		.uleb128 0
 6195 0578 8702     		.uleb128 .LEHB234-.LFB1136
 6196 057a 3F       		.uleb128 .LEHE234-.LEHB234
 6197 057b DF06     		.uleb128 .L320-.LFB1136
 6198 057d 01       		.uleb128 0x1
 6199 057e D902     		.uleb128 .LEHB235-.LFB1136
 6200 0580 05       		.uleb128 .LEHE235-.LEHB235
 6201 0581 00       		.uleb128 0
 6202 0582 00       		.uleb128 0
 6203 0583 E102     		.uleb128 .LEHB236-.LFB1136
 6204 0585 3F       		.uleb128 .LEHE236-.LEHB236
 6205 0586 BC07     		.uleb128 .L322-.LFB1136
 6206 0588 01       		.uleb128 0x1
 6207 0589 A003     		.uleb128 .LEHB237-.LFB1136
 6208 058b 46       		.uleb128 .LEHE237-.LEHB237
 6209 058c 9908     		.uleb128 .L324-.LFB1136
 6210 058e 01       		.uleb128 0x1
 6211 058f AF04     		.uleb128 .LEHB238-.LFB1136
 6212 0591 46       		.uleb128 .LEHE238-.LEHB238
 6213 0592 F608     		.uleb128 .L326-.LFB1136
 6214 0594 01       		.uleb128 0x1
 6215 0595 FC04     		.uleb128 .LEHB239-.LFB1136
 6216 0597 11       		.uleb128 .LEHE239-.LEHB239
 6217 0598 00       		.uleb128 0
 6218 0599 00       		.uleb128 0
 6219 059a A005     		.uleb128 .LEHB240-.LFB1136
 6220 059c 05       		.uleb128 .LEHE240-.LEHB240
 6221 059d 00       		.uleb128 0
 6222 059e 00       		.uleb128 0
 6223 059f AD05     		.uleb128 .LEHB241-.LFB1136
 6224 05a1 38       		.uleb128 .LEHE241-.LEHB241
 6225 05a2 9205     		.uleb128 .L317-.LFB1136
 6226 05a4 00       		.uleb128 0
 6227 05a5 E505     		.uleb128 .LEHB242-.LFB1136
 6228 05a7 05       		.uleb128 .LEHE242-.LEHB242
 6229 05a8 00       		.uleb128 0
 6230 05a9 00       		.uleb128 0
 6231 05aa FD05     		.uleb128 .LEHB243-.LFB1136
 6232 05ac 05       		.uleb128 .LEHE243-.LEHB243
 6233 05ad 00       		.uleb128 0
 6234 05ae 00       		.uleb128 0
 6235 05af 8A06     		.uleb128 .LEHB244-.LFB1136
 6236 05b1 38       		.uleb128 .LEHE244-.LEHB244
 6237 05b2 EF05     		.uleb128 .L319-.LFB1136
 6238 05b4 00       		.uleb128 0
 6239 05b5 C206     		.uleb128 .LEHB245-.LFB1136
 6240 05b7 05       		.uleb128 .LEHE245-.LEHB245
 6241 05b8 00       		.uleb128 0
 6242 05b9 00       		.uleb128 0
 6243 05ba DA06     		.uleb128 .LEHB246-.LFB1136
 6244 05bc 05       		.uleb128 .LEHE246-.LEHB246
 6245 05bd 00       		.uleb128 0
 6246 05be 00       		.uleb128 0
 6247 05bf E706     		.uleb128 .LEHB247-.LFB1136
 6248 05c1 38       		.uleb128 .LEHE247-.LEHB247
 6249 05c2 CC06     		.uleb128 .L321-.LFB1136
 6250 05c4 00       		.uleb128 0
 6251 05c5 9F07     		.uleb128 .LEHB248-.LFB1136
 6252 05c7 05       		.uleb128 .LEHE248-.LEHB248
 6253 05c8 00       		.uleb128 0
 6254 05c9 00       		.uleb128 0
 6255 05ca B707     		.uleb128 .LEHB249-.LFB1136
 6256 05cc 05       		.uleb128 .LEHE249-.LEHB249
 6257 05cd 00       		.uleb128 0
 6258 05ce 00       		.uleb128 0
 6259 05cf C407     		.uleb128 .LEHB250-.LFB1136
 6260 05d1 38       		.uleb128 .LEHE250-.LEHB250
 6261 05d2 A907     		.uleb128 .L323-.LFB1136
 6262 05d4 00       		.uleb128 0
 6263 05d5 FC07     		.uleb128 .LEHB251-.LFB1136
 6264 05d7 05       		.uleb128 .LEHE251-.LEHB251
 6265 05d8 00       		.uleb128 0
 6266 05d9 00       		.uleb128 0
 6267 05da 9408     		.uleb128 .LEHB252-.LFB1136
 6268 05dc 05       		.uleb128 .LEHE252-.LEHB252
 6269 05dd 00       		.uleb128 0
 6270 05de 00       		.uleb128 0
 6271 05df A108     		.uleb128 .LEHB253-.LFB1136
 6272 05e1 38       		.uleb128 .LEHE253-.LEHB253
 6273 05e2 8608     		.uleb128 .L325-.LFB1136
 6274 05e4 00       		.uleb128 0
 6275 05e5 D908     		.uleb128 .LEHB254-.LFB1136
 6276 05e7 05       		.uleb128 .LEHE254-.LEHB254
 6277 05e8 00       		.uleb128 0
 6278 05e9 00       		.uleb128 0
 6279 05ea F108     		.uleb128 .LEHB255-.LFB1136
 6280 05ec 05       		.uleb128 .LEHE255-.LEHB255
 6281 05ed 00       		.uleb128 0
 6282 05ee 00       		.uleb128 0
 6283 05ef FE08     		.uleb128 .LEHB256-.LFB1136
 6284 05f1 38       		.uleb128 .LEHE256-.LEHB256
 6285 05f2 E308     		.uleb128 .L327-.LFB1136
 6286 05f4 00       		.uleb128 0
 6287 05f5 B609     		.uleb128 .LEHB257-.LFB1136
 6288 05f7 05       		.uleb128 .LEHE257-.LEHB257
 6289 05f8 00       		.uleb128 0
 6290 05f9 00       		.uleb128 0
 6291              	.LLSDACSE1136:
 6292 05fa 01       		.byte	0x1
 6293 05fb 00       		.byte	0
 6294              		.align 4
 6295 05fc 00000000 		.long	0
 6296              	
 6297              	.LLSDATT1136:
 6298              		.text
 6300              		.section	.rodata
 6301              	.LC72:
 6302 0c1e 48657849 		.string	"HexIO_testDeriveWriteMap"
 6302      4F5F7465 
 6302      73744465 
 6302      72697665 
 6302      57726974 
 6303              		.section	.text._ZN28TestHexIO_testDeriveWriteMapC2Ev,"axG",@progbits,_ZN28TestHexIO_testDeriveWrit
 6304              		.align 2
 6305              		.weak	_ZN28TestHexIO_testDeriveWriteMapC2Ev
 6307              	_ZN28TestHexIO_testDeriveWriteMapC2Ev:
 6308              	.LFB1138:
 302:testHexIO.cpp **** 
 303:testHexIO.cpp **** TEST(HexIO_testDeriveWriteMap) {
 6309              		.loc 4 303 0
 6310              		.cfi_startproc
 6311 0000 55       		pushq	%rbp
 6312              		.cfi_def_cfa_offset 16
 6313              		.cfi_offset 6, -16
 6314 0001 4889E5   		movq	%rsp, %rbp
 6315              		.cfi_def_cfa_register 6
 6316 0004 4883EC10 		subq	$16, %rsp
 6317 0008 48897DF8 		movq	%rdi, -8(%rbp)
 6318              	.LBB32:
 6319              		.loc 4 303 0
 6320 000c E8000000 		call	_ZN13UnitTestSuite12GetSuiteNameEv
 6320      00
 6321 0011 4889C2   		movq	%rax, %rdx
 6322 0014 488B45F8 		movq	-8(%rbp), %rax
 6323 0018 41B82F01 		movl	$303, %r8d
 6323      0000
 6324 001e B9000000 		movl	$.LC1, %ecx
 6324      00
 6325 0023 BE000000 		movl	$.LC72, %esi
 6325      00
 6326 0028 4889C7   		movq	%rax, %rdi
 6327 002b E8000000 		call	_ZN8UnitTest4TestC2EPKcS2_S2_i
 6327      00
 6328 0030 488B45F8 		movq	-8(%rbp), %rax
 6329 0034 48C70000 		movq	$_ZTV28TestHexIO_testDeriveWriteMap+16, (%rax)
 6329      000000
 6330              	.LBE32:
 6331 003b C9       		leave
 6332              		.cfi_def_cfa 7, 8
 6333 003c C3       		ret
 6334              		.cfi_endproc
 6335              	.LFE1138:
 6337              		.weak	_ZN28TestHexIO_testDeriveWriteMapC1Ev
 6338              		.set	_ZN28TestHexIO_testDeriveWriteMapC1Ev,_ZN28TestHexIO_testDeriveWriteMapC2Ev
 6339              		.globl	testHexIO_testDeriveWriteMapInstance
 6340              		.bss
 6341 02f9 00000000 		.align 32
 6341      000000
 6344              	testHexIO_testDeriveWriteMapInstance:
 6345 0300 00000000 		.zero	56
 6345      00000000 
 6345      00000000 
 6345      00000000 
 6345      00000000 
 6346              		.globl	adderHexIO_testDeriveWriteMap
 6349              	adderHexIO_testDeriveWriteMap:
 6350 0338 00       		.zero	1
 6351              		.section	.rodata
 6352              	.LC73:
 6353 0c37 2A2A2A2A 		.string	"*****........*****"
 6353      2A2E2E2E 
 6353      2E2E2E2E 
 6353      2E2A2A2A 
 6353      2A2A00
 6354              	.LC74:
 6355 0c4a 48656C6C 		.string	"Hello........World"
 6355      6F2E2E2E 
 6355      2E2E2E2E 
 6355      2E576F72 
 6355      6C6400
 6356              	.LC75:
 6357 0c5d 2A2A2A2A 		.string	"*****************"
 6357      2A2A2A2A 
 6357      2A2A2A2A 
 6357      2A2A2A2A 
 6357      2A00
 6358              	.LC76:
 6359 0c6f 48656C6C 		.string	"Hello.......World"
 6359      6F2E2E2E 
 6359      2E2E2E2E 
 6359      576F726C 
 6359      6400
 6360              		.text
 6361 2ead 90       		.align 2
 6362              		.globl	_ZNK28TestHexIO_testDeriveWriteMap7RunImplEv
 6364              	_ZNK28TestHexIO_testDeriveWriteMap7RunImplEv:
 6365              	.LFB1140:
 6366              		.loc 4 303 0
 6367              		.cfi_startproc
 6368 2eae 55       		pushq	%rbp
 6369              		.cfi_def_cfa_offset 16
 6370              		.cfi_offset 6, -16
 6371 2eaf 4889E5   		movq	%rsp, %rbp
 6372              		.cfi_def_cfa_register 6
 6373 2eb2 4883EC10 		subq	$16, %rsp
 6374 2eb6 48897DF8 		movq	%rdi, -8(%rbp)
 304:testHexIO.cpp **** 	testDeriveWriteMap("Hello........World", "*****........*****");
 6375              		.loc 4 304 0
 6376 2eba BE000000 		movl	$.LC73, %esi
 6376      00
 6377 2ebf BF000000 		movl	$.LC74, %edi
 6377      00
 6378 2ec4 E8000000 		call	_Z18testDeriveWriteMapPKcS0_
 6378      00
 305:testHexIO.cpp **** 	testDeriveWriteMap("Hello.......World", "*****************");
 6379              		.loc 4 305 0
 6380 2ec9 BE000000 		movl	$.LC75, %esi
 6380      00
 6381 2ece BF000000 		movl	$.LC76, %edi
 6381      00
 6382 2ed3 E8000000 		call	_Z18testDeriveWriteMapPKcS0_
 6382      00
 306:testHexIO.cpp **** }
 6383              		.loc 4 306 0
 6384 2ed8 C9       		leave
 6385              		.cfi_def_cfa 7, 8
 6386 2ed9 C3       		ret
 6387              		.cfi_endproc
 6388              	.LFE1140:
 6390              		.section	.text._ZN8UnitTest15MemoryOutStreamD1Ev,"axG",@progbits,_ZN8UnitTest15MemoryOutStreamD1Ev
 6391              		.align 2
 6392              		.weak	_ZN8UnitTest15MemoryOutStreamD1Ev
 6394              	_ZN8UnitTest15MemoryOutStreamD1Ev:
 6395              	.LFB1171:
  13:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/libs/libutpp/MemoryOutStream.h **** {
 6396              		.loc 3 13 0
 6397              		.cfi_startproc
 6398              		.cfi_personality 0x3,__gxx_personality_v0
 6399              		.cfi_lsda 0x3,.LLSDA1171
 6400 0000 55       		pushq	%rbp
 6401              		.cfi_def_cfa_offset 16
 6402              		.cfi_offset 6, -16
 6403 0001 4889E5   		movq	%rsp, %rbp
 6404              		.cfi_def_cfa_register 6
 6405 0004 53       		pushq	%rbx
 6406 0005 4883EC18 		subq	$24, %rsp
 6407              		.cfi_offset 3, -24
 6408 0009 48897DE8 		movq	%rdi, -24(%rbp)
 6409              	.LBB33:
  13:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/libs/libutpp/MemoryOutStream.h **** {
 6410              		.loc 3 13 0
 6411 000d BA000000 		movl	$_ZTVN8UnitTest15MemoryOutStreamE+24, %edx
 6411      00
 6412 0012 488B45E8 		movq	-24(%rbp), %rax
 6413 0016 488910   		movq	%rdx, (%rax)
 6414 0019 BA600000 		movl	$96, %edx
 6414      00
 6415 001e 488B45E8 		movq	-24(%rbp), %rax
 6416 0022 4801C2   		addq	%rax, %rdx
 6417 0025 B8000000 		movl	$_ZTVN8UnitTest15MemoryOutStreamE+64, %eax
 6417      00
 6418 002a 488902   		movq	%rax, (%rdx)
 6419 002d 488B45E8 		movq	-24(%rbp), %rax
 6420 0031 4883C058 		addq	$88, %rax
 6421 0035 4889C7   		movq	%rax, %rdi
 6422              	.LEHB258:
 6423 0038 E8000000 		call	_ZNSsD1Ev
 6423      00
 6424              	.LEHE258:
  13:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/libs/libutpp/MemoryOutStream.h **** {
 6425              		.loc 3 13 0 is_stmt 0 discriminator 10
 6426 003d BA000000 		movl	$_ZTTN8UnitTest15MemoryOutStreamE+8, %edx
 6426      00
 6427 0042 488B45E8 		movq	-24(%rbp), %rax
 6428 0046 4889D6   		movq	%rdx, %rsi
 6429 0049 4889C7   		movq	%rax, %rdi
 6430              	.LEHB259:
 6431 004c E8000000 		call	_ZNSt19basic_ostringstreamIcSt11char_traitsIcESaIcEED2Ev
 6431      00
 6432              	.LEHE259:
  13:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/libs/libutpp/MemoryOutStream.h **** {
 6433              		.loc 3 13 0 discriminator 14
 6434 0051 B8020000 		movl	$2, %eax
 6434      00
 6435 0056 85C0     		testl	%eax, %eax
 6436 0058 7410     		je	.L332
  13:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/libs/libutpp/MemoryOutStream.h **** {
 6437              		.loc 3 13 0 discriminator 15
 6438 005a 488B45E8 		movq	-24(%rbp), %rax
 6439 005e 4883C060 		addq	$96, %rax
 6440 0062 4889C7   		movq	%rax, %rdi
 6441              	.LEHB260:
 6442 0065 E8000000 		call	_ZNSt9basic_iosIcSt11char_traitsIcEED2Ev
 6442      00
 6443              	.LEHE260:
 6444              	.L332:
 6445              	.LBE33:
  13:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/libs/libutpp/MemoryOutStream.h **** {
 6446              		.loc 3 13 0 discriminator 16
 6447 006a B8000000 		movl	$0, %eax
 6447      00
 6448 006f 85C0     		testl	%eax, %eax
 6449 0071 744E     		je	.L339
  13:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/libs/libutpp/MemoryOutStream.h **** {
 6450              		.loc 3 13 0 discriminator 1
 6451 0073 488B45E8 		movq	-24(%rbp), %rax
 6452 0077 4889C7   		movq	%rax, %rdi
 6453 007a E8000000 		call	_ZdlPv
 6453      00
 6454 007f EB40     		jmp	.L339
 6455              	.L337:
 6456 0081 4889C3   		movq	%rax, %rbx
 6457              	.LBB34:
  13:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/libs/libutpp/MemoryOutStream.h **** {
 6458              		.loc 3 13 0
 6459 0084 BA000000 		movl	$_ZTTN8UnitTest15MemoryOutStreamE+8, %edx
 6459      00
 6460 0089 488B45E8 		movq	-24(%rbp), %rax
 6461 008d 4889D6   		movq	%rdx, %rsi
 6462 0090 4889C7   		movq	%rax, %rdi
 6463 0093 E8000000 		call	_ZNSt19basic_ostringstreamIcSt11char_traitsIcESaIcEED2Ev
 6463      00
 6464 0098 EB03     		jmp	.L335
 6465              	.L338:
 6466 009a 4889C3   		movq	%rax, %rbx
 6467              	.L335:
 6468 009d B8020000 		movl	$2, %eax
 6468      00
 6469 00a2 85C0     		testl	%eax, %eax
 6470 00a4 7410     		je	.L336
  13:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/libs/libutpp/MemoryOutStream.h **** {
 6471              		.loc 3 13 0 discriminator 20
 6472 00a6 488B45E8 		movq	-24(%rbp), %rax
 6473 00aa 4883C060 		addq	$96, %rax
 6474 00ae 4889C7   		movq	%rax, %rdi
 6475 00b1 E8000000 		call	_ZNSt9basic_iosIcSt11char_traitsIcEED2Ev
 6475      00
 6476              	.L336:
 6477 00b6 4889D8   		movq	%rbx, %rax
 6478 00b9 4889C7   		movq	%rax, %rdi
 6479              	.LEHB261:
 6480 00bc E8000000 		call	_Unwind_Resume
 6480      00
 6481              	.LEHE261:
 6482              	.L339:
 6483              	.LBE34:
  13:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/libs/libutpp/MemoryOutStream.h **** {
 6484              		.loc 3 13 0
 6485 00c1 4883C418 		addq	$24, %rsp
 6486 00c5 5B       		popq	%rbx
 6487 00c6 5D       		popq	%rbp
 6488              		.cfi_def_cfa 7, 8
 6489 00c7 C3       		ret
 6490              		.cfi_endproc
 6491              	.LFE1171:
 6492              		.section	.gcc_except_table
 6493              	.LLSDA1171:
 6494 0600 FF       		.byte	0xff
 6495 0601 FF       		.byte	0xff
 6496 0602 01       		.byte	0x1
 6497 0603 13       		.uleb128 .LLSDACSE1171-.LLSDACSB1171
 6498              	.LLSDACSB1171:
 6499 0604 38       		.uleb128 .LEHB258-.LFB1171
 6500 0605 05       		.uleb128 .LEHE258-.LEHB258
 6501 0606 8101     		.uleb128 .L337-.LFB1171
 6502 0608 00       		.uleb128 0
 6503 0609 4C       		.uleb128 .LEHB259-.LFB1171
 6504 060a 05       		.uleb128 .LEHE259-.LEHB259
 6505 060b 9A01     		.uleb128 .L338-.LFB1171
 6506 060d 00       		.uleb128 0
 6507 060e 65       		.uleb128 .LEHB260-.LFB1171
 6508 060f 05       		.uleb128 .LEHE260-.LEHB260
 6509 0610 00       		.uleb128 0
 6510 0611 00       		.uleb128 0
 6511 0612 BC01     		.uleb128 .LEHB261-.LFB1171
 6512 0614 05       		.uleb128 .LEHE261-.LEHB261
 6513 0615 00       		.uleb128 0
 6514 0616 00       		.uleb128 0
 6515              	.LLSDACSE1171:
 6516              		.section	.text._ZN8UnitTest15MemoryOutStreamD1Ev,"axG",@progbits,_ZN8UnitTest15MemoryOutStreamD1Ev
 6518              		.set	.LTHUNK0,_ZN8UnitTest15MemoryOutStreamD1Ev
 6519              		.weak	_ZTv0_n24_N8UnitTest15MemoryOutStreamD1Ev
 6521              	_ZTv0_n24_N8UnitTest15MemoryOutStreamD1Ev:
 6522              	.LFB1320:
  13:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/libs/libutpp/MemoryOutStream.h **** {
 6523              		.loc 3 13 0 is_stmt 1
 6524              		.cfi_startproc
 6525 00c8 4C8B17   		movq	(%rdi), %r10
 6526 00cb 49037AE8 		addq	-24(%r10), %rdi
 6527 00cf E92CFFFF 		jmp	.LTHUNK0
 6527      FF
 6528              		.cfi_endproc
 6529              	.LFE1320:
 6531              		.section	.text._ZN8UnitTest15MemoryOutStreamD0Ev,"axG",@progbits,_ZN8UnitTest15MemoryOutStreamD0Ev
 6532              		.align 2
 6533              		.weak	_ZN8UnitTest15MemoryOutStreamD0Ev
 6535              	_ZN8UnitTest15MemoryOutStreamD0Ev:
 6536              	.LFB1172:
  13:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/libs/libutpp/MemoryOutStream.h **** {
 6537              		.loc 3 13 0
 6538              		.cfi_startproc
 6539 0000 55       		pushq	%rbp
 6540              		.cfi_def_cfa_offset 16
 6541              		.cfi_offset 6, -16
 6542 0001 4889E5   		movq	%rsp, %rbp
 6543              		.cfi_def_cfa_register 6
 6544 0004 4883EC10 		subq	$16, %rsp
 6545 0008 48897DF8 		movq	%rdi, -8(%rbp)
  13:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/libs/libutpp/MemoryOutStream.h **** {
 6546              		.loc 3 13 0
 6547 000c 488B45F8 		movq	-8(%rbp), %rax
 6548 0010 4889C7   		movq	%rax, %rdi
 6549 0013 E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 6549      00
 6550 0018 488B45F8 		movq	-8(%rbp), %rax
 6551 001c 4889C7   		movq	%rax, %rdi
 6552 001f E8000000 		call	_ZdlPv
 6552      00
 6553 0024 C9       		leave
 6554              		.cfi_def_cfa 7, 8
 6555 0025 C3       		ret
 6556              		.cfi_endproc
 6557              	.LFE1172:
 6559              		.set	.LTHUNK1,_ZN8UnitTest15MemoryOutStreamD0Ev
 6560              		.weak	_ZTv0_n24_N8UnitTest15MemoryOutStreamD0Ev
 6562              	_ZTv0_n24_N8UnitTest15MemoryOutStreamD0Ev:
 6563              	.LFB1321:
  13:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/libs/libutpp/MemoryOutStream.h **** {
 6564              		.loc 3 13 0
 6565              		.cfi_startproc
 6566 0026 4C8B17   		movq	(%rdi), %r10
 6567 0029 49037AE8 		addq	-24(%r10), %rdi
 6568 002d EBD1     		jmp	.LTHUNK1
 6569              		.cfi_endproc
 6570              	.LFE1321:
 6572              		.section	.rodata
 6573              	.LC77:
 6574 0c81 45787065 		.string	"Expected "
 6574      63746564 
 6574      2000
 6575              	.LC78:
 6576 0c8b 20627574 		.string	" but was "
 6576      20776173 
 6576      2000
 6577              		.section	.text._ZN8UnitTest10CheckEqualI12BufferStatusS1_EEvRNS_11TestResultsERKT_RKT0_RKNS_11Test
 6578              		.weak	_ZN8UnitTest10CheckEqualI12BufferStatusS1_EEvRNS_11TestResultsERKT_RKT0_RKNS_11TestDetailsE
 6580              	_ZN8UnitTest10CheckEqualI12BufferStatusS1_EEvRNS_11TestResultsERKT_RKT0_RKNS_11TestDetailsE:
 6581              	.LFB1168:
 6582              		.file 5 "/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/libs/libutpp/Checks.h"
   1:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/libs/libutpp/Checks.h **** #ifndef UNITTEST_CHECKS_H
   2:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/libs/libutpp/Checks.h **** #define UNITTEST_CHECKS_H
   3:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/libs/libutpp/Checks.h **** 
   4:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/libs/libutpp/Checks.h **** #include "Config.h"
   5:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/libs/libutpp/Checks.h **** #include "TestResults.h"
   6:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/libs/libutpp/Checks.h **** #include "MemoryOutStream.h"
   7:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/libs/libutpp/Checks.h **** 
   8:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/libs/libutpp/Checks.h **** namespace UnitTest {
   9:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/libs/libutpp/Checks.h **** 
  10:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/libs/libutpp/Checks.h **** 
  11:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/libs/libutpp/Checks.h **** template< typename Value >
  12:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/libs/libutpp/Checks.h **** bool Check(Value const value)
  13:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/libs/libutpp/Checks.h **** {
  14:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/libs/libutpp/Checks.h ****     return !!value; // doing double negative to avoid silly VS warnings
  15:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/libs/libutpp/Checks.h **** }
  16:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/libs/libutpp/Checks.h **** 
  17:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/libs/libutpp/Checks.h **** 
  18:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/libs/libutpp/Checks.h **** template< typename Expected, typename Actual >
  19:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/libs/libutpp/Checks.h **** void CheckEqual(TestResults& results, Expected const& expected, Actual const& actual, TestDetails c
 6583              		.loc 5 19 0
 6584              		.cfi_startproc
 6585              		.cfi_personality 0x3,__gxx_personality_v0
 6586              		.cfi_lsda 0x3,.LLSDA1168
 6587 0000 55       		pushq	%rbp
 6588              		.cfi_def_cfa_offset 16
 6589              		.cfi_offset 6, -16
 6590 0001 4889E5   		movq	%rsp, %rbp
 6591              		.cfi_def_cfa_register 6
 6592 0004 4154     		pushq	%r12
 6593 0006 53       		pushq	%rbx
 6594 0007 4881EC90 		subq	$400, %rsp
 6594      010000
 6595              		.cfi_offset 12, -24
 6596              		.cfi_offset 3, -32
 6597 000e 4889BD78 		movq	%rdi, -392(%rbp)
 6597      FEFFFF
 6598 0015 4889B570 		movq	%rsi, -400(%rbp)
 6598      FEFFFF
 6599 001c 48899568 		movq	%rdx, -408(%rbp)
 6599      FEFFFF
 6600 0023 48898D60 		movq	%rcx, -416(%rbp)
 6600      FEFFFF
 6601              	.LBB35:
 6602              	.LBB36:
  20:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/libs/libutpp/Checks.h **** {
  21:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/libs/libutpp/Checks.h ****     if (!(expected == actual))
 6603              		.loc 5 21 0
 6604 002a 488B8570 		movq	-400(%rbp), %rax
 6604      FEFFFF
 6605 0031 8B10     		movl	(%rax), %edx
 6606 0033 488B8568 		movq	-408(%rbp), %rax
 6606      FEFFFF
 6607 003a 8B00     		movl	(%rax), %eax
 6608 003c 39C2     		cmpl	%eax, %edx
 6609 003e 0F84B500 		je	.L346
 6609      0000
 6610              	.LBB37:
  22:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/libs/libutpp/Checks.h ****     {
  23:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/libs/libutpp/Checks.h ****         UnitTest::MemoryOutStream stream;
 6611              		.loc 5 23 0
 6612 0044 488D8580 		leaq	-384(%rbp), %rax
 6612      FEFFFF
 6613 004b 4889C7   		movq	%rax, %rdi
 6614              	.LEHB262:
 6615 004e E8000000 		call	_ZN8UnitTest15MemoryOutStreamC1Ev
 6615      00
 6616              	.LEHE262:
  24:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/libs/libutpp/Checks.h ****         stream << "Expected " << expected << " but was " << actual;
 6617              		.loc 5 24 0
 6618 0053 488B8568 		movq	-408(%rbp), %rax
 6618      FEFFFF
 6619 005a 8B00     		movl	(%rax), %eax
 6620 005c 89C3     		movl	%eax, %ebx
 6621 005e 488B8570 		movq	-400(%rbp), %rax
 6621      FEFFFF
 6622 0065 8B00     		movl	(%rax), %eax
 6623 0067 4189C4   		movl	%eax, %r12d
 6624 006a 488D8580 		leaq	-384(%rbp), %rax
 6624      FEFFFF
 6625 0071 BE000000 		movl	$.LC77, %esi
 6625      00
 6626 0076 4889C7   		movq	%rax, %rdi
 6627              	.LEHB263:
 6628 0079 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
 6628      00
 6629 007e 4489E6   		movl	%r12d, %esi
 6630 0081 4889C7   		movq	%rax, %rdi
 6631 0084 E8000000 		call	_ZNSolsEi
 6631      00
 6632              		.loc 5 24 0 is_stmt 0 discriminator 1
 6633 0089 BE000000 		movl	$.LC78, %esi
 6633      00
 6634 008e 4889C7   		movq	%rax, %rdi
 6635 0091 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
 6635      00
 6636 0096 89DE     		movl	%ebx, %esi
 6637 0098 4889C7   		movq	%rax, %rdi
 6638 009b E8000000 		call	_ZNSolsEi
 6638      00
  25:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/libs/libutpp/Checks.h **** 
  26:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/libs/libutpp/Checks.h ****         results.OnTestFailure(details, stream.GetText());
 6639              		.loc 5 26 0 is_stmt 1
 6640 00a0 488D8580 		leaq	-384(%rbp), %rax
 6640      FEFFFF
 6641 00a7 4889C7   		movq	%rax, %rdi
 6642 00aa E8000000 		call	_ZNK8UnitTest15MemoryOutStream7GetTextEv
 6642      00
 6643 00af 4889C2   		movq	%rax, %rdx
 6644 00b2 488B8D60 		movq	-416(%rbp), %rcx
 6644      FEFFFF
 6645 00b9 488B8578 		movq	-392(%rbp), %rax
 6645      FEFFFF
 6646 00c0 4889CE   		movq	%rcx, %rsi
 6647 00c3 4889C7   		movq	%rax, %rdi
 6648 00c6 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 6648      00
 6649              	.LEHE263:
 6650              		.loc 5 26 0 is_stmt 0 discriminator 1
 6651 00cb 488D8580 		leaq	-384(%rbp), %rax
 6651      FEFFFF
 6652 00d2 4889C7   		movq	%rax, %rdi
 6653              	.LEHB264:
 6654 00d5 E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 6654      00
 6655              	.LEHE264:
 6656              	.LBE37:
 6657 00da EB1D     		jmp	.L346
 6658              	.L345:
 6659 00dc 4889C3   		movq	%rax, %rbx
 6660              	.LBB38:
 6661              		.loc 5 26 0
 6662 00df 488D8580 		leaq	-384(%rbp), %rax
 6662      FEFFFF
 6663 00e6 4889C7   		movq	%rax, %rdi
 6664 00e9 E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 6664      00
 6665 00ee 4889D8   		movq	%rbx, %rax
 6666 00f1 4889C7   		movq	%rax, %rdi
 6667              	.LEHB265:
 6668 00f4 E8000000 		call	_Unwind_Resume
 6668      00
 6669              	.LEHE265:
 6670              	.L346:
 6671              	.LBE38:
 6672              	.LBE36:
 6673              	.LBE35:
  27:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/libs/libutpp/Checks.h ****     }
  28:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/libs/libutpp/Checks.h **** }
 6674              		.loc 5 28 0 is_stmt 1
 6675 00f9 4881C490 		addq	$400, %rsp
 6675      010000
 6676 0100 5B       		popq	%rbx
 6677 0101 415C     		popq	%r12
 6678 0103 5D       		popq	%rbp
 6679              		.cfi_def_cfa 7, 8
 6680 0104 C3       		ret
 6681              		.cfi_endproc
 6682              	.LFE1168:
 6683              		.section	.gcc_except_table
 6684              	.LLSDA1168:
 6685 0617 FF       		.byte	0xff
 6686 0618 FF       		.byte	0xff
 6687 0619 01       		.byte	0x1
 6688 061a 13       		.uleb128 .LLSDACSE1168-.LLSDACSB1168
 6689              	.LLSDACSB1168:
 6690 061b 4E       		.uleb128 .LEHB262-.LFB1168
 6691 061c 05       		.uleb128 .LEHE262-.LEHB262
 6692 061d 00       		.uleb128 0
 6693 061e 00       		.uleb128 0
 6694 061f 79       		.uleb128 .LEHB263-.LFB1168
 6695 0620 52       		.uleb128 .LEHE263-.LEHB263
 6696 0621 DC01     		.uleb128 .L345-.LFB1168
 6697 0623 00       		.uleb128 0
 6698 0624 D501     		.uleb128 .LEHB264-.LFB1168
 6699 0626 05       		.uleb128 .LEHE264-.LEHB264
 6700 0627 00       		.uleb128 0
 6701 0628 00       		.uleb128 0
 6702 0629 F401     		.uleb128 .LEHB265-.LFB1168
 6703 062b 05       		.uleb128 .LEHE265-.LEHB265
 6704 062c 00       		.uleb128 0
 6705 062d 00       		.uleb128 0
 6706              	.LLSDACSE1168:
 6707              		.section	.text._ZN8UnitTest10CheckEqualI12BufferStatusS1_EEvRNS_11TestResultsERKT_RKT0_RKNS_11Test
 6709              		.section	.text._ZN8UnitTest10CheckEqualIihEEvRNS_11TestResultsERKT_RKT0_RKNS_11TestDetailsE,"axG",
 6710              		.weak	_ZN8UnitTest10CheckEqualIihEEvRNS_11TestResultsERKT_RKT0_RKNS_11TestDetailsE
 6712              	_ZN8UnitTest10CheckEqualIihEEvRNS_11TestResultsERKT_RKT0_RKNS_11TestDetailsE:
 6713              	.LFB1173:
  19:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/libs/libutpp/Checks.h **** {
 6714              		.loc 5 19 0
 6715              		.cfi_startproc
 6716              		.cfi_personality 0x3,__gxx_personality_v0
 6717              		.cfi_lsda 0x3,.LLSDA1173
 6718 0000 55       		pushq	%rbp
 6719              		.cfi_def_cfa_offset 16
 6720              		.cfi_offset 6, -16
 6721 0001 4889E5   		movq	%rsp, %rbp
 6722              		.cfi_def_cfa_register 6
 6723 0004 4154     		pushq	%r12
 6724 0006 53       		pushq	%rbx
 6725 0007 4881EC90 		subq	$400, %rsp
 6725      010000
 6726              		.cfi_offset 12, -24
 6727              		.cfi_offset 3, -32
 6728 000e 4889BD78 		movq	%rdi, -392(%rbp)
 6728      FEFFFF
 6729 0015 4889B570 		movq	%rsi, -400(%rbp)
 6729      FEFFFF
 6730 001c 48899568 		movq	%rdx, -408(%rbp)
 6730      FEFFFF
 6731 0023 48898D60 		movq	%rcx, -416(%rbp)
 6731      FEFFFF
 6732              	.LBB39:
 6733              	.LBB40:
  21:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/libs/libutpp/Checks.h ****     {
 6734              		.loc 5 21 0
 6735 002a 488B8570 		movq	-400(%rbp), %rax
 6735      FEFFFF
 6736 0031 8B10     		movl	(%rax), %edx
 6737 0033 488B8568 		movq	-408(%rbp), %rax
 6737      FEFFFF
 6738 003a 0FB600   		movzbl	(%rax), %eax
 6739 003d 0FB6C0   		movzbl	%al, %eax
 6740 0040 39C2     		cmpl	%eax, %edx
 6741 0042 0F84B500 		je	.L351
 6741      0000
 6742              	.LBB41:
  23:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/libs/libutpp/Checks.h ****         stream << "Expected " << expected << " but was " << actual;
 6743              		.loc 5 23 0
 6744 0048 488D8580 		leaq	-384(%rbp), %rax
 6744      FEFFFF
 6745 004f 4889C7   		movq	%rax, %rdi
 6746              	.LEHB266:
 6747 0052 E8000000 		call	_ZN8UnitTest15MemoryOutStreamC1Ev
 6747      00
 6748              	.LEHE266:
  24:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/libs/libutpp/Checks.h **** 
 6749              		.loc 5 24 0
 6750 0057 488B8568 		movq	-408(%rbp), %rax
 6750      FEFFFF
 6751 005e 0FB600   		movzbl	(%rax), %eax
 6752 0061 0FB6D8   		movzbl	%al, %ebx
 6753 0064 488B8570 		movq	-400(%rbp), %rax
 6753      FEFFFF
 6754 006b 448B20   		movl	(%rax), %r12d
 6755 006e 488D8580 		leaq	-384(%rbp), %rax
 6755      FEFFFF
 6756 0075 BE000000 		movl	$.LC77, %esi
 6756      00
 6757 007a 4889C7   		movq	%rax, %rdi
 6758              	.LEHB267:
 6759 007d E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
 6759      00
 6760 0082 4489E6   		movl	%r12d, %esi
 6761 0085 4889C7   		movq	%rax, %rdi
 6762 0088 E8000000 		call	_ZNSolsEi
 6762      00
  24:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/libs/libutpp/Checks.h **** 
 6763              		.loc 5 24 0 is_stmt 0 discriminator 1
 6764 008d BE000000 		movl	$.LC78, %esi
 6764      00
 6765 0092 4889C7   		movq	%rax, %rdi
 6766 0095 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
 6766      00
 6767 009a 89DE     		movl	%ebx, %esi
 6768 009c 4889C7   		movq	%rax, %rdi
 6769 009f E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_h
 6769      00
  26:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/libs/libutpp/Checks.h ****     }
 6770              		.loc 5 26 0 is_stmt 1
 6771 00a4 488D8580 		leaq	-384(%rbp), %rax
 6771      FEFFFF
 6772 00ab 4889C7   		movq	%rax, %rdi
 6773 00ae E8000000 		call	_ZNK8UnitTest15MemoryOutStream7GetTextEv
 6773      00
 6774 00b3 4889C2   		movq	%rax, %rdx
 6775 00b6 488B8D60 		movq	-416(%rbp), %rcx
 6775      FEFFFF
 6776 00bd 488B8578 		movq	-392(%rbp), %rax
 6776      FEFFFF
 6777 00c4 4889CE   		movq	%rcx, %rsi
 6778 00c7 4889C7   		movq	%rax, %rdi
 6779 00ca E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 6779      00
 6780              	.LEHE267:
  26:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/libs/libutpp/Checks.h ****     }
 6781              		.loc 5 26 0 is_stmt 0 discriminator 1
 6782 00cf 488D8580 		leaq	-384(%rbp), %rax
 6782      FEFFFF
 6783 00d6 4889C7   		movq	%rax, %rdi
 6784              	.LEHB268:
 6785 00d9 E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 6785      00
 6786              	.LEHE268:
 6787              	.LBE41:
 6788 00de EB1D     		jmp	.L351
 6789              	.L350:
 6790 00e0 4889C3   		movq	%rax, %rbx
 6791              	.LBB42:
  26:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/libs/libutpp/Checks.h ****     }
 6792              		.loc 5 26 0
 6793 00e3 488D8580 		leaq	-384(%rbp), %rax
 6793      FEFFFF
 6794 00ea 4889C7   		movq	%rax, %rdi
 6795 00ed E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 6795      00
 6796 00f2 4889D8   		movq	%rbx, %rax
 6797 00f5 4889C7   		movq	%rax, %rdi
 6798              	.LEHB269:
 6799 00f8 E8000000 		call	_Unwind_Resume
 6799      00
 6800              	.LEHE269:
 6801              	.L351:
 6802              	.LBE42:
 6803              	.LBE40:
 6804              	.LBE39:
 6805              		.loc 5 28 0 is_stmt 1
 6806 00fd 4881C490 		addq	$400, %rsp
 6806      010000
 6807 0104 5B       		popq	%rbx
 6808 0105 415C     		popq	%r12
 6809 0107 5D       		popq	%rbp
 6810              		.cfi_def_cfa 7, 8
 6811 0108 C3       		ret
 6812              		.cfi_endproc
 6813              	.LFE1173:
 6814              		.section	.gcc_except_table
 6815              	.LLSDA1173:
 6816 062e FF       		.byte	0xff
 6817 062f FF       		.byte	0xff
 6818 0630 01       		.byte	0x1
 6819 0631 13       		.uleb128 .LLSDACSE1173-.LLSDACSB1173
 6820              	.LLSDACSB1173:
 6821 0632 52       		.uleb128 .LEHB266-.LFB1173
 6822 0633 05       		.uleb128 .LEHE266-.LEHB266
 6823 0634 00       		.uleb128 0
 6824 0635 00       		.uleb128 0
 6825 0636 7D       		.uleb128 .LEHB267-.LFB1173
 6826 0637 52       		.uleb128 .LEHE267-.LEHB267
 6827 0638 E001     		.uleb128 .L350-.LFB1173
 6828 063a 00       		.uleb128 0
 6829 063b D901     		.uleb128 .LEHB268-.LFB1173
 6830 063d 05       		.uleb128 .LEHE268-.LEHB268
 6831 063e 00       		.uleb128 0
 6832 063f 00       		.uleb128 0
 6833 0640 F801     		.uleb128 .LEHB269-.LFB1173
 6834 0642 05       		.uleb128 .LEHE269-.LEHB269
 6835 0643 00       		.uleb128 0
 6836 0644 00       		.uleb128 0
 6837              	.LLSDACSE1173:
 6838              		.section	.text._ZN8UnitTest10CheckEqualIihEEvRNS_11TestResultsERKT_RKT0_RKNS_11TestDetailsE,"axG",
 6840              		.section	.text._ZN8UnitTest10CheckEqualImmEEvRNS_11TestResultsERKT_RKT0_RKNS_11TestDetailsE,"axG",
 6841              		.weak	_ZN8UnitTest10CheckEqualImmEEvRNS_11TestResultsERKT_RKT0_RKNS_11TestDetailsE
 6843              	_ZN8UnitTest10CheckEqualImmEEvRNS_11TestResultsERKT_RKT0_RKNS_11TestDetailsE:
 6844              	.LFB1174:
  19:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/libs/libutpp/Checks.h **** {
 6845              		.loc 5 19 0
 6846              		.cfi_startproc
 6847              		.cfi_personality 0x3,__gxx_personality_v0
 6848              		.cfi_lsda 0x3,.LLSDA1174
 6849 0000 55       		pushq	%rbp
 6850              		.cfi_def_cfa_offset 16
 6851              		.cfi_offset 6, -16
 6852 0001 4889E5   		movq	%rsp, %rbp
 6853              		.cfi_def_cfa_register 6
 6854 0004 4154     		pushq	%r12
 6855 0006 53       		pushq	%rbx
 6856 0007 4881EC90 		subq	$400, %rsp
 6856      010000
 6857              		.cfi_offset 12, -24
 6858              		.cfi_offset 3, -32
 6859 000e 4889BD78 		movq	%rdi, -392(%rbp)
 6859      FEFFFF
 6860 0015 4889B570 		movq	%rsi, -400(%rbp)
 6860      FEFFFF
 6861 001c 48899568 		movq	%rdx, -408(%rbp)
 6861      FEFFFF
 6862 0023 48898D60 		movq	%rcx, -416(%rbp)
 6862      FEFFFF
 6863              	.LBB43:
 6864              	.LBB44:
  21:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/libs/libutpp/Checks.h ****     {
 6865              		.loc 5 21 0
 6866 002a 488B8570 		movq	-400(%rbp), %rax
 6866      FEFFFF
 6867 0031 488B10   		movq	(%rax), %rdx
 6868 0034 488B8568 		movq	-408(%rbp), %rax
 6868      FEFFFF
 6869 003b 488B00   		movq	(%rax), %rax
 6870 003e 4839C2   		cmpq	%rax, %rdx
 6871 0041 0F84B300 		je	.L356
 6871      0000
 6872              	.LBB45:
  23:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/libs/libutpp/Checks.h ****         stream << "Expected " << expected << " but was " << actual;
 6873              		.loc 5 23 0
 6874 0047 488D8580 		leaq	-384(%rbp), %rax
 6874      FEFFFF
 6875 004e 4889C7   		movq	%rax, %rdi
 6876              	.LEHB270:
 6877 0051 E8000000 		call	_ZN8UnitTest15MemoryOutStreamC1Ev
 6877      00
 6878              	.LEHE270:
  24:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/libs/libutpp/Checks.h **** 
 6879              		.loc 5 24 0
 6880 0056 488B8568 		movq	-408(%rbp), %rax
 6880      FEFFFF
 6881 005d 488B18   		movq	(%rax), %rbx
 6882 0060 488B8570 		movq	-400(%rbp), %rax
 6882      FEFFFF
 6883 0067 4C8B20   		movq	(%rax), %r12
 6884 006a 488D8580 		leaq	-384(%rbp), %rax
 6884      FEFFFF
 6885 0071 BE000000 		movl	$.LC77, %esi
 6885      00
 6886 0076 4889C7   		movq	%rax, %rdi
 6887              	.LEHB271:
 6888 0079 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
 6888      00
 6889 007e 4C89E6   		movq	%r12, %rsi
 6890 0081 4889C7   		movq	%rax, %rdi
 6891 0084 E8000000 		call	_ZNSolsEm
 6891      00
  24:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/libs/libutpp/Checks.h **** 
 6892              		.loc 5 24 0 is_stmt 0 discriminator 1
 6893 0089 BE000000 		movl	$.LC78, %esi
 6893      00
 6894 008e 4889C7   		movq	%rax, %rdi
 6895 0091 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
 6895      00
 6896 0096 4889DE   		movq	%rbx, %rsi
 6897 0099 4889C7   		movq	%rax, %rdi
 6898 009c E8000000 		call	_ZNSolsEm
 6898      00
  26:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/libs/libutpp/Checks.h ****     }
 6899              		.loc 5 26 0 is_stmt 1
 6900 00a1 488D8580 		leaq	-384(%rbp), %rax
 6900      FEFFFF
 6901 00a8 4889C7   		movq	%rax, %rdi
 6902 00ab E8000000 		call	_ZNK8UnitTest15MemoryOutStream7GetTextEv
 6902      00
 6903 00b0 4889C2   		movq	%rax, %rdx
 6904 00b3 488B8D60 		movq	-416(%rbp), %rcx
 6904      FEFFFF
 6905 00ba 488B8578 		movq	-392(%rbp), %rax
 6905      FEFFFF
 6906 00c1 4889CE   		movq	%rcx, %rsi
 6907 00c4 4889C7   		movq	%rax, %rdi
 6908 00c7 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 6908      00
 6909              	.LEHE271:
  26:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/libs/libutpp/Checks.h ****     }
 6910              		.loc 5 26 0 is_stmt 0 discriminator 1
 6911 00cc 488D8580 		leaq	-384(%rbp), %rax
 6911      FEFFFF
 6912 00d3 4889C7   		movq	%rax, %rdi
 6913              	.LEHB272:
 6914 00d6 E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 6914      00
 6915              	.LEHE272:
 6916              	.LBE45:
 6917 00db EB1D     		jmp	.L356
 6918              	.L355:
 6919 00dd 4889C3   		movq	%rax, %rbx
 6920              	.LBB46:
  26:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/libs/libutpp/Checks.h ****     }
 6921              		.loc 5 26 0
 6922 00e0 488D8580 		leaq	-384(%rbp), %rax
 6922      FEFFFF
 6923 00e7 4889C7   		movq	%rax, %rdi
 6924 00ea E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 6924      00
 6925 00ef 4889D8   		movq	%rbx, %rax
 6926 00f2 4889C7   		movq	%rax, %rdi
 6927              	.LEHB273:
 6928 00f5 E8000000 		call	_Unwind_Resume
 6928      00
 6929              	.LEHE273:
 6930              	.L356:
 6931              	.LBE46:
 6932              	.LBE44:
 6933              	.LBE43:
 6934              		.loc 5 28 0 is_stmt 1
 6935 00fa 4881C490 		addq	$400, %rsp
 6935      010000
 6936 0101 5B       		popq	%rbx
 6937 0102 415C     		popq	%r12
 6938 0104 5D       		popq	%rbp
 6939              		.cfi_def_cfa 7, 8
 6940 0105 C3       		ret
 6941              		.cfi_endproc
 6942              	.LFE1174:
 6943              		.section	.gcc_except_table
 6944              	.LLSDA1174:
 6945 0645 FF       		.byte	0xff
 6946 0646 FF       		.byte	0xff
 6947 0647 01       		.byte	0x1
 6948 0648 13       		.uleb128 .LLSDACSE1174-.LLSDACSB1174
 6949              	.LLSDACSB1174:
 6950 0649 51       		.uleb128 .LEHB270-.LFB1174
 6951 064a 05       		.uleb128 .LEHE270-.LEHB270
 6952 064b 00       		.uleb128 0
 6953 064c 00       		.uleb128 0
 6954 064d 79       		.uleb128 .LEHB271-.LFB1174
 6955 064e 53       		.uleb128 .LEHE271-.LEHB271
 6956 064f DD01     		.uleb128 .L355-.LFB1174
 6957 0651 00       		.uleb128 0
 6958 0652 D601     		.uleb128 .LEHB272-.LFB1174
 6959 0654 05       		.uleb128 .LEHE272-.LEHB272
 6960 0655 00       		.uleb128 0
 6961 0656 00       		.uleb128 0
 6962 0657 F501     		.uleb128 .LEHB273-.LFB1174
 6963 0659 05       		.uleb128 .LEHE273-.LEHB273
 6964 065a 00       		.uleb128 0
 6965 065b 00       		.uleb128 0
 6966              	.LLSDACSE1174:
 6967              		.section	.text._ZN8UnitTest10CheckEqualImmEEvRNS_11TestResultsERKT_RKT0_RKNS_11TestDetailsE,"axG",
 6969              		.section	.rodata
 6970              	.LC79:
 6971 0c95 45787065 		.string	"Expected [ "
 6971      63746564 
 6971      205B2000 
 6972              	.LC80:
 6973 0ca1 2000     		.string	" "
 6974              	.LC81:
 6975 0ca3 5D206275 		.string	"] but was [ "
 6975      74207761 
 6975      73205B20 
 6975      00
 6976              	.LC82:
 6977 0cb0 5D00     		.string	"]"
 6978              		.section	.text._ZN8UnitTest15CheckArrayEqualIA4_hPhEEvRNS_11TestResultsERKT_RKT0_iRKNS_11TestDetai
 6979              		.weak	_ZN8UnitTest15CheckArrayEqualIA4_hPhEEvRNS_11TestResultsERKT_RKT0_iRKNS_11TestDetailsE
 6981              	_ZN8UnitTest15CheckArrayEqualIA4_hPhEEvRNS_11TestResultsERKT_RKT0_iRKNS_11TestDetailsE:
 6982              	.LFB1175:
  29:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/libs/libutpp/Checks.h **** 
  30:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/libs/libutpp/Checks.h **** void CheckEqual(TestResults& results, char const* expected, char const* actual, TestDetails const& 
  31:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/libs/libutpp/Checks.h **** 
  32:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/libs/libutpp/Checks.h **** void CheckEqual(TestResults& results, char* expected, char* actual, TestDetails const& details);
  33:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/libs/libutpp/Checks.h **** 
  34:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/libs/libutpp/Checks.h **** void CheckEqual(TestResults& results, char* expected, char const* actual, TestDetails const& detail
  35:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/libs/libutpp/Checks.h **** 
  36:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/libs/libutpp/Checks.h **** void CheckEqual(TestResults& results, char const* expected, char* actual, TestDetails const& detail
  37:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/libs/libutpp/Checks.h **** 
  38:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/libs/libutpp/Checks.h **** template< typename Expected, typename Actual, typename Tolerance >
  39:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/libs/libutpp/Checks.h **** bool AreClose(Expected const& expected, Actual const& actual, Tolerance const& tolerance)
  40:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/libs/libutpp/Checks.h **** {
  41:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/libs/libutpp/Checks.h ****     return (actual >= (expected - tolerance)) && (actual <= (expected + tolerance));
  42:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/libs/libutpp/Checks.h **** }
  43:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/libs/libutpp/Checks.h **** 
  44:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/libs/libutpp/Checks.h **** template< typename Expected, typename Actual, typename Tolerance >
  45:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/libs/libutpp/Checks.h **** void CheckClose(TestResults& results, Expected const& expected, Actual const& actual, Tolerance con
  46:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/libs/libutpp/Checks.h ****                 TestDetails const& details)
  47:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/libs/libutpp/Checks.h **** {
  48:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/libs/libutpp/Checks.h ****     if (!AreClose(expected, actual, tolerance))
  49:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/libs/libutpp/Checks.h ****     { 
  50:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/libs/libutpp/Checks.h ****         UnitTest::MemoryOutStream stream;
  51:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/libs/libutpp/Checks.h ****         stream << "Expected " << expected << " +/- " << tolerance << " but was " << actual;
  52:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/libs/libutpp/Checks.h **** 
  53:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/libs/libutpp/Checks.h ****         results.OnTestFailure(details, stream.GetText());
  54:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/libs/libutpp/Checks.h ****     }
  55:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/libs/libutpp/Checks.h **** }
  56:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/libs/libutpp/Checks.h **** 
  57:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/libs/libutpp/Checks.h **** 
  58:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/libs/libutpp/Checks.h **** template< typename Expected, typename Actual >
  59:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/libs/libutpp/Checks.h **** void CheckArrayEqual(TestResults& results, Expected const& expected, Actual const& actual,
 6983              		.loc 5 59 0
 6984              		.cfi_startproc
 6985              		.cfi_personality 0x3,__gxx_personality_v0
 6986              		.cfi_lsda 0x3,.LLSDA1175
 6987 0000 55       		pushq	%rbp
 6988              		.cfi_def_cfa_offset 16
 6989              		.cfi_offset 6, -16
 6990 0001 4889E5   		movq	%rsp, %rbp
 6991              		.cfi_def_cfa_register 6
 6992 0004 53       		pushq	%rbx
 6993 0005 4881ECB8 		subq	$440, %rsp
 6993      010000
 6994              		.cfi_offset 3, -24
 6995 000c 4889BD68 		movq	%rdi, -408(%rbp)
 6995      FEFFFF
 6996 0013 4889B560 		movq	%rsi, -416(%rbp)
 6996      FEFFFF
 6997 001a 48899558 		movq	%rdx, -424(%rbp)
 6997      FEFFFF
 6998 0021 898D54FE 		movl	%ecx, -428(%rbp)
 6998      FFFF
 6999 0027 4C898548 		movq	%r8, -440(%rbp)
 6999      FEFFFF
 7000              	.LBB47:
  60:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/libs/libutpp/Checks.h ****                 int const count, TestDetails const& details)
  61:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/libs/libutpp/Checks.h **** {
  62:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/libs/libutpp/Checks.h ****     bool equal = true;
 7001              		.loc 5 62 0
 7002 002e C68573FE 		movb	$1, -397(%rbp)
 7002      FFFF01
 7003              	.LBB48:
  63:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/libs/libutpp/Checks.h ****     for (int i = 0; i < count; ++i)
 7004              		.loc 5 63 0
 7005 0035 C78574FE 		movl	$0, -396(%rbp)
 7005      FFFF0000 
 7005      0000
 7006 003f EB4E     		jmp	.L358
 7007              	.L359:
  64:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/libs/libutpp/Checks.h ****         equal &= (expected[i] == actual[i]);
 7008              		.loc 5 64 0 discriminator 2
 7009 0041 0FB68D73 		movzbl	-397(%rbp), %ecx
 7009      FEFFFF
 7010 0048 488B9560 		movq	-416(%rbp), %rdx
 7010      FEFFFF
 7011 004f 8B8574FE 		movl	-396(%rbp), %eax
 7011      FFFF
 7012 0055 4898     		cltq
 7013 0057 0FB61402 		movzbl	(%rdx,%rax), %edx
 7014 005b 488B8558 		movq	-424(%rbp), %rax
 7014      FEFFFF
 7015 0062 488B30   		movq	(%rax), %rsi
 7016 0065 8B8574FE 		movl	-396(%rbp), %eax
 7016      FFFF
 7017 006b 4898     		cltq
 7018 006d 4801F0   		addq	%rsi, %rax
 7019 0070 0FB600   		movzbl	(%rax), %eax
 7020 0073 38C2     		cmpb	%al, %dl
 7021 0075 0F94C0   		sete	%al
 7022 0078 0FB6C0   		movzbl	%al, %eax
 7023 007b 21C8     		andl	%ecx, %eax
 7024 007d 85C0     		testl	%eax, %eax
 7025 007f 0F95C0   		setne	%al
 7026 0082 888573FE 		movb	%al, -397(%rbp)
 7026      FFFF
  63:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/libs/libutpp/Checks.h ****     for (int i = 0; i < count; ++i)
 7027              		.loc 5 63 0 discriminator 2
 7028 0088 838574FE 		addl	$1, -396(%rbp)
 7028      FFFF01
 7029              	.L358:
  63:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/libs/libutpp/Checks.h ****     for (int i = 0; i < count; ++i)
 7030              		.loc 5 63 0 is_stmt 0 discriminator 1
 7031 008f 8B8574FE 		movl	-396(%rbp), %eax
 7031      FFFF
 7032 0095 3B8554FE 		cmpl	-428(%rbp), %eax
 7032      FFFF
 7033 009b 7CA4     		jl	.L359
 7034              	.LBE48:
 7035              	.LBB49:
  65:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/libs/libutpp/Checks.h **** 
  66:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/libs/libutpp/Checks.h ****     if (!equal)
 7036              		.loc 5 66 0 is_stmt 1
 7037 009d 0FB68573 		movzbl	-397(%rbp), %eax
 7037      FEFFFF
 7038 00a4 83F001   		xorl	$1, %eax
 7039 00a7 84C0     		testb	%al, %al
 7040 00a9 0F845301 		je	.L367
 7040      0000
 7041              	.LBB50:
  67:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/libs/libutpp/Checks.h ****     {
  68:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/libs/libutpp/Checks.h ****         UnitTest::MemoryOutStream stream;
 7042              		.loc 5 68 0
 7043 00af 488D8580 		leaq	-384(%rbp), %rax
 7043      FEFFFF
 7044 00b6 4889C7   		movq	%rax, %rdi
 7045              	.LEHB274:
 7046 00b9 E8000000 		call	_ZN8UnitTest15MemoryOutStreamC1Ev
 7046      00
 7047              	.LEHE274:
  69:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/libs/libutpp/Checks.h **** 
  70:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/libs/libutpp/Checks.h **** 		stream << "Expected [ ";
 7048              		.loc 5 70 0
 7049 00be 488D8580 		leaq	-384(%rbp), %rax
 7049      FEFFFF
 7050 00c5 BE000000 		movl	$.LC79, %esi
 7050      00
 7051 00ca 4889C7   		movq	%rax, %rdi
 7052              	.LEHB275:
 7053 00cd E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
 7053      00
 7054              	.LBB51:
  71:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/libs/libutpp/Checks.h **** 
  72:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/libs/libutpp/Checks.h **** 		for (int expectedIndex = 0; expectedIndex < count; ++expectedIndex)
 7055              		.loc 5 72 0
 7056 00d2 C78578FE 		movl	$0, -392(%rbp)
 7056      FFFF0000 
 7056      0000
 7057 00dc EB3B     		jmp	.L361
 7058              	.L362:
  73:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/libs/libutpp/Checks.h ****             stream << expected[expectedIndex] << " ";
 7059              		.loc 5 73 0
 7060 00de 488B9560 		movq	-416(%rbp), %rdx
 7060      FEFFFF
 7061 00e5 8B8578FE 		movl	-392(%rbp), %eax
 7061      FFFF
 7062 00eb 4898     		cltq
 7063 00ed 0FB60402 		movzbl	(%rdx,%rax), %eax
 7064 00f1 0FB6D0   		movzbl	%al, %edx
 7065 00f4 488D8580 		leaq	-384(%rbp), %rax
 7065      FEFFFF
 7066 00fb 89D6     		movl	%edx, %esi
 7067 00fd 4889C7   		movq	%rax, %rdi
 7068 0100 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_h
 7068      00
 7069 0105 BE000000 		movl	$.LC80, %esi
 7069      00
 7070 010a 4889C7   		movq	%rax, %rdi
 7071 010d E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
 7071      00
  72:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/libs/libutpp/Checks.h ****             stream << expected[expectedIndex] << " ";
 7072              		.loc 5 72 0
 7073 0112 838578FE 		addl	$1, -392(%rbp)
 7073      FFFF01
 7074              	.L361:
  72:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/libs/libutpp/Checks.h ****             stream << expected[expectedIndex] << " ";
 7075              		.loc 5 72 0 is_stmt 0 discriminator 1
 7076 0119 8B8578FE 		movl	-392(%rbp), %eax
 7076      FFFF
 7077 011f 3B8554FE 		cmpl	-428(%rbp), %eax
 7077      FFFF
 7078 0125 7CB7     		jl	.L362
 7079              	.LBE51:
  74:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/libs/libutpp/Checks.h **** 
  75:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/libs/libutpp/Checks.h **** 		stream << "] but was [ ";
 7080              		.loc 5 75 0 is_stmt 1
 7081 0127 488D8580 		leaq	-384(%rbp), %rax
 7081      FEFFFF
 7082 012e BE000000 		movl	$.LC81, %esi
 7082      00
 7083 0133 4889C7   		movq	%rax, %rdi
 7084 0136 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
 7084      00
 7085              	.LBB52:
  76:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/libs/libutpp/Checks.h **** 
  77:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/libs/libutpp/Checks.h **** 		for (int actualIndex = 0; actualIndex < count; ++actualIndex)
 7086              		.loc 5 77 0
 7087 013b C7857CFE 		movl	$0, -388(%rbp)
 7087      FFFF0000 
 7087      0000
 7088 0145 EB40     		jmp	.L363
 7089              	.L364:
  78:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/libs/libutpp/Checks.h ****             stream << actual[actualIndex] << " ";
 7090              		.loc 5 78 0
 7091 0147 488B8558 		movq	-424(%rbp), %rax
 7091      FEFFFF
 7092 014e 488B10   		movq	(%rax), %rdx
 7093 0151 8B857CFE 		movl	-388(%rbp), %eax
 7093      FFFF
 7094 0157 4898     		cltq
 7095 0159 4801D0   		addq	%rdx, %rax
 7096 015c 0FB600   		movzbl	(%rax), %eax
 7097 015f 0FB6D0   		movzbl	%al, %edx
 7098 0162 488D8580 		leaq	-384(%rbp), %rax
 7098      FEFFFF
 7099 0169 89D6     		movl	%edx, %esi
 7100 016b 4889C7   		movq	%rax, %rdi
 7101 016e E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_h
 7101      00
 7102 0173 BE000000 		movl	$.LC80, %esi
 7102      00
 7103 0178 4889C7   		movq	%rax, %rdi
 7104 017b E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
 7104      00
  77:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/libs/libutpp/Checks.h ****             stream << actual[actualIndex] << " ";
 7105              		.loc 5 77 0
 7106 0180 83857CFE 		addl	$1, -388(%rbp)
 7106      FFFF01
 7107              	.L363:
  77:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/libs/libutpp/Checks.h ****             stream << actual[actualIndex] << " ";
 7108              		.loc 5 77 0 is_stmt 0 discriminator 1
 7109 0187 8B857CFE 		movl	-388(%rbp), %eax
 7109      FFFF
 7110 018d 3B8554FE 		cmpl	-428(%rbp), %eax
 7110      FFFF
 7111 0193 7CB2     		jl	.L364
 7112              	.LBE52:
  79:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/libs/libutpp/Checks.h **** 
  80:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/libs/libutpp/Checks.h **** 		stream << "]";
 7113              		.loc 5 80 0 is_stmt 1
 7114 0195 488D8580 		leaq	-384(%rbp), %rax
 7114      FEFFFF
 7115 019c BE000000 		movl	$.LC82, %esi
 7115      00
 7116 01a1 4889C7   		movq	%rax, %rdi
 7117 01a4 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
 7117      00
  81:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/libs/libutpp/Checks.h **** 
  82:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/libs/libutpp/Checks.h ****         results.OnTestFailure(details, stream.GetText());
 7118              		.loc 5 82 0
 7119 01a9 488D8580 		leaq	-384(%rbp), %rax
 7119      FEFFFF
 7120 01b0 4889C7   		movq	%rax, %rdi
 7121 01b3 E8000000 		call	_ZNK8UnitTest15MemoryOutStream7GetTextEv
 7121      00
 7122 01b8 4889C2   		movq	%rax, %rdx
 7123 01bb 488B8D48 		movq	-440(%rbp), %rcx
 7123      FEFFFF
 7124 01c2 488B8568 		movq	-408(%rbp), %rax
 7124      FEFFFF
 7125 01c9 4889CE   		movq	%rcx, %rsi
 7126 01cc 4889C7   		movq	%rax, %rdi
 7127 01cf E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 7127      00
 7128              	.LEHE275:
 7129              		.loc 5 82 0 is_stmt 0 discriminator 1
 7130 01d4 488D8580 		leaq	-384(%rbp), %rax
 7130      FEFFFF
 7131 01db 4889C7   		movq	%rax, %rdi
 7132              	.LEHB276:
 7133 01de E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 7133      00
 7134              	.LEHE276:
 7135              	.LBE50:
 7136 01e3 EB1D     		jmp	.L367
 7137              	.L366:
 7138 01e5 4889C3   		movq	%rax, %rbx
 7139              	.LBB53:
 7140              		.loc 5 82 0
 7141 01e8 488D8580 		leaq	-384(%rbp), %rax
 7141      FEFFFF
 7142 01ef 4889C7   		movq	%rax, %rdi
 7143 01f2 E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 7143      00
 7144 01f7 4889D8   		movq	%rbx, %rax
 7145 01fa 4889C7   		movq	%rax, %rdi
 7146              	.LEHB277:
 7147 01fd E8000000 		call	_Unwind_Resume
 7147      00
 7148              	.LEHE277:
 7149              	.L367:
 7150              	.LBE53:
 7151              	.LBE49:
 7152              	.LBE47:
  83:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/libs/libutpp/Checks.h ****     }
  84:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/libs/libutpp/Checks.h **** }
 7153              		.loc 5 84 0 is_stmt 1
 7154 0202 4881C4B8 		addq	$440, %rsp
 7154      010000
 7155 0209 5B       		popq	%rbx
 7156 020a 5D       		popq	%rbp
 7157              		.cfi_def_cfa 7, 8
 7158 020b C3       		ret
 7159              		.cfi_endproc
 7160              	.LFE1175:
 7161              		.section	.gcc_except_table
 7162              	.LLSDA1175:
 7163 065c FF       		.byte	0xff
 7164 065d FF       		.byte	0xff
 7165 065e 01       		.byte	0x1
 7166 065f 16       		.uleb128 .LLSDACSE1175-.LLSDACSB1175
 7167              	.LLSDACSB1175:
 7168 0660 B901     		.uleb128 .LEHB274-.LFB1175
 7169 0662 05       		.uleb128 .LEHE274-.LEHB274
 7170 0663 00       		.uleb128 0
 7171 0664 00       		.uleb128 0
 7172 0665 CD01     		.uleb128 .LEHB275-.LFB1175
 7173 0667 8702     		.uleb128 .LEHE275-.LEHB275
 7174 0669 E503     		.uleb128 .L366-.LFB1175
 7175 066b 00       		.uleb128 0
 7176 066c DE03     		.uleb128 .LEHB276-.LFB1175
 7177 066e 05       		.uleb128 .LEHE276-.LEHB276
 7178 066f 00       		.uleb128 0
 7179 0670 00       		.uleb128 0
 7180 0671 FD03     		.uleb128 .LEHB277-.LFB1175
 7181 0673 05       		.uleb128 .LEHE277-.LEHB277
 7182 0674 00       		.uleb128 0
 7183 0675 00       		.uleb128 0
 7184              	.LLSDACSE1175:
 7185              		.section	.text._ZN8UnitTest15CheckArrayEqualIA4_hPhEEvRNS_11TestResultsERKT_RKT0_iRKNS_11TestDetai
 7187              		.section	.text._ZN8UnitTest5CheckIbEEbT_,"axG",@progbits,_ZN8UnitTest5CheckIbEEbT_,comdat
 7188              		.weak	_ZN8UnitTest5CheckIbEEbT_
 7190              	_ZN8UnitTest5CheckIbEEbT_:
 7191              	.LFB1187:
  12:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/libs/libutpp/Checks.h **** {
 7192              		.loc 5 12 0
 7193              		.cfi_startproc
 7194 0000 55       		pushq	%rbp
 7195              		.cfi_def_cfa_offset 16
 7196              		.cfi_offset 6, -16
 7197 0001 4889E5   		movq	%rsp, %rbp
 7198              		.cfi_def_cfa_register 6
 7199 0004 89F8     		movl	%edi, %eax
 7200 0006 8845FC   		movb	%al, -4(%rbp)
  14:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/libs/libutpp/Checks.h **** }
 7201              		.loc 5 14 0
 7202 0009 0FB645FC 		movzbl	-4(%rbp), %eax
  15:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/libs/libutpp/Checks.h **** 
 7203              		.loc 5 15 0
 7204 000d 5D       		popq	%rbp
 7205              		.cfi_def_cfa 7, 8
 7206 000e C3       		ret
 7207              		.cfi_endproc
 7208              	.LFE1187:
 7210              		.section	.text._ZNKSt4fposI11__mbstate_tEcvlEv,"axG",@progbits,_ZNKSt4fposI11__mbstate_tEcvlEv,com
 7211              		.align 2
 7212              		.weak	_ZNKSt4fposI11__mbstate_tEcvlEv
 7214              	_ZNKSt4fposI11__mbstate_tEcvlEv:
 7215              	.LFB1188:
 7216              		.file 6 "/usr/include/c++/4.8/bits/postypes.h"
   1:/usr/include/c++/4.8/bits/postypes.h **** // Position types -*- C++ -*-
   2:/usr/include/c++/4.8/bits/postypes.h **** 
   3:/usr/include/c++/4.8/bits/postypes.h **** // Copyright (C) 1997-2013 Free Software Foundation, Inc.
   4:/usr/include/c++/4.8/bits/postypes.h **** //
   5:/usr/include/c++/4.8/bits/postypes.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/c++/4.8/bits/postypes.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/4.8/bits/postypes.h **** // terms of the GNU General Public License as published by the
   8:/usr/include/c++/4.8/bits/postypes.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/4.8/bits/postypes.h **** // any later version.
  10:/usr/include/c++/4.8/bits/postypes.h **** 
  11:/usr/include/c++/4.8/bits/postypes.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/c++/4.8/bits/postypes.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/c++/4.8/bits/postypes.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/4.8/bits/postypes.h **** // GNU General Public License for more details.
  15:/usr/include/c++/4.8/bits/postypes.h **** 
  16:/usr/include/c++/4.8/bits/postypes.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/c++/4.8/bits/postypes.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/4.8/bits/postypes.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/4.8/bits/postypes.h **** 
  20:/usr/include/c++/4.8/bits/postypes.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/c++/4.8/bits/postypes.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/c++/4.8/bits/postypes.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/4.8/bits/postypes.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/c++/4.8/bits/postypes.h **** 
  25:/usr/include/c++/4.8/bits/postypes.h **** /** @file bits/postypes.h
  26:/usr/include/c++/4.8/bits/postypes.h ****  *  This is an internal header file, included by other library headers.
  27:/usr/include/c++/4.8/bits/postypes.h ****  *  Do not attempt to use it directly. @headername{iosfwd}
  28:/usr/include/c++/4.8/bits/postypes.h ****  */
  29:/usr/include/c++/4.8/bits/postypes.h **** 
  30:/usr/include/c++/4.8/bits/postypes.h **** //
  31:/usr/include/c++/4.8/bits/postypes.h **** // ISO C++ 14882: 27.4.1 - Types
  32:/usr/include/c++/4.8/bits/postypes.h **** // ISO C++ 14882: 27.4.3 - Template class fpos
  33:/usr/include/c++/4.8/bits/postypes.h **** //
  34:/usr/include/c++/4.8/bits/postypes.h **** 
  35:/usr/include/c++/4.8/bits/postypes.h **** #ifndef _GLIBCXX_POSTYPES_H
  36:/usr/include/c++/4.8/bits/postypes.h **** #define _GLIBCXX_POSTYPES_H 1
  37:/usr/include/c++/4.8/bits/postypes.h **** 
  38:/usr/include/c++/4.8/bits/postypes.h **** #pragma GCC system_header
  39:/usr/include/c++/4.8/bits/postypes.h **** 
  40:/usr/include/c++/4.8/bits/postypes.h **** #include <cwchar> // For mbstate_t
  41:/usr/include/c++/4.8/bits/postypes.h **** 
  42:/usr/include/c++/4.8/bits/postypes.h **** // XXX If <stdint.h> is really needed, make sure to define the macros
  43:/usr/include/c++/4.8/bits/postypes.h **** // before including it, in order not to break <tr1/cstdint> (and <cstdint>
  44:/usr/include/c++/4.8/bits/postypes.h **** // in C++0x).  Reconsider all this as soon as possible...
  45:/usr/include/c++/4.8/bits/postypes.h **** #if (defined(_GLIBCXX_HAVE_INT64_T) && !defined(_GLIBCXX_HAVE_INT64_T_LONG) \
  46:/usr/include/c++/4.8/bits/postypes.h ****      && !defined(_GLIBCXX_HAVE_INT64_T_LONG_LONG))
  47:/usr/include/c++/4.8/bits/postypes.h **** 
  48:/usr/include/c++/4.8/bits/postypes.h **** #ifndef __STDC_LIMIT_MACROS
  49:/usr/include/c++/4.8/bits/postypes.h **** # define _UNDEF__STDC_LIMIT_MACROS
  50:/usr/include/c++/4.8/bits/postypes.h **** # define __STDC_LIMIT_MACROS
  51:/usr/include/c++/4.8/bits/postypes.h **** #endif
  52:/usr/include/c++/4.8/bits/postypes.h **** #ifndef __STDC_CONSTANT_MACROS
  53:/usr/include/c++/4.8/bits/postypes.h **** # define _UNDEF__STDC_CONSTANT_MACROS
  54:/usr/include/c++/4.8/bits/postypes.h **** # define __STDC_CONSTANT_MACROS
  55:/usr/include/c++/4.8/bits/postypes.h **** #endif
  56:/usr/include/c++/4.8/bits/postypes.h **** #include <stdint.h> // For int64_t
  57:/usr/include/c++/4.8/bits/postypes.h **** #ifdef _UNDEF__STDC_LIMIT_MACROS
  58:/usr/include/c++/4.8/bits/postypes.h **** # undef __STDC_LIMIT_MACROS
  59:/usr/include/c++/4.8/bits/postypes.h **** # undef _UNDEF__STDC_LIMIT_MACROS
  60:/usr/include/c++/4.8/bits/postypes.h **** #endif
  61:/usr/include/c++/4.8/bits/postypes.h **** #ifdef _UNDEF__STDC_CONSTANT_MACROS
  62:/usr/include/c++/4.8/bits/postypes.h **** # undef __STDC_CONSTANT_MACROS
  63:/usr/include/c++/4.8/bits/postypes.h **** # undef _UNDEF__STDC_CONSTANT_MACROS
  64:/usr/include/c++/4.8/bits/postypes.h **** #endif
  65:/usr/include/c++/4.8/bits/postypes.h **** 
  66:/usr/include/c++/4.8/bits/postypes.h **** #endif
  67:/usr/include/c++/4.8/bits/postypes.h **** 
  68:/usr/include/c++/4.8/bits/postypes.h **** namespace std _GLIBCXX_VISIBILITY(default)
  69:/usr/include/c++/4.8/bits/postypes.h **** {
  70:/usr/include/c++/4.8/bits/postypes.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  71:/usr/include/c++/4.8/bits/postypes.h **** 
  72:/usr/include/c++/4.8/bits/postypes.h ****   // The types streamoff, streampos and wstreampos and the class
  73:/usr/include/c++/4.8/bits/postypes.h ****   // template fpos<> are described in clauses 21.1.2, 21.1.3, 27.1.2,
  74:/usr/include/c++/4.8/bits/postypes.h ****   // 27.2, 27.4.1, 27.4.3 and D.6. Despite all this verbiage, the
  75:/usr/include/c++/4.8/bits/postypes.h ****   // behaviour of these types is mostly implementation defined or
  76:/usr/include/c++/4.8/bits/postypes.h ****   // unspecified. The behaviour in this implementation is as noted
  77:/usr/include/c++/4.8/bits/postypes.h ****   // below.
  78:/usr/include/c++/4.8/bits/postypes.h **** 
  79:/usr/include/c++/4.8/bits/postypes.h ****   /**
  80:/usr/include/c++/4.8/bits/postypes.h ****    *  @brief  Type used by fpos, char_traits<char>, and char_traits<wchar_t>.
  81:/usr/include/c++/4.8/bits/postypes.h ****    *
  82:/usr/include/c++/4.8/bits/postypes.h ****    *  In clauses 21.1.3.1 and 27.4.1 streamoff is described as an
  83:/usr/include/c++/4.8/bits/postypes.h ****    *  implementation defined type.
  84:/usr/include/c++/4.8/bits/postypes.h ****    *  Note: In versions of GCC up to and including GCC 3.3, streamoff
  85:/usr/include/c++/4.8/bits/postypes.h ****    *  was typedef long.
  86:/usr/include/c++/4.8/bits/postypes.h ****   */  
  87:/usr/include/c++/4.8/bits/postypes.h **** #ifdef _GLIBCXX_HAVE_INT64_T_LONG
  88:/usr/include/c++/4.8/bits/postypes.h ****   typedef long          streamoff;
  89:/usr/include/c++/4.8/bits/postypes.h **** #elif defined(_GLIBCXX_HAVE_INT64_T_LONG_LONG)
  90:/usr/include/c++/4.8/bits/postypes.h ****   typedef long long     streamoff;
  91:/usr/include/c++/4.8/bits/postypes.h **** #elif defined(_GLIBCXX_HAVE_INT64_T) 
  92:/usr/include/c++/4.8/bits/postypes.h ****   typedef int64_t       streamoff;
  93:/usr/include/c++/4.8/bits/postypes.h **** #else
  94:/usr/include/c++/4.8/bits/postypes.h ****   typedef long long     streamoff;
  95:/usr/include/c++/4.8/bits/postypes.h **** #endif
  96:/usr/include/c++/4.8/bits/postypes.h **** 
  97:/usr/include/c++/4.8/bits/postypes.h ****   /// Integral type for I/O operation counts and buffer sizes.
  98:/usr/include/c++/4.8/bits/postypes.h ****   typedef ptrdiff_t	streamsize; // Signed integral type
  99:/usr/include/c++/4.8/bits/postypes.h **** 
 100:/usr/include/c++/4.8/bits/postypes.h ****   /**
 101:/usr/include/c++/4.8/bits/postypes.h ****    *  @brief  Class representing stream positions.
 102:/usr/include/c++/4.8/bits/postypes.h ****    *
 103:/usr/include/c++/4.8/bits/postypes.h ****    *  The standard places no requirements upon the template parameter StateT.
 104:/usr/include/c++/4.8/bits/postypes.h ****    *  In this implementation StateT must be DefaultConstructible,
 105:/usr/include/c++/4.8/bits/postypes.h ****    *  CopyConstructible and Assignable.  The standard only requires that fpos
 106:/usr/include/c++/4.8/bits/postypes.h ****    *  should contain a member of type StateT. In this implementation it also
 107:/usr/include/c++/4.8/bits/postypes.h ****    *  contains an offset stored as a signed integer.
 108:/usr/include/c++/4.8/bits/postypes.h ****    *
 109:/usr/include/c++/4.8/bits/postypes.h ****    *  @param  StateT  Type passed to and returned from state().
 110:/usr/include/c++/4.8/bits/postypes.h ****    */
 111:/usr/include/c++/4.8/bits/postypes.h ****   template<typename _StateT>
 112:/usr/include/c++/4.8/bits/postypes.h ****     class fpos
 113:/usr/include/c++/4.8/bits/postypes.h ****     {
 114:/usr/include/c++/4.8/bits/postypes.h ****     private:
 115:/usr/include/c++/4.8/bits/postypes.h ****       streamoff	                _M_off;
 116:/usr/include/c++/4.8/bits/postypes.h ****       _StateT			_M_state;
 117:/usr/include/c++/4.8/bits/postypes.h **** 
 118:/usr/include/c++/4.8/bits/postypes.h ****     public:
 119:/usr/include/c++/4.8/bits/postypes.h ****       // The standard doesn't require that fpos objects can be default
 120:/usr/include/c++/4.8/bits/postypes.h ****       // constructed. This implementation provides a default
 121:/usr/include/c++/4.8/bits/postypes.h ****       // constructor that initializes the offset to 0 and default
 122:/usr/include/c++/4.8/bits/postypes.h ****       // constructs the state.
 123:/usr/include/c++/4.8/bits/postypes.h ****       fpos()
 124:/usr/include/c++/4.8/bits/postypes.h ****       : _M_off(0), _M_state() { }
 125:/usr/include/c++/4.8/bits/postypes.h **** 
 126:/usr/include/c++/4.8/bits/postypes.h ****       // The standard requires that fpos objects can be constructed
 127:/usr/include/c++/4.8/bits/postypes.h ****       // from streamoff objects using the constructor syntax, and
 128:/usr/include/c++/4.8/bits/postypes.h ****       // fails to give any meaningful semantics. In this
 129:/usr/include/c++/4.8/bits/postypes.h ****       // implementation implicit conversion is also allowed, and this
 130:/usr/include/c++/4.8/bits/postypes.h ****       // constructor stores the streamoff as the offset and default
 131:/usr/include/c++/4.8/bits/postypes.h ****       // constructs the state.
 132:/usr/include/c++/4.8/bits/postypes.h ****       /// Construct position from offset.
 133:/usr/include/c++/4.8/bits/postypes.h ****       fpos(streamoff __off)
 134:/usr/include/c++/4.8/bits/postypes.h ****       : _M_off(__off), _M_state() { }
 135:/usr/include/c++/4.8/bits/postypes.h **** 
 136:/usr/include/c++/4.8/bits/postypes.h ****       /// Convert to streamoff.
 137:/usr/include/c++/4.8/bits/postypes.h ****       operator streamoff() const { return _M_off; }
 7217              		.loc 6 137 0
 7218              		.cfi_startproc
 7219 0000 55       		pushq	%rbp
 7220              		.cfi_def_cfa_offset 16
 7221              		.cfi_offset 6, -16
 7222 0001 4889E5   		movq	%rsp, %rbp
 7223              		.cfi_def_cfa_register 6
 7224 0004 48897DF8 		movq	%rdi, -8(%rbp)
 7225              		.loc 6 137 0
 7226 0008 488B45F8 		movq	-8(%rbp), %rax
 7227 000c 488B00   		movq	(%rax), %rax
 7228 000f 5D       		popq	%rbp
 7229              		.cfi_def_cfa 7, 8
 7230 0010 C3       		ret
 7231              		.cfi_endproc
 7232              	.LFE1188:
 7234              		.section	.text._ZN8UnitTest10CheckEqualImjEEvRNS_11TestResultsERKT_RKT0_RKNS_11TestDetailsE,"axG",
 7235              		.weak	_ZN8UnitTest10CheckEqualImjEEvRNS_11TestResultsERKT_RKT0_RKNS_11TestDetailsE
 7237              	_ZN8UnitTest10CheckEqualImjEEvRNS_11TestResultsERKT_RKT0_RKNS_11TestDetailsE:
 7238              	.LFB1190:
  19:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/libs/libutpp/Checks.h **** {
 7239              		.loc 5 19 0
 7240              		.cfi_startproc
 7241              		.cfi_personality 0x3,__gxx_personality_v0
 7242              		.cfi_lsda 0x3,.LLSDA1190
 7243 0000 55       		pushq	%rbp
 7244              		.cfi_def_cfa_offset 16
 7245              		.cfi_offset 6, -16
 7246 0001 4889E5   		movq	%rsp, %rbp
 7247              		.cfi_def_cfa_register 6
 7248 0004 4154     		pushq	%r12
 7249 0006 53       		pushq	%rbx
 7250 0007 4881EC90 		subq	$400, %rsp
 7250      010000
 7251              		.cfi_offset 12, -24
 7252              		.cfi_offset 3, -32
 7253 000e 4889BD78 		movq	%rdi, -392(%rbp)
 7253      FEFFFF
 7254 0015 4889B570 		movq	%rsi, -400(%rbp)
 7254      FEFFFF
 7255 001c 48899568 		movq	%rdx, -408(%rbp)
 7255      FEFFFF
 7256 0023 48898D60 		movq	%rcx, -416(%rbp)
 7256      FEFFFF
 7257              	.LBB54:
 7258              	.LBB55:
  21:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/libs/libutpp/Checks.h ****     {
 7259              		.loc 5 21 0
 7260 002a 488B8570 		movq	-400(%rbp), %rax
 7260      FEFFFF
 7261 0031 488B10   		movq	(%rax), %rdx
 7262 0034 488B8568 		movq	-408(%rbp), %rax
 7262      FEFFFF
 7263 003b 8B00     		movl	(%rax), %eax
 7264 003d 89C0     		movl	%eax, %eax
 7265 003f 4839C2   		cmpq	%rax, %rdx
 7266 0042 0F84B100 		je	.L376
 7266      0000
 7267              	.LBB56:
  23:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/libs/libutpp/Checks.h ****         stream << "Expected " << expected << " but was " << actual;
 7268              		.loc 5 23 0
 7269 0048 488D8580 		leaq	-384(%rbp), %rax
 7269      FEFFFF
 7270 004f 4889C7   		movq	%rax, %rdi
 7271              	.LEHB278:
 7272 0052 E8000000 		call	_ZN8UnitTest15MemoryOutStreamC1Ev
 7272      00
 7273              	.LEHE278:
  24:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/libs/libutpp/Checks.h **** 
 7274              		.loc 5 24 0
 7275 0057 488B8568 		movq	-408(%rbp), %rax
 7275      FEFFFF
 7276 005e 8B18     		movl	(%rax), %ebx
 7277 0060 488B8570 		movq	-400(%rbp), %rax
 7277      FEFFFF
 7278 0067 4C8B20   		movq	(%rax), %r12
 7279 006a 488D8580 		leaq	-384(%rbp), %rax
 7279      FEFFFF
 7280 0071 BE000000 		movl	$.LC77, %esi
 7280      00
 7281 0076 4889C7   		movq	%rax, %rdi
 7282              	.LEHB279:
 7283 0079 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
 7283      00
 7284 007e 4C89E6   		movq	%r12, %rsi
 7285 0081 4889C7   		movq	%rax, %rdi
 7286 0084 E8000000 		call	_ZNSolsEm
 7286      00
  24:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/libs/libutpp/Checks.h **** 
 7287              		.loc 5 24 0 is_stmt 0 discriminator 1
 7288 0089 BE000000 		movl	$.LC78, %esi
 7288      00
 7289 008e 4889C7   		movq	%rax, %rdi
 7290 0091 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
 7290      00
 7291 0096 89DE     		movl	%ebx, %esi
 7292 0098 4889C7   		movq	%rax, %rdi
 7293 009b E8000000 		call	_ZNSolsEj
 7293      00
  26:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/libs/libutpp/Checks.h ****     }
 7294              		.loc 5 26 0 is_stmt 1
 7295 00a0 488D8580 		leaq	-384(%rbp), %rax
 7295      FEFFFF
 7296 00a7 4889C7   		movq	%rax, %rdi
 7297 00aa E8000000 		call	_ZNK8UnitTest15MemoryOutStream7GetTextEv
 7297      00
 7298 00af 4889C2   		movq	%rax, %rdx
 7299 00b2 488B8D60 		movq	-416(%rbp), %rcx
 7299      FEFFFF
 7300 00b9 488B8578 		movq	-392(%rbp), %rax
 7300      FEFFFF
 7301 00c0 4889CE   		movq	%rcx, %rsi
 7302 00c3 4889C7   		movq	%rax, %rdi
 7303 00c6 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 7303      00
 7304              	.LEHE279:
  26:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/libs/libutpp/Checks.h ****     }
 7305              		.loc 5 26 0 is_stmt 0 discriminator 1
 7306 00cb 488D8580 		leaq	-384(%rbp), %rax
 7306      FEFFFF
 7307 00d2 4889C7   		movq	%rax, %rdi
 7308              	.LEHB280:
 7309 00d5 E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 7309      00
 7310              	.LEHE280:
 7311              	.LBE56:
 7312 00da EB1D     		jmp	.L376
 7313              	.L375:
 7314 00dc 4889C3   		movq	%rax, %rbx
 7315              	.LBB57:
  26:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/libs/libutpp/Checks.h ****     }
 7316              		.loc 5 26 0
 7317 00df 488D8580 		leaq	-384(%rbp), %rax
 7317      FEFFFF
 7318 00e6 4889C7   		movq	%rax, %rdi
 7319 00e9 E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 7319      00
 7320 00ee 4889D8   		movq	%rbx, %rax
 7321 00f1 4889C7   		movq	%rax, %rdi
 7322              	.LEHB281:
 7323 00f4 E8000000 		call	_Unwind_Resume
 7323      00
 7324              	.LEHE281:
 7325              	.L376:
 7326              	.LBE57:
 7327              	.LBE55:
 7328              	.LBE54:
  28:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/libs/libutpp/Checks.h **** 
 7329              		.loc 5 28 0 is_stmt 1
 7330 00f9 4881C490 		addq	$400, %rsp
 7330      010000
 7331 0100 5B       		popq	%rbx
 7332 0101 415C     		popq	%r12
 7333 0103 5D       		popq	%rbp
 7334              		.cfi_def_cfa 7, 8
 7335 0104 C3       		ret
 7336              		.cfi_endproc
 7337              	.LFE1190:
 7338              		.section	.gcc_except_table
 7339              	.LLSDA1190:
 7340 0676 FF       		.byte	0xff
 7341 0677 FF       		.byte	0xff
 7342 0678 01       		.byte	0x1
 7343 0679 13       		.uleb128 .LLSDACSE1190-.LLSDACSB1190
 7344              	.LLSDACSB1190:
 7345 067a 52       		.uleb128 .LEHB278-.LFB1190
 7346 067b 05       		.uleb128 .LEHE278-.LEHB278
 7347 067c 00       		.uleb128 0
 7348 067d 00       		.uleb128 0
 7349 067e 79       		.uleb128 .LEHB279-.LFB1190
 7350 067f 52       		.uleb128 .LEHE279-.LEHB279
 7351 0680 DC01     		.uleb128 .L375-.LFB1190
 7352 0682 00       		.uleb128 0
 7353 0683 D501     		.uleb128 .LEHB280-.LFB1190
 7354 0685 05       		.uleb128 .LEHE280-.LEHB280
 7355 0686 00       		.uleb128 0
 7356 0687 00       		.uleb128 0
 7357 0688 F401     		.uleb128 .LEHB281-.LFB1190
 7358 068a 05       		.uleb128 .LEHE281-.LEHB281
 7359 068b 00       		.uleb128 0
 7360 068c 00       		.uleb128 0
 7361              	.LLSDACSE1190:
 7362              		.section	.text._ZN8UnitTest10CheckEqualImjEEvRNS_11TestResultsERKT_RKT0_RKNS_11TestDetailsE,"axG",
 7364              		.section	.text._ZN8UnitTest15CheckArrayEqualIPKcS2_EEvRNS_11TestResultsERKT_RKT0_iRKNS_11TestDetai
 7365              		.weak	_ZN8UnitTest15CheckArrayEqualIPKcS2_EEvRNS_11TestResultsERKT_RKT0_iRKNS_11TestDetailsE
 7367              	_ZN8UnitTest15CheckArrayEqualIPKcS2_EEvRNS_11TestResultsERKT_RKT0_iRKNS_11TestDetailsE:
 7368              	.LFB1193:
  59:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/libs/libutpp/Checks.h ****                 int const count, TestDetails const& details)
 7369              		.loc 5 59 0
 7370              		.cfi_startproc
 7371              		.cfi_personality 0x3,__gxx_personality_v0
 7372              		.cfi_lsda 0x3,.LLSDA1193
 7373 0000 55       		pushq	%rbp
 7374              		.cfi_def_cfa_offset 16
 7375              		.cfi_offset 6, -16
 7376 0001 4889E5   		movq	%rsp, %rbp
 7377              		.cfi_def_cfa_register 6
 7378 0004 53       		pushq	%rbx
 7379 0005 4881ECB8 		subq	$440, %rsp
 7379      010000
 7380              		.cfi_offset 3, -24
 7381 000c 4889BD68 		movq	%rdi, -408(%rbp)
 7381      FEFFFF
 7382 0013 4889B560 		movq	%rsi, -416(%rbp)
 7382      FEFFFF
 7383 001a 48899558 		movq	%rdx, -424(%rbp)
 7383      FEFFFF
 7384 0021 898D54FE 		movl	%ecx, -428(%rbp)
 7384      FFFF
 7385 0027 4C898548 		movq	%r8, -440(%rbp)
 7385      FEFFFF
 7386              	.LBB58:
  62:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/libs/libutpp/Checks.h ****     for (int i = 0; i < count; ++i)
 7387              		.loc 5 62 0
 7388 002e C68573FE 		movb	$1, -397(%rbp)
 7388      FFFF01
 7389              	.LBB59:
  63:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/libs/libutpp/Checks.h ****         equal &= (expected[i] == actual[i]);
 7390              		.loc 5 63 0
 7391 0035 C78574FE 		movl	$0, -396(%rbp)
 7391      FFFF0000 
 7391      0000
 7392 003f EB53     		jmp	.L378
 7393              	.L379:
  64:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/libs/libutpp/Checks.h **** 
 7394              		.loc 5 64 0 discriminator 2
 7395 0041 0FB69573 		movzbl	-397(%rbp), %edx
 7395      FEFFFF
 7396 0048 488B8560 		movq	-416(%rbp), %rax
 7396      FEFFFF
 7397 004f 488B08   		movq	(%rax), %rcx
 7398 0052 8B8574FE 		movl	-396(%rbp), %eax
 7398      FFFF
 7399 0058 4898     		cltq
 7400 005a 4801C8   		addq	%rcx, %rax
 7401 005d 0FB608   		movzbl	(%rax), %ecx
 7402 0060 488B8558 		movq	-424(%rbp), %rax
 7402      FEFFFF
 7403 0067 488B30   		movq	(%rax), %rsi
 7404 006a 8B8574FE 		movl	-396(%rbp), %eax
 7404      FFFF
 7405 0070 4898     		cltq
 7406 0072 4801F0   		addq	%rsi, %rax
 7407 0075 0FB600   		movzbl	(%rax), %eax
 7408 0078 38C1     		cmpb	%al, %cl
 7409 007a 0F94C0   		sete	%al
 7410 007d 0FB6C0   		movzbl	%al, %eax
 7411 0080 21D0     		andl	%edx, %eax
 7412 0082 85C0     		testl	%eax, %eax
 7413 0084 0F95C0   		setne	%al
 7414 0087 888573FE 		movb	%al, -397(%rbp)
 7414      FFFF
  63:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/libs/libutpp/Checks.h ****         equal &= (expected[i] == actual[i]);
 7415              		.loc 5 63 0 discriminator 2
 7416 008d 838574FE 		addl	$1, -396(%rbp)
 7416      FFFF01
 7417              	.L378:
  63:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/libs/libutpp/Checks.h ****         equal &= (expected[i] == actual[i]);
 7418              		.loc 5 63 0 is_stmt 0 discriminator 1
 7419 0094 8B8574FE 		movl	-396(%rbp), %eax
 7419      FFFF
 7420 009a 3B8554FE 		cmpl	-428(%rbp), %eax
 7420      FFFF
 7421 00a0 7C9F     		jl	.L379
 7422              	.LBE59:
 7423              	.LBB60:
  66:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/libs/libutpp/Checks.h ****     {
 7424              		.loc 5 66 0 is_stmt 1
 7425 00a2 0FB68573 		movzbl	-397(%rbp), %eax
 7425      FEFFFF
 7426 00a9 83F001   		xorl	$1, %eax
 7427 00ac 84C0     		testb	%al, %al
 7428 00ae 0F845801 		je	.L387
 7428      0000
 7429              	.LBB61:
  68:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/libs/libutpp/Checks.h **** 
 7430              		.loc 5 68 0
 7431 00b4 488D8580 		leaq	-384(%rbp), %rax
 7431      FEFFFF
 7432 00bb 4889C7   		movq	%rax, %rdi
 7433              	.LEHB282:
 7434 00be E8000000 		call	_ZN8UnitTest15MemoryOutStreamC1Ev
 7434      00
 7435              	.LEHE282:
  70:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/libs/libutpp/Checks.h **** 
 7436              		.loc 5 70 0
 7437 00c3 488D8580 		leaq	-384(%rbp), %rax
 7437      FEFFFF
 7438 00ca BE000000 		movl	$.LC79, %esi
 7438      00
 7439 00cf 4889C7   		movq	%rax, %rdi
 7440              	.LEHB283:
 7441 00d2 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
 7441      00
 7442              	.LBB62:
  72:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/libs/libutpp/Checks.h ****             stream << expected[expectedIndex] << " ";
 7443              		.loc 5 72 0
 7444 00d7 C78578FE 		movl	$0, -392(%rbp)
 7444      FFFF0000 
 7444      0000
 7445 00e1 EB40     		jmp	.L381
 7446              	.L382:
  73:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/libs/libutpp/Checks.h **** 
 7447              		.loc 5 73 0
 7448 00e3 488B8560 		movq	-416(%rbp), %rax
 7448      FEFFFF
 7449 00ea 488B10   		movq	(%rax), %rdx
 7450 00ed 8B8578FE 		movl	-392(%rbp), %eax
 7450      FFFF
 7451 00f3 4898     		cltq
 7452 00f5 4801D0   		addq	%rdx, %rax
 7453 00f8 0FB600   		movzbl	(%rax), %eax
 7454 00fb 0FBED0   		movsbl	%al, %edx
 7455 00fe 488D8580 		leaq	-384(%rbp), %rax
 7455      FEFFFF
 7456 0105 89D6     		movl	%edx, %esi
 7457 0107 4889C7   		movq	%rax, %rdi
 7458 010a E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c
 7458      00
 7459 010f BE000000 		movl	$.LC80, %esi
 7459      00
 7460 0114 4889C7   		movq	%rax, %rdi
 7461 0117 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
 7461      00
  72:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/libs/libutpp/Checks.h ****             stream << expected[expectedIndex] << " ";
 7462              		.loc 5 72 0
 7463 011c 838578FE 		addl	$1, -392(%rbp)
 7463      FFFF01
 7464              	.L381:
  72:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/libs/libutpp/Checks.h ****             stream << expected[expectedIndex] << " ";
 7465              		.loc 5 72 0 is_stmt 0 discriminator 1
 7466 0123 8B8578FE 		movl	-392(%rbp), %eax
 7466      FFFF
 7467 0129 3B8554FE 		cmpl	-428(%rbp), %eax
 7467      FFFF
 7468 012f 7CB2     		jl	.L382
 7469              	.LBE62:
  75:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/libs/libutpp/Checks.h **** 
 7470              		.loc 5 75 0 is_stmt 1
 7471 0131 488D8580 		leaq	-384(%rbp), %rax
 7471      FEFFFF
 7472 0138 BE000000 		movl	$.LC81, %esi
 7472      00
 7473 013d 4889C7   		movq	%rax, %rdi
 7474 0140 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
 7474      00
 7475              	.LBB63:
  77:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/libs/libutpp/Checks.h ****             stream << actual[actualIndex] << " ";
 7476              		.loc 5 77 0
 7477 0145 C7857CFE 		movl	$0, -388(%rbp)
 7477      FFFF0000 
 7477      0000
 7478 014f EB40     		jmp	.L383
 7479              	.L384:
  78:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/libs/libutpp/Checks.h **** 
 7480              		.loc 5 78 0
 7481 0151 488B8558 		movq	-424(%rbp), %rax
 7481      FEFFFF
 7482 0158 488B10   		movq	(%rax), %rdx
 7483 015b 8B857CFE 		movl	-388(%rbp), %eax
 7483      FFFF
 7484 0161 4898     		cltq
 7485 0163 4801D0   		addq	%rdx, %rax
 7486 0166 0FB600   		movzbl	(%rax), %eax
 7487 0169 0FBED0   		movsbl	%al, %edx
 7488 016c 488D8580 		leaq	-384(%rbp), %rax
 7488      FEFFFF
 7489 0173 89D6     		movl	%edx, %esi
 7490 0175 4889C7   		movq	%rax, %rdi
 7491 0178 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c
 7491      00
 7492 017d BE000000 		movl	$.LC80, %esi
 7492      00
 7493 0182 4889C7   		movq	%rax, %rdi
 7494 0185 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
 7494      00
  77:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/libs/libutpp/Checks.h ****             stream << actual[actualIndex] << " ";
 7495              		.loc 5 77 0
 7496 018a 83857CFE 		addl	$1, -388(%rbp)
 7496      FFFF01
 7497              	.L383:
  77:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/libs/libutpp/Checks.h ****             stream << actual[actualIndex] << " ";
 7498              		.loc 5 77 0 is_stmt 0 discriminator 1
 7499 0191 8B857CFE 		movl	-388(%rbp), %eax
 7499      FFFF
 7500 0197 3B8554FE 		cmpl	-428(%rbp), %eax
 7500      FFFF
 7501 019d 7CB2     		jl	.L384
 7502              	.LBE63:
  80:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/libs/libutpp/Checks.h **** 
 7503              		.loc 5 80 0 is_stmt 1
 7504 019f 488D8580 		leaq	-384(%rbp), %rax
 7504      FEFFFF
 7505 01a6 BE000000 		movl	$.LC82, %esi
 7505      00
 7506 01ab 4889C7   		movq	%rax, %rdi
 7507 01ae E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
 7507      00
  82:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/libs/libutpp/Checks.h ****     }
 7508              		.loc 5 82 0
 7509 01b3 488D8580 		leaq	-384(%rbp), %rax
 7509      FEFFFF
 7510 01ba 4889C7   		movq	%rax, %rdi
 7511 01bd E8000000 		call	_ZNK8UnitTest15MemoryOutStream7GetTextEv
 7511      00
 7512 01c2 4889C2   		movq	%rax, %rdx
 7513 01c5 488B8D48 		movq	-440(%rbp), %rcx
 7513      FEFFFF
 7514 01cc 488B8568 		movq	-408(%rbp), %rax
 7514      FEFFFF
 7515 01d3 4889CE   		movq	%rcx, %rsi
 7516 01d6 4889C7   		movq	%rax, %rdi
 7517 01d9 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 7517      00
 7518              	.LEHE283:
  82:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/libs/libutpp/Checks.h ****     }
 7519              		.loc 5 82 0 is_stmt 0 discriminator 1
 7520 01de 488D8580 		leaq	-384(%rbp), %rax
 7520      FEFFFF
 7521 01e5 4889C7   		movq	%rax, %rdi
 7522              	.LEHB284:
 7523 01e8 E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 7523      00
 7524              	.LEHE284:
 7525              	.LBE61:
 7526 01ed EB1D     		jmp	.L387
 7527              	.L386:
 7528 01ef 4889C3   		movq	%rax, %rbx
 7529              	.LBB64:
  82:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/libs/libutpp/Checks.h ****     }
 7530              		.loc 5 82 0
 7531 01f2 488D8580 		leaq	-384(%rbp), %rax
 7531      FEFFFF
 7532 01f9 4889C7   		movq	%rax, %rdi
 7533 01fc E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 7533      00
 7534 0201 4889D8   		movq	%rbx, %rax
 7535 0204 4889C7   		movq	%rax, %rdi
 7536              	.LEHB285:
 7537 0207 E8000000 		call	_Unwind_Resume
 7537      00
 7538              	.LEHE285:
 7539              	.L387:
 7540              	.LBE64:
 7541              	.LBE60:
 7542              	.LBE58:
 7543              		.loc 5 84 0 is_stmt 1
 7544 020c 4881C4B8 		addq	$440, %rsp
 7544      010000
 7545 0213 5B       		popq	%rbx
 7546 0214 5D       		popq	%rbp
 7547              		.cfi_def_cfa 7, 8
 7548 0215 C3       		ret
 7549              		.cfi_endproc
 7550              	.LFE1193:
 7551              		.section	.gcc_except_table
 7552              	.LLSDA1193:
 7553 068d FF       		.byte	0xff
 7554 068e FF       		.byte	0xff
 7555 068f 01       		.byte	0x1
 7556 0690 16       		.uleb128 .LLSDACSE1193-.LLSDACSB1193
 7557              	.LLSDACSB1193:
 7558 0691 BE01     		.uleb128 .LEHB282-.LFB1193
 7559 0693 05       		.uleb128 .LEHE282-.LEHB282
 7560 0694 00       		.uleb128 0
 7561 0695 00       		.uleb128 0
 7562 0696 D201     		.uleb128 .LEHB283-.LFB1193
 7563 0698 8C02     		.uleb128 .LEHE283-.LEHB283
 7564 069a EF03     		.uleb128 .L386-.LFB1193
 7565 069c 00       		.uleb128 0
 7566 069d E803     		.uleb128 .LEHB284-.LFB1193
 7567 069f 05       		.uleb128 .LEHE284-.LEHB284
 7568 06a0 00       		.uleb128 0
 7569 06a1 00       		.uleb128 0
 7570 06a2 8704     		.uleb128 .LEHB285-.LFB1193
 7571 06a4 05       		.uleb128 .LEHE285-.LEHB285
 7572 06a5 00       		.uleb128 0
 7573 06a6 00       		.uleb128 0
 7574              	.LLSDACSE1193:
 7575              		.section	.text._ZN8UnitTest15CheckArrayEqualIPKcS2_EEvRNS_11TestResultsERKT_RKT0_iRKNS_11TestDetai
 7577              		.section	.text._ZN8UnitTest15CheckArrayEqualIPhS1_EEvRNS_11TestResultsERKT_RKT0_iRKNS_11TestDetail
 7578              		.weak	_ZN8UnitTest15CheckArrayEqualIPhS1_EEvRNS_11TestResultsERKT_RKT0_iRKNS_11TestDetailsE
 7580              	_ZN8UnitTest15CheckArrayEqualIPhS1_EEvRNS_11TestResultsERKT_RKT0_iRKNS_11TestDetailsE:
 7581              	.LFB1194:
  59:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/libs/libutpp/Checks.h ****                 int const count, TestDetails const& details)
 7582              		.loc 5 59 0
 7583              		.cfi_startproc
 7584              		.cfi_personality 0x3,__gxx_personality_v0
 7585              		.cfi_lsda 0x3,.LLSDA1194
 7586 0000 55       		pushq	%rbp
 7587              		.cfi_def_cfa_offset 16
 7588              		.cfi_offset 6, -16
 7589 0001 4889E5   		movq	%rsp, %rbp
 7590              		.cfi_def_cfa_register 6
 7591 0004 53       		pushq	%rbx
 7592 0005 4881ECB8 		subq	$440, %rsp
 7592      010000
 7593              		.cfi_offset 3, -24
 7594 000c 4889BD68 		movq	%rdi, -408(%rbp)
 7594      FEFFFF
 7595 0013 4889B560 		movq	%rsi, -416(%rbp)
 7595      FEFFFF
 7596 001a 48899558 		movq	%rdx, -424(%rbp)
 7596      FEFFFF
 7597 0021 898D54FE 		movl	%ecx, -428(%rbp)
 7597      FFFF
 7598 0027 4C898548 		movq	%r8, -440(%rbp)
 7598      FEFFFF
 7599              	.LBB65:
  62:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/libs/libutpp/Checks.h ****     for (int i = 0; i < count; ++i)
 7600              		.loc 5 62 0
 7601 002e C68573FE 		movb	$1, -397(%rbp)
 7601      FFFF01
 7602              	.LBB66:
  63:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/libs/libutpp/Checks.h ****         equal &= (expected[i] == actual[i]);
 7603              		.loc 5 63 0
 7604 0035 C78574FE 		movl	$0, -396(%rbp)
 7604      FFFF0000 
 7604      0000
 7605 003f EB53     		jmp	.L389
 7606              	.L390:
  64:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/libs/libutpp/Checks.h **** 
 7607              		.loc 5 64 0 discriminator 2
 7608 0041 0FB69573 		movzbl	-397(%rbp), %edx
 7608      FEFFFF
 7609 0048 488B8560 		movq	-416(%rbp), %rax
 7609      FEFFFF
 7610 004f 488B08   		movq	(%rax), %rcx
 7611 0052 8B8574FE 		movl	-396(%rbp), %eax
 7611      FFFF
 7612 0058 4898     		cltq
 7613 005a 4801C8   		addq	%rcx, %rax
 7614 005d 0FB608   		movzbl	(%rax), %ecx
 7615 0060 488B8558 		movq	-424(%rbp), %rax
 7615      FEFFFF
 7616 0067 488B30   		movq	(%rax), %rsi
 7617 006a 8B8574FE 		movl	-396(%rbp), %eax
 7617      FFFF
 7618 0070 4898     		cltq
 7619 0072 4801F0   		addq	%rsi, %rax
 7620 0075 0FB600   		movzbl	(%rax), %eax
 7621 0078 38C1     		cmpb	%al, %cl
 7622 007a 0F94C0   		sete	%al
 7623 007d 0FB6C0   		movzbl	%al, %eax
 7624 0080 21D0     		andl	%edx, %eax
 7625 0082 85C0     		testl	%eax, %eax
 7626 0084 0F95C0   		setne	%al
 7627 0087 888573FE 		movb	%al, -397(%rbp)
 7627      FFFF
  63:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/libs/libutpp/Checks.h ****         equal &= (expected[i] == actual[i]);
 7628              		.loc 5 63 0 discriminator 2
 7629 008d 838574FE 		addl	$1, -396(%rbp)
 7629      FFFF01
 7630              	.L389:
  63:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/libs/libutpp/Checks.h ****         equal &= (expected[i] == actual[i]);
 7631              		.loc 5 63 0 is_stmt 0 discriminator 1
 7632 0094 8B8574FE 		movl	-396(%rbp), %eax
 7632      FFFF
 7633 009a 3B8554FE 		cmpl	-428(%rbp), %eax
 7633      FFFF
 7634 00a0 7C9F     		jl	.L390
 7635              	.LBE66:
 7636              	.LBB67:
  66:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/libs/libutpp/Checks.h ****     {
 7637              		.loc 5 66 0 is_stmt 1
 7638 00a2 0FB68573 		movzbl	-397(%rbp), %eax
 7638      FEFFFF
 7639 00a9 83F001   		xorl	$1, %eax
 7640 00ac 84C0     		testb	%al, %al
 7641 00ae 0F845801 		je	.L398
 7641      0000
 7642              	.LBB68:
  68:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/libs/libutpp/Checks.h **** 
 7643              		.loc 5 68 0
 7644 00b4 488D8580 		leaq	-384(%rbp), %rax
 7644      FEFFFF
 7645 00bb 4889C7   		movq	%rax, %rdi
 7646              	.LEHB286:
 7647 00be E8000000 		call	_ZN8UnitTest15MemoryOutStreamC1Ev
 7647      00
 7648              	.LEHE286:
  70:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/libs/libutpp/Checks.h **** 
 7649              		.loc 5 70 0
 7650 00c3 488D8580 		leaq	-384(%rbp), %rax
 7650      FEFFFF
 7651 00ca BE000000 		movl	$.LC79, %esi
 7651      00
 7652 00cf 4889C7   		movq	%rax, %rdi
 7653              	.LEHB287:
 7654 00d2 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
 7654      00
 7655              	.LBB69:
  72:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/libs/libutpp/Checks.h ****             stream << expected[expectedIndex] << " ";
 7656              		.loc 5 72 0
 7657 00d7 C78578FE 		movl	$0, -392(%rbp)
 7657      FFFF0000 
 7657      0000
 7658 00e1 EB40     		jmp	.L392
 7659              	.L393:
  73:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/libs/libutpp/Checks.h **** 
 7660              		.loc 5 73 0
 7661 00e3 488B8560 		movq	-416(%rbp), %rax
 7661      FEFFFF
 7662 00ea 488B10   		movq	(%rax), %rdx
 7663 00ed 8B8578FE 		movl	-392(%rbp), %eax
 7663      FFFF
 7664 00f3 4898     		cltq
 7665 00f5 4801D0   		addq	%rdx, %rax
 7666 00f8 0FB600   		movzbl	(%rax), %eax
 7667 00fb 0FB6D0   		movzbl	%al, %edx
 7668 00fe 488D8580 		leaq	-384(%rbp), %rax
 7668      FEFFFF
 7669 0105 89D6     		movl	%edx, %esi
 7670 0107 4889C7   		movq	%rax, %rdi
 7671 010a E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_h
 7671      00
 7672 010f BE000000 		movl	$.LC80, %esi
 7672      00
 7673 0114 4889C7   		movq	%rax, %rdi
 7674 0117 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
 7674      00
  72:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/libs/libutpp/Checks.h ****             stream << expected[expectedIndex] << " ";
 7675              		.loc 5 72 0
 7676 011c 838578FE 		addl	$1, -392(%rbp)
 7676      FFFF01
 7677              	.L392:
  72:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/libs/libutpp/Checks.h ****             stream << expected[expectedIndex] << " ";
 7678              		.loc 5 72 0 is_stmt 0 discriminator 1
 7679 0123 8B8578FE 		movl	-392(%rbp), %eax
 7679      FFFF
 7680 0129 3B8554FE 		cmpl	-428(%rbp), %eax
 7680      FFFF
 7681 012f 7CB2     		jl	.L393
 7682              	.LBE69:
  75:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/libs/libutpp/Checks.h **** 
 7683              		.loc 5 75 0 is_stmt 1
 7684 0131 488D8580 		leaq	-384(%rbp), %rax
 7684      FEFFFF
 7685 0138 BE000000 		movl	$.LC81, %esi
 7685      00
 7686 013d 4889C7   		movq	%rax, %rdi
 7687 0140 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
 7687      00
 7688              	.LBB70:
  77:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/libs/libutpp/Checks.h ****             stream << actual[actualIndex] << " ";
 7689              		.loc 5 77 0
 7690 0145 C7857CFE 		movl	$0, -388(%rbp)
 7690      FFFF0000 
 7690      0000
 7691 014f EB40     		jmp	.L394
 7692              	.L395:
  78:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/libs/libutpp/Checks.h **** 
 7693              		.loc 5 78 0
 7694 0151 488B8558 		movq	-424(%rbp), %rax
 7694      FEFFFF
 7695 0158 488B10   		movq	(%rax), %rdx
 7696 015b 8B857CFE 		movl	-388(%rbp), %eax
 7696      FFFF
 7697 0161 4898     		cltq
 7698 0163 4801D0   		addq	%rdx, %rax
 7699 0166 0FB600   		movzbl	(%rax), %eax
 7700 0169 0FB6D0   		movzbl	%al, %edx
 7701 016c 488D8580 		leaq	-384(%rbp), %rax
 7701      FEFFFF
 7702 0173 89D6     		movl	%edx, %esi
 7703 0175 4889C7   		movq	%rax, %rdi
 7704 0178 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_h
 7704      00
 7705 017d BE000000 		movl	$.LC80, %esi
 7705      00
 7706 0182 4889C7   		movq	%rax, %rdi
 7707 0185 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
 7707      00
  77:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/libs/libutpp/Checks.h ****             stream << actual[actualIndex] << " ";
 7708              		.loc 5 77 0
 7709 018a 83857CFE 		addl	$1, -388(%rbp)
 7709      FFFF01
 7710              	.L394:
  77:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/libs/libutpp/Checks.h ****             stream << actual[actualIndex] << " ";
 7711              		.loc 5 77 0 is_stmt 0 discriminator 1
 7712 0191 8B857CFE 		movl	-388(%rbp), %eax
 7712      FFFF
 7713 0197 3B8554FE 		cmpl	-428(%rbp), %eax
 7713      FFFF
 7714 019d 7CB2     		jl	.L395
 7715              	.LBE70:
  80:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/libs/libutpp/Checks.h **** 
 7716              		.loc 5 80 0 is_stmt 1
 7717 019f 488D8580 		leaq	-384(%rbp), %rax
 7717      FEFFFF
 7718 01a6 BE000000 		movl	$.LC82, %esi
 7718      00
 7719 01ab 4889C7   		movq	%rax, %rdi
 7720 01ae E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
 7720      00
  82:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/libs/libutpp/Checks.h ****     }
 7721              		.loc 5 82 0
 7722 01b3 488D8580 		leaq	-384(%rbp), %rax
 7722      FEFFFF
 7723 01ba 4889C7   		movq	%rax, %rdi
 7724 01bd E8000000 		call	_ZNK8UnitTest15MemoryOutStream7GetTextEv
 7724      00
 7725 01c2 4889C2   		movq	%rax, %rdx
 7726 01c5 488B8D48 		movq	-440(%rbp), %rcx
 7726      FEFFFF
 7727 01cc 488B8568 		movq	-408(%rbp), %rax
 7727      FEFFFF
 7728 01d3 4889CE   		movq	%rcx, %rsi
 7729 01d6 4889C7   		movq	%rax, %rdi
 7730 01d9 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 7730      00
 7731              	.LEHE287:
  82:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/libs/libutpp/Checks.h ****     }
 7732              		.loc 5 82 0 is_stmt 0 discriminator 1
 7733 01de 488D8580 		leaq	-384(%rbp), %rax
 7733      FEFFFF
 7734 01e5 4889C7   		movq	%rax, %rdi
 7735              	.LEHB288:
 7736 01e8 E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 7736      00
 7737              	.LEHE288:
 7738              	.LBE68:
 7739 01ed EB1D     		jmp	.L398
 7740              	.L397:
 7741 01ef 4889C3   		movq	%rax, %rbx
 7742              	.LBB71:
  82:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/libs/libutpp/Checks.h ****     }
 7743              		.loc 5 82 0
 7744 01f2 488D8580 		leaq	-384(%rbp), %rax
 7744      FEFFFF
 7745 01f9 4889C7   		movq	%rax, %rdi
 7746 01fc E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 7746      00
 7747 0201 4889D8   		movq	%rbx, %rax
 7748 0204 4889C7   		movq	%rax, %rdi
 7749              	.LEHB289:
 7750 0207 E8000000 		call	_Unwind_Resume
 7750      00
 7751              	.LEHE289:
 7752              	.L398:
 7753              	.LBE71:
 7754              	.LBE67:
 7755              	.LBE65:
 7756              		.loc 5 84 0 is_stmt 1
 7757 020c 4881C4B8 		addq	$440, %rsp
 7757      010000
 7758 0213 5B       		popq	%rbx
 7759 0214 5D       		popq	%rbp
 7760              		.cfi_def_cfa 7, 8
 7761 0215 C3       		ret
 7762              		.cfi_endproc
 7763              	.LFE1194:
 7764              		.section	.gcc_except_table
 7765              	.LLSDA1194:
 7766 06a7 FF       		.byte	0xff
 7767 06a8 FF       		.byte	0xff
 7768 06a9 01       		.byte	0x1
 7769 06aa 16       		.uleb128 .LLSDACSE1194-.LLSDACSB1194
 7770              	.LLSDACSB1194:
 7771 06ab BE01     		.uleb128 .LEHB286-.LFB1194
 7772 06ad 05       		.uleb128 .LEHE286-.LEHB286
 7773 06ae 00       		.uleb128 0
 7774 06af 00       		.uleb128 0
 7775 06b0 D201     		.uleb128 .LEHB287-.LFB1194
 7776 06b2 8C02     		.uleb128 .LEHE287-.LEHB287
 7777 06b4 EF03     		.uleb128 .L397-.LFB1194
 7778 06b6 00       		.uleb128 0
 7779 06b7 E803     		.uleb128 .LEHB288-.LFB1194
 7780 06b9 05       		.uleb128 .LEHE288-.LEHB288
 7781 06ba 00       		.uleb128 0
 7782 06bb 00       		.uleb128 0
 7783 06bc 8704     		.uleb128 .LEHB289-.LFB1194
 7784 06be 05       		.uleb128 .LEHE289-.LEHB289
 7785 06bf 00       		.uleb128 0
 7786 06c0 00       		.uleb128 0
 7787              	.LLSDACSE1194:
 7788              		.section	.text._ZN8UnitTest15CheckArrayEqualIPhS1_EEvRNS_11TestResultsERKT_RKT0_iRKNS_11TestDetail
 7790              		.section	.text._ZN8UnitTest15CheckArrayEqualIPKcPhEEvRNS_11TestResultsERKT_RKT0_iRKNS_11TestDetail
 7791              		.weak	_ZN8UnitTest15CheckArrayEqualIPKcPhEEvRNS_11TestResultsERKT_RKT0_iRKNS_11TestDetailsE
 7793              	_ZN8UnitTest15CheckArrayEqualIPKcPhEEvRNS_11TestResultsERKT_RKT0_iRKNS_11TestDetailsE:
 7794              	.LFB1195:
  59:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/libs/libutpp/Checks.h ****                 int const count, TestDetails const& details)
 7795              		.loc 5 59 0
 7796              		.cfi_startproc
 7797              		.cfi_personality 0x3,__gxx_personality_v0
 7798              		.cfi_lsda 0x3,.LLSDA1195
 7799 0000 55       		pushq	%rbp
 7800              		.cfi_def_cfa_offset 16
 7801              		.cfi_offset 6, -16
 7802 0001 4889E5   		movq	%rsp, %rbp
 7803              		.cfi_def_cfa_register 6
 7804 0004 53       		pushq	%rbx
 7805 0005 4881ECB8 		subq	$440, %rsp
 7805      010000
 7806              		.cfi_offset 3, -24
 7807 000c 4889BD68 		movq	%rdi, -408(%rbp)
 7807      FEFFFF
 7808 0013 4889B560 		movq	%rsi, -416(%rbp)
 7808      FEFFFF
 7809 001a 48899558 		movq	%rdx, -424(%rbp)
 7809      FEFFFF
 7810 0021 898D54FE 		movl	%ecx, -428(%rbp)
 7810      FFFF
 7811 0027 4C898548 		movq	%r8, -440(%rbp)
 7811      FEFFFF
 7812              	.LBB72:
  62:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/libs/libutpp/Checks.h ****     for (int i = 0; i < count; ++i)
 7813              		.loc 5 62 0
 7814 002e C68573FE 		movb	$1, -397(%rbp)
 7814      FFFF01
 7815              	.LBB73:
  63:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/libs/libutpp/Checks.h ****         equal &= (expected[i] == actual[i]);
 7816              		.loc 5 63 0
 7817 0035 C78574FE 		movl	$0, -396(%rbp)
 7817      FFFF0000 
 7817      0000
 7818 003f EB59     		jmp	.L400
 7819              	.L401:
  64:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/libs/libutpp/Checks.h **** 
 7820              		.loc 5 64 0 discriminator 2
 7821 0041 0FB69573 		movzbl	-397(%rbp), %edx
 7821      FEFFFF
 7822 0048 488B8560 		movq	-416(%rbp), %rax
 7822      FEFFFF
 7823 004f 488B08   		movq	(%rax), %rcx
 7824 0052 8B8574FE 		movl	-396(%rbp), %eax
 7824      FFFF
 7825 0058 4898     		cltq
 7826 005a 4801C8   		addq	%rcx, %rax
 7827 005d 0FB600   		movzbl	(%rax), %eax
 7828 0060 0FBEC8   		movsbl	%al, %ecx
 7829 0063 488B8558 		movq	-424(%rbp), %rax
 7829      FEFFFF
 7830 006a 488B30   		movq	(%rax), %rsi
 7831 006d 8B8574FE 		movl	-396(%rbp), %eax
 7831      FFFF
 7832 0073 4898     		cltq
 7833 0075 4801F0   		addq	%rsi, %rax
 7834 0078 0FB600   		movzbl	(%rax), %eax
 7835 007b 0FB6C0   		movzbl	%al, %eax
 7836 007e 39C1     		cmpl	%eax, %ecx
 7837 0080 0F94C0   		sete	%al
 7838 0083 0FB6C0   		movzbl	%al, %eax
 7839 0086 21D0     		andl	%edx, %eax
 7840 0088 85C0     		testl	%eax, %eax
 7841 008a 0F95C0   		setne	%al
 7842 008d 888573FE 		movb	%al, -397(%rbp)
 7842      FFFF
  63:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/libs/libutpp/Checks.h ****         equal &= (expected[i] == actual[i]);
 7843              		.loc 5 63 0 discriminator 2
 7844 0093 838574FE 		addl	$1, -396(%rbp)
 7844      FFFF01
 7845              	.L400:
  63:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/libs/libutpp/Checks.h ****         equal &= (expected[i] == actual[i]);
 7846              		.loc 5 63 0 is_stmt 0 discriminator 1
 7847 009a 8B8574FE 		movl	-396(%rbp), %eax
 7847      FFFF
 7848 00a0 3B8554FE 		cmpl	-428(%rbp), %eax
 7848      FFFF
 7849 00a6 7C99     		jl	.L401
 7850              	.LBE73:
 7851              	.LBB74:
  66:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/libs/libutpp/Checks.h ****     {
 7852              		.loc 5 66 0 is_stmt 1
 7853 00a8 0FB68573 		movzbl	-397(%rbp), %eax
 7853      FEFFFF
 7854 00af 83F001   		xorl	$1, %eax
 7855 00b2 84C0     		testb	%al, %al
 7856 00b4 0F845801 		je	.L409
 7856      0000
 7857              	.LBB75:
  68:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/libs/libutpp/Checks.h **** 
 7858              		.loc 5 68 0
 7859 00ba 488D8580 		leaq	-384(%rbp), %rax
 7859      FEFFFF
 7860 00c1 4889C7   		movq	%rax, %rdi
 7861              	.LEHB290:
 7862 00c4 E8000000 		call	_ZN8UnitTest15MemoryOutStreamC1Ev
 7862      00
 7863              	.LEHE290:
  70:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/libs/libutpp/Checks.h **** 
 7864              		.loc 5 70 0
 7865 00c9 488D8580 		leaq	-384(%rbp), %rax
 7865      FEFFFF
 7866 00d0 BE000000 		movl	$.LC79, %esi
 7866      00
 7867 00d5 4889C7   		movq	%rax, %rdi
 7868              	.LEHB291:
 7869 00d8 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
 7869      00
 7870              	.LBB76:
  72:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/libs/libutpp/Checks.h ****             stream << expected[expectedIndex] << " ";
 7871              		.loc 5 72 0
 7872 00dd C78578FE 		movl	$0, -392(%rbp)
 7872      FFFF0000 
 7872      0000
 7873 00e7 EB40     		jmp	.L403
 7874              	.L404:
  73:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/libs/libutpp/Checks.h **** 
 7875              		.loc 5 73 0
 7876 00e9 488B8560 		movq	-416(%rbp), %rax
 7876      FEFFFF
 7877 00f0 488B10   		movq	(%rax), %rdx
 7878 00f3 8B8578FE 		movl	-392(%rbp), %eax
 7878      FFFF
 7879 00f9 4898     		cltq
 7880 00fb 4801D0   		addq	%rdx, %rax
 7881 00fe 0FB600   		movzbl	(%rax), %eax
 7882 0101 0FBED0   		movsbl	%al, %edx
 7883 0104 488D8580 		leaq	-384(%rbp), %rax
 7883      FEFFFF
 7884 010b 89D6     		movl	%edx, %esi
 7885 010d 4889C7   		movq	%rax, %rdi
 7886 0110 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c
 7886      00
 7887 0115 BE000000 		movl	$.LC80, %esi
 7887      00
 7888 011a 4889C7   		movq	%rax, %rdi
 7889 011d E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
 7889      00
  72:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/libs/libutpp/Checks.h ****             stream << expected[expectedIndex] << " ";
 7890              		.loc 5 72 0
 7891 0122 838578FE 		addl	$1, -392(%rbp)
 7891      FFFF01
 7892              	.L403:
  72:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/libs/libutpp/Checks.h ****             stream << expected[expectedIndex] << " ";
 7893              		.loc 5 72 0 is_stmt 0 discriminator 1
 7894 0129 8B8578FE 		movl	-392(%rbp), %eax
 7894      FFFF
 7895 012f 3B8554FE 		cmpl	-428(%rbp), %eax
 7895      FFFF
 7896 0135 7CB2     		jl	.L404
 7897              	.LBE76:
  75:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/libs/libutpp/Checks.h **** 
 7898              		.loc 5 75 0 is_stmt 1
 7899 0137 488D8580 		leaq	-384(%rbp), %rax
 7899      FEFFFF
 7900 013e BE000000 		movl	$.LC81, %esi
 7900      00
 7901 0143 4889C7   		movq	%rax, %rdi
 7902 0146 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
 7902      00
 7903              	.LBB77:
  77:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/libs/libutpp/Checks.h ****             stream << actual[actualIndex] << " ";
 7904              		.loc 5 77 0
 7905 014b C7857CFE 		movl	$0, -388(%rbp)
 7905      FFFF0000 
 7905      0000
 7906 0155 EB40     		jmp	.L405
 7907              	.L406:
  78:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/libs/libutpp/Checks.h **** 
 7908              		.loc 5 78 0
 7909 0157 488B8558 		movq	-424(%rbp), %rax
 7909      FEFFFF
 7910 015e 488B10   		movq	(%rax), %rdx
 7911 0161 8B857CFE 		movl	-388(%rbp), %eax
 7911      FFFF
 7912 0167 4898     		cltq
 7913 0169 4801D0   		addq	%rdx, %rax
 7914 016c 0FB600   		movzbl	(%rax), %eax
 7915 016f 0FB6D0   		movzbl	%al, %edx
 7916 0172 488D8580 		leaq	-384(%rbp), %rax
 7916      FEFFFF
 7917 0179 89D6     		movl	%edx, %esi
 7918 017b 4889C7   		movq	%rax, %rdi
 7919 017e E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_h
 7919      00
 7920 0183 BE000000 		movl	$.LC80, %esi
 7920      00
 7921 0188 4889C7   		movq	%rax, %rdi
 7922 018b E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
 7922      00
  77:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/libs/libutpp/Checks.h ****             stream << actual[actualIndex] << " ";
 7923              		.loc 5 77 0
 7924 0190 83857CFE 		addl	$1, -388(%rbp)
 7924      FFFF01
 7925              	.L405:
  77:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/libs/libutpp/Checks.h ****             stream << actual[actualIndex] << " ";
 7926              		.loc 5 77 0 is_stmt 0 discriminator 1
 7927 0197 8B857CFE 		movl	-388(%rbp), %eax
 7927      FFFF
 7928 019d 3B8554FE 		cmpl	-428(%rbp), %eax
 7928      FFFF
 7929 01a3 7CB2     		jl	.L406
 7930              	.LBE77:
  80:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/libs/libutpp/Checks.h **** 
 7931              		.loc 5 80 0 is_stmt 1
 7932 01a5 488D8580 		leaq	-384(%rbp), %rax
 7932      FEFFFF
 7933 01ac BE000000 		movl	$.LC82, %esi
 7933      00
 7934 01b1 4889C7   		movq	%rax, %rdi
 7935 01b4 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
 7935      00
  82:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/libs/libutpp/Checks.h ****     }
 7936              		.loc 5 82 0
 7937 01b9 488D8580 		leaq	-384(%rbp), %rax
 7937      FEFFFF
 7938 01c0 4889C7   		movq	%rax, %rdi
 7939 01c3 E8000000 		call	_ZNK8UnitTest15MemoryOutStream7GetTextEv
 7939      00
 7940 01c8 4889C2   		movq	%rax, %rdx
 7941 01cb 488B8D48 		movq	-440(%rbp), %rcx
 7941      FEFFFF
 7942 01d2 488B8568 		movq	-408(%rbp), %rax
 7942      FEFFFF
 7943 01d9 4889CE   		movq	%rcx, %rsi
 7944 01dc 4889C7   		movq	%rax, %rdi
 7945 01df E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
 7945      00
 7946              	.LEHE291:
  82:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/libs/libutpp/Checks.h ****     }
 7947              		.loc 5 82 0 is_stmt 0 discriminator 1
 7948 01e4 488D8580 		leaq	-384(%rbp), %rax
 7948      FEFFFF
 7949 01eb 4889C7   		movq	%rax, %rdi
 7950              	.LEHB292:
 7951 01ee E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 7951      00
 7952              	.LEHE292:
 7953              	.LBE75:
 7954 01f3 EB1D     		jmp	.L409
 7955              	.L408:
 7956 01f5 4889C3   		movq	%rax, %rbx
 7957              	.LBB78:
  82:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/libs/libutpp/Checks.h ****     }
 7958              		.loc 5 82 0
 7959 01f8 488D8580 		leaq	-384(%rbp), %rax
 7959      FEFFFF
 7960 01ff 4889C7   		movq	%rax, %rdi
 7961 0202 E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 7961      00
 7962 0207 4889D8   		movq	%rbx, %rax
 7963 020a 4889C7   		movq	%rax, %rdi
 7964              	.LEHB293:
 7965 020d E8000000 		call	_Unwind_Resume
 7965      00
 7966              	.LEHE293:
 7967              	.L409:
 7968              	.LBE78:
 7969              	.LBE74:
 7970              	.LBE72:
 7971              		.loc 5 84 0 is_stmt 1
 7972 0212 4881C4B8 		addq	$440, %rsp
 7972      010000
 7973 0219 5B       		popq	%rbx
 7974 021a 5D       		popq	%rbp
 7975              		.cfi_def_cfa 7, 8
 7976 021b C3       		ret
 7977              		.cfi_endproc
 7978              	.LFE1195:
 7979              		.section	.gcc_except_table
 7980              	.LLSDA1195:
 7981 06c1 FF       		.byte	0xff
 7982 06c2 FF       		.byte	0xff
 7983 06c3 01       		.byte	0x1
 7984 06c4 16       		.uleb128 .LLSDACSE1195-.LLSDACSB1195
 7985              	.LLSDACSB1195:
 7986 06c5 C401     		.uleb128 .LEHB290-.LFB1195
 7987 06c7 05       		.uleb128 .LEHE290-.LEHB290
 7988 06c8 00       		.uleb128 0
 7989 06c9 00       		.uleb128 0
 7990 06ca D801     		.uleb128 .LEHB291-.LFB1195
 7991 06cc 8C02     		.uleb128 .LEHE291-.LEHB291
 7992 06ce F503     		.uleb128 .L408-.LFB1195
 7993 06d0 00       		.uleb128 0
 7994 06d1 EE03     		.uleb128 .LEHB292-.LFB1195
 7995 06d3 05       		.uleb128 .LEHE292-.LEHB292
 7996 06d4 00       		.uleb128 0
 7997 06d5 00       		.uleb128 0
 7998 06d6 8D04     		.uleb128 .LEHB293-.LFB1195
 7999 06d8 05       		.uleb128 .LEHE293-.LEHB293
 8000 06d9 00       		.uleb128 0
 8001 06da 00       		.uleb128 0
 8002              	.LLSDACSE1195:
 8003              		.section	.text._ZN8UnitTest15CheckArrayEqualIPKcPhEEvRNS_11TestResultsERKT_RKT0_iRKNS_11TestDetail
 8005              		.weak	_ZTV28TestHexIO_testDeriveWriteMap
 8006              		.section	.rodata._ZTV28TestHexIO_testDeriveWriteMap,"aG",@progbits,_ZTV28TestHexIO_testDeriveWrite
 8007              		.align 32
 8010              	_ZTV28TestHexIO_testDeriveWriteMap:
 8011 0000 00000000 		.quad	0
 8011      00000000 
 8012 0008 00000000 		.quad	_ZTI28TestHexIO_testDeriveWriteMap
 8012      00000000 
 8013 0010 00000000 		.quad	_ZN28TestHexIO_testDeriveWriteMapD1Ev
 8013      00000000 
 8014 0018 00000000 		.quad	_ZN28TestHexIO_testDeriveWriteMapD0Ev
 8014      00000000 
 8015 0020 00000000 		.quad	_ZNK28TestHexIO_testDeriveWriteMap7RunImplEv
 8015      00000000 
 8016              		.section	.text._ZN28TestHexIO_testDeriveWriteMapD2Ev,"axG",@progbits,_ZN28TestHexIO_testDeriveWrit
 8017              		.align 2
 8018              		.weak	_ZN28TestHexIO_testDeriveWriteMapD2Ev
 8020              	_ZN28TestHexIO_testDeriveWriteMapD2Ev:
 8021              	.LFB1267:
 303:testHexIO.cpp **** 	testDeriveWriteMap("Hello........World", "*****........*****");
 8022              		.loc 4 303 0
 8023              		.cfi_startproc
 8024 0000 55       		pushq	%rbp
 8025              		.cfi_def_cfa_offset 16
 8026              		.cfi_offset 6, -16
 8027 0001 4889E5   		movq	%rsp, %rbp
 8028              		.cfi_def_cfa_register 6
 8029 0004 4883EC10 		subq	$16, %rsp
 8030 0008 48897DF8 		movq	%rdi, -8(%rbp)
 8031              	.LBB79:
 303:testHexIO.cpp **** 	testDeriveWriteMap("Hello........World", "*****........*****");
 8032              		.loc 4 303 0
 8033 000c 488B45F8 		movq	-8(%rbp), %rax
 8034 0010 48C70000 		movq	$_ZTV28TestHexIO_testDeriveWriteMap+16, (%rax)
 8034      000000
 8035 0017 488B45F8 		movq	-8(%rbp), %rax
 8036 001b 4889C7   		movq	%rax, %rdi
 8037 001e E8000000 		call	_ZN8UnitTest4TestD2Ev
 8037      00
 8038              	.LBE79:
 8039 0023 B8000000 		movl	$0, %eax
 8039      00
 8040 0028 85C0     		testl	%eax, %eax
 8041 002a 740C     		je	.L410
 303:testHexIO.cpp **** 	testDeriveWriteMap("Hello........World", "*****........*****");
 8042              		.loc 4 303 0 is_stmt 0 discriminator 1
 8043 002c 488B45F8 		movq	-8(%rbp), %rax
 8044 0030 4889C7   		movq	%rax, %rdi
 8045 0033 E8000000 		call	_ZdlPv
 8045      00
 8046              	.L410:
 303:testHexIO.cpp **** 	testDeriveWriteMap("Hello........World", "*****........*****");
 8047              		.loc 4 303 0
 8048 0038 C9       		leave
 8049              		.cfi_def_cfa 7, 8
 8050 0039 C3       		ret
 8051              		.cfi_endproc
 8052              	.LFE1267:
 8054              		.weak	_ZN28TestHexIO_testDeriveWriteMapD1Ev
 8055              		.set	_ZN28TestHexIO_testDeriveWriteMapD1Ev,_ZN28TestHexIO_testDeriveWriteMapD2Ev
 8056              		.section	.text._ZN28TestHexIO_testDeriveWriteMapD0Ev,"axG",@progbits,_ZN28TestHexIO_testDeriveWrit
 8057              		.align 2
 8058              		.weak	_ZN28TestHexIO_testDeriveWriteMapD0Ev
 8060              	_ZN28TestHexIO_testDeriveWriteMapD0Ev:
 8061              	.LFB1269:
 303:testHexIO.cpp **** 	testDeriveWriteMap("Hello........World", "*****........*****");
 8062              		.loc 4 303 0 is_stmt 1
 8063              		.cfi_startproc
 8064 0000 55       		pushq	%rbp
 8065              		.cfi_def_cfa_offset 16
 8066              		.cfi_offset 6, -16
 8067 0001 4889E5   		movq	%rsp, %rbp
 8068              		.cfi_def_cfa_register 6
 8069 0004 4883EC10 		subq	$16, %rsp
 8070 0008 48897DF8 		movq	%rdi, -8(%rbp)
 303:testHexIO.cpp **** 	testDeriveWriteMap("Hello........World", "*****........*****");
 8071              		.loc 4 303 0
 8072 000c 488B45F8 		movq	-8(%rbp), %rax
 8073 0010 4889C7   		movq	%rax, %rdi
 8074 0013 E8000000 		call	_ZN28TestHexIO_testDeriveWriteMapD1Ev
 8074      00
 8075 0018 488B45F8 		movq	-8(%rbp), %rax
 8076 001c 4889C7   		movq	%rax, %rdi
 8077 001f E8000000 		call	_ZdlPv
 8077      00
 8078 0024 C9       		leave
 8079              		.cfi_def_cfa 7, 8
 8080 0025 C3       		ret
 8081              		.cfi_endproc
 8082              	.LFE1269:
 8084              		.weak	_ZTV23TestHexIO_testRoundTrip
 8085              		.section	.rodata._ZTV23TestHexIO_testRoundTrip,"aG",@progbits,_ZTV23TestHexIO_testRoundTrip,comdat
 8086              		.align 32
 8089              	_ZTV23TestHexIO_testRoundTrip:
 8090 0000 00000000 		.quad	0
 8090      00000000 
 8091 0008 00000000 		.quad	_ZTI23TestHexIO_testRoundTrip
 8091      00000000 
 8092 0010 00000000 		.quad	_ZN23TestHexIO_testRoundTripD1Ev
 8092      00000000 
 8093 0018 00000000 		.quad	_ZN23TestHexIO_testRoundTripD0Ev
 8093      00000000 
 8094 0020 00000000 		.quad	_ZNK23TestHexIO_testRoundTrip7RunImplEv
 8094      00000000 
 8095              		.section	.text._ZN23TestHexIO_testRoundTripD2Ev,"axG",@progbits,_ZN23TestHexIO_testRoundTripD5Ev,c
 8096              		.align 2
 8097              		.weak	_ZN23TestHexIO_testRoundTripD2Ev
 8099              	_ZN23TestHexIO_testRoundTripD2Ev:
 8100              	.LFB1271:
 242:testHexIO.cpp **** 	testRoundTrip(
 8101              		.loc 4 242 0
 8102              		.cfi_startproc
 8103 0000 55       		pushq	%rbp
 8104              		.cfi_def_cfa_offset 16
 8105              		.cfi_offset 6, -16
 8106 0001 4889E5   		movq	%rsp, %rbp
 8107              		.cfi_def_cfa_register 6
 8108 0004 4883EC10 		subq	$16, %rsp
 8109 0008 48897DF8 		movq	%rdi, -8(%rbp)
 8110              	.LBB80:
 242:testHexIO.cpp **** 	testRoundTrip(
 8111              		.loc 4 242 0
 8112 000c 488B45F8 		movq	-8(%rbp), %rax
 8113 0010 48C70000 		movq	$_ZTV23TestHexIO_testRoundTrip+16, (%rax)
 8113      000000
 8114 0017 488B45F8 		movq	-8(%rbp), %rax
 8115 001b 4889C7   		movq	%rax, %rdi
 8116 001e E8000000 		call	_ZN8UnitTest4TestD2Ev
 8116      00
 8117              	.LBE80:
 8118 0023 B8000000 		movl	$0, %eax
 8118      00
 8119 0028 85C0     		testl	%eax, %eax
 8120 002a 740C     		je	.L415
 242:testHexIO.cpp **** 	testRoundTrip(
 8121              		.loc 4 242 0 is_stmt 0 discriminator 1
 8122 002c 488B45F8 		movq	-8(%rbp), %rax
 8123 0030 4889C7   		movq	%rax, %rdi
 8124 0033 E8000000 		call	_ZdlPv
 8124      00
 8125              	.L415:
 242:testHexIO.cpp **** 	testRoundTrip(
 8126              		.loc 4 242 0
 8127 0038 C9       		leave
 8128              		.cfi_def_cfa 7, 8
 8129 0039 C3       		ret
 8130              		.cfi_endproc
 8131              	.LFE1271:
 8133              		.weak	_ZN23TestHexIO_testRoundTripD1Ev
 8134              		.set	_ZN23TestHexIO_testRoundTripD1Ev,_ZN23TestHexIO_testRoundTripD2Ev
 8135              		.section	.text._ZN23TestHexIO_testRoundTripD0Ev,"axG",@progbits,_ZN23TestHexIO_testRoundTripD0Ev,c
 8136              		.align 2
 8137              		.weak	_ZN23TestHexIO_testRoundTripD0Ev
 8139              	_ZN23TestHexIO_testRoundTripD0Ev:
 8140              	.LFB1273:
 242:testHexIO.cpp **** 	testRoundTrip(
 8141              		.loc 4 242 0 is_stmt 1
 8142              		.cfi_startproc
 8143 0000 55       		pushq	%rbp
 8144              		.cfi_def_cfa_offset 16
 8145              		.cfi_offset 6, -16
 8146 0001 4889E5   		movq	%rsp, %rbp
 8147              		.cfi_def_cfa_register 6
 8148 0004 4883EC10 		subq	$16, %rsp
 8149 0008 48897DF8 		movq	%rdi, -8(%rbp)
 242:testHexIO.cpp **** 	testRoundTrip(
 8150              		.loc 4 242 0
 8151 000c 488B45F8 		movq	-8(%rbp), %rax
 8152 0010 4889C7   		movq	%rax, %rdi
 8153 0013 E8000000 		call	_ZN23TestHexIO_testRoundTripD1Ev
 8153      00
 8154 0018 488B45F8 		movq	-8(%rbp), %rax
 8155 001c 4889C7   		movq	%rax, %rdi
 8156 001f E8000000 		call	_ZdlPv
 8156      00
 8157 0024 C9       		leave
 8158              		.cfi_def_cfa 7, 8
 8159 0025 C3       		ret
 8160              		.cfi_endproc
 8161              	.LFE1273:
 8163              		.weak	_ZTV25TestHexIO_testCorruptLine
 8164              		.section	.rodata._ZTV25TestHexIO_testCorruptLine,"aG",@progbits,_ZTV25TestHexIO_testCorruptLine,co
 8165              		.align 32
 8168              	_ZTV25TestHexIO_testCorruptLine:
 8169 0000 00000000 		.quad	0
 8169      00000000 
 8170 0008 00000000 		.quad	_ZTI25TestHexIO_testCorruptLine
 8170      00000000 
 8171 0010 00000000 		.quad	_ZN25TestHexIO_testCorruptLineD1Ev
 8171      00000000 
 8172 0018 00000000 		.quad	_ZN25TestHexIO_testCorruptLineD0Ev
 8172      00000000 
 8173 0020 00000000 		.quad	_ZNK25TestHexIO_testCorruptLine7RunImplEv
 8173      00000000 
 8174              		.section	.text._ZN25TestHexIO_testCorruptLineD2Ev,"axG",@progbits,_ZN25TestHexIO_testCorruptLineD5
 8175              		.align 2
 8176              		.weak	_ZN25TestHexIO_testCorruptLineD2Ev
 8178              	_ZN25TestHexIO_testCorruptLineD2Ev:
 8179              	.LFB1275:
 173:testHexIO.cpp **** 	Buffer data;
 8180              		.loc 4 173 0
 8181              		.cfi_startproc
 8182 0000 55       		pushq	%rbp
 8183              		.cfi_def_cfa_offset 16
 8184              		.cfi_offset 6, -16
 8185 0001 4889E5   		movq	%rsp, %rbp
 8186              		.cfi_def_cfa_register 6
 8187 0004 4883EC10 		subq	$16, %rsp
 8188 0008 48897DF8 		movq	%rdi, -8(%rbp)
 8189              	.LBB81:
 173:testHexIO.cpp **** 	Buffer data;
 8190              		.loc 4 173 0
 8191 000c 488B45F8 		movq	-8(%rbp), %rax
 8192 0010 48C70000 		movq	$_ZTV25TestHexIO_testCorruptLine+16, (%rax)
 8192      000000
 8193 0017 488B45F8 		movq	-8(%rbp), %rax
 8194 001b 4889C7   		movq	%rax, %rdi
 8195 001e E8000000 		call	_ZN8UnitTest4TestD2Ev
 8195      00
 8196              	.LBE81:
 8197 0023 B8000000 		movl	$0, %eax
 8197      00
 8198 0028 85C0     		testl	%eax, %eax
 8199 002a 740C     		je	.L420
 173:testHexIO.cpp **** 	Buffer data;
 8200              		.loc 4 173 0 is_stmt 0 discriminator 1
 8201 002c 488B45F8 		movq	-8(%rbp), %rax
 8202 0030 4889C7   		movq	%rax, %rdi
 8203 0033 E8000000 		call	_ZdlPv
 8203      00
 8204              	.L420:
 173:testHexIO.cpp **** 	Buffer data;
 8205              		.loc 4 173 0
 8206 0038 C9       		leave
 8207              		.cfi_def_cfa 7, 8
 8208 0039 C3       		ret
 8209              		.cfi_endproc
 8210              	.LFE1275:
 8212              		.weak	_ZN25TestHexIO_testCorruptLineD1Ev
 8213              		.set	_ZN25TestHexIO_testCorruptLineD1Ev,_ZN25TestHexIO_testCorruptLineD2Ev
 8214              		.section	.text._ZN25TestHexIO_testCorruptLineD0Ev,"axG",@progbits,_ZN25TestHexIO_testCorruptLineD0
 8215              		.align 2
 8216              		.weak	_ZN25TestHexIO_testCorruptLineD0Ev
 8218              	_ZN25TestHexIO_testCorruptLineD0Ev:
 8219              	.LFB1277:
 173:testHexIO.cpp **** 	Buffer data;
 8220              		.loc 4 173 0 is_stmt 1
 8221              		.cfi_startproc
 8222 0000 55       		pushq	%rbp
 8223              		.cfi_def_cfa_offset 16
 8224              		.cfi_offset 6, -16
 8225 0001 4889E5   		movq	%rsp, %rbp
 8226              		.cfi_def_cfa_register 6
 8227 0004 4883EC10 		subq	$16, %rsp
 8228 0008 48897DF8 		movq	%rdi, -8(%rbp)
 173:testHexIO.cpp **** 	Buffer data;
 8229              		.loc 4 173 0
 8230 000c 488B45F8 		movq	-8(%rbp), %rax
 8231 0010 4889C7   		movq	%rax, %rdi
 8232 0013 E8000000 		call	_ZN25TestHexIO_testCorruptLineD1Ev
 8232      00
 8233 0018 488B45F8 		movq	-8(%rbp), %rax
 8234 001c 4889C7   		movq	%rax, %rdi
 8235 001f E8000000 		call	_ZdlPv
 8235      00
 8236 0024 C9       		leave
 8237              		.cfi_def_cfa 7, 8
 8238 0025 C3       		ret
 8239              		.cfi_endproc
 8240              	.LFE1277:
 8242              		.weak	_ZTV25TestHexIO_testBadChecksum
 8243              		.section	.rodata._ZTV25TestHexIO_testBadChecksum,"aG",@progbits,_ZTV25TestHexIO_testBadChecksum,co
 8244              		.align 32
 8247              	_ZTV25TestHexIO_testBadChecksum:
 8248 0000 00000000 		.quad	0
 8248      00000000 
 8249 0008 00000000 		.quad	_ZTI25TestHexIO_testBadChecksum
 8249      00000000 
 8250 0010 00000000 		.quad	_ZN25TestHexIO_testBadChecksumD1Ev
 8250      00000000 
 8251 0018 00000000 		.quad	_ZN25TestHexIO_testBadChecksumD0Ev
 8251      00000000 
 8252 0020 00000000 		.quad	_ZNK25TestHexIO_testBadChecksum7RunImplEv
 8252      00000000 
 8253              		.section	.text._ZN25TestHexIO_testBadChecksumD2Ev,"axG",@progbits,_ZN25TestHexIO_testBadChecksumD5
 8254              		.align 2
 8255              		.weak	_ZN25TestHexIO_testBadChecksumD2Ev
 8257              	_ZN25TestHexIO_testBadChecksumD2Ev:
 8258              	.LFB1279:
 160:testHexIO.cpp **** 	Buffer data;
 8259              		.loc 4 160 0
 8260              		.cfi_startproc
 8261 0000 55       		pushq	%rbp
 8262              		.cfi_def_cfa_offset 16
 8263              		.cfi_offset 6, -16
 8264 0001 4889E5   		movq	%rsp, %rbp
 8265              		.cfi_def_cfa_register 6
 8266 0004 4883EC10 		subq	$16, %rsp
 8267 0008 48897DF8 		movq	%rdi, -8(%rbp)
 8268              	.LBB82:
 160:testHexIO.cpp **** 	Buffer data;
 8269              		.loc 4 160 0
 8270 000c 488B45F8 		movq	-8(%rbp), %rax
 8271 0010 48C70000 		movq	$_ZTV25TestHexIO_testBadChecksum+16, (%rax)
 8271      000000
 8272 0017 488B45F8 		movq	-8(%rbp), %rax
 8273 001b 4889C7   		movq	%rax, %rdi
 8274 001e E8000000 		call	_ZN8UnitTest4TestD2Ev
 8274      00
 8275              	.LBE82:
 8276 0023 B8000000 		movl	$0, %eax
 8276      00
 8277 0028 85C0     		testl	%eax, %eax
 8278 002a 740C     		je	.L425
 160:testHexIO.cpp **** 	Buffer data;
 8279              		.loc 4 160 0 is_stmt 0 discriminator 1
 8280 002c 488B45F8 		movq	-8(%rbp), %rax
 8281 0030 4889C7   		movq	%rax, %rdi
 8282 0033 E8000000 		call	_ZdlPv
 8282      00
 8283              	.L425:
 160:testHexIO.cpp **** 	Buffer data;
 8284              		.loc 4 160 0
 8285 0038 C9       		leave
 8286              		.cfi_def_cfa 7, 8
 8287 0039 C3       		ret
 8288              		.cfi_endproc
 8289              	.LFE1279:
 8291              		.weak	_ZN25TestHexIO_testBadChecksumD1Ev
 8292              		.set	_ZN25TestHexIO_testBadChecksumD1Ev,_ZN25TestHexIO_testBadChecksumD2Ev
 8293              		.section	.text._ZN25TestHexIO_testBadChecksumD0Ev,"axG",@progbits,_ZN25TestHexIO_testBadChecksumD0
 8294              		.align 2
 8295              		.weak	_ZN25TestHexIO_testBadChecksumD0Ev
 8297              	_ZN25TestHexIO_testBadChecksumD0Ev:
 8298              	.LFB1281:
 160:testHexIO.cpp **** 	Buffer data;
 8299              		.loc 4 160 0 is_stmt 1
 8300              		.cfi_startproc
 8301 0000 55       		pushq	%rbp
 8302              		.cfi_def_cfa_offset 16
 8303              		.cfi_offset 6, -16
 8304 0001 4889E5   		movq	%rsp, %rbp
 8305              		.cfi_def_cfa_register 6
 8306 0004 4883EC10 		subq	$16, %rsp
 8307 0008 48897DF8 		movq	%rdi, -8(%rbp)
 160:testHexIO.cpp **** 	Buffer data;
 8308              		.loc 4 160 0
 8309 000c 488B45F8 		movq	-8(%rbp), %rax
 8310 0010 4889C7   		movq	%rax, %rdi
 8311 0013 E8000000 		call	_ZN25TestHexIO_testBadChecksumD1Ev
 8311      00
 8312 0018 488B45F8 		movq	-8(%rbp), %rax
 8313 001c 4889C7   		movq	%rax, %rdi
 8314 001f E8000000 		call	_ZdlPv
 8314      00
 8315 0024 C9       		leave
 8316              		.cfi_def_cfa 7, 8
 8317 0025 C3       		ret
 8318              		.cfi_endproc
 8319              	.LFE1281:
 8321              		.weak	_ZTV26TestHexIO_testJunkChecksum
 8322              		.section	.rodata._ZTV26TestHexIO_testJunkChecksum,"aG",@progbits,_ZTV26TestHexIO_testJunkChecksum,
 8323              		.align 32
 8326              	_ZTV26TestHexIO_testJunkChecksum:
 8327 0000 00000000 		.quad	0
 8327      00000000 
 8328 0008 00000000 		.quad	_ZTI26TestHexIO_testJunkChecksum
 8328      00000000 
 8329 0010 00000000 		.quad	_ZN26TestHexIO_testJunkChecksumD1Ev
 8329      00000000 
 8330 0018 00000000 		.quad	_ZN26TestHexIO_testJunkChecksumD0Ev
 8330      00000000 
 8331 0020 00000000 		.quad	_ZNK26TestHexIO_testJunkChecksum7RunImplEv
 8331      00000000 
 8332              		.section	.text._ZN26TestHexIO_testJunkChecksumD2Ev,"axG",@progbits,_ZN26TestHexIO_testJunkChecksum
 8333              		.align 2
 8334              		.weak	_ZN26TestHexIO_testJunkChecksumD2Ev
 8336              	_ZN26TestHexIO_testJunkChecksumD2Ev:
 8337              	.LFB1283:
 147:testHexIO.cpp **** 	Buffer data;
 8338              		.loc 4 147 0
 8339              		.cfi_startproc
 8340 0000 55       		pushq	%rbp
 8341              		.cfi_def_cfa_offset 16
 8342              		.cfi_offset 6, -16
 8343 0001 4889E5   		movq	%rsp, %rbp
 8344              		.cfi_def_cfa_register 6
 8345 0004 4883EC10 		subq	$16, %rsp
 8346 0008 48897DF8 		movq	%rdi, -8(%rbp)
 8347              	.LBB83:
 147:testHexIO.cpp **** 	Buffer data;
 8348              		.loc 4 147 0
 8349 000c 488B45F8 		movq	-8(%rbp), %rax
 8350 0010 48C70000 		movq	$_ZTV26TestHexIO_testJunkChecksum+16, (%rax)
 8350      000000
 8351 0017 488B45F8 		movq	-8(%rbp), %rax
 8352 001b 4889C7   		movq	%rax, %rdi
 8353 001e E8000000 		call	_ZN8UnitTest4TestD2Ev
 8353      00
 8354              	.LBE83:
 8355 0023 B8000000 		movl	$0, %eax
 8355      00
 8356 0028 85C0     		testl	%eax, %eax
 8357 002a 740C     		je	.L430
 147:testHexIO.cpp **** 	Buffer data;
 8358              		.loc 4 147 0 is_stmt 0 discriminator 1
 8359 002c 488B45F8 		movq	-8(%rbp), %rax
 8360 0030 4889C7   		movq	%rax, %rdi
 8361 0033 E8000000 		call	_ZdlPv
 8361      00
 8362              	.L430:
 147:testHexIO.cpp **** 	Buffer data;
 8363              		.loc 4 147 0
 8364 0038 C9       		leave
 8365              		.cfi_def_cfa 7, 8
 8366 0039 C3       		ret
 8367              		.cfi_endproc
 8368              	.LFE1283:
 8370              		.weak	_ZN26TestHexIO_testJunkChecksumD1Ev
 8371              		.set	_ZN26TestHexIO_testJunkChecksumD1Ev,_ZN26TestHexIO_testJunkChecksumD2Ev
 8372              		.section	.text._ZN26TestHexIO_testJunkChecksumD0Ev,"axG",@progbits,_ZN26TestHexIO_testJunkChecksum
 8373              		.align 2
 8374              		.weak	_ZN26TestHexIO_testJunkChecksumD0Ev
 8376              	_ZN26TestHexIO_testJunkChecksumD0Ev:
 8377              	.LFB1285:
 147:testHexIO.cpp **** 	Buffer data;
 8378              		.loc 4 147 0 is_stmt 1
 8379              		.cfi_startproc
 8380 0000 55       		pushq	%rbp
 8381              		.cfi_def_cfa_offset 16
 8382              		.cfi_offset 6, -16
 8383 0001 4889E5   		movq	%rsp, %rbp
 8384              		.cfi_def_cfa_register 6
 8385 0004 4883EC10 		subq	$16, %rsp
 8386 0008 48897DF8 		movq	%rdi, -8(%rbp)
 147:testHexIO.cpp **** 	Buffer data;
 8387              		.loc 4 147 0
 8388 000c 488B45F8 		movq	-8(%rbp), %rax
 8389 0010 4889C7   		movq	%rax, %rdi
 8390 0013 E8000000 		call	_ZN26TestHexIO_testJunkChecksumD1Ev
 8390      00
 8391 0018 488B45F8 		movq	-8(%rbp), %rax
 8392 001c 4889C7   		movq	%rax, %rdi
 8393 001f E8000000 		call	_ZdlPv
 8393      00
 8394 0024 C9       		leave
 8395              		.cfi_def_cfa 7, 8
 8396 0025 C3       		ret
 8397              		.cfi_endproc
 8398              	.LFE1285:
 8400              		.weak	_ZTV26TestHexIO_testJunkDataByte
 8401              		.section	.rodata._ZTV26TestHexIO_testJunkDataByte,"aG",@progbits,_ZTV26TestHexIO_testJunkDataByte,
 8402              		.align 32
 8405              	_ZTV26TestHexIO_testJunkDataByte:
 8406 0000 00000000 		.quad	0
 8406      00000000 
 8407 0008 00000000 		.quad	_ZTI26TestHexIO_testJunkDataByte
 8407      00000000 
 8408 0010 00000000 		.quad	_ZN26TestHexIO_testJunkDataByteD1Ev
 8408      00000000 
 8409 0018 00000000 		.quad	_ZN26TestHexIO_testJunkDataByteD0Ev
 8409      00000000 
 8410 0020 00000000 		.quad	_ZNK26TestHexIO_testJunkDataByte7RunImplEv
 8410      00000000 
 8411              		.section	.text._ZN26TestHexIO_testJunkDataByteD2Ev,"axG",@progbits,_ZN26TestHexIO_testJunkDataByte
 8412              		.align 2
 8413              		.weak	_ZN26TestHexIO_testJunkDataByteD2Ev
 8415              	_ZN26TestHexIO_testJunkDataByteD2Ev:
 8416              	.LFB1287:
 134:testHexIO.cpp **** 	Buffer data;
 8417              		.loc 4 134 0
 8418              		.cfi_startproc
 8419 0000 55       		pushq	%rbp
 8420              		.cfi_def_cfa_offset 16
 8421              		.cfi_offset 6, -16
 8422 0001 4889E5   		movq	%rsp, %rbp
 8423              		.cfi_def_cfa_register 6
 8424 0004 4883EC10 		subq	$16, %rsp
 8425 0008 48897DF8 		movq	%rdi, -8(%rbp)
 8426              	.LBB84:
 134:testHexIO.cpp **** 	Buffer data;
 8427              		.loc 4 134 0
 8428 000c 488B45F8 		movq	-8(%rbp), %rax
 8429 0010 48C70000 		movq	$_ZTV26TestHexIO_testJunkDataByte+16, (%rax)
 8429      000000
 8430 0017 488B45F8 		movq	-8(%rbp), %rax
 8431 001b 4889C7   		movq	%rax, %rdi
 8432 001e E8000000 		call	_ZN8UnitTest4TestD2Ev
 8432      00
 8433              	.LBE84:
 8434 0023 B8000000 		movl	$0, %eax
 8434      00
 8435 0028 85C0     		testl	%eax, %eax
 8436 002a 740C     		je	.L435
 134:testHexIO.cpp **** 	Buffer data;
 8437              		.loc 4 134 0 is_stmt 0 discriminator 1
 8438 002c 488B45F8 		movq	-8(%rbp), %rax
 8439 0030 4889C7   		movq	%rax, %rdi
 8440 0033 E8000000 		call	_ZdlPv
 8440      00
 8441              	.L435:
 134:testHexIO.cpp **** 	Buffer data;
 8442              		.loc 4 134 0
 8443 0038 C9       		leave
 8444              		.cfi_def_cfa 7, 8
 8445 0039 C3       		ret
 8446              		.cfi_endproc
 8447              	.LFE1287:
 8449              		.weak	_ZN26TestHexIO_testJunkDataByteD1Ev
 8450              		.set	_ZN26TestHexIO_testJunkDataByteD1Ev,_ZN26TestHexIO_testJunkDataByteD2Ev
 8451              		.section	.text._ZN26TestHexIO_testJunkDataByteD0Ev,"axG",@progbits,_ZN26TestHexIO_testJunkDataByte
 8452              		.align 2
 8453              		.weak	_ZN26TestHexIO_testJunkDataByteD0Ev
 8455              	_ZN26TestHexIO_testJunkDataByteD0Ev:
 8456              	.LFB1289:
 134:testHexIO.cpp **** 	Buffer data;
 8457              		.loc 4 134 0 is_stmt 1
 8458              		.cfi_startproc
 8459 0000 55       		pushq	%rbp
 8460              		.cfi_def_cfa_offset 16
 8461              		.cfi_offset 6, -16
 8462 0001 4889E5   		movq	%rsp, %rbp
 8463              		.cfi_def_cfa_register 6
 8464 0004 4883EC10 		subq	$16, %rsp
 8465 0008 48897DF8 		movq	%rdi, -8(%rbp)
 134:testHexIO.cpp **** 	Buffer data;
 8466              		.loc 4 134 0
 8467 000c 488B45F8 		movq	-8(%rbp), %rax
 8468 0010 4889C7   		movq	%rax, %rdi
 8469 0013 E8000000 		call	_ZN26TestHexIO_testJunkDataByteD1Ev
 8469      00
 8470 0018 488B45F8 		movq	-8(%rbp), %rax
 8471 001c 4889C7   		movq	%rax, %rdi
 8472 001f E8000000 		call	_ZdlPv
 8472      00
 8473 0024 C9       		leave
 8474              		.cfi_def_cfa 7, 8
 8475 0025 C3       		ret
 8476              		.cfi_endproc
 8477              	.LFE1289:
 8479              		.weak	_ZTV25TestHexIO_testJunkRecType
 8480              		.section	.rodata._ZTV25TestHexIO_testJunkRecType,"aG",@progbits,_ZTV25TestHexIO_testJunkRecType,co
 8481              		.align 32
 8484              	_ZTV25TestHexIO_testJunkRecType:
 8485 0000 00000000 		.quad	0
 8485      00000000 
 8486 0008 00000000 		.quad	_ZTI25TestHexIO_testJunkRecType
 8486      00000000 
 8487 0010 00000000 		.quad	_ZN25TestHexIO_testJunkRecTypeD1Ev
 8487      00000000 
 8488 0018 00000000 		.quad	_ZN25TestHexIO_testJunkRecTypeD0Ev
 8488      00000000 
 8489 0020 00000000 		.quad	_ZNK25TestHexIO_testJunkRecType7RunImplEv
 8489      00000000 
 8490              		.section	.text._ZN25TestHexIO_testJunkRecTypeD2Ev,"axG",@progbits,_ZN25TestHexIO_testJunkRecTypeD5
 8491              		.align 2
 8492              		.weak	_ZN25TestHexIO_testJunkRecTypeD2Ev
 8494              	_ZN25TestHexIO_testJunkRecTypeD2Ev:
 8495              	.LFB1291:
 121:testHexIO.cpp **** 	Buffer data;
 8496              		.loc 4 121 0
 8497              		.cfi_startproc
 8498 0000 55       		pushq	%rbp
 8499              		.cfi_def_cfa_offset 16
 8500              		.cfi_offset 6, -16
 8501 0001 4889E5   		movq	%rsp, %rbp
 8502              		.cfi_def_cfa_register 6
 8503 0004 4883EC10 		subq	$16, %rsp
 8504 0008 48897DF8 		movq	%rdi, -8(%rbp)
 8505              	.LBB85:
 121:testHexIO.cpp **** 	Buffer data;
 8506              		.loc 4 121 0
 8507 000c 488B45F8 		movq	-8(%rbp), %rax
 8508 0010 48C70000 		movq	$_ZTV25TestHexIO_testJunkRecType+16, (%rax)
 8508      000000
 8509 0017 488B45F8 		movq	-8(%rbp), %rax
 8510 001b 4889C7   		movq	%rax, %rdi
 8511 001e E8000000 		call	_ZN8UnitTest4TestD2Ev
 8511      00
 8512              	.LBE85:
 8513 0023 B8000000 		movl	$0, %eax
 8513      00
 8514 0028 85C0     		testl	%eax, %eax
 8515 002a 740C     		je	.L440
 121:testHexIO.cpp **** 	Buffer data;
 8516              		.loc 4 121 0 is_stmt 0 discriminator 1
 8517 002c 488B45F8 		movq	-8(%rbp), %rax
 8518 0030 4889C7   		movq	%rax, %rdi
 8519 0033 E8000000 		call	_ZdlPv
 8519      00
 8520              	.L440:
 121:testHexIO.cpp **** 	Buffer data;
 8521              		.loc 4 121 0
 8522 0038 C9       		leave
 8523              		.cfi_def_cfa 7, 8
 8524 0039 C3       		ret
 8525              		.cfi_endproc
 8526              	.LFE1291:
 8528              		.weak	_ZN25TestHexIO_testJunkRecTypeD1Ev
 8529              		.set	_ZN25TestHexIO_testJunkRecTypeD1Ev,_ZN25TestHexIO_testJunkRecTypeD2Ev
 8530              		.section	.text._ZN25TestHexIO_testJunkRecTypeD0Ev,"axG",@progbits,_ZN25TestHexIO_testJunkRecTypeD0
 8531              		.align 2
 8532              		.weak	_ZN25TestHexIO_testJunkRecTypeD0Ev
 8534              	_ZN25TestHexIO_testJunkRecTypeD0Ev:
 8535              	.LFB1293:
 121:testHexIO.cpp **** 	Buffer data;
 8536              		.loc 4 121 0 is_stmt 1
 8537              		.cfi_startproc
 8538 0000 55       		pushq	%rbp
 8539              		.cfi_def_cfa_offset 16
 8540              		.cfi_offset 6, -16
 8541 0001 4889E5   		movq	%rsp, %rbp
 8542              		.cfi_def_cfa_register 6
 8543 0004 4883EC10 		subq	$16, %rsp
 8544 0008 48897DF8 		movq	%rdi, -8(%rbp)
 121:testHexIO.cpp **** 	Buffer data;
 8545              		.loc 4 121 0
 8546 000c 488B45F8 		movq	-8(%rbp), %rax
 8547 0010 4889C7   		movq	%rax, %rdi
 8548 0013 E8000000 		call	_ZN25TestHexIO_testJunkRecTypeD1Ev
 8548      00
 8549 0018 488B45F8 		movq	-8(%rbp), %rax
 8550 001c 4889C7   		movq	%rax, %rdi
 8551 001f E8000000 		call	_ZdlPv
 8551      00
 8552 0024 C9       		leave
 8553              		.cfi_def_cfa 7, 8
 8554 0025 C3       		ret
 8555              		.cfi_endproc
 8556              	.LFE1293:
 8558              		.weak	_ZTV25TestHexIO_testJunkAddrLsb
 8559              		.section	.rodata._ZTV25TestHexIO_testJunkAddrLsb,"aG",@progbits,_ZTV25TestHexIO_testJunkAddrLsb,co
 8560              		.align 32
 8563              	_ZTV25TestHexIO_testJunkAddrLsb:
 8564 0000 00000000 		.quad	0
 8564      00000000 
 8565 0008 00000000 		.quad	_ZTI25TestHexIO_testJunkAddrLsb
 8565      00000000 
 8566 0010 00000000 		.quad	_ZN25TestHexIO_testJunkAddrLsbD1Ev
 8566      00000000 
 8567 0018 00000000 		.quad	_ZN25TestHexIO_testJunkAddrLsbD0Ev
 8567      00000000 
 8568 0020 00000000 		.quad	_ZNK25TestHexIO_testJunkAddrLsb7RunImplEv
 8568      00000000 
 8569              		.section	.text._ZN25TestHexIO_testJunkAddrLsbD2Ev,"axG",@progbits,_ZN25TestHexIO_testJunkAddrLsbD5
 8570              		.align 2
 8571              		.weak	_ZN25TestHexIO_testJunkAddrLsbD2Ev
 8573              	_ZN25TestHexIO_testJunkAddrLsbD2Ev:
 8574              	.LFB1295:
 108:testHexIO.cpp **** 	Buffer data;
 8575              		.loc 4 108 0
 8576              		.cfi_startproc
 8577 0000 55       		pushq	%rbp
 8578              		.cfi_def_cfa_offset 16
 8579              		.cfi_offset 6, -16
 8580 0001 4889E5   		movq	%rsp, %rbp
 8581              		.cfi_def_cfa_register 6
 8582 0004 4883EC10 		subq	$16, %rsp
 8583 0008 48897DF8 		movq	%rdi, -8(%rbp)
 8584              	.LBB86:
 108:testHexIO.cpp **** 	Buffer data;
 8585              		.loc 4 108 0
 8586 000c 488B45F8 		movq	-8(%rbp), %rax
 8587 0010 48C70000 		movq	$_ZTV25TestHexIO_testJunkAddrLsb+16, (%rax)
 8587      000000
 8588 0017 488B45F8 		movq	-8(%rbp), %rax
 8589 001b 4889C7   		movq	%rax, %rdi
 8590 001e E8000000 		call	_ZN8UnitTest4TestD2Ev
 8590      00
 8591              	.LBE86:
 8592 0023 B8000000 		movl	$0, %eax
 8592      00
 8593 0028 85C0     		testl	%eax, %eax
 8594 002a 740C     		je	.L445
 108:testHexIO.cpp **** 	Buffer data;
 8595              		.loc 4 108 0 is_stmt 0 discriminator 1
 8596 002c 488B45F8 		movq	-8(%rbp), %rax
 8597 0030 4889C7   		movq	%rax, %rdi
 8598 0033 E8000000 		call	_ZdlPv
 8598      00
 8599              	.L445:
 108:testHexIO.cpp **** 	Buffer data;
 8600              		.loc 4 108 0
 8601 0038 C9       		leave
 8602              		.cfi_def_cfa 7, 8
 8603 0039 C3       		ret
 8604              		.cfi_endproc
 8605              	.LFE1295:
 8607              		.weak	_ZN25TestHexIO_testJunkAddrLsbD1Ev
 8608              		.set	_ZN25TestHexIO_testJunkAddrLsbD1Ev,_ZN25TestHexIO_testJunkAddrLsbD2Ev
 8609              		.section	.text._ZN25TestHexIO_testJunkAddrLsbD0Ev,"axG",@progbits,_ZN25TestHexIO_testJunkAddrLsbD0
 8610              		.align 2
 8611              		.weak	_ZN25TestHexIO_testJunkAddrLsbD0Ev
 8613              	_ZN25TestHexIO_testJunkAddrLsbD0Ev:
 8614              	.LFB1297:
 108:testHexIO.cpp **** 	Buffer data;
 8615              		.loc 4 108 0 is_stmt 1
 8616              		.cfi_startproc
 8617 0000 55       		pushq	%rbp
 8618              		.cfi_def_cfa_offset 16
 8619              		.cfi_offset 6, -16
 8620 0001 4889E5   		movq	%rsp, %rbp
 8621              		.cfi_def_cfa_register 6
 8622 0004 4883EC10 		subq	$16, %rsp
 8623 0008 48897DF8 		movq	%rdi, -8(%rbp)
 108:testHexIO.cpp **** 	Buffer data;
 8624              		.loc 4 108 0
 8625 000c 488B45F8 		movq	-8(%rbp), %rax
 8626 0010 4889C7   		movq	%rax, %rdi
 8627 0013 E8000000 		call	_ZN25TestHexIO_testJunkAddrLsbD1Ev
 8627      00
 8628 0018 488B45F8 		movq	-8(%rbp), %rax
 8629 001c 4889C7   		movq	%rax, %rdi
 8630 001f E8000000 		call	_ZdlPv
 8630      00
 8631 0024 C9       		leave
 8632              		.cfi_def_cfa 7, 8
 8633 0025 C3       		ret
 8634              		.cfi_endproc
 8635              	.LFE1297:
 8637              		.weak	_ZTV25TestHexIO_testJunkAddrMsb
 8638              		.section	.rodata._ZTV25TestHexIO_testJunkAddrMsb,"aG",@progbits,_ZTV25TestHexIO_testJunkAddrMsb,co
 8639              		.align 32
 8642              	_ZTV25TestHexIO_testJunkAddrMsb:
 8643 0000 00000000 		.quad	0
 8643      00000000 
 8644 0008 00000000 		.quad	_ZTI25TestHexIO_testJunkAddrMsb
 8644      00000000 
 8645 0010 00000000 		.quad	_ZN25TestHexIO_testJunkAddrMsbD1Ev
 8645      00000000 
 8646 0018 00000000 		.quad	_ZN25TestHexIO_testJunkAddrMsbD0Ev
 8646      00000000 
 8647 0020 00000000 		.quad	_ZNK25TestHexIO_testJunkAddrMsb7RunImplEv
 8647      00000000 
 8648              		.section	.text._ZN25TestHexIO_testJunkAddrMsbD2Ev,"axG",@progbits,_ZN25TestHexIO_testJunkAddrMsbD5
 8649              		.align 2
 8650              		.weak	_ZN25TestHexIO_testJunkAddrMsbD2Ev
 8652              	_ZN25TestHexIO_testJunkAddrMsbD2Ev:
 8653              	.LFB1299:
  95:testHexIO.cpp **** 	Buffer data;
 8654              		.loc 4 95 0
 8655              		.cfi_startproc
 8656 0000 55       		pushq	%rbp
 8657              		.cfi_def_cfa_offset 16
 8658              		.cfi_offset 6, -16
 8659 0001 4889E5   		movq	%rsp, %rbp
 8660              		.cfi_def_cfa_register 6
 8661 0004 4883EC10 		subq	$16, %rsp
 8662 0008 48897DF8 		movq	%rdi, -8(%rbp)
 8663              	.LBB87:
  95:testHexIO.cpp **** 	Buffer data;
 8664              		.loc 4 95 0
 8665 000c 488B45F8 		movq	-8(%rbp), %rax
 8666 0010 48C70000 		movq	$_ZTV25TestHexIO_testJunkAddrMsb+16, (%rax)
 8666      000000
 8667 0017 488B45F8 		movq	-8(%rbp), %rax
 8668 001b 4889C7   		movq	%rax, %rdi
 8669 001e E8000000 		call	_ZN8UnitTest4TestD2Ev
 8669      00
 8670              	.LBE87:
 8671 0023 B8000000 		movl	$0, %eax
 8671      00
 8672 0028 85C0     		testl	%eax, %eax
 8673 002a 740C     		je	.L450
  95:testHexIO.cpp **** 	Buffer data;
 8674              		.loc 4 95 0 is_stmt 0 discriminator 1
 8675 002c 488B45F8 		movq	-8(%rbp), %rax
 8676 0030 4889C7   		movq	%rax, %rdi
 8677 0033 E8000000 		call	_ZdlPv
 8677      00
 8678              	.L450:
  95:testHexIO.cpp **** 	Buffer data;
 8679              		.loc 4 95 0
 8680 0038 C9       		leave
 8681              		.cfi_def_cfa 7, 8
 8682 0039 C3       		ret
 8683              		.cfi_endproc
 8684              	.LFE1299:
 8686              		.weak	_ZN25TestHexIO_testJunkAddrMsbD1Ev
 8687              		.set	_ZN25TestHexIO_testJunkAddrMsbD1Ev,_ZN25TestHexIO_testJunkAddrMsbD2Ev
 8688              		.section	.text._ZN25TestHexIO_testJunkAddrMsbD0Ev,"axG",@progbits,_ZN25TestHexIO_testJunkAddrMsbD0
 8689              		.align 2
 8690              		.weak	_ZN25TestHexIO_testJunkAddrMsbD0Ev
 8692              	_ZN25TestHexIO_testJunkAddrMsbD0Ev:
 8693              	.LFB1301:
  95:testHexIO.cpp **** 	Buffer data;
 8694              		.loc 4 95 0 is_stmt 1
 8695              		.cfi_startproc
 8696 0000 55       		pushq	%rbp
 8697              		.cfi_def_cfa_offset 16
 8698              		.cfi_offset 6, -16
 8699 0001 4889E5   		movq	%rsp, %rbp
 8700              		.cfi_def_cfa_register 6
 8701 0004 4883EC10 		subq	$16, %rsp
 8702 0008 48897DF8 		movq	%rdi, -8(%rbp)
  95:testHexIO.cpp **** 	Buffer data;
 8703              		.loc 4 95 0
 8704 000c 488B45F8 		movq	-8(%rbp), %rax
 8705 0010 4889C7   		movq	%rax, %rdi
 8706 0013 E8000000 		call	_ZN25TestHexIO_testJunkAddrMsbD1Ev
 8706      00
 8707 0018 488B45F8 		movq	-8(%rbp), %rax
 8708 001c 4889C7   		movq	%rax, %rdi
 8709 001f E8000000 		call	_ZdlPv
 8709      00
 8710 0024 C9       		leave
 8711              		.cfi_def_cfa 7, 8
 8712 0025 C3       		ret
 8713              		.cfi_endproc
 8714              	.LFE1301:
 8716              		.weak	_ZTV27TestHexIO_testJunkByteCount
 8717              		.section	.rodata._ZTV27TestHexIO_testJunkByteCount,"aG",@progbits,_ZTV27TestHexIO_testJunkByteCoun
 8718              		.align 32
 8721              	_ZTV27TestHexIO_testJunkByteCount:
 8722 0000 00000000 		.quad	0
 8722      00000000 
 8723 0008 00000000 		.quad	_ZTI27TestHexIO_testJunkByteCount
 8723      00000000 
 8724 0010 00000000 		.quad	_ZN27TestHexIO_testJunkByteCountD1Ev
 8724      00000000 
 8725 0018 00000000 		.quad	_ZN27TestHexIO_testJunkByteCountD0Ev
 8725      00000000 
 8726 0020 00000000 		.quad	_ZNK27TestHexIO_testJunkByteCount7RunImplEv
 8726      00000000 
 8727              		.section	.text._ZN27TestHexIO_testJunkByteCountD2Ev,"axG",@progbits,_ZN27TestHexIO_testJunkByteCou
 8728              		.align 2
 8729              		.weak	_ZN27TestHexIO_testJunkByteCountD2Ev
 8731              	_ZN27TestHexIO_testJunkByteCountD2Ev:
 8732              	.LFB1303:
  82:testHexIO.cpp **** 	Buffer data;
 8733              		.loc 4 82 0
 8734              		.cfi_startproc
 8735 0000 55       		pushq	%rbp
 8736              		.cfi_def_cfa_offset 16
 8737              		.cfi_offset 6, -16
 8738 0001 4889E5   		movq	%rsp, %rbp
 8739              		.cfi_def_cfa_register 6
 8740 0004 4883EC10 		subq	$16, %rsp
 8741 0008 48897DF8 		movq	%rdi, -8(%rbp)
 8742              	.LBB88:
  82:testHexIO.cpp **** 	Buffer data;
 8743              		.loc 4 82 0
 8744 000c 488B45F8 		movq	-8(%rbp), %rax
 8745 0010 48C70000 		movq	$_ZTV27TestHexIO_testJunkByteCount+16, (%rax)
 8745      000000
 8746 0017 488B45F8 		movq	-8(%rbp), %rax
 8747 001b 4889C7   		movq	%rax, %rdi
 8748 001e E8000000 		call	_ZN8UnitTest4TestD2Ev
 8748      00
 8749              	.LBE88:
 8750 0023 B8000000 		movl	$0, %eax
 8750      00
 8751 0028 85C0     		testl	%eax, %eax
 8752 002a 740C     		je	.L455
  82:testHexIO.cpp **** 	Buffer data;
 8753              		.loc 4 82 0 is_stmt 0 discriminator 1
 8754 002c 488B45F8 		movq	-8(%rbp), %rax
 8755 0030 4889C7   		movq	%rax, %rdi
 8756 0033 E8000000 		call	_ZdlPv
 8756      00
 8757              	.L455:
  82:testHexIO.cpp **** 	Buffer data;
 8758              		.loc 4 82 0
 8759 0038 C9       		leave
 8760              		.cfi_def_cfa 7, 8
 8761 0039 C3       		ret
 8762              		.cfi_endproc
 8763              	.LFE1303:
 8765              		.weak	_ZN27TestHexIO_testJunkByteCountD1Ev
 8766              		.set	_ZN27TestHexIO_testJunkByteCountD1Ev,_ZN27TestHexIO_testJunkByteCountD2Ev
 8767              		.section	.text._ZN27TestHexIO_testJunkByteCountD0Ev,"axG",@progbits,_ZN27TestHexIO_testJunkByteCou
 8768              		.align 2
 8769              		.weak	_ZN27TestHexIO_testJunkByteCountD0Ev
 8771              	_ZN27TestHexIO_testJunkByteCountD0Ev:
 8772              	.LFB1305:
  82:testHexIO.cpp **** 	Buffer data;
 8773              		.loc 4 82 0 is_stmt 1
 8774              		.cfi_startproc
 8775 0000 55       		pushq	%rbp
 8776              		.cfi_def_cfa_offset 16
 8777              		.cfi_offset 6, -16
 8778 0001 4889E5   		movq	%rsp, %rbp
 8779              		.cfi_def_cfa_register 6
 8780 0004 4883EC10 		subq	$16, %rsp
 8781 0008 48897DF8 		movq	%rdi, -8(%rbp)
  82:testHexIO.cpp **** 	Buffer data;
 8782              		.loc 4 82 0
 8783 000c 488B45F8 		movq	-8(%rbp), %rax
 8784 0010 4889C7   		movq	%rax, %rdi
 8785 0013 E8000000 		call	_ZN27TestHexIO_testJunkByteCountD1Ev
 8785      00
 8786 0018 488B45F8 		movq	-8(%rbp), %rax
 8787 001c 4889C7   		movq	%rax, %rdi
 8788 001f E8000000 		call	_ZdlPv
 8788      00
 8789 0024 C9       		leave
 8790              		.cfi_def_cfa 7, 8
 8791 0025 C3       		ret
 8792              		.cfi_endproc
 8793              	.LFE1305:
 8795              		.weak	_ZTV27TestHexIO_testJunkStartCode
 8796              		.section	.rodata._ZTV27TestHexIO_testJunkStartCode,"aG",@progbits,_ZTV27TestHexIO_testJunkStartCod
 8797              		.align 32
 8800              	_ZTV27TestHexIO_testJunkStartCode:
 8801 0000 00000000 		.quad	0
 8801      00000000 
 8802 0008 00000000 		.quad	_ZTI27TestHexIO_testJunkStartCode
 8802      00000000 
 8803 0010 00000000 		.quad	_ZN27TestHexIO_testJunkStartCodeD1Ev
 8803      00000000 
 8804 0018 00000000 		.quad	_ZN27TestHexIO_testJunkStartCodeD0Ev
 8804      00000000 
 8805 0020 00000000 		.quad	_ZNK27TestHexIO_testJunkStartCode7RunImplEv
 8805      00000000 
 8806              		.section	.text._ZN27TestHexIO_testJunkStartCodeD2Ev,"axG",@progbits,_ZN27TestHexIO_testJunkStartCo
 8807              		.align 2
 8808              		.weak	_ZN27TestHexIO_testJunkStartCodeD2Ev
 8810              	_ZN27TestHexIO_testJunkStartCodeD2Ev:
 8811              	.LFB1307:
  69:testHexIO.cpp **** 	Buffer data;
 8812              		.loc 4 69 0
 8813              		.cfi_startproc
 8814 0000 55       		pushq	%rbp
 8815              		.cfi_def_cfa_offset 16
 8816              		.cfi_offset 6, -16
 8817 0001 4889E5   		movq	%rsp, %rbp
 8818              		.cfi_def_cfa_register 6
 8819 0004 4883EC10 		subq	$16, %rsp
 8820 0008 48897DF8 		movq	%rdi, -8(%rbp)
 8821              	.LBB89:
  69:testHexIO.cpp **** 	Buffer data;
 8822              		.loc 4 69 0
 8823 000c 488B45F8 		movq	-8(%rbp), %rax
 8824 0010 48C70000 		movq	$_ZTV27TestHexIO_testJunkStartCode+16, (%rax)
 8824      000000
 8825 0017 488B45F8 		movq	-8(%rbp), %rax
 8826 001b 4889C7   		movq	%rax, %rdi
 8827 001e E8000000 		call	_ZN8UnitTest4TestD2Ev
 8827      00
 8828              	.LBE89:
 8829 0023 B8000000 		movl	$0, %eax
 8829      00
 8830 0028 85C0     		testl	%eax, %eax
 8831 002a 740C     		je	.L460
  69:testHexIO.cpp **** 	Buffer data;
 8832              		.loc 4 69 0 is_stmt 0 discriminator 1
 8833 002c 488B45F8 		movq	-8(%rbp), %rax
 8834 0030 4889C7   		movq	%rax, %rdi
 8835 0033 E8000000 		call	_ZdlPv
 8835      00
 8836              	.L460:
  69:testHexIO.cpp **** 	Buffer data;
 8837              		.loc 4 69 0
 8838 0038 C9       		leave
 8839              		.cfi_def_cfa 7, 8
 8840 0039 C3       		ret
 8841              		.cfi_endproc
 8842              	.LFE1307:
 8844              		.weak	_ZN27TestHexIO_testJunkStartCodeD1Ev
 8845              		.set	_ZN27TestHexIO_testJunkStartCodeD1Ev,_ZN27TestHexIO_testJunkStartCodeD2Ev
 8846              		.section	.text._ZN27TestHexIO_testJunkStartCodeD0Ev,"axG",@progbits,_ZN27TestHexIO_testJunkStartCo
 8847              		.align 2
 8848              		.weak	_ZN27TestHexIO_testJunkStartCodeD0Ev
 8850              	_ZN27TestHexIO_testJunkStartCodeD0Ev:
 8851              	.LFB1309:
  69:testHexIO.cpp **** 	Buffer data;
 8852              		.loc 4 69 0 is_stmt 1
 8853              		.cfi_startproc
 8854 0000 55       		pushq	%rbp
 8855              		.cfi_def_cfa_offset 16
 8856              		.cfi_offset 6, -16
 8857 0001 4889E5   		movq	%rsp, %rbp
 8858              		.cfi_def_cfa_register 6
 8859 0004 4883EC10 		subq	$16, %rsp
 8860 0008 48897DF8 		movq	%rdi, -8(%rbp)
  69:testHexIO.cpp **** 	Buffer data;
 8861              		.loc 4 69 0
 8862 000c 488B45F8 		movq	-8(%rbp), %rax
 8863 0010 4889C7   		movq	%rax, %rdi
 8864 0013 E8000000 		call	_ZN27TestHexIO_testJunkStartCodeD1Ev
 8864      00
 8865 0018 488B45F8 		movq	-8(%rbp), %rax
 8866 001c 4889C7   		movq	%rax, %rdi
 8867 001f E8000000 		call	_ZdlPv
 8867      00
 8868 0024 C9       		leave
 8869              		.cfi_def_cfa 7, 8
 8870 0025 C3       		ret
 8871              		.cfi_endproc
 8872              	.LFE1309:
 8874              		.weak	_ZTV22TestHexIO_testValidEOF
 8875              		.section	.rodata._ZTV22TestHexIO_testValidEOF,"aG",@progbits,_ZTV22TestHexIO_testValidEOF,comdat
 8876              		.align 32
 8879              	_ZTV22TestHexIO_testValidEOF:
 8880 0000 00000000 		.quad	0
 8880      00000000 
 8881 0008 00000000 		.quad	_ZTI22TestHexIO_testValidEOF
 8881      00000000 
 8882 0010 00000000 		.quad	_ZN22TestHexIO_testValidEOFD1Ev
 8882      00000000 
 8883 0018 00000000 		.quad	_ZN22TestHexIO_testValidEOFD0Ev
 8883      00000000 
 8884 0020 00000000 		.quad	_ZNK22TestHexIO_testValidEOF7RunImplEv
 8884      00000000 
 8885              		.section	.text._ZN22TestHexIO_testValidEOFD2Ev,"axG",@progbits,_ZN22TestHexIO_testValidEOFD5Ev,com
 8886              		.align 2
 8887              		.weak	_ZN22TestHexIO_testValidEOFD2Ev
 8889              	_ZN22TestHexIO_testValidEOFD2Ev:
 8890              	.LFB1311:
  50:testHexIO.cpp **** 	Buffer data, mask;
 8891              		.loc 4 50 0
 8892              		.cfi_startproc
 8893 0000 55       		pushq	%rbp
 8894              		.cfi_def_cfa_offset 16
 8895              		.cfi_offset 6, -16
 8896 0001 4889E5   		movq	%rsp, %rbp
 8897              		.cfi_def_cfa_register 6
 8898 0004 4883EC10 		subq	$16, %rsp
 8899 0008 48897DF8 		movq	%rdi, -8(%rbp)
 8900              	.LBB90:
  50:testHexIO.cpp **** 	Buffer data, mask;
 8901              		.loc 4 50 0
 8902 000c 488B45F8 		movq	-8(%rbp), %rax
 8903 0010 48C70000 		movq	$_ZTV22TestHexIO_testValidEOF+16, (%rax)
 8903      000000
 8904 0017 488B45F8 		movq	-8(%rbp), %rax
 8905 001b 4889C7   		movq	%rax, %rdi
 8906 001e E8000000 		call	_ZN8UnitTest4TestD2Ev
 8906      00
 8907              	.LBE90:
 8908 0023 B8000000 		movl	$0, %eax
 8908      00
 8909 0028 85C0     		testl	%eax, %eax
 8910 002a 740C     		je	.L465
  50:testHexIO.cpp **** 	Buffer data, mask;
 8911              		.loc 4 50 0 is_stmt 0 discriminator 1
 8912 002c 488B45F8 		movq	-8(%rbp), %rax
 8913 0030 4889C7   		movq	%rax, %rdi
 8914 0033 E8000000 		call	_ZdlPv
 8914      00
 8915              	.L465:
  50:testHexIO.cpp **** 	Buffer data, mask;
 8916              		.loc 4 50 0
 8917 0038 C9       		leave
 8918              		.cfi_def_cfa 7, 8
 8919 0039 C3       		ret
 8920              		.cfi_endproc
 8921              	.LFE1311:
 8923              		.weak	_ZN22TestHexIO_testValidEOFD1Ev
 8924              		.set	_ZN22TestHexIO_testValidEOFD1Ev,_ZN22TestHexIO_testValidEOFD2Ev
 8925              		.section	.text._ZN22TestHexIO_testValidEOFD0Ev,"axG",@progbits,_ZN22TestHexIO_testValidEOFD0Ev,com
 8926              		.align 2
 8927              		.weak	_ZN22TestHexIO_testValidEOFD0Ev
 8929              	_ZN22TestHexIO_testValidEOFD0Ev:
 8930              	.LFB1313:
  50:testHexIO.cpp **** 	Buffer data, mask;
 8931              		.loc 4 50 0 is_stmt 1
 8932              		.cfi_startproc
 8933 0000 55       		pushq	%rbp
 8934              		.cfi_def_cfa_offset 16
 8935              		.cfi_offset 6, -16
 8936 0001 4889E5   		movq	%rsp, %rbp
 8937              		.cfi_def_cfa_register 6
 8938 0004 4883EC10 		subq	$16, %rsp
 8939 0008 48897DF8 		movq	%rdi, -8(%rbp)
  50:testHexIO.cpp **** 	Buffer data, mask;
 8940              		.loc 4 50 0
 8941 000c 488B45F8 		movq	-8(%rbp), %rax
 8942 0010 4889C7   		movq	%rax, %rdi
 8943 0013 E8000000 		call	_ZN22TestHexIO_testValidEOFD1Ev
 8943      00
 8944 0018 488B45F8 		movq	-8(%rbp), %rax
 8945 001c 4889C7   		movq	%rax, %rdi
 8946 001f E8000000 		call	_ZdlPv
 8946      00
 8947 0024 C9       		leave
 8948              		.cfi_def_cfa 7, 8
 8949 0025 C3       		ret
 8950              		.cfi_endproc
 8951              	.LFE1313:
 8953              		.weak	_ZTV27TestHexIO_testValidDataLine
 8954              		.section	.rodata._ZTV27TestHexIO_testValidDataLine,"aG",@progbits,_ZTV27TestHexIO_testValidDataLin
 8955              		.align 32
 8958              	_ZTV27TestHexIO_testValidDataLine:
 8959 0000 00000000 		.quad	0
 8959      00000000 
 8960 0008 00000000 		.quad	_ZTI27TestHexIO_testValidDataLine
 8960      00000000 
 8961 0010 00000000 		.quad	_ZN27TestHexIO_testValidDataLineD1Ev
 8961      00000000 
 8962 0018 00000000 		.quad	_ZN27TestHexIO_testValidDataLineD0Ev
 8962      00000000 
 8963 0020 00000000 		.quad	_ZNK27TestHexIO_testValidDataLine7RunImplEv
 8963      00000000 
 8964              		.section	.text._ZN27TestHexIO_testValidDataLineD2Ev,"axG",@progbits,_ZN27TestHexIO_testValidDataLi
 8965              		.align 2
 8966              		.weak	_ZN27TestHexIO_testValidDataLineD2Ev
 8968              	_ZN27TestHexIO_testValidDataLineD2Ev:
 8969              	.LFB1315:
  27:testHexIO.cpp **** 	Buffer data, mask;
 8970              		.loc 4 27 0
 8971              		.cfi_startproc
 8972 0000 55       		pushq	%rbp
 8973              		.cfi_def_cfa_offset 16
 8974              		.cfi_offset 6, -16
 8975 0001 4889E5   		movq	%rsp, %rbp
 8976              		.cfi_def_cfa_register 6
 8977 0004 4883EC10 		subq	$16, %rsp
 8978 0008 48897DF8 		movq	%rdi, -8(%rbp)
 8979              	.LBB91:
  27:testHexIO.cpp **** 	Buffer data, mask;
 8980              		.loc 4 27 0
 8981 000c 488B45F8 		movq	-8(%rbp), %rax
 8982 0010 48C70000 		movq	$_ZTV27TestHexIO_testValidDataLine+16, (%rax)
 8982      000000
 8983 0017 488B45F8 		movq	-8(%rbp), %rax
 8984 001b 4889C7   		movq	%rax, %rdi
 8985 001e E8000000 		call	_ZN8UnitTest4TestD2Ev
 8985      00
 8986              	.LBE91:
 8987 0023 B8000000 		movl	$0, %eax
 8987      00
 8988 0028 85C0     		testl	%eax, %eax
 8989 002a 740C     		je	.L470
  27:testHexIO.cpp **** 	Buffer data, mask;
 8990              		.loc 4 27 0 is_stmt 0 discriminator 1
 8991 002c 488B45F8 		movq	-8(%rbp), %rax
 8992 0030 4889C7   		movq	%rax, %rdi
 8993 0033 E8000000 		call	_ZdlPv
 8993      00
 8994              	.L470:
  27:testHexIO.cpp **** 	Buffer data, mask;
 8995              		.loc 4 27 0
 8996 0038 C9       		leave
 8997              		.cfi_def_cfa 7, 8
 8998 0039 C3       		ret
 8999              		.cfi_endproc
 9000              	.LFE1315:
 9002              		.weak	_ZN27TestHexIO_testValidDataLineD1Ev
 9003              		.set	_ZN27TestHexIO_testValidDataLineD1Ev,_ZN27TestHexIO_testValidDataLineD2Ev
 9004              		.section	.text._ZN27TestHexIO_testValidDataLineD0Ev,"axG",@progbits,_ZN27TestHexIO_testValidDataLi
 9005              		.align 2
 9006              		.weak	_ZN27TestHexIO_testValidDataLineD0Ev
 9008              	_ZN27TestHexIO_testValidDataLineD0Ev:
 9009              	.LFB1317:
  27:testHexIO.cpp **** 	Buffer data, mask;
 9010              		.loc 4 27 0 is_stmt 1
 9011              		.cfi_startproc
 9012 0000 55       		pushq	%rbp
 9013              		.cfi_def_cfa_offset 16
 9014              		.cfi_offset 6, -16
 9015 0001 4889E5   		movq	%rsp, %rbp
 9016              		.cfi_def_cfa_register 6
 9017 0004 4883EC10 		subq	$16, %rsp
 9018 0008 48897DF8 		movq	%rdi, -8(%rbp)
  27:testHexIO.cpp **** 	Buffer data, mask;
 9019              		.loc 4 27 0
 9020 000c 488B45F8 		movq	-8(%rbp), %rax
 9021 0010 4889C7   		movq	%rax, %rdi
 9022 0013 E8000000 		call	_ZN27TestHexIO_testValidDataLineD1Ev
 9022      00
 9023 0018 488B45F8 		movq	-8(%rbp), %rax
 9024 001c 4889C7   		movq	%rax, %rdi
 9025 001f E8000000 		call	_ZdlPv
 9025      00
 9026 0024 C9       		leave
 9027              		.cfi_def_cfa 7, 8
 9028 0025 C3       		ret
 9029              		.cfi_endproc
 9030              	.LFE1317:
 9032              		.weak	_ZTVN8UnitTest15MemoryOutStreamE
 9033              		.section	.rodata._ZTVN8UnitTest15MemoryOutStreamE,"aG",@progbits,_ZTVN8UnitTest15MemoryOutStreamE,
 9034              		.align 32
 9037              	_ZTVN8UnitTest15MemoryOutStreamE:
 9038 0000 60000000 		.quad	96
 9038      00000000 
 9039 0008 00000000 		.quad	0
 9039      00000000 
 9040 0010 00000000 		.quad	_ZTIN8UnitTest15MemoryOutStreamE
 9040      00000000 
 9041 0018 00000000 		.quad	_ZN8UnitTest15MemoryOutStreamD1Ev
 9041      00000000 
 9042 0020 00000000 		.quad	_ZN8UnitTest15MemoryOutStreamD0Ev
 9042      00000000 
 9043 0028 A0FFFFFF 		.quad	-96
 9043      FFFFFFFF 
 9044 0030 A0FFFFFF 		.quad	-96
 9044      FFFFFFFF 
 9045 0038 00000000 		.quad	_ZTIN8UnitTest15MemoryOutStreamE
 9045      00000000 
 9046 0040 00000000 		.quad	_ZTv0_n24_N8UnitTest15MemoryOutStreamD1Ev
 9046      00000000 
 9047 0048 00000000 		.quad	_ZTv0_n24_N8UnitTest15MemoryOutStreamD0Ev
 9047      00000000 
 9048              		.weak	_ZTTN8UnitTest15MemoryOutStreamE
 9049              		.section	.rodata._ZTTN8UnitTest15MemoryOutStreamE,"aG",@progbits,_ZTVN8UnitTest15MemoryOutStreamE,
 9050              		.align 32
 9053              	_ZTTN8UnitTest15MemoryOutStreamE:
 9054 0000 00000000 		.quad	_ZTVN8UnitTest15MemoryOutStreamE+24
 9054      00000000 
 9055 0008 00000000 		.quad	_ZTCN8UnitTest15MemoryOutStreamE0_St19basic_ostringstreamIcSt11char_traitsIcESaIcEE+24
 9055      00000000 
 9056 0010 00000000 		.quad	_ZTCN8UnitTest15MemoryOutStreamE0_So+24
 9056      00000000 
 9057 0018 00000000 		.quad	_ZTCN8UnitTest15MemoryOutStreamE0_So+64
 9057      00000000 
 9058 0020 00000000 		.quad	_ZTCN8UnitTest15MemoryOutStreamE0_St19basic_ostringstreamIcSt11char_traitsIcESaIcEE+64
 9058      00000000 
 9059 0028 00000000 		.quad	_ZTVN8UnitTest15MemoryOutStreamE+64
 9059      00000000 
 9060              		.hidden	_ZTCN8UnitTest15MemoryOutStreamE0_St19basic_ostringstreamIcSt11char_traitsIcESaIcEE
 9061              		.weak	_ZTCN8UnitTest15MemoryOutStreamE0_St19basic_ostringstreamIcSt11char_traitsIcESaIcEE
 9062              		.section	.rodata._ZTCN8UnitTest15MemoryOutStreamE0_St19basic_ostringstreamIcSt11char_traitsIcESaIc
 9063              		.align 32
 9066              	_ZTCN8UnitTest15MemoryOutStreamE0_St19basic_ostringstreamIcSt11char_traitsIcESaIcEE:
 9067 0000 60000000 		.quad	96
 9067      00000000 
 9068 0008 00000000 		.quad	0
 9068      00000000 
 9069 0010 00000000 		.quad	_ZTISt19basic_ostringstreamIcSt11char_traitsIcESaIcEE
 9069      00000000 
 9070 0018 00000000 		.quad	_ZNSt19basic_ostringstreamIcSt11char_traitsIcESaIcEED1Ev
 9070      00000000 
 9071 0020 00000000 		.quad	_ZNSt19basic_ostringstreamIcSt11char_traitsIcESaIcEED0Ev
 9071      00000000 
 9072 0028 A0FFFFFF 		.quad	-96
 9072      FFFFFFFF 
 9073 0030 A0FFFFFF 		.quad	-96
 9073      FFFFFFFF 
 9074 0038 00000000 		.quad	_ZTISt19basic_ostringstreamIcSt11char_traitsIcESaIcEE
 9074      00000000 
 9075 0040 00000000 		.quad	_ZTv0_n24_NSt19basic_ostringstreamIcSt11char_traitsIcESaIcEED1Ev
 9075      00000000 
 9076 0048 00000000 		.quad	_ZTv0_n24_NSt19basic_ostringstreamIcSt11char_traitsIcESaIcEED0Ev
 9076      00000000 
 9077              		.hidden	_ZTCN8UnitTest15MemoryOutStreamE0_So
 9078              		.weak	_ZTCN8UnitTest15MemoryOutStreamE0_So
 9079              		.section	.rodata._ZTCN8UnitTest15MemoryOutStreamE0_So,"aG",@progbits,_ZTVN8UnitTest15MemoryOutStre
 9080              		.align 32
 9083              	_ZTCN8UnitTest15MemoryOutStreamE0_So:
 9084 0000 60000000 		.quad	96
 9084      00000000 
 9085 0008 00000000 		.quad	0
 9085      00000000 
 9086 0010 00000000 		.quad	_ZTISo
 9086      00000000 
 9087 0018 00000000 		.quad	_ZNSoD1Ev
 9087      00000000 
 9088 0020 00000000 		.quad	_ZNSoD0Ev
 9088      00000000 
 9089 0028 A0FFFFFF 		.quad	-96
 9089      FFFFFFFF 
 9090 0030 A0FFFFFF 		.quad	-96
 9090      FFFFFFFF 
 9091 0038 00000000 		.quad	_ZTISo
 9091      00000000 
 9092 0040 00000000 		.quad	_ZTv0_n24_NSoD1Ev
 9092      00000000 
 9093 0048 00000000 		.quad	_ZTv0_n24_NSoD0Ev
 9093      00000000 
 9094              		.weak	_ZTI28TestHexIO_testDeriveWriteMap
 9095              		.section	.rodata._ZTI28TestHexIO_testDeriveWriteMap,"aG",@progbits,_ZTI28TestHexIO_testDeriveWrite
 9096              		.align 16
 9099              	_ZTI28TestHexIO_testDeriveWriteMap:
 9100 0000 00000000 		.quad	_ZTVN10__cxxabiv120__si_class_type_infoE+16
 9100      00000000 
 9101 0008 00000000 		.quad	_ZTS28TestHexIO_testDeriveWriteMap
 9101      00000000 
 9102 0010 00000000 		.quad	_ZTIN8UnitTest4TestE
 9102      00000000 
 9103              		.weak	_ZTS28TestHexIO_testDeriveWriteMap
 9104              		.section	.rodata._ZTS28TestHexIO_testDeriveWriteMap,"aG",@progbits,_ZTS28TestHexIO_testDeriveWrite
 9105              		.align 16
 9108              	_ZTS28TestHexIO_testDeriveWriteMap:
 9109 0000 32385465 		.string	"28TestHexIO_testDeriveWriteMap"
 9109      73744865 
 9109      78494F5F 
 9109      74657374 
 9109      44657269 
 9110              		.weak	_ZTI23TestHexIO_testRoundTrip
 9111              		.section	.rodata._ZTI23TestHexIO_testRoundTrip,"aG",@progbits,_ZTI23TestHexIO_testRoundTrip,comdat
 9112              		.align 16
 9115              	_ZTI23TestHexIO_testRoundTrip:
 9116 0000 00000000 		.quad	_ZTVN10__cxxabiv120__si_class_type_infoE+16
 9116      00000000 
 9117 0008 00000000 		.quad	_ZTS23TestHexIO_testRoundTrip
 9117      00000000 
 9118 0010 00000000 		.quad	_ZTIN8UnitTest4TestE
 9118      00000000 
 9119              		.weak	_ZTS23TestHexIO_testRoundTrip
 9120              		.section	.rodata._ZTS23TestHexIO_testRoundTrip,"aG",@progbits,_ZTS23TestHexIO_testRoundTrip,comdat
 9121              		.align 16
 9124              	_ZTS23TestHexIO_testRoundTrip:
 9125 0000 32335465 		.string	"23TestHexIO_testRoundTrip"
 9125      73744865 
 9125      78494F5F 
 9125      74657374 
 9125      526F756E 
 9126              		.weak	_ZTI25TestHexIO_testCorruptLine
 9127              		.section	.rodata._ZTI25TestHexIO_testCorruptLine,"aG",@progbits,_ZTI25TestHexIO_testCorruptLine,co
 9128              		.align 16
 9131              	_ZTI25TestHexIO_testCorruptLine:
 9132 0000 00000000 		.quad	_ZTVN10__cxxabiv120__si_class_type_infoE+16
 9132      00000000 
 9133 0008 00000000 		.quad	_ZTS25TestHexIO_testCorruptLine
 9133      00000000 
 9134 0010 00000000 		.quad	_ZTIN8UnitTest4TestE
 9134      00000000 
 9135              		.weak	_ZTS25TestHexIO_testCorruptLine
 9136              		.section	.rodata._ZTS25TestHexIO_testCorruptLine,"aG",@progbits,_ZTS25TestHexIO_testCorruptLine,co
 9137              		.align 16
 9140              	_ZTS25TestHexIO_testCorruptLine:
 9141 0000 32355465 		.string	"25TestHexIO_testCorruptLine"
 9141      73744865 
 9141      78494F5F 
 9141      74657374 
 9141      436F7272 
 9142              		.weak	_ZTI25TestHexIO_testBadChecksum
 9143              		.section	.rodata._ZTI25TestHexIO_testBadChecksum,"aG",@progbits,_ZTI25TestHexIO_testBadChecksum,co
 9144              		.align 16
 9147              	_ZTI25TestHexIO_testBadChecksum:
 9148 0000 00000000 		.quad	_ZTVN10__cxxabiv120__si_class_type_infoE+16
 9148      00000000 
 9149 0008 00000000 		.quad	_ZTS25TestHexIO_testBadChecksum
 9149      00000000 
 9150 0010 00000000 		.quad	_ZTIN8UnitTest4TestE
 9150      00000000 
 9151              		.weak	_ZTS25TestHexIO_testBadChecksum
 9152              		.section	.rodata._ZTS25TestHexIO_testBadChecksum,"aG",@progbits,_ZTS25TestHexIO_testBadChecksum,co
 9153              		.align 16
 9156              	_ZTS25TestHexIO_testBadChecksum:
 9157 0000 32355465 		.string	"25TestHexIO_testBadChecksum"
 9157      73744865 
 9157      78494F5F 
 9157      74657374 
 9157      42616443 
 9158              		.weak	_ZTI26TestHexIO_testJunkChecksum
 9159              		.section	.rodata._ZTI26TestHexIO_testJunkChecksum,"aG",@progbits,_ZTI26TestHexIO_testJunkChecksum,
 9160              		.align 16
 9163              	_ZTI26TestHexIO_testJunkChecksum:
 9164 0000 00000000 		.quad	_ZTVN10__cxxabiv120__si_class_type_infoE+16
 9164      00000000 
 9165 0008 00000000 		.quad	_ZTS26TestHexIO_testJunkChecksum
 9165      00000000 
 9166 0010 00000000 		.quad	_ZTIN8UnitTest4TestE
 9166      00000000 
 9167              		.weak	_ZTS26TestHexIO_testJunkChecksum
 9168              		.section	.rodata._ZTS26TestHexIO_testJunkChecksum,"aG",@progbits,_ZTS26TestHexIO_testJunkChecksum,
 9169              		.align 16
 9172              	_ZTS26TestHexIO_testJunkChecksum:
 9173 0000 32365465 		.string	"26TestHexIO_testJunkChecksum"
 9173      73744865 
 9173      78494F5F 
 9173      74657374 
 9173      4A756E6B 
 9174              		.weak	_ZTI26TestHexIO_testJunkDataByte
 9175              		.section	.rodata._ZTI26TestHexIO_testJunkDataByte,"aG",@progbits,_ZTI26TestHexIO_testJunkDataByte,
 9176              		.align 16
 9179              	_ZTI26TestHexIO_testJunkDataByte:
 9180 0000 00000000 		.quad	_ZTVN10__cxxabiv120__si_class_type_infoE+16
 9180      00000000 
 9181 0008 00000000 		.quad	_ZTS26TestHexIO_testJunkDataByte
 9181      00000000 
 9182 0010 00000000 		.quad	_ZTIN8UnitTest4TestE
 9182      00000000 
 9183              		.weak	_ZTS26TestHexIO_testJunkDataByte
 9184              		.section	.rodata._ZTS26TestHexIO_testJunkDataByte,"aG",@progbits,_ZTS26TestHexIO_testJunkDataByte,
 9185              		.align 16
 9188              	_ZTS26TestHexIO_testJunkDataByte:
 9189 0000 32365465 		.string	"26TestHexIO_testJunkDataByte"
 9189      73744865 
 9189      78494F5F 
 9189      74657374 
 9189      4A756E6B 
 9190              		.weak	_ZTI25TestHexIO_testJunkRecType
 9191              		.section	.rodata._ZTI25TestHexIO_testJunkRecType,"aG",@progbits,_ZTI25TestHexIO_testJunkRecType,co
 9192              		.align 16
 9195              	_ZTI25TestHexIO_testJunkRecType:
 9196 0000 00000000 		.quad	_ZTVN10__cxxabiv120__si_class_type_infoE+16
 9196      00000000 
 9197 0008 00000000 		.quad	_ZTS25TestHexIO_testJunkRecType
 9197      00000000 
 9198 0010 00000000 		.quad	_ZTIN8UnitTest4TestE
 9198      00000000 
 9199              		.weak	_ZTS25TestHexIO_testJunkRecType
 9200              		.section	.rodata._ZTS25TestHexIO_testJunkRecType,"aG",@progbits,_ZTS25TestHexIO_testJunkRecType,co
 9201              		.align 16
 9204              	_ZTS25TestHexIO_testJunkRecType:
 9205 0000 32355465 		.string	"25TestHexIO_testJunkRecType"
 9205      73744865 
 9205      78494F5F 
 9205      74657374 
 9205      4A756E6B 
 9206              		.weak	_ZTI25TestHexIO_testJunkAddrLsb
 9207              		.section	.rodata._ZTI25TestHexIO_testJunkAddrLsb,"aG",@progbits,_ZTI25TestHexIO_testJunkAddrLsb,co
 9208              		.align 16
 9211              	_ZTI25TestHexIO_testJunkAddrLsb:
 9212 0000 00000000 		.quad	_ZTVN10__cxxabiv120__si_class_type_infoE+16
 9212      00000000 
 9213 0008 00000000 		.quad	_ZTS25TestHexIO_testJunkAddrLsb
 9213      00000000 
 9214 0010 00000000 		.quad	_ZTIN8UnitTest4TestE
 9214      00000000 
 9215              		.weak	_ZTS25TestHexIO_testJunkAddrLsb
 9216              		.section	.rodata._ZTS25TestHexIO_testJunkAddrLsb,"aG",@progbits,_ZTS25TestHexIO_testJunkAddrLsb,co
 9217              		.align 16
 9220              	_ZTS25TestHexIO_testJunkAddrLsb:
 9221 0000 32355465 		.string	"25TestHexIO_testJunkAddrLsb"
 9221      73744865 
 9221      78494F5F 
 9221      74657374 
 9221      4A756E6B 
 9222              		.weak	_ZTI25TestHexIO_testJunkAddrMsb
 9223              		.section	.rodata._ZTI25TestHexIO_testJunkAddrMsb,"aG",@progbits,_ZTI25TestHexIO_testJunkAddrMsb,co
 9224              		.align 16
 9227              	_ZTI25TestHexIO_testJunkAddrMsb:
 9228 0000 00000000 		.quad	_ZTVN10__cxxabiv120__si_class_type_infoE+16
 9228      00000000 
 9229 0008 00000000 		.quad	_ZTS25TestHexIO_testJunkAddrMsb
 9229      00000000 
 9230 0010 00000000 		.quad	_ZTIN8UnitTest4TestE
 9230      00000000 
 9231              		.weak	_ZTS25TestHexIO_testJunkAddrMsb
 9232              		.section	.rodata._ZTS25TestHexIO_testJunkAddrMsb,"aG",@progbits,_ZTS25TestHexIO_testJunkAddrMsb,co
 9233              		.align 16
 9236              	_ZTS25TestHexIO_testJunkAddrMsb:
 9237 0000 32355465 		.string	"25TestHexIO_testJunkAddrMsb"
 9237      73744865 
 9237      78494F5F 
 9237      74657374 
 9237      4A756E6B 
 9238              		.weak	_ZTI27TestHexIO_testJunkByteCount
 9239              		.section	.rodata._ZTI27TestHexIO_testJunkByteCount,"aG",@progbits,_ZTI27TestHexIO_testJunkByteCoun
 9240              		.align 16
 9243              	_ZTI27TestHexIO_testJunkByteCount:
 9244 0000 00000000 		.quad	_ZTVN10__cxxabiv120__si_class_type_infoE+16
 9244      00000000 
 9245 0008 00000000 		.quad	_ZTS27TestHexIO_testJunkByteCount
 9245      00000000 
 9246 0010 00000000 		.quad	_ZTIN8UnitTest4TestE
 9246      00000000 
 9247              		.weak	_ZTS27TestHexIO_testJunkByteCount
 9248              		.section	.rodata._ZTS27TestHexIO_testJunkByteCount,"aG",@progbits,_ZTS27TestHexIO_testJunkByteCoun
 9249              		.align 16
 9252              	_ZTS27TestHexIO_testJunkByteCount:
 9253 0000 32375465 		.string	"27TestHexIO_testJunkByteCount"
 9253      73744865 
 9253      78494F5F 
 9253      74657374 
 9253      4A756E6B 
 9254              		.weak	_ZTI27TestHexIO_testJunkStartCode
 9255              		.section	.rodata._ZTI27TestHexIO_testJunkStartCode,"aG",@progbits,_ZTI27TestHexIO_testJunkStartCod
 9256              		.align 16
 9259              	_ZTI27TestHexIO_testJunkStartCode:
 9260 0000 00000000 		.quad	_ZTVN10__cxxabiv120__si_class_type_infoE+16
 9260      00000000 
 9261 0008 00000000 		.quad	_ZTS27TestHexIO_testJunkStartCode
 9261      00000000 
 9262 0010 00000000 		.quad	_ZTIN8UnitTest4TestE
 9262      00000000 
 9263              		.weak	_ZTS27TestHexIO_testJunkStartCode
 9264              		.section	.rodata._ZTS27TestHexIO_testJunkStartCode,"aG",@progbits,_ZTS27TestHexIO_testJunkStartCod
 9265              		.align 16
 9268              	_ZTS27TestHexIO_testJunkStartCode:
 9269 0000 32375465 		.string	"27TestHexIO_testJunkStartCode"
 9269      73744865 
 9269      78494F5F 
 9269      74657374 
 9269      4A756E6B 
 9270              		.weak	_ZTI22TestHexIO_testValidEOF
 9271              		.section	.rodata._ZTI22TestHexIO_testValidEOF,"aG",@progbits,_ZTI22TestHexIO_testValidEOF,comdat
 9272              		.align 16
 9275              	_ZTI22TestHexIO_testValidEOF:
 9276 0000 00000000 		.quad	_ZTVN10__cxxabiv120__si_class_type_infoE+16
 9276      00000000 
 9277 0008 00000000 		.quad	_ZTS22TestHexIO_testValidEOF
 9277      00000000 
 9278 0010 00000000 		.quad	_ZTIN8UnitTest4TestE
 9278      00000000 
 9279              		.weak	_ZTS22TestHexIO_testValidEOF
 9280              		.section	.rodata._ZTS22TestHexIO_testValidEOF,"aG",@progbits,_ZTS22TestHexIO_testValidEOF,comdat
 9281              		.align 16
 9284              	_ZTS22TestHexIO_testValidEOF:
 9285 0000 32325465 		.string	"22TestHexIO_testValidEOF"
 9285      73744865 
 9285      78494F5F 
 9285      74657374 
 9285      56616C69 
 9286              		.weak	_ZTI27TestHexIO_testValidDataLine
 9287              		.section	.rodata._ZTI27TestHexIO_testValidDataLine,"aG",@progbits,_ZTI27TestHexIO_testValidDataLin
 9288              		.align 16
 9291              	_ZTI27TestHexIO_testValidDataLine:
 9292 0000 00000000 		.quad	_ZTVN10__cxxabiv120__si_class_type_infoE+16
 9292      00000000 
 9293 0008 00000000 		.quad	_ZTS27TestHexIO_testValidDataLine
 9293      00000000 
 9294 0010 00000000 		.quad	_ZTIN8UnitTest4TestE
 9294      00000000 
 9295              		.weak	_ZTS27TestHexIO_testValidDataLine
 9296              		.section	.rodata._ZTS27TestHexIO_testValidDataLine,"aG",@progbits,_ZTS27TestHexIO_testValidDataLin
 9297              		.align 16
 9300              	_ZTS27TestHexIO_testValidDataLine:
 9301 0000 32375465 		.string	"27TestHexIO_testValidDataLine"
 9301      73744865 
 9301      78494F5F 
 9301      74657374 
 9301      56616C69 
 9302              		.weak	_ZTSN8UnitTest15MemoryOutStreamE
 9303              		.section	.rodata._ZTSN8UnitTest15MemoryOutStreamE,"aG",@progbits,_ZTSN8UnitTest15MemoryOutStreamE,
 9304              		.align 16
 9307              	_ZTSN8UnitTest15MemoryOutStreamE:
 9308 0000 4E38556E 		.string	"N8UnitTest15MemoryOutStreamE"
 9308      69745465 
 9308      73743135 
 9308      4D656D6F 
 9308      72794F75 
 9309              		.weak	_ZTIN8UnitTest15MemoryOutStreamE
 9310              		.section	.rodata._ZTIN8UnitTest15MemoryOutStreamE,"aG",@progbits,_ZTIN8UnitTest15MemoryOutStreamE,
 9311              		.align 16
 9314              	_ZTIN8UnitTest15MemoryOutStreamE:
 9315 0000 00000000 		.quad	_ZTVN10__cxxabiv120__si_class_type_infoE+16
 9315      00000000 
 9316 0008 00000000 		.quad	_ZTSN8UnitTest15MemoryOutStreamE
 9316      00000000 
 9317 0010 00000000 		.quad	_ZTISt19basic_ostringstreamIcSt11char_traitsIcESaIcEE
 9317      00000000 
 9318              		.text
 9320              	_Z41__static_initialization_and_destruction_0ii:
 9321              	.LFB1318:
 9322              		.loc 4 306 0
 9323              		.cfi_startproc
 9324 2eda 55       		pushq	%rbp
 9325              		.cfi_def_cfa_offset 16
 9326              		.cfi_offset 6, -16
 9327 2edb 4889E5   		movq	%rsp, %rbp
 9328              		.cfi_def_cfa_register 6
 9329 2ede 4883EC10 		subq	$16, %rsp
 9330 2ee2 897DFC   		movl	%edi, -4(%rbp)
 9331 2ee5 8975F8   		movl	%esi, -8(%rbp)
 9332              		.loc 4 306 0
 9333 2ee8 837DFC01 		cmpl	$1, -4(%rbp)
 9334 2eec 0F85BE02 		jne	.L475
 9334      0000
 9335              		.loc 4 306 0 is_stmt 0 discriminator 1
 9336 2ef2 817DF8FF 		cmpl	$65535, -8(%rbp)
 9336      FF0000
 9337 2ef9 0F85B102 		jne	.L475
 9337      0000
  27:testHexIO.cpp **** 	Buffer data, mask;
 9338              		.loc 4 27 0 is_stmt 1
 9339 2eff BF000000 		movl	$testHexIO_testValidDataLineInstance, %edi
 9339      00
 9340 2f04 E8000000 		call	_ZN27TestHexIO_testValidDataLineC1Ev
 9340      00
 9341 2f09 BA000000 		movl	$__dso_handle, %edx
 9341      00
 9342 2f0e BE000000 		movl	$testHexIO_testValidDataLineInstance, %esi
 9342      00
 9343 2f13 BF000000 		movl	$_ZN27TestHexIO_testValidDataLineD1Ev, %edi
 9343      00
 9344 2f18 E8000000 		call	__cxa_atexit
 9344      00
 9345 2f1d E8000000 		call	_ZN8UnitTest4Test11GetTestListEv
 9345      00
 9346 2f22 BA000000 		movl	$testHexIO_testValidDataLineInstance, %edx
 9346      00
 9347 2f27 4889C6   		movq	%rax, %rsi
 9348 2f2a BF000000 		movl	$adderHexIO_testValidDataLine, %edi
 9348      00
 9349 2f2f E8000000 		call	_ZN8UnitTest9ListAdderC1ERNS_8TestListEPNS_4TestE
 9349      00
  50:testHexIO.cpp **** 	Buffer data, mask;
 9350              		.loc 4 50 0
 9351 2f34 BF000000 		movl	$testHexIO_testValidEOFInstance, %edi
 9351      00
 9352 2f39 E8000000 		call	_ZN22TestHexIO_testValidEOFC1Ev
 9352      00
 9353 2f3e BA000000 		movl	$__dso_handle, %edx
 9353      00
 9354 2f43 BE000000 		movl	$testHexIO_testValidEOFInstance, %esi
 9354      00
 9355 2f48 BF000000 		movl	$_ZN22TestHexIO_testValidEOFD1Ev, %edi
 9355      00
 9356 2f4d E8000000 		call	__cxa_atexit
 9356      00
 9357 2f52 E8000000 		call	_ZN8UnitTest4Test11GetTestListEv
 9357      00
 9358 2f57 BA000000 		movl	$testHexIO_testValidEOFInstance, %edx
 9358      00
 9359 2f5c 4889C6   		movq	%rax, %rsi
 9360 2f5f BF000000 		movl	$adderHexIO_testValidEOF, %edi
 9360      00
 9361 2f64 E8000000 		call	_ZN8UnitTest9ListAdderC1ERNS_8TestListEPNS_4TestE
 9361      00
  69:testHexIO.cpp **** 	Buffer data;
 9362              		.loc 4 69 0
 9363 2f69 BF000000 		movl	$testHexIO_testJunkStartCodeInstance, %edi
 9363      00
 9364 2f6e E8000000 		call	_ZN27TestHexIO_testJunkStartCodeC1Ev
 9364      00
 9365 2f73 BA000000 		movl	$__dso_handle, %edx
 9365      00
 9366 2f78 BE000000 		movl	$testHexIO_testJunkStartCodeInstance, %esi
 9366      00
 9367 2f7d BF000000 		movl	$_ZN27TestHexIO_testJunkStartCodeD1Ev, %edi
 9367      00
 9368 2f82 E8000000 		call	__cxa_atexit
 9368      00
 9369 2f87 E8000000 		call	_ZN8UnitTest4Test11GetTestListEv
 9369      00
 9370 2f8c BA000000 		movl	$testHexIO_testJunkStartCodeInstance, %edx
 9370      00
 9371 2f91 4889C6   		movq	%rax, %rsi
 9372 2f94 BF000000 		movl	$adderHexIO_testJunkStartCode, %edi
 9372      00
 9373 2f99 E8000000 		call	_ZN8UnitTest9ListAdderC1ERNS_8TestListEPNS_4TestE
 9373      00
  82:testHexIO.cpp **** 	Buffer data;
 9374              		.loc 4 82 0
 9375 2f9e BF000000 		movl	$testHexIO_testJunkByteCountInstance, %edi
 9375      00
 9376 2fa3 E8000000 		call	_ZN27TestHexIO_testJunkByteCountC1Ev
 9376      00
 9377 2fa8 BA000000 		movl	$__dso_handle, %edx
 9377      00
 9378 2fad BE000000 		movl	$testHexIO_testJunkByteCountInstance, %esi
 9378      00
 9379 2fb2 BF000000 		movl	$_ZN27TestHexIO_testJunkByteCountD1Ev, %edi
 9379      00
 9380 2fb7 E8000000 		call	__cxa_atexit
 9380      00
 9381 2fbc E8000000 		call	_ZN8UnitTest4Test11GetTestListEv
 9381      00
 9382 2fc1 BA000000 		movl	$testHexIO_testJunkByteCountInstance, %edx
 9382      00
 9383 2fc6 4889C6   		movq	%rax, %rsi
 9384 2fc9 BF000000 		movl	$adderHexIO_testJunkByteCount, %edi
 9384      00
 9385 2fce E8000000 		call	_ZN8UnitTest9ListAdderC1ERNS_8TestListEPNS_4TestE
 9385      00
  95:testHexIO.cpp **** 	Buffer data;
 9386              		.loc 4 95 0
 9387 2fd3 BF000000 		movl	$testHexIO_testJunkAddrMsbInstance, %edi
 9387      00
 9388 2fd8 E8000000 		call	_ZN25TestHexIO_testJunkAddrMsbC1Ev
 9388      00
 9389 2fdd BA000000 		movl	$__dso_handle, %edx
 9389      00
 9390 2fe2 BE000000 		movl	$testHexIO_testJunkAddrMsbInstance, %esi
 9390      00
 9391 2fe7 BF000000 		movl	$_ZN25TestHexIO_testJunkAddrMsbD1Ev, %edi
 9391      00
 9392 2fec E8000000 		call	__cxa_atexit
 9392      00
 9393 2ff1 E8000000 		call	_ZN8UnitTest4Test11GetTestListEv
 9393      00
 9394 2ff6 BA000000 		movl	$testHexIO_testJunkAddrMsbInstance, %edx
 9394      00
 9395 2ffb 4889C6   		movq	%rax, %rsi
 9396 2ffe BF000000 		movl	$adderHexIO_testJunkAddrMsb, %edi
 9396      00
 9397 3003 E8000000 		call	_ZN8UnitTest9ListAdderC1ERNS_8TestListEPNS_4TestE
 9397      00
 108:testHexIO.cpp **** 	Buffer data;
 9398              		.loc 4 108 0
 9399 3008 BF000000 		movl	$testHexIO_testJunkAddrLsbInstance, %edi
 9399      00
 9400 300d E8000000 		call	_ZN25TestHexIO_testJunkAddrLsbC1Ev
 9400      00
 9401 3012 BA000000 		movl	$__dso_handle, %edx
 9401      00
 9402 3017 BE000000 		movl	$testHexIO_testJunkAddrLsbInstance, %esi
 9402      00
 9403 301c BF000000 		movl	$_ZN25TestHexIO_testJunkAddrLsbD1Ev, %edi
 9403      00
 9404 3021 E8000000 		call	__cxa_atexit
 9404      00
 9405 3026 E8000000 		call	_ZN8UnitTest4Test11GetTestListEv
 9405      00
 9406 302b BA000000 		movl	$testHexIO_testJunkAddrLsbInstance, %edx
 9406      00
 9407 3030 4889C6   		movq	%rax, %rsi
 9408 3033 BF000000 		movl	$adderHexIO_testJunkAddrLsb, %edi
 9408      00
 9409 3038 E8000000 		call	_ZN8UnitTest9ListAdderC1ERNS_8TestListEPNS_4TestE
 9409      00
 121:testHexIO.cpp **** 	Buffer data;
 9410              		.loc 4 121 0
 9411 303d BF000000 		movl	$testHexIO_testJunkRecTypeInstance, %edi
 9411      00
 9412 3042 E8000000 		call	_ZN25TestHexIO_testJunkRecTypeC1Ev
 9412      00
 9413 3047 BA000000 		movl	$__dso_handle, %edx
 9413      00
 9414 304c BE000000 		movl	$testHexIO_testJunkRecTypeInstance, %esi
 9414      00
 9415 3051 BF000000 		movl	$_ZN25TestHexIO_testJunkRecTypeD1Ev, %edi
 9415      00
 9416 3056 E8000000 		call	__cxa_atexit
 9416      00
 9417 305b E8000000 		call	_ZN8UnitTest4Test11GetTestListEv
 9417      00
 9418 3060 BA000000 		movl	$testHexIO_testJunkRecTypeInstance, %edx
 9418      00
 9419 3065 4889C6   		movq	%rax, %rsi
 9420 3068 BF000000 		movl	$adderHexIO_testJunkRecType, %edi
 9420      00
 9421 306d E8000000 		call	_ZN8UnitTest9ListAdderC1ERNS_8TestListEPNS_4TestE
 9421      00
 134:testHexIO.cpp **** 	Buffer data;
 9422              		.loc 4 134 0
 9423 3072 BF000000 		movl	$testHexIO_testJunkDataByteInstance, %edi
 9423      00
 9424 3077 E8000000 		call	_ZN26TestHexIO_testJunkDataByteC1Ev
 9424      00
 9425 307c BA000000 		movl	$__dso_handle, %edx
 9425      00
 9426 3081 BE000000 		movl	$testHexIO_testJunkDataByteInstance, %esi
 9426      00
 9427 3086 BF000000 		movl	$_ZN26TestHexIO_testJunkDataByteD1Ev, %edi
 9427      00
 9428 308b E8000000 		call	__cxa_atexit
 9428      00
 9429 3090 E8000000 		call	_ZN8UnitTest4Test11GetTestListEv
 9429      00
 9430 3095 BA000000 		movl	$testHexIO_testJunkDataByteInstance, %edx
 9430      00
 9431 309a 4889C6   		movq	%rax, %rsi
 9432 309d BF000000 		movl	$adderHexIO_testJunkDataByte, %edi
 9432      00
 9433 30a2 E8000000 		call	_ZN8UnitTest9ListAdderC1ERNS_8TestListEPNS_4TestE
 9433      00
 147:testHexIO.cpp **** 	Buffer data;
 9434              		.loc 4 147 0
 9435 30a7 BF000000 		movl	$testHexIO_testJunkChecksumInstance, %edi
 9435      00
 9436 30ac E8000000 		call	_ZN26TestHexIO_testJunkChecksumC1Ev
 9436      00
 9437 30b1 BA000000 		movl	$__dso_handle, %edx
 9437      00
 9438 30b6 BE000000 		movl	$testHexIO_testJunkChecksumInstance, %esi
 9438      00
 9439 30bb BF000000 		movl	$_ZN26TestHexIO_testJunkChecksumD1Ev, %edi
 9439      00
 9440 30c0 E8000000 		call	__cxa_atexit
 9440      00
 9441 30c5 E8000000 		call	_ZN8UnitTest4Test11GetTestListEv
 9441      00
 9442 30ca BA000000 		movl	$testHexIO_testJunkChecksumInstance, %edx
 9442      00
 9443 30cf 4889C6   		movq	%rax, %rsi
 9444 30d2 BF000000 		movl	$adderHexIO_testJunkChecksum, %edi
 9444      00
 9445 30d7 E8000000 		call	_ZN8UnitTest9ListAdderC1ERNS_8TestListEPNS_4TestE
 9445      00
 160:testHexIO.cpp **** 	Buffer data;
 9446              		.loc 4 160 0
 9447 30dc BF000000 		movl	$testHexIO_testBadChecksumInstance, %edi
 9447      00
 9448 30e1 E8000000 		call	_ZN25TestHexIO_testBadChecksumC1Ev
 9448      00
 9449 30e6 BA000000 		movl	$__dso_handle, %edx
 9449      00
 9450 30eb BE000000 		movl	$testHexIO_testBadChecksumInstance, %esi
 9450      00
 9451 30f0 BF000000 		movl	$_ZN25TestHexIO_testBadChecksumD1Ev, %edi
 9451      00
 9452 30f5 E8000000 		call	__cxa_atexit
 9452      00
 9453 30fa E8000000 		call	_ZN8UnitTest4Test11GetTestListEv
 9453      00
 9454 30ff BA000000 		movl	$testHexIO_testBadChecksumInstance, %edx
 9454      00
 9455 3104 4889C6   		movq	%rax, %rsi
 9456 3107 BF000000 		movl	$adderHexIO_testBadChecksum, %edi
 9456      00
 9457 310c E8000000 		call	_ZN8UnitTest9ListAdderC1ERNS_8TestListEPNS_4TestE
 9457      00
 173:testHexIO.cpp **** 	Buffer data;
 9458              		.loc 4 173 0
 9459 3111 BF000000 		movl	$testHexIO_testCorruptLineInstance, %edi
 9459      00
 9460 3116 E8000000 		call	_ZN25TestHexIO_testCorruptLineC1Ev
 9460      00
 9461 311b BA000000 		movl	$__dso_handle, %edx
 9461      00
 9462 3120 BE000000 		movl	$testHexIO_testCorruptLineInstance, %esi
 9462      00
 9463 3125 BF000000 		movl	$_ZN25TestHexIO_testCorruptLineD1Ev, %edi
 9463      00
 9464 312a E8000000 		call	__cxa_atexit
 9464      00
 9465 312f E8000000 		call	_ZN8UnitTest4Test11GetTestListEv
 9465      00
 9466 3134 BA000000 		movl	$testHexIO_testCorruptLineInstance, %edx
 9466      00
 9467 3139 4889C6   		movq	%rax, %rsi
 9468 313c BF000000 		movl	$adderHexIO_testCorruptLine, %edi
 9468      00
 9469 3141 E8000000 		call	_ZN8UnitTest9ListAdderC1ERNS_8TestListEPNS_4TestE
 9469      00
 242:testHexIO.cpp **** 	testRoundTrip(
 9470              		.loc 4 242 0
 9471 3146 BF000000 		movl	$testHexIO_testRoundTripInstance, %edi
 9471      00
 9472 314b E8000000 		call	_ZN23TestHexIO_testRoundTripC1Ev
 9472      00
 9473 3150 BA000000 		movl	$__dso_handle, %edx
 9473      00
 9474 3155 BE000000 		movl	$testHexIO_testRoundTripInstance, %esi
 9474      00
 9475 315a BF000000 		movl	$_ZN23TestHexIO_testRoundTripD1Ev, %edi
 9475      00
 9476 315f E8000000 		call	__cxa_atexit
 9476      00
 9477 3164 E8000000 		call	_ZN8UnitTest4Test11GetTestListEv
 9477      00
 9478 3169 BA000000 		movl	$testHexIO_testRoundTripInstance, %edx
 9478      00
 9479 316e 4889C6   		movq	%rax, %rsi
 9480 3171 BF000000 		movl	$adderHexIO_testRoundTrip, %edi
 9480      00
 9481 3176 E8000000 		call	_ZN8UnitTest9ListAdderC1ERNS_8TestListEPNS_4TestE
 9481      00
 303:testHexIO.cpp **** 	testDeriveWriteMap("Hello........World", "*****........*****");
 9482              		.loc 4 303 0
 9483 317b BF000000 		movl	$testHexIO_testDeriveWriteMapInstance, %edi
 9483      00
 9484 3180 E8000000 		call	_ZN28TestHexIO_testDeriveWriteMapC1Ev
 9484      00
 9485 3185 BA000000 		movl	$__dso_handle, %edx
 9485      00
 9486 318a BE000000 		movl	$testHexIO_testDeriveWriteMapInstance, %esi
 9486      00
 9487 318f BF000000 		movl	$_ZN28TestHexIO_testDeriveWriteMapD1Ev, %edi
 9487      00
 9488 3194 E8000000 		call	__cxa_atexit
 9488      00
 9489 3199 E8000000 		call	_ZN8UnitTest4Test11GetTestListEv
 9489      00
 9490 319e BA000000 		movl	$testHexIO_testDeriveWriteMapInstance, %edx
 9490      00
 9491 31a3 4889C6   		movq	%rax, %rsi
 9492 31a6 BF000000 		movl	$adderHexIO_testDeriveWriteMap, %edi
 9492      00
 9493 31ab E8000000 		call	_ZN8UnitTest9ListAdderC1ERNS_8TestListEPNS_4TestE
 9493      00
 9494              	.L475:
 9495              		.loc 4 306 0
 9496 31b0 C9       		leave
 9497              		.cfi_def_cfa 7, 8
 9498 31b1 C3       		ret
 9499              		.cfi_endproc
 9500              	.LFE1318:
 9503              	_GLOBAL__sub_I_testHexIO_testValidDataLineInstance:
 9504              	.LFB1319:
 9505              		.loc 4 306 0
 9506              		.cfi_startproc
 9507 31b2 55       		pushq	%rbp
 9508              		.cfi_def_cfa_offset 16
 9509              		.cfi_offset 6, -16
 9510 31b3 4889E5   		movq	%rsp, %rbp
 9511              		.cfi_def_cfa_register 6
 9512              		.loc 4 306 0
 9513 31b6 BEFFFF00 		movl	$65535, %esi
 9513      00
 9514 31bb BF010000 		movl	$1, %edi
 9514      00
 9515 31c0 E815FDFF 		call	_Z41__static_initialization_and_destruction_0ii
 9515      FF
 9516 31c5 5D       		popq	%rbp
 9517              		.cfi_def_cfa 7, 8
 9518 31c6 C3       		ret
 9519              		.cfi_endproc
 9520              	.LFE1319:
 9522              		.section	.init_array,"aw"
 9523              		.align 8
 9524 0000 00000000 		.quad	_GLOBAL__sub_I_testHexIO_testValidDataLineInstance
 9524      00000000 
 9525              		.section	.rodata
 9526 0cb2 00000000 		.align 8
 9526      0000
 9529              	_ZZL18__gthread_active_pvE20__gthread_active_ptr:
 9530 0cb8 00000000 		.quad	_ZL28__gthrw___pthread_key_createPjPFvPvE
 9530      00000000 
 9531              		.weakref	_ZL28__gthrw___pthread_key_createPjPFvPvE,__pthread_key_create
 9532              		.text
 9533              	.Letext0:
 9534              		.file 7 "<built-in>"
 9535              		.file 8 "/usr/lib/gcc/x86_64-linux-gnu/4.8/include/stdarg.h"
 9536              		.file 9 "/usr/include/c++/4.8/cstdarg"
 9537              		.file 10 "/usr/include/c++/4.8/cwchar"
 9538              		.file 11 "/usr/include/c++/4.8/bits/char_traits.h"
 9539              		.file 12 "/usr/include/x86_64-linux-gnu/c++/4.8/bits/c++config.h"
 9540              		.file 13 "/usr/include/c++/4.8/bits/allocator.h"
 9541              		.file 14 "/usr/include/c++/4.8/clocale"
 9542              		.file 15 "/usr/include/c++/4.8/bits/basic_string.h"
 9543              		.file 16 "/usr/include/c++/4.8/bits/basic_string.tcc"
 9544              		.file 17 "/usr/include/c++/4.8/bits/stringfwd.h"
 9545              		.file 18 "/usr/include/c++/4.8/cwctype"
 9546              		.file 19 "/usr/include/c++/4.8/cstdio"
 9547              		.file 20 "/usr/include/c++/4.8/cstring"
 9548              		.file 21 "/usr/include/c++/4.8/iosfwd"
 9549              		.file 22 "/usr/include/c++/4.8/ext/new_allocator.h"
 9550              		.file 23 "/usr/include/c++/4.8/ext/numeric_traits.h"
 9551              		.file 24 "/usr/include/c++/4.8/bits/cpp_type_traits.h"
 9552              		.file 25 "/usr/include/c++/4.8/debug/debug.h"
 9553              		.file 26 "/usr/include/stdio.h"
 9554              		.file 27 "/usr/include/libio.h"
 9555              		.file 28 "/usr/lib/gcc/x86_64-linux-gnu/4.8/include/stddef.h"
 9556              		.file 29 "/usr/include/wchar.h"
 9557              		.file 30 "/usr/include/time.h"
 9558              		.file 31 "/usr/include/locale.h"
 9559              		.file 32 "/usr/include/x86_64-linux-gnu/bits/types.h"
 9560              		.file 33 "/usr/include/x86_64-linux-gnu/c++/4.8/bits/atomic_word.h"
 9561              		.file 34 "/usr/include/wctype.h"
 9562              		.file 35 "/usr/include/_G_config.h"
 9563              		.file 36 "/usr/include/string.h"
 9564              		.file 37 "/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/libs/libutpp/TestDetails.h"
 9565              		.file 38 "/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/libs/libutpp/TestList.h"
 9566              		.file 39 "/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/libs/libutpp/TestResults.h"
 9567              		.file 40 "/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/common/makestuff.h"
 9568              		.file 41 "../libbuffer.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 testHexIO.cpp
     /tmp/ccJGOKBA.s:7      .text._ZStorSt13_Ios_OpenmodeS_:0000000000000000 _ZStorSt13_Ios_OpenmodeS_
     /tmp/ccJGOKBA.s:35     .text._ZN13UnitTestSuite12GetSuiteNameEv:0000000000000000 _ZN13UnitTestSuite12GetSuiteNameEv
     /tmp/ccJGOKBA.s:58     .text._ZN8UnitTest15MemoryOutStreamC1Ev:0000000000000000 _ZN8UnitTest15MemoryOutStreamC1Ev
     /tmp/ccJGOKBA.s:9053   .rodata._ZTTN8UnitTest15MemoryOutStreamE:0000000000000000 _ZTTN8UnitTest15MemoryOutStreamE
     /tmp/ccJGOKBA.s:9037   .rodata._ZTVN8UnitTest15MemoryOutStreamE:0000000000000000 _ZTVN8UnitTest15MemoryOutStreamE
     /tmp/ccJGOKBA.s:176    .text._ZN27TestHexIO_testValidDataLineC2Ev:0000000000000000 _ZN27TestHexIO_testValidDataLineC2Ev
     /tmp/ccJGOKBA.s:8958   .rodata._ZTV27TestHexIO_testValidDataLine:0000000000000000 _ZTV27TestHexIO_testValidDataLine
     /tmp/ccJGOKBA.s:176    .text._ZN27TestHexIO_testValidDataLineC2Ev:0000000000000000 _ZN27TestHexIO_testValidDataLineC1Ev
     /tmp/ccJGOKBA.s:214    .bss:0000000000000000 testHexIO_testValidDataLineInstance
     /tmp/ccJGOKBA.s:219    .bss:0000000000000038 adderHexIO_testValidDataLine
     /tmp/ccJGOKBA.s:249    .text:0000000000000000 _ZNK27TestHexIO_testValidDataLine7RunImplEv
     /tmp/ccJGOKBA.s:6580   .text._ZN8UnitTest10CheckEqualI12BufferStatusS1_EEvRNS_11TestResultsERKT_RKT0_RKNS_11TestDetailsE:0000000000000000 _ZN8UnitTest10CheckEqualI12BufferStatusS1_EEvRNS_11TestResultsERKT_RKT0_RKNS_11TestDetailsE
     /tmp/ccJGOKBA.s:6712   .text._ZN8UnitTest10CheckEqualIihEEvRNS_11TestResultsERKT_RKT0_RKNS_11TestDetailsE:0000000000000000 _ZN8UnitTest10CheckEqualIihEEvRNS_11TestResultsERKT_RKT0_RKNS_11TestDetailsE
     /tmp/ccJGOKBA.s:6843   .text._ZN8UnitTest10CheckEqualImmEEvRNS_11TestResultsERKT_RKT0_RKNS_11TestDetailsE:0000000000000000 _ZN8UnitTest10CheckEqualImmEEvRNS_11TestResultsERKT_RKT0_RKNS_11TestDetailsE
     /tmp/ccJGOKBA.s:6981   .text._ZN8UnitTest15CheckArrayEqualIA4_hPhEEvRNS_11TestResultsERKT_RKT0_iRKNS_11TestDetailsE:0000000000000000 _ZN8UnitTest15CheckArrayEqualIA4_hPhEEvRNS_11TestResultsERKT_RKT0_iRKNS_11TestDetailsE
     /tmp/ccJGOKBA.s:1021   .text._ZN22TestHexIO_testValidEOFC2Ev:0000000000000000 _ZN22TestHexIO_testValidEOFC2Ev
     /tmp/ccJGOKBA.s:8879   .rodata._ZTV22TestHexIO_testValidEOF:0000000000000000 _ZTV22TestHexIO_testValidEOF
     /tmp/ccJGOKBA.s:1021   .text._ZN22TestHexIO_testValidEOFC2Ev:0000000000000000 _ZN22TestHexIO_testValidEOFC1Ev
     /tmp/ccJGOKBA.s:1058   .bss:0000000000000040 testHexIO_testValidEOFInstance
     /tmp/ccJGOKBA.s:1063   .bss:0000000000000078 adderHexIO_testValidEOF
     /tmp/ccJGOKBA.s:1081   .text:00000000000006fa _ZNK22TestHexIO_testValidEOF7RunImplEv
     /tmp/ccJGOKBA.s:1619   .text._ZN27TestHexIO_testJunkStartCodeC2Ev:0000000000000000 _ZN27TestHexIO_testJunkStartCodeC2Ev
     /tmp/ccJGOKBA.s:8800   .rodata._ZTV27TestHexIO_testJunkStartCode:0000000000000000 _ZTV27TestHexIO_testJunkStartCode
     /tmp/ccJGOKBA.s:1619   .text._ZN27TestHexIO_testJunkStartCodeC2Ev:0000000000000000 _ZN27TestHexIO_testJunkStartCodeC1Ev
     /tmp/ccJGOKBA.s:1656   .bss:0000000000000080 testHexIO_testJunkStartCodeInstance
     /tmp/ccJGOKBA.s:1661   .bss:00000000000000b8 adderHexIO_testJunkStartCode
     /tmp/ccJGOKBA.s:1673   .text:0000000000000b8e _ZNK27TestHexIO_testJunkStartCode7RunImplEv
     /tmp/ccJGOKBA.s:1911   .text._ZN27TestHexIO_testJunkByteCountC2Ev:0000000000000000 _ZN27TestHexIO_testJunkByteCountC2Ev
     /tmp/ccJGOKBA.s:8721   .rodata._ZTV27TestHexIO_testJunkByteCount:0000000000000000 _ZTV27TestHexIO_testJunkByteCount
     /tmp/ccJGOKBA.s:1911   .text._ZN27TestHexIO_testJunkByteCountC2Ev:0000000000000000 _ZN27TestHexIO_testJunkByteCountC1Ev
     /tmp/ccJGOKBA.s:1948   .bss:00000000000000c0 testHexIO_testJunkByteCountInstance
     /tmp/ccJGOKBA.s:1953   .bss:00000000000000f8 adderHexIO_testJunkByteCount
     /tmp/ccJGOKBA.s:1965   .text:0000000000000d4c _ZNK27TestHexIO_testJunkByteCount7RunImplEv
     /tmp/ccJGOKBA.s:2203   .text._ZN25TestHexIO_testJunkAddrMsbC2Ev:0000000000000000 _ZN25TestHexIO_testJunkAddrMsbC2Ev
     /tmp/ccJGOKBA.s:8642   .rodata._ZTV25TestHexIO_testJunkAddrMsb:0000000000000000 _ZTV25TestHexIO_testJunkAddrMsb
     /tmp/ccJGOKBA.s:2203   .text._ZN25TestHexIO_testJunkAddrMsbC2Ev:0000000000000000 _ZN25TestHexIO_testJunkAddrMsbC1Ev
     /tmp/ccJGOKBA.s:2240   .bss:0000000000000100 testHexIO_testJunkAddrMsbInstance
     /tmp/ccJGOKBA.s:2245   .bss:0000000000000138 adderHexIO_testJunkAddrMsb
     /tmp/ccJGOKBA.s:2257   .text:0000000000000f0a _ZNK25TestHexIO_testJunkAddrMsb7RunImplEv
     /tmp/ccJGOKBA.s:2495   .text._ZN25TestHexIO_testJunkAddrLsbC2Ev:0000000000000000 _ZN25TestHexIO_testJunkAddrLsbC2Ev
     /tmp/ccJGOKBA.s:8563   .rodata._ZTV25TestHexIO_testJunkAddrLsb:0000000000000000 _ZTV25TestHexIO_testJunkAddrLsb
     /tmp/ccJGOKBA.s:2495   .text._ZN25TestHexIO_testJunkAddrLsbC2Ev:0000000000000000 _ZN25TestHexIO_testJunkAddrLsbC1Ev
     /tmp/ccJGOKBA.s:2532   .bss:0000000000000140 testHexIO_testJunkAddrLsbInstance
     /tmp/ccJGOKBA.s:2537   .bss:0000000000000178 adderHexIO_testJunkAddrLsb
     /tmp/ccJGOKBA.s:2549   .text:00000000000010c8 _ZNK25TestHexIO_testJunkAddrLsb7RunImplEv
     /tmp/ccJGOKBA.s:2787   .text._ZN25TestHexIO_testJunkRecTypeC2Ev:0000000000000000 _ZN25TestHexIO_testJunkRecTypeC2Ev
     /tmp/ccJGOKBA.s:8484   .rodata._ZTV25TestHexIO_testJunkRecType:0000000000000000 _ZTV25TestHexIO_testJunkRecType
     /tmp/ccJGOKBA.s:2787   .text._ZN25TestHexIO_testJunkRecTypeC2Ev:0000000000000000 _ZN25TestHexIO_testJunkRecTypeC1Ev
     /tmp/ccJGOKBA.s:2824   .bss:0000000000000180 testHexIO_testJunkRecTypeInstance
     /tmp/ccJGOKBA.s:2829   .bss:00000000000001b8 adderHexIO_testJunkRecType
     /tmp/ccJGOKBA.s:2841   .text:0000000000001286 _ZNK25TestHexIO_testJunkRecType7RunImplEv
     /tmp/ccJGOKBA.s:3079   .text._ZN26TestHexIO_testJunkDataByteC2Ev:0000000000000000 _ZN26TestHexIO_testJunkDataByteC2Ev
     /tmp/ccJGOKBA.s:8405   .rodata._ZTV26TestHexIO_testJunkDataByte:0000000000000000 _ZTV26TestHexIO_testJunkDataByte
     /tmp/ccJGOKBA.s:3079   .text._ZN26TestHexIO_testJunkDataByteC2Ev:0000000000000000 _ZN26TestHexIO_testJunkDataByteC1Ev
     /tmp/ccJGOKBA.s:3116   .bss:00000000000001c0 testHexIO_testJunkDataByteInstance
     /tmp/ccJGOKBA.s:3121   .bss:00000000000001f8 adderHexIO_testJunkDataByte
     /tmp/ccJGOKBA.s:3133   .text:0000000000001444 _ZNK26TestHexIO_testJunkDataByte7RunImplEv
     /tmp/ccJGOKBA.s:3371   .text._ZN26TestHexIO_testJunkChecksumC2Ev:0000000000000000 _ZN26TestHexIO_testJunkChecksumC2Ev
     /tmp/ccJGOKBA.s:8326   .rodata._ZTV26TestHexIO_testJunkChecksum:0000000000000000 _ZTV26TestHexIO_testJunkChecksum
     /tmp/ccJGOKBA.s:3371   .text._ZN26TestHexIO_testJunkChecksumC2Ev:0000000000000000 _ZN26TestHexIO_testJunkChecksumC1Ev
     /tmp/ccJGOKBA.s:3408   .bss:0000000000000200 testHexIO_testJunkChecksumInstance
     /tmp/ccJGOKBA.s:3413   .bss:0000000000000238 adderHexIO_testJunkChecksum
     /tmp/ccJGOKBA.s:3425   .text:0000000000001602 _ZNK26TestHexIO_testJunkChecksum7RunImplEv
     /tmp/ccJGOKBA.s:3663   .text._ZN25TestHexIO_testBadChecksumC2Ev:0000000000000000 _ZN25TestHexIO_testBadChecksumC2Ev
     /tmp/ccJGOKBA.s:8247   .rodata._ZTV25TestHexIO_testBadChecksum:0000000000000000 _ZTV25TestHexIO_testBadChecksum
     /tmp/ccJGOKBA.s:3663   .text._ZN25TestHexIO_testBadChecksumC2Ev:0000000000000000 _ZN25TestHexIO_testBadChecksumC1Ev
     /tmp/ccJGOKBA.s:3700   .bss:0000000000000240 testHexIO_testBadChecksumInstance
     /tmp/ccJGOKBA.s:3705   .bss:0000000000000278 adderHexIO_testBadChecksum
     /tmp/ccJGOKBA.s:3717   .text:00000000000017c0 _ZNK25TestHexIO_testBadChecksum7RunImplEv
     /tmp/ccJGOKBA.s:3955   .text._ZN25TestHexIO_testCorruptLineC2Ev:0000000000000000 _ZN25TestHexIO_testCorruptLineC2Ev
     /tmp/ccJGOKBA.s:8168   .rodata._ZTV25TestHexIO_testCorruptLine:0000000000000000 _ZTV25TestHexIO_testCorruptLine
     /tmp/ccJGOKBA.s:3955   .text._ZN25TestHexIO_testCorruptLineC2Ev:0000000000000000 _ZN25TestHexIO_testCorruptLineC1Ev
     /tmp/ccJGOKBA.s:3992   .bss:0000000000000280 testHexIO_testCorruptLineInstance
     /tmp/ccJGOKBA.s:3997   .bss:00000000000002b8 adderHexIO_testCorruptLine
     /tmp/ccJGOKBA.s:4009   .text:000000000000197e _ZNK25TestHexIO_testCorruptLine7RunImplEv
     /tmp/ccJGOKBA.s:4269   .text:0000000000001b3b _Z13testRoundTripPKcz
     /tmp/ccJGOKBA.s:7190   .text._ZN8UnitTest5CheckIbEEbT_:0000000000000000 _ZN8UnitTest5CheckIbEEbT_
     /tmp/ccJGOKBA.s:7214   .text._ZNKSt4fposI11__mbstate_tEcvlEv:0000000000000000 _ZNKSt4fposI11__mbstate_tEcvlEv
     /tmp/ccJGOKBA.s:7237   .text._ZN8UnitTest10CheckEqualImjEEvRNS_11TestResultsERKT_RKT0_RKNS_11TestDetailsE:0000000000000000 _ZN8UnitTest10CheckEqualImjEEvRNS_11TestResultsERKT_RKT0_RKNS_11TestDetailsE
     /tmp/ccJGOKBA.s:7367   .text._ZN8UnitTest15CheckArrayEqualIPKcS2_EEvRNS_11TestResultsERKT_RKT0_iRKNS_11TestDetailsE:0000000000000000 _ZN8UnitTest15CheckArrayEqualIPKcS2_EEvRNS_11TestResultsERKT_RKT0_iRKNS_11TestDetailsE
     /tmp/ccJGOKBA.s:7580   .text._ZN8UnitTest15CheckArrayEqualIPhS1_EEvRNS_11TestResultsERKT_RKT0_iRKNS_11TestDetailsE:0000000000000000 _ZN8UnitTest15CheckArrayEqualIPhS1_EEvRNS_11TestResultsERKT_RKT0_iRKNS_11TestDetailsE
     /tmp/ccJGOKBA.s:5559   .text._ZN23TestHexIO_testRoundTripC2Ev:0000000000000000 _ZN23TestHexIO_testRoundTripC2Ev
     /tmp/ccJGOKBA.s:8089   .rodata._ZTV23TestHexIO_testRoundTrip:0000000000000000 _ZTV23TestHexIO_testRoundTrip
     /tmp/ccJGOKBA.s:5559   .text._ZN23TestHexIO_testRoundTripC2Ev:0000000000000000 _ZN23TestHexIO_testRoundTripC1Ev
     /tmp/ccJGOKBA.s:5596   .bss:00000000000002c0 testHexIO_testRoundTripInstance
     /tmp/ccJGOKBA.s:5601   .bss:00000000000002f8 adderHexIO_testRoundTrip
     /tmp/ccJGOKBA.s:5655   .text:0000000000002906 _ZNK23TestHexIO_testRoundTrip7RunImplEv
     /tmp/ccJGOKBA.s:5726   .text:00000000000029e3 _Z18testDeriveWriteMapPKcS0_
     /tmp/ccJGOKBA.s:7793   .text._ZN8UnitTest15CheckArrayEqualIPKcPhEEvRNS_11TestResultsERKT_RKT0_iRKNS_11TestDetailsE:0000000000000000 _ZN8UnitTest15CheckArrayEqualIPKcPhEEvRNS_11TestResultsERKT_RKT0_iRKNS_11TestDetailsE
     /tmp/ccJGOKBA.s:6307   .text._ZN28TestHexIO_testDeriveWriteMapC2Ev:0000000000000000 _ZN28TestHexIO_testDeriveWriteMapC2Ev
     /tmp/ccJGOKBA.s:8010   .rodata._ZTV28TestHexIO_testDeriveWriteMap:0000000000000000 _ZTV28TestHexIO_testDeriveWriteMap
     /tmp/ccJGOKBA.s:6307   .text._ZN28TestHexIO_testDeriveWriteMapC2Ev:0000000000000000 _ZN28TestHexIO_testDeriveWriteMapC1Ev
     /tmp/ccJGOKBA.s:6344   .bss:0000000000000300 testHexIO_testDeriveWriteMapInstance
     /tmp/ccJGOKBA.s:6349   .bss:0000000000000338 adderHexIO_testDeriveWriteMap
     /tmp/ccJGOKBA.s:6364   .text:0000000000002eae _ZNK28TestHexIO_testDeriveWriteMap7RunImplEv
     /tmp/ccJGOKBA.s:6394   .text._ZN8UnitTest15MemoryOutStreamD1Ev:0000000000000000 _ZN8UnitTest15MemoryOutStreamD1Ev
     /tmp/ccJGOKBA.s:6521   .text._ZN8UnitTest15MemoryOutStreamD1Ev:00000000000000c8 _ZTv0_n24_N8UnitTest15MemoryOutStreamD1Ev
     /tmp/ccJGOKBA.s:6535   .text._ZN8UnitTest15MemoryOutStreamD0Ev:0000000000000000 _ZN8UnitTest15MemoryOutStreamD0Ev
     /tmp/ccJGOKBA.s:6562   .text._ZN8UnitTest15MemoryOutStreamD0Ev:0000000000000026 _ZTv0_n24_N8UnitTest15MemoryOutStreamD0Ev
     /tmp/ccJGOKBA.s:9099   .rodata._ZTI28TestHexIO_testDeriveWriteMap:0000000000000000 _ZTI28TestHexIO_testDeriveWriteMap
     /tmp/ccJGOKBA.s:8020   .text._ZN28TestHexIO_testDeriveWriteMapD2Ev:0000000000000000 _ZN28TestHexIO_testDeriveWriteMapD1Ev
     /tmp/ccJGOKBA.s:8060   .text._ZN28TestHexIO_testDeriveWriteMapD0Ev:0000000000000000 _ZN28TestHexIO_testDeriveWriteMapD0Ev
     /tmp/ccJGOKBA.s:8020   .text._ZN28TestHexIO_testDeriveWriteMapD2Ev:0000000000000000 _ZN28TestHexIO_testDeriveWriteMapD2Ev
     /tmp/ccJGOKBA.s:9115   .rodata._ZTI23TestHexIO_testRoundTrip:0000000000000000 _ZTI23TestHexIO_testRoundTrip
     /tmp/ccJGOKBA.s:8099   .text._ZN23TestHexIO_testRoundTripD2Ev:0000000000000000 _ZN23TestHexIO_testRoundTripD1Ev
     /tmp/ccJGOKBA.s:8139   .text._ZN23TestHexIO_testRoundTripD0Ev:0000000000000000 _ZN23TestHexIO_testRoundTripD0Ev
     /tmp/ccJGOKBA.s:8099   .text._ZN23TestHexIO_testRoundTripD2Ev:0000000000000000 _ZN23TestHexIO_testRoundTripD2Ev
     /tmp/ccJGOKBA.s:9131   .rodata._ZTI25TestHexIO_testCorruptLine:0000000000000000 _ZTI25TestHexIO_testCorruptLine
     /tmp/ccJGOKBA.s:8178   .text._ZN25TestHexIO_testCorruptLineD2Ev:0000000000000000 _ZN25TestHexIO_testCorruptLineD1Ev
     /tmp/ccJGOKBA.s:8218   .text._ZN25TestHexIO_testCorruptLineD0Ev:0000000000000000 _ZN25TestHexIO_testCorruptLineD0Ev
     /tmp/ccJGOKBA.s:8178   .text._ZN25TestHexIO_testCorruptLineD2Ev:0000000000000000 _ZN25TestHexIO_testCorruptLineD2Ev
     /tmp/ccJGOKBA.s:9147   .rodata._ZTI25TestHexIO_testBadChecksum:0000000000000000 _ZTI25TestHexIO_testBadChecksum
     /tmp/ccJGOKBA.s:8257   .text._ZN25TestHexIO_testBadChecksumD2Ev:0000000000000000 _ZN25TestHexIO_testBadChecksumD1Ev
     /tmp/ccJGOKBA.s:8297   .text._ZN25TestHexIO_testBadChecksumD0Ev:0000000000000000 _ZN25TestHexIO_testBadChecksumD0Ev
     /tmp/ccJGOKBA.s:8257   .text._ZN25TestHexIO_testBadChecksumD2Ev:0000000000000000 _ZN25TestHexIO_testBadChecksumD2Ev
     /tmp/ccJGOKBA.s:9163   .rodata._ZTI26TestHexIO_testJunkChecksum:0000000000000000 _ZTI26TestHexIO_testJunkChecksum
     /tmp/ccJGOKBA.s:8336   .text._ZN26TestHexIO_testJunkChecksumD2Ev:0000000000000000 _ZN26TestHexIO_testJunkChecksumD1Ev
     /tmp/ccJGOKBA.s:8376   .text._ZN26TestHexIO_testJunkChecksumD0Ev:0000000000000000 _ZN26TestHexIO_testJunkChecksumD0Ev
     /tmp/ccJGOKBA.s:8336   .text._ZN26TestHexIO_testJunkChecksumD2Ev:0000000000000000 _ZN26TestHexIO_testJunkChecksumD2Ev
     /tmp/ccJGOKBA.s:9179   .rodata._ZTI26TestHexIO_testJunkDataByte:0000000000000000 _ZTI26TestHexIO_testJunkDataByte
     /tmp/ccJGOKBA.s:8415   .text._ZN26TestHexIO_testJunkDataByteD2Ev:0000000000000000 _ZN26TestHexIO_testJunkDataByteD1Ev
     /tmp/ccJGOKBA.s:8455   .text._ZN26TestHexIO_testJunkDataByteD0Ev:0000000000000000 _ZN26TestHexIO_testJunkDataByteD0Ev
     /tmp/ccJGOKBA.s:8415   .text._ZN26TestHexIO_testJunkDataByteD2Ev:0000000000000000 _ZN26TestHexIO_testJunkDataByteD2Ev
     /tmp/ccJGOKBA.s:9195   .rodata._ZTI25TestHexIO_testJunkRecType:0000000000000000 _ZTI25TestHexIO_testJunkRecType
     /tmp/ccJGOKBA.s:8494   .text._ZN25TestHexIO_testJunkRecTypeD2Ev:0000000000000000 _ZN25TestHexIO_testJunkRecTypeD1Ev
     /tmp/ccJGOKBA.s:8534   .text._ZN25TestHexIO_testJunkRecTypeD0Ev:0000000000000000 _ZN25TestHexIO_testJunkRecTypeD0Ev
     /tmp/ccJGOKBA.s:8494   .text._ZN25TestHexIO_testJunkRecTypeD2Ev:0000000000000000 _ZN25TestHexIO_testJunkRecTypeD2Ev
     /tmp/ccJGOKBA.s:9211   .rodata._ZTI25TestHexIO_testJunkAddrLsb:0000000000000000 _ZTI25TestHexIO_testJunkAddrLsb
     /tmp/ccJGOKBA.s:8573   .text._ZN25TestHexIO_testJunkAddrLsbD2Ev:0000000000000000 _ZN25TestHexIO_testJunkAddrLsbD1Ev
     /tmp/ccJGOKBA.s:8613   .text._ZN25TestHexIO_testJunkAddrLsbD0Ev:0000000000000000 _ZN25TestHexIO_testJunkAddrLsbD0Ev
     /tmp/ccJGOKBA.s:8573   .text._ZN25TestHexIO_testJunkAddrLsbD2Ev:0000000000000000 _ZN25TestHexIO_testJunkAddrLsbD2Ev
     /tmp/ccJGOKBA.s:9227   .rodata._ZTI25TestHexIO_testJunkAddrMsb:0000000000000000 _ZTI25TestHexIO_testJunkAddrMsb
     /tmp/ccJGOKBA.s:8652   .text._ZN25TestHexIO_testJunkAddrMsbD2Ev:0000000000000000 _ZN25TestHexIO_testJunkAddrMsbD1Ev
     /tmp/ccJGOKBA.s:8692   .text._ZN25TestHexIO_testJunkAddrMsbD0Ev:0000000000000000 _ZN25TestHexIO_testJunkAddrMsbD0Ev
     /tmp/ccJGOKBA.s:8652   .text._ZN25TestHexIO_testJunkAddrMsbD2Ev:0000000000000000 _ZN25TestHexIO_testJunkAddrMsbD2Ev
     /tmp/ccJGOKBA.s:9243   .rodata._ZTI27TestHexIO_testJunkByteCount:0000000000000000 _ZTI27TestHexIO_testJunkByteCount
     /tmp/ccJGOKBA.s:8731   .text._ZN27TestHexIO_testJunkByteCountD2Ev:0000000000000000 _ZN27TestHexIO_testJunkByteCountD1Ev
     /tmp/ccJGOKBA.s:8771   .text._ZN27TestHexIO_testJunkByteCountD0Ev:0000000000000000 _ZN27TestHexIO_testJunkByteCountD0Ev
     /tmp/ccJGOKBA.s:8731   .text._ZN27TestHexIO_testJunkByteCountD2Ev:0000000000000000 _ZN27TestHexIO_testJunkByteCountD2Ev
     /tmp/ccJGOKBA.s:9259   .rodata._ZTI27TestHexIO_testJunkStartCode:0000000000000000 _ZTI27TestHexIO_testJunkStartCode
     /tmp/ccJGOKBA.s:8810   .text._ZN27TestHexIO_testJunkStartCodeD2Ev:0000000000000000 _ZN27TestHexIO_testJunkStartCodeD1Ev
     /tmp/ccJGOKBA.s:8850   .text._ZN27TestHexIO_testJunkStartCodeD0Ev:0000000000000000 _ZN27TestHexIO_testJunkStartCodeD0Ev
     /tmp/ccJGOKBA.s:8810   .text._ZN27TestHexIO_testJunkStartCodeD2Ev:0000000000000000 _ZN27TestHexIO_testJunkStartCodeD2Ev
     /tmp/ccJGOKBA.s:9275   .rodata._ZTI22TestHexIO_testValidEOF:0000000000000000 _ZTI22TestHexIO_testValidEOF
     /tmp/ccJGOKBA.s:8889   .text._ZN22TestHexIO_testValidEOFD2Ev:0000000000000000 _ZN22TestHexIO_testValidEOFD1Ev
     /tmp/ccJGOKBA.s:8929   .text._ZN22TestHexIO_testValidEOFD0Ev:0000000000000000 _ZN22TestHexIO_testValidEOFD0Ev
     /tmp/ccJGOKBA.s:8889   .text._ZN22TestHexIO_testValidEOFD2Ev:0000000000000000 _ZN22TestHexIO_testValidEOFD2Ev
     /tmp/ccJGOKBA.s:9291   .rodata._ZTI27TestHexIO_testValidDataLine:0000000000000000 _ZTI27TestHexIO_testValidDataLine
     /tmp/ccJGOKBA.s:8968   .text._ZN27TestHexIO_testValidDataLineD2Ev:0000000000000000 _ZN27TestHexIO_testValidDataLineD1Ev
     /tmp/ccJGOKBA.s:9008   .text._ZN27TestHexIO_testValidDataLineD0Ev:0000000000000000 _ZN27TestHexIO_testValidDataLineD0Ev
     /tmp/ccJGOKBA.s:8968   .text._ZN27TestHexIO_testValidDataLineD2Ev:0000000000000000 _ZN27TestHexIO_testValidDataLineD2Ev
     /tmp/ccJGOKBA.s:9314   .rodata._ZTIN8UnitTest15MemoryOutStreamE:0000000000000000 _ZTIN8UnitTest15MemoryOutStreamE
     /tmp/ccJGOKBA.s:9066   .rodata._ZTCN8UnitTest15MemoryOutStreamE0_St19basic_ostringstreamIcSt11char_traitsIcESaIcEE:0000000000000000 _ZTCN8UnitTest15MemoryOutStreamE0_St19basic_ostringstreamIcSt11char_traitsIcESaIcEE
     /tmp/ccJGOKBA.s:9083   .rodata._ZTCN8UnitTest15MemoryOutStreamE0_So:0000000000000000 _ZTCN8UnitTest15MemoryOutStreamE0_So
     /tmp/ccJGOKBA.s:9108   .rodata._ZTS28TestHexIO_testDeriveWriteMap:0000000000000000 _ZTS28TestHexIO_testDeriveWriteMap
     /tmp/ccJGOKBA.s:9124   .rodata._ZTS23TestHexIO_testRoundTrip:0000000000000000 _ZTS23TestHexIO_testRoundTrip
     /tmp/ccJGOKBA.s:9140   .rodata._ZTS25TestHexIO_testCorruptLine:0000000000000000 _ZTS25TestHexIO_testCorruptLine
     /tmp/ccJGOKBA.s:9156   .rodata._ZTS25TestHexIO_testBadChecksum:0000000000000000 _ZTS25TestHexIO_testBadChecksum
     /tmp/ccJGOKBA.s:9172   .rodata._ZTS26TestHexIO_testJunkChecksum:0000000000000000 _ZTS26TestHexIO_testJunkChecksum
     /tmp/ccJGOKBA.s:9188   .rodata._ZTS26TestHexIO_testJunkDataByte:0000000000000000 _ZTS26TestHexIO_testJunkDataByte
     /tmp/ccJGOKBA.s:9204   .rodata._ZTS25TestHexIO_testJunkRecType:0000000000000000 _ZTS25TestHexIO_testJunkRecType
     /tmp/ccJGOKBA.s:9220   .rodata._ZTS25TestHexIO_testJunkAddrLsb:0000000000000000 _ZTS25TestHexIO_testJunkAddrLsb
     /tmp/ccJGOKBA.s:9236   .rodata._ZTS25TestHexIO_testJunkAddrMsb:0000000000000000 _ZTS25TestHexIO_testJunkAddrMsb
     /tmp/ccJGOKBA.s:9252   .rodata._ZTS27TestHexIO_testJunkByteCount:0000000000000000 _ZTS27TestHexIO_testJunkByteCount
     /tmp/ccJGOKBA.s:9268   .rodata._ZTS27TestHexIO_testJunkStartCode:0000000000000000 _ZTS27TestHexIO_testJunkStartCode
     /tmp/ccJGOKBA.s:9284   .rodata._ZTS22TestHexIO_testValidEOF:0000000000000000 _ZTS22TestHexIO_testValidEOF
     /tmp/ccJGOKBA.s:9300   .rodata._ZTS27TestHexIO_testValidDataLine:0000000000000000 _ZTS27TestHexIO_testValidDataLine
     /tmp/ccJGOKBA.s:9307   .rodata._ZTSN8UnitTest15MemoryOutStreamE:0000000000000000 _ZTSN8UnitTest15MemoryOutStreamE
     /tmp/ccJGOKBA.s:9320   .text:0000000000002eda _Z41__static_initialization_and_destruction_0ii
     /tmp/ccJGOKBA.s:9503   .text:00000000000031b2 _GLOBAL__sub_I_testHexIO_testValidDataLineInstance
     /tmp/ccJGOKBA.s:9529   .rodata:0000000000000cb8 _ZZL18__gthread_active_pvE20__gthread_active_ptr
                           .group:0000000000000000 _ZN27TestHexIO_testValidDataLineC5Ev
                           .group:0000000000000000 _ZN22TestHexIO_testValidEOFC5Ev
                           .group:0000000000000000 _ZN27TestHexIO_testJunkStartCodeC5Ev
                           .group:0000000000000000 _ZN27TestHexIO_testJunkByteCountC5Ev
                           .group:0000000000000000 _ZN25TestHexIO_testJunkAddrMsbC5Ev
                           .group:0000000000000000 _ZN25TestHexIO_testJunkAddrLsbC5Ev
                           .group:0000000000000000 _ZN25TestHexIO_testJunkRecTypeC5Ev
                           .group:0000000000000000 _ZN26TestHexIO_testJunkDataByteC5Ev
                           .group:0000000000000000 _ZN26TestHexIO_testJunkChecksumC5Ev
                           .group:0000000000000000 _ZN25TestHexIO_testBadChecksumC5Ev
                           .group:0000000000000000 _ZN25TestHexIO_testCorruptLineC5Ev
                           .group:0000000000000000 _ZN23TestHexIO_testRoundTripC5Ev
                           .group:0000000000000000 _ZN28TestHexIO_testDeriveWriteMapC5Ev
                           .group:0000000000000000 _ZN28TestHexIO_testDeriveWriteMapD5Ev
                           .group:0000000000000000 _ZN23TestHexIO_testRoundTripD5Ev
                           .group:0000000000000000 _ZN25TestHexIO_testCorruptLineD5Ev
                           .group:0000000000000000 _ZN25TestHexIO_testBadChecksumD5Ev
                           .group:0000000000000000 _ZN26TestHexIO_testJunkChecksumD5Ev
                           .group:0000000000000000 _ZN26TestHexIO_testJunkDataByteD5Ev
                           .group:0000000000000000 _ZN25TestHexIO_testJunkRecTypeD5Ev
                           .group:0000000000000000 _ZN25TestHexIO_testJunkAddrLsbD5Ev
                           .group:0000000000000000 _ZN25TestHexIO_testJunkAddrMsbD5Ev
                           .group:0000000000000000 _ZN27TestHexIO_testJunkByteCountD5Ev
                           .group:0000000000000000 _ZN27TestHexIO_testJunkStartCodeD5Ev
                           .group:0000000000000000 _ZN22TestHexIO_testValidEOFD5Ev
                           .group:0000000000000000 _ZN27TestHexIO_testValidDataLineD5Ev

UNDEFINED SYMBOLS
__gxx_personality_v0
_ZNSt9basic_iosIcSt11char_traitsIcEEC2Ev
_ZNSt19basic_ostringstreamIcSt11char_traitsIcESaIcEEC2ESt13_Ios_Openmode
_ZNSsC1Ev
_ZNSt19basic_ostringstreamIcSt11char_traitsIcESaIcEED2Ev
_ZNSt9basic_iosIcSt11char_traitsIcEED2Ev
_Unwind_Resume
_ZN8UnitTest4TestC2EPKcS2_S2_i
bufInitialise
_ZN8UnitTest11CurrentTest7DetailsEv
_ZN8UnitTest11TestDetailsC1ERKS0_i
_ZN8UnitTest11CurrentTest7ResultsEv
bufProcessLine
bufDestroy
__cxa_end_catch
__cxa_begin_catch
_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
__stack_chk_fail
_ZNSspLEPKc
_ZNSspLEc
bufWriteToIntelHexFile
_ZNSt14basic_ifstreamIcSt11char_traitsIcEEC1Ev
_ZNSt14basic_ifstreamIcSt11char_traitsIcEE4openEPKcSt13_Ios_Openmode
_ZNSt14basic_ifstreamIcSt11char_traitsIcEE7is_openEv
_ZNSi5tellgEv
_ZNKSs4sizeEv
_Znam
_ZNSi5seekgElSt12_Ios_Seekdir
_ZNSi4readEPcl
_ZNSt14basic_ifstreamIcSt11char_traitsIcEE5closeEv
_ZNKSs5c_strEv
bufReadFromIntelHexFile
_ZNSt14basic_ifstreamIcSt11char_traitsIcEED1Ev
_ZNSsD1Ev
strlen
bufWriteBlock
bufDeriveMask
_ZdlPv
_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
_ZNSolsEi
_ZNK8UnitTest15MemoryOutStream7GetTextEv
_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_h
_ZNSolsEm
_ZNSolsEj
_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c
_ZN8UnitTest4TestD2Ev
_ZTISt19basic_ostringstreamIcSt11char_traitsIcESaIcEE
_ZNSt19basic_ostringstreamIcSt11char_traitsIcESaIcEED1Ev
_ZNSt19basic_ostringstreamIcSt11char_traitsIcESaIcEED0Ev
_ZTv0_n24_NSt19basic_ostringstreamIcSt11char_traitsIcESaIcEED1Ev
_ZTv0_n24_NSt19basic_ostringstreamIcSt11char_traitsIcESaIcEED0Ev
_ZTISo
_ZNSoD1Ev
_ZNSoD0Ev
_ZTv0_n24_NSoD1Ev
_ZTv0_n24_NSoD0Ev
_ZTVN10__cxxabiv120__si_class_type_infoE
_ZTIN8UnitTest4TestE
__dso_handle
__cxa_atexit
_ZN8UnitTest4Test11GetTestListEv
_ZN8UnitTest9ListAdderC1ERNS_8TestListEPNS_4TestE
__pthread_key_create
