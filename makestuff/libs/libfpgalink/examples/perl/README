CALLING FPGALINK FROM PERL

This uses SWIG to generate a Perl binding. The generated API is more or less
identical to the hand-coded Python binding.


BUILDING ON LINUX

First you need SWIG: sudo apt-get install swig2.0

Second, check the Makefile to ensure it has the correct location of your Perl
installation.

Finally, type "make" to build the binding.

You can run the example code like this:

PERL5LIB=lin.x64/rel LD_LIBRARY_PATH=lin.x64/rel ./various.pl


BUILDING ON WINDOWS

If you're using an MSVC compiler you'll need ActivePerl 5.16:

x86: http://downloads.activestate.com/ActivePerl/releases/5.16.3.1603/ActivePerl-5.16.3.1603-MSWin32-x86-296746.msi
x64: http://downloads.activestate.com/ActivePerl/releases/5.16.3.1603/ActivePerl-5.16.3.1603-MSWin32-x64-296746.msi

If you're using MinGW then you'll need ActivePerl 5.18:

x86: http://downloads.activestate.com/ActivePerl/releases/5.18.2.1801/ActivePerl-5.18.2.1801-MSWin32-x86-64int-297964.msi
x64: http://downloads.activestate.com/ActivePerl/releases/5.18.2.1801/ActivePerl-5.18.2.1801-MSWin32-x64-297964.msi

You may be able to get 5.18 working with MSVC or 5.16 working with MinGW, but it
will definitely not "just work".

Now install SWIG:

cd $HOME/3rd
wget http://prdownloads.sourceforge.net/swig/swigwin-2.0.12.zip
unzip.exe swigwin-2.0.12.zip

Finally, type "make" in this directory to build the binding.

You can run the example code like this:

MSVC:
  x86: PERL5LIB=msvc.x86/rel PATH=msvc.x86/rel:$PATH ./various.pl
  x64: PERL5LIB=msvc.x64/rel PATH=msvc.x64/rel:$PATH ./various.pl

MinGW:
  x86: PERL5LIB=mingw.x86/rel PATH=mingw.x86/rel:$PATH ./various.pl
  x64: PERL5LIB=mingw.x64/rel PATH=mingw.x64/rel:$PATH ./various.pl
