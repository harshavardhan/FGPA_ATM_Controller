   1              		.file	"printConfig.c"
   2              		.text
   3              	.Ltext0:
   5              	littleEndian16:
   6              	.LFB2:
   7              		.file 1 "/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/common/makestuff.h"
   1:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/common/makestuff.h **** /*
   2:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/common/makestuff.h ****  * Copyright (C) 2009-2012 Chris McClelland
   3:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/common/makestuff.h ****  *
   4:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/common/makestuff.h ****  * This program is free software: you can redistribute it and/or modify
   5:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/common/makestuff.h ****  * it under the terms of the GNU Lesser General Public License as published by
   6:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/common/makestuff.h ****  * the Free Software Foundation, either version 3 of the License, or
   7:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/common/makestuff.h ****  * (at your option) any later version.
   8:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/common/makestuff.h ****  *
   9:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/common/makestuff.h ****  * This program is distributed in the hope that it will be useful,
  10:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/common/makestuff.h ****  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  11:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/common/makestuff.h ****  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  12:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/common/makestuff.h ****  * GNU Lesser General Public License for more details.
  13:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/common/makestuff.h ****  *
  14:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/common/makestuff.h ****  * You should have received a copy of the GNU Lesser General Public License
  15:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/common/makestuff.h ****  * along with this program.  If not, see <http://www.gnu.org/licenses/>.
  16:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/common/makestuff.h ****  */
  17:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/common/makestuff.h **** 
  18:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/common/makestuff.h **** #ifndef MAKESTUFF_H
  19:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/common/makestuff.h **** #define MAKESTUFF_H
  20:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/common/makestuff.h **** 
  21:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/common/makestuff.h **** #include <stddef.h>
  22:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/common/makestuff.h **** 
  23:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/common/makestuff.h **** #ifndef __cplusplus
  24:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/common/makestuff.h **** 	#ifdef WIN32
  25:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/common/makestuff.h **** 		typedef char bool;
  26:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/common/makestuff.h **** 		enum {
  27:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/common/makestuff.h **** 			false = 0,
  28:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/common/makestuff.h **** 			true = 1
  29:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/common/makestuff.h **** 		};
  30:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/common/makestuff.h **** 	#else
  31:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/common/makestuff.h **** 		#include <stdbool.h>
  32:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/common/makestuff.h **** 	#endif
  33:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/common/makestuff.h **** #endif
  34:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/common/makestuff.h **** 
  35:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/common/makestuff.h **** #ifdef WIN32
  36:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/common/makestuff.h **** 	#define WARN_UNUSED_RESULT
  37:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/common/makestuff.h **** 	#define DLLEXPORT(t) __declspec(dllexport) t __stdcall
  38:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/common/makestuff.h **** 	#define PFSZD "%Iu"
  39:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/common/makestuff.h **** 	#ifdef _WIN64
  40:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/common/makestuff.h **** 		#define PFSZH "%016IX"
  41:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/common/makestuff.h **** 		#define WORD_LENGTH 64
  42:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/common/makestuff.h **** 	#else
  43:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/common/makestuff.h **** 		#define PFSZH "%08IX"
  44:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/common/makestuff.h **** 		#define WORD_LENGTH 32
  45:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/common/makestuff.h **** 	#endif
  46:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/common/makestuff.h **** #else
  47:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/common/makestuff.h **** 	#define WARN_UNUSED_RESULT __attribute__((warn_unused_result))
  48:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/common/makestuff.h **** 	#define DLLEXPORT(t) t
  49:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/common/makestuff.h **** 	#define PFSZD "%zu"
  50:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/common/makestuff.h **** 	#ifdef __LP64__
  51:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/common/makestuff.h **** 		#define PFSZH "%016zX"
  52:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/common/makestuff.h **** 		#define WORD_LENGTH 64
  53:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/common/makestuff.h **** 	#else
  54:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/common/makestuff.h **** 		#define PFSZH "%08zX"
  55:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/common/makestuff.h **** 		#define WORD_LENGTH 32
  56:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/common/makestuff.h **** 	#endif
  57:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/common/makestuff.h **** #endif
  58:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/common/makestuff.h **** 
  59:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/common/makestuff.h **** #ifndef NULL
  60:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/common/makestuff.h **** 	#define NULL ((void*)0)
  61:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/common/makestuff.h **** #endif
  62:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/common/makestuff.h **** 
  63:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/common/makestuff.h **** typedef unsigned char      uint8;
  64:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/common/makestuff.h **** typedef unsigned short     uint16;
  65:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/common/makestuff.h **** #ifndef __cplusplus
  66:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/common/makestuff.h **** 	#ifndef SDCC
  67:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/common/makestuff.h **** 		typedef unsigned long long uint64;
  68:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/common/makestuff.h **** 	#endif
  69:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/common/makestuff.h **** #endif
  70:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/common/makestuff.h **** 
  71:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/common/makestuff.h **** typedef signed char        int8;
  72:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/common/makestuff.h **** typedef signed short       int16;
  73:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/common/makestuff.h **** 
  74:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/common/makestuff.h **** #if (defined __AVR__ && defined __GNUC__) || defined SDCC
  75:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/common/makestuff.h **** 	// The embedded platforms have sizeof(int) = 2, so use long
  76:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/common/makestuff.h **** 	typedef signed long    int32;
  77:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/common/makestuff.h **** 	typedef unsigned long  uint32;
  78:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/common/makestuff.h **** #else
  79:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/common/makestuff.h **** 	// The i686 & x86_64 have sizeof(int) = 4
  80:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/common/makestuff.h **** 	typedef signed int     int32;
  81:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/common/makestuff.h **** 	typedef unsigned int   uint32;
  82:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/common/makestuff.h **** #endif
  83:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/common/makestuff.h **** 
  84:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/common/makestuff.h **** #ifndef __cplusplus
  85:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/common/makestuff.h **** 	#ifndef SDCC
  86:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/common/makestuff.h **** 		typedef signed long long int64;
  87:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/common/makestuff.h **** 	#endif
  88:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/common/makestuff.h **** #endif
  89:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/common/makestuff.h **** 
  90:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/common/makestuff.h **** typedef unsigned int       bitfield;
  91:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/common/makestuff.h **** 
  92:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/common/makestuff.h **** #if defined __GNUC__
  93:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/common/makestuff.h **** 	#define swap32(x) __builtin_bswap32(x)
  94:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/common/makestuff.h **** #elif defined WIN32
  95:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/common/makestuff.h **** 	#ifdef __cplusplus
  96:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/common/makestuff.h **** 		extern "C"
  97:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/common/makestuff.h **** 	#endif
  98:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/common/makestuff.h **** 	unsigned long  __cdecl _byteswap_ulong(unsigned long);
  99:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/common/makestuff.h **** 	#define swap32(x) _byteswap_ulong(x)
 100:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/common/makestuff.h **** 	#ifndef __cplusplus
 101:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/common/makestuff.h **** 		#define inline __inline
 102:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/common/makestuff.h **** 	#endif
 103:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/common/makestuff.h **** #endif
 104:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/common/makestuff.h **** #define swap16(x) ((uint16)((((x) & 0x00FF) << 8) | (((x) >> 8) & 0x00FF)))
 105:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/common/makestuff.h **** 
 106:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/common/makestuff.h **** // The C standard requires this two-level indirection thing
 107:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/common/makestuff.h **** #undef CONCAT
 108:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/common/makestuff.h **** #define CONCAT_INTERNAL(x, y) x ## y
 109:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/common/makestuff.h **** #define CONCAT(x, y) CONCAT_INTERNAL(x, y)
 110:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/common/makestuff.h **** 
 111:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/common/makestuff.h **** #define STR_INTERNAL(x) #x
 112:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/common/makestuff.h **** #define STR(x) STR_INTERNAL(x)
 113:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/common/makestuff.h **** 
 114:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/common/makestuff.h **** // The VA_NARGS() macro - count the number of arguments in a C99 variadic macro
 115:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/common/makestuff.h **** #define VA_EXPAND(x) x
 116:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/common/makestuff.h **** #define VA_NARGS(...) VA_EXPAND(VA_NARGS_INTERNAL(__VA_ARGS__, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
 117:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/common/makestuff.h **** #define VA_NARGS_INTERNAL(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u, v, w, x, y
 118:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/common/makestuff.h **** #define FAIL(code, label) { retVal = code; goto label; }
 119:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/common/makestuff.h **** 
 120:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/common/makestuff.h **** // The CHECK_STATUS() macro - if condition is true, set a returnCode and jump to a label (exit,
 121:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/common/makestuff.h **** // cleanup etc). If liberror is included you can also give an error message.
 122:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/common/makestuff.h **** #define CHECK_INTERNAL3(condition, code, label) if ( condition ) { FAIL(code, label); }
 123:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/common/makestuff.h **** #define CHECK_INTERNAL4(condition, code, label, prefix) LIBERROR_IS_REQUIRED
 124:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/common/makestuff.h **** #define CHECK_INTERNAL5(condition, code, label, ...) LIBERROR_IS_REQUIRED
 125:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/common/makestuff.h **** #define CHECK_STATUS(...) VA_EXPAND(CONCAT(CHECK_INTERNAL, VA_NARGS(__VA_ARGS__))(__VA_ARGS__))
 126:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/common/makestuff.h **** 
 127:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/common/makestuff.h **** #ifdef BYTE_ORDER
 128:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/common/makestuff.h **** 	#if BYTE_ORDER == 1234
 129:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/common/makestuff.h **** 		// Little-endian machines
 130:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/common/makestuff.h **** 		static inline uint16 bigEndian16(uint16 x) {
 131:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/common/makestuff.h **** 			return swap16(x);
 132:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/common/makestuff.h **** 		}
 133:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/common/makestuff.h **** 		static inline uint32 bigEndian32(uint32 x) {
 134:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/common/makestuff.h **** 			return swap32(x);
 135:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/common/makestuff.h **** 		}
 136:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/common/makestuff.h **** 		static inline uint16 littleEndian16(uint16 x) {
   8              		.loc 1 136 0
   9              		.cfi_startproc
  10 0000 55       		pushq	%rbp
  11              		.cfi_def_cfa_offset 16
  12              		.cfi_offset 6, -16
  13 0001 4889E5   		movq	%rsp, %rbp
  14              		.cfi_def_cfa_register 6
  15 0004 89F8     		movl	%edi, %eax
  16 0006 668945FC 		movw	%ax, -4(%rbp)
 137:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/common/makestuff.h **** 			return x;
  17              		.loc 1 137 0
  18 000a 0FB745FC 		movzwl	-4(%rbp), %eax
 138:/home/pandu/Desktop/DigitalLogicDesign/Lab/03-/makestuff/common/makestuff.h **** 		}
  19              		.loc 1 138 0
  20 000e 5D       		popq	%rbp
  21              		.cfi_def_cfa 7, 8
  22 000f C3       		ret
  23              		.cfi_endproc
  24              	.LFE2:
  26              		.section	.rodata
  27              	.LC0:
  28 0000 4661696C 		.string	"Failed to get descriptor: %s"
  28      65642074 
  28      6F206765 
  28      74206465 
  28      73637269 
  29 001d 000000   		.align 8
  30              	.LC1:
  31 0020 636F6E66 		.string	"configDescriptor {\n    bLength = 0x%02X\n    bDescriptorType = 0x%02X\n    wTotalLength 
  31      69674465 
  31      73637269 
  31      70746F72 
  31      207B0A20 
  32 0109 00000000 		.align 8
  32      000000
  33              	.LC2:
  34 0110 20202020 		.ascii	"    interfaceDescriptor {\n        bLength = 0x%02X\n       "
  34      696E7465 
  34      72666163 
  34      65446573 
  34      63726970 
  35 014a 206244   		.ascii	" bD"
  36 014d 65736372 		.string	"escriptorType = 0x%02X\n        bInterfaceNumber = 0x%02X\n        bAlternateSetting = 0x
  36      6970746F 
  36      72547970 
  36      65203D20 
  36      30782530 
  37 024e 0000     		.align 8
  38              	.LC3:
  39 0250 20202020 		.ascii	"        endpointDescriptor {\n            bLength = 0x"
  39      20202020 
  39      656E6470 
  39      6F696E74 
  39      44657363 
  40 0285 25303258 		.string	"%02X\n            bDescriptorType = 0x%02X\n            bEndpointAddress = 0x%02X\n      
  40      0A202020 
  40      20202020 
  40      20202020 
  40      20624465 
  41              	.LC4:
  42 0386 20202020 		.string	"    }\n"
  42      7D0A00
  43              	.LC5:
  44 038d 7D0A00   		.string	"}\n"
  45              		.text
  46              		.globl	usbPrintConfiguration
  48              	usbPrintConfiguration:
  49              	.LFB18:
  50              		.file 2 "printConfig.c"
   1:printConfig.c **** /*
   2:printConfig.c ****  * Copyright (C) 2009-2012 Chris McClelland
   3:printConfig.c ****  *
   4:printConfig.c ****  * This program is free software: you can redistribute it and/or modify
   5:printConfig.c ****  * it under the terms of the GNU Lesser General Public License as published by
   6:printConfig.c ****  * the Free Software Foundation, either version 3 of the License, or
   7:printConfig.c ****  * (at your option) any later version.
   8:printConfig.c ****  *
   9:printConfig.c ****  * This program is distributed in the hope that it will be useful,
  10:printConfig.c ****  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  11:printConfig.c ****  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  12:printConfig.c ****  * GNU Lesser General Public License for more details.
  13:printConfig.c ****  *
  14:printConfig.c ****  * You should have received a copy of the GNU Lesser General Public License
  15:printConfig.c ****  * along with this program.  If not, see <http://www.gnu.org/licenses/>.
  16:printConfig.c ****  */
  17:printConfig.c **** #include <liberror.h>
  18:printConfig.c **** #include <stdio.h>
  19:printConfig.c **** #include "private.h"
  20:printConfig.c **** 
  21:printConfig.c **** // Print out the configuration tree
  22:printConfig.c **** //
  23:printConfig.c **** DLLEXPORT(USBStatus) usbPrintConfiguration(struct USBDevice *dev, FILE *stream, const char **error)
  51              		.loc 2 23 0
  52              		.cfi_startproc
  53 0010 55       		pushq	%rbp
  54              		.cfi_def_cfa_offset 16
  55              		.cfi_offset 6, -16
  56 0011 4889E5   		movq	%rsp, %rbp
  57              		.cfi_def_cfa_register 6
  58 0014 4157     		pushq	%r15
  59 0016 4156     		pushq	%r14
  60 0018 4155     		pushq	%r13
  61 001a 4154     		pushq	%r12
  62 001c 53       		pushq	%rbx
  63 001d 4881EC88 		subq	$1160, %rsp
  63      040000
  64              		.cfi_offset 15, -24
  65              		.cfi_offset 14, -32
  66              		.cfi_offset 13, -40
  67              		.cfi_offset 12, -48
  68              		.cfi_offset 3, -56
  69 0024 4889BD88 		movq	%rdi, -1144(%rbp)
  69      FBFFFF
  70 002b 4889B580 		movq	%rsi, -1152(%rbp)
  70      FBFFFF
  71 0032 48899578 		movq	%rdx, -1160(%rbp)
  71      FBFFFF
  72              		.loc 2 23 0
  73 0039 64488B04 		movq	%fs:40, %rax
  73      25280000 
  73      00
  74 0042 488945C8 		movq	%rax, -56(%rbp)
  75 0046 31C0     		xorl	%eax, %eax
  24:printConfig.c **** 	USBStatus retVal = USB_SUCCESS;
  76              		.loc 2 24 0
  77 0048 C78598FB 		movl	$0, -1128(%rbp)
  77      FFFF0000 
  77      0000
  25:printConfig.c **** 	uint8 descriptorBuffer[1024];
  26:printConfig.c **** 	uint8 *ptr = descriptorBuffer;
  78              		.loc 2 26 0
  79 0052 488D85C0 		leaq	-1088(%rbp), %rax
  79      FBFFFF
  80 0059 488985A0 		movq	%rax, -1120(%rbp)
  80      FBFFFF
  27:printConfig.c **** 	uint8 endpointNum, interfaceNum;
  28:printConfig.c **** 	struct libusb_config_descriptor *configDesc;
  29:printConfig.c **** 	struct libusb_interface_descriptor *interfaceDesc;
  30:printConfig.c **** 	struct libusb_endpoint_descriptor *endpointDesc;
  31:printConfig.c **** 	int status = libusb_control_transfer(
  32:printConfig.c **** 		dev->handle,
  81              		.loc 2 32 0
  82 0060 488B8588 		movq	-1144(%rbp), %rax
  82      FBFFFF
  83 0067 488B00   		movq	(%rax), %rax
  31:printConfig.c **** 		dev->handle,
  84              		.loc 2 31 0
  85 006a 488D95C0 		leaq	-1088(%rbp), %rdx
  85      FBFFFF
  86 0071 C7442408 		movl	$5000, 8(%rsp)
  86      88130000 
  87 0079 C7042400 		movl	$256, (%rsp)
  87      010000
  88 0080 4989D1   		movq	%rdx, %r9
  89 0083 41B80000 		movl	$0, %r8d
  89      0000
  90 0089 B9000200 		movl	$512, %ecx
  90      00
  91 008e BA060000 		movl	$6, %edx
  91      00
  92 0093 BE800000 		movl	$128, %esi
  92      00
  93 0098 4889C7   		movq	%rax, %rdi
  94 009b E8000000 		call	libusb_control_transfer@PLT
  94      00
  95 00a0 89859CFB 		movl	%eax, -1124(%rbp)
  95      FFFF
  33:printConfig.c **** 		LIBUSB_ENDPOINT_IN | LIBUSB_REQUEST_TYPE_STANDARD | LIBUSB_RECIPIENT_DEVICE,
  34:printConfig.c **** 		LIBUSB_REQUEST_GET_DESCRIPTOR,  // bRequest
  35:printConfig.c **** 		0x0200,                         // wValue
  36:printConfig.c **** 		0x0000,                         // wIndex
  37:printConfig.c **** 		descriptorBuffer,
  38:printConfig.c **** 		256,                            // wLength
  39:printConfig.c **** 		5000                            // timeout (ms)
  40:printConfig.c **** 	);
  41:printConfig.c **** 	CHECK_STATUS(
  96              		.loc 2 41 0
  97 00a6 83BD9CFB 		cmpl	$0, -1124(%rbp)
  97      FFFF00
  98 00ad 7F3A     		jg	.L4
  99              		.loc 2 41 0 is_stmt 0 discriminator 1
 100 00af 8B859CFB 		movl	-1124(%rbp), %eax
 100      FFFF
 101 00b5 89C7     		movl	%eax, %edi
 102 00b7 E8000000 		call	libusb_error_name@PLT
 102      00
 103 00bc 4889C2   		movq	%rax, %rdx
 104 00bf 488B8578 		movq	-1160(%rbp), %rax
 104      FBFFFF
 105 00c6 488D3500 		leaq	.LC0(%rip), %rsi
 105      000000
 106 00cd 4889C7   		movq	%rax, %rdi
 107 00d0 B8000000 		movl	$0, %eax
 107      00
 108 00d5 E8000000 		call	errRender@PLT
 108      00
 109 00da C78598FB 		movl	$9, -1128(%rbp)
 109      FFFF0900 
 109      0000
 110 00e4 E9180300 		jmp	.L5
 110      00
 111              	.L4:
  42:printConfig.c **** 		status <= 0, USB_CANNOT_GET_DESCRIPTOR, cleanup,
  43:printConfig.c **** 		"Failed to get descriptor: %s", libusb_error_name(status));
  44:printConfig.c **** 	configDesc = (struct libusb_config_descriptor *)ptr;
 112              		.loc 2 44 0 is_stmt 1
 113 00e9 488B85A0 		movq	-1120(%rbp), %rax
 113      FBFFFF
 114 00f0 488985A8 		movq	%rax, -1112(%rbp)
 114      FBFFFF
  45:printConfig.c **** 	fprintf(
  46:printConfig.c **** 		stream,
  47:printConfig.c **** 		"configDescriptor {\n    bLength = 0x%02X\n    bDescriptorType = 0x%02X\n    wTotalLength = 0x%04
  48:printConfig.c **** 		configDesc->bLength,
  49:printConfig.c **** 		configDesc->bDescriptorType,
  50:printConfig.c **** 		littleEndian16(configDesc->wTotalLength),
  51:printConfig.c **** 		configDesc->bNumInterfaces,
  52:printConfig.c **** 		configDesc->bConfigurationValue,
  53:printConfig.c **** 		configDesc->iConfiguration,
  54:printConfig.c **** 		configDesc->bmAttributes,
  55:printConfig.c **** 		configDesc->MaxPower
 115              		.loc 2 55 0
 116 00f7 488B85A8 		movq	-1112(%rbp), %rax
 116      FBFFFF
 117 00fe 0FB64008 		movzbl	8(%rax), %eax
  45:printConfig.c **** 	fprintf(
 118              		.loc 2 45 0
 119 0102 440FB6F0 		movzbl	%al, %r14d
  54:printConfig.c **** 		configDesc->MaxPower
 120              		.loc 2 54 0
 121 0106 488B85A8 		movq	-1112(%rbp), %rax
 121      FBFFFF
 122 010d 0FB64007 		movzbl	7(%rax), %eax
  45:printConfig.c **** 	fprintf(
 123              		.loc 2 45 0
 124 0111 440FB6E8 		movzbl	%al, %r13d
  53:printConfig.c **** 		configDesc->bmAttributes,
 125              		.loc 2 53 0
 126 0115 488B85A8 		movq	-1112(%rbp), %rax
 126      FBFFFF
 127 011c 0FB64006 		movzbl	6(%rax), %eax
  45:printConfig.c **** 	fprintf(
 128              		.loc 2 45 0
 129 0120 440FB6E0 		movzbl	%al, %r12d
  52:printConfig.c **** 		configDesc->iConfiguration,
 130              		.loc 2 52 0
 131 0124 488B85A8 		movq	-1112(%rbp), %rax
 131      FBFFFF
 132 012b 0FB64005 		movzbl	5(%rax), %eax
  45:printConfig.c **** 		stream,
 133              		.loc 2 45 0
 134 012f 0FB6D8   		movzbl	%al, %ebx
  51:printConfig.c **** 		configDesc->bConfigurationValue,
 135              		.loc 2 51 0
 136 0132 488B85A8 		movq	-1112(%rbp), %rax
 136      FBFFFF
 137 0139 0FB64004 		movzbl	4(%rax), %eax
  45:printConfig.c **** 		stream,
 138              		.loc 2 45 0
 139 013d 440FB6F8 		movzbl	%al, %r15d
  50:printConfig.c **** 		configDesc->bNumInterfaces,
 140              		.loc 2 50 0
 141 0141 488B85A8 		movq	-1112(%rbp), %rax
 141      FBFFFF
 142 0148 0FB74002 		movzwl	2(%rax), %eax
 143 014c 0FB7C0   		movzwl	%ax, %eax
 144 014f 89C7     		movl	%eax, %edi
 145 0151 E8AAFEFF 		call	littleEndian16
 145      FF
  45:printConfig.c **** 		stream,
 146              		.loc 2 45 0
 147 0156 0FB7F0   		movzwl	%ax, %esi
  49:printConfig.c **** 		littleEndian16(configDesc->wTotalLength),
 148              		.loc 2 49 0
 149 0159 488B85A8 		movq	-1112(%rbp), %rax
 149      FBFFFF
 150 0160 0FB64001 		movzbl	1(%rax), %eax
  45:printConfig.c **** 		stream,
 151              		.loc 2 45 0
 152 0164 0FB6C8   		movzbl	%al, %ecx
  48:printConfig.c **** 		configDesc->bDescriptorType,
 153              		.loc 2 48 0
 154 0167 488B85A8 		movq	-1112(%rbp), %rax
 154      FBFFFF
 155 016e 0FB600   		movzbl	(%rax), %eax
  45:printConfig.c **** 		stream,
 156              		.loc 2 45 0
 157 0171 0FB6D0   		movzbl	%al, %edx
 158 0174 488B8580 		movq	-1152(%rbp), %rax
 158      FBFFFF
 159 017b 44897424 		movl	%r14d, 24(%rsp)
 159      18
 160 0180 44896C24 		movl	%r13d, 16(%rsp)
 160      10
 161 0185 44896424 		movl	%r12d, 8(%rsp)
 161      08
 162 018a 891C24   		movl	%ebx, (%rsp)
 163 018d 4589F9   		movl	%r15d, %r9d
 164 0190 4189F0   		movl	%esi, %r8d
 165 0193 488D3500 		leaq	.LC1(%rip), %rsi
 165      000000
 166 019a 4889C7   		movq	%rax, %rdi
 167 019d B8000000 		movl	$0, %eax
 167      00
 168 01a2 E8000000 		call	fprintf@PLT
 168      00
  56:printConfig.c **** 	);
  57:printConfig.c **** 	ptr += configDesc->bLength;
 169              		.loc 2 57 0
 170 01a7 488B85A8 		movq	-1112(%rbp), %rax
 170      FBFFFF
 171 01ae 0FB600   		movzbl	(%rax), %eax
 172 01b1 0FB6C0   		movzbl	%al, %eax
 173 01b4 480185A0 		addq	%rax, -1120(%rbp)
 173      FBFFFF
  58:printConfig.c **** 	interfaceNum = configDesc->bNumInterfaces;
 174              		.loc 2 58 0
 175 01bb 488B85A8 		movq	-1112(%rbp), %rax
 175      FBFFFF
 176 01c2 0FB64004 		movzbl	4(%rax), %eax
 177 01c6 888597FB 		movb	%al, -1129(%rbp)
 177      FFFF
  59:printConfig.c **** 	while ( interfaceNum-- ) {
 178              		.loc 2 59 0
 179 01cc E9F80100 		jmp	.L6
 179      00
 180              	.L9:
  60:printConfig.c **** 		interfaceDesc = (struct libusb_interface_descriptor *)ptr;
 181              		.loc 2 60 0
 182 01d1 488B85A0 		movq	-1120(%rbp), %rax
 182      FBFFFF
 183 01d8 488985B0 		movq	%rax, -1104(%rbp)
 183      FBFFFF
  61:printConfig.c **** 		fprintf(
  62:printConfig.c **** 			stream,
  63:printConfig.c **** 			"    interfaceDescriptor {\n        bLength = 0x%02X\n        bDescriptorType = 0x%02X\n        
  64:printConfig.c **** 			interfaceDesc->bLength,
  65:printConfig.c **** 			interfaceDesc->bDescriptorType,
  66:printConfig.c **** 			interfaceDesc->bInterfaceNumber,
  67:printConfig.c **** 			interfaceDesc->bAlternateSetting,
  68:printConfig.c **** 			interfaceDesc->bNumEndpoints,
  69:printConfig.c **** 			interfaceDesc->bInterfaceClass,
  70:printConfig.c **** 			interfaceDesc->bInterfaceSubClass,
  71:printConfig.c **** 			interfaceDesc->bInterfaceProtocol,
  72:printConfig.c **** 			interfaceDesc->iInterface
 184              		.loc 2 72 0
 185 01df 488B85B0 		movq	-1104(%rbp), %rax
 185      FBFFFF
 186 01e6 0FB64008 		movzbl	8(%rax), %eax
  61:printConfig.c **** 		fprintf(
 187              		.loc 2 61 0
 188 01ea 440FB6D0 		movzbl	%al, %r10d
  71:printConfig.c **** 			interfaceDesc->iInterface
 189              		.loc 2 71 0
 190 01ee 488B85B0 		movq	-1104(%rbp), %rax
 190      FBFFFF
 191 01f5 0FB64007 		movzbl	7(%rax), %eax
  61:printConfig.c **** 		fprintf(
 192              		.loc 2 61 0
 193 01f9 440FB6C8 		movzbl	%al, %r9d
  70:printConfig.c **** 			interfaceDesc->bInterfaceProtocol,
 194              		.loc 2 70 0
 195 01fd 488B85B0 		movq	-1104(%rbp), %rax
 195      FBFFFF
 196 0204 0FB64006 		movzbl	6(%rax), %eax
  61:printConfig.c **** 		fprintf(
 197              		.loc 2 61 0
 198 0208 440FB6C0 		movzbl	%al, %r8d
  69:printConfig.c **** 			interfaceDesc->bInterfaceSubClass,
 199              		.loc 2 69 0
 200 020c 488B85B0 		movq	-1104(%rbp), %rax
 200      FBFFFF
 201 0213 0FB64005 		movzbl	5(%rax), %eax
  61:printConfig.c **** 			stream,
 202              		.loc 2 61 0
 203 0217 0FB6F8   		movzbl	%al, %edi
  68:printConfig.c **** 			interfaceDesc->bInterfaceClass,
 204              		.loc 2 68 0
 205 021a 488B85B0 		movq	-1104(%rbp), %rax
 205      FBFFFF
 206 0221 0FB64004 		movzbl	4(%rax), %eax
  61:printConfig.c **** 			stream,
 207              		.loc 2 61 0
 208 0225 0FB6F0   		movzbl	%al, %esi
  67:printConfig.c **** 			interfaceDesc->bNumEndpoints,
 209              		.loc 2 67 0
 210 0228 488B85B0 		movq	-1104(%rbp), %rax
 210      FBFFFF
 211 022f 0FB64003 		movzbl	3(%rax), %eax
  61:printConfig.c **** 			stream,
 212              		.loc 2 61 0
 213 0233 0FB6D8   		movzbl	%al, %ebx
  66:printConfig.c **** 			interfaceDesc->bAlternateSetting,
 214              		.loc 2 66 0
 215 0236 488B85B0 		movq	-1104(%rbp), %rax
 215      FBFFFF
 216 023d 0FB64002 		movzbl	2(%rax), %eax
  61:printConfig.c **** 			stream,
 217              		.loc 2 61 0
 218 0241 440FB6D8 		movzbl	%al, %r11d
  65:printConfig.c **** 			interfaceDesc->bInterfaceNumber,
 219              		.loc 2 65 0
 220 0245 488B85B0 		movq	-1104(%rbp), %rax
 220      FBFFFF
 221 024c 0FB64001 		movzbl	1(%rax), %eax
  61:printConfig.c **** 			stream,
 222              		.loc 2 61 0
 223 0250 0FB6C8   		movzbl	%al, %ecx
  64:printConfig.c **** 			interfaceDesc->bDescriptorType,
 224              		.loc 2 64 0
 225 0253 488B85B0 		movq	-1104(%rbp), %rax
 225      FBFFFF
 226 025a 0FB600   		movzbl	(%rax), %eax
  61:printConfig.c **** 			stream,
 227              		.loc 2 61 0
 228 025d 0FB6D0   		movzbl	%al, %edx
 229 0260 488B8580 		movq	-1152(%rbp), %rax
 229      FBFFFF
 230 0267 44895424 		movl	%r10d, 32(%rsp)
 230      20
 231 026c 44894C24 		movl	%r9d, 24(%rsp)
 231      18
 232 0271 44894424 		movl	%r8d, 16(%rsp)
 232      10
 233 0276 897C2408 		movl	%edi, 8(%rsp)
 234 027a 893424   		movl	%esi, (%rsp)
 235 027d 4189D9   		movl	%ebx, %r9d
 236 0280 4589D8   		movl	%r11d, %r8d
 237 0283 488D3500 		leaq	.LC2(%rip), %rsi
 237      000000
 238 028a 4889C7   		movq	%rax, %rdi
 239 028d B8000000 		movl	$0, %eax
 239      00
 240 0292 E8000000 		call	fprintf@PLT
 240      00
  73:printConfig.c **** 		);
  74:printConfig.c **** 		ptr += interfaceDesc->bLength;			
 241              		.loc 2 74 0
 242 0297 488B85B0 		movq	-1104(%rbp), %rax
 242      FBFFFF
 243 029e 0FB600   		movzbl	(%rax), %eax
 244 02a1 0FB6C0   		movzbl	%al, %eax
 245 02a4 480185A0 		addq	%rax, -1120(%rbp)
 245      FBFFFF
  75:printConfig.c **** 		endpointNum = interfaceDesc->bNumEndpoints;
 246              		.loc 2 75 0
 247 02ab 488B85B0 		movq	-1104(%rbp), %rax
 247      FBFFFF
 248 02b2 0FB64004 		movzbl	4(%rax), %eax
 249 02b6 888596FB 		movb	%al, -1130(%rbp)
 249      FFFF
  76:printConfig.c **** 		while ( endpointNum-- ) {
 250              		.loc 2 76 0
 251 02bc E9D00000 		jmp	.L7
 251      00
 252              	.L8:
  77:printConfig.c **** 			endpointDesc = (struct libusb_endpoint_descriptor *)ptr;
 253              		.loc 2 77 0
 254 02c1 488B85A0 		movq	-1120(%rbp), %rax
 254      FBFFFF
 255 02c8 488985B8 		movq	%rax, -1096(%rbp)
 255      FBFFFF
  78:printConfig.c **** 			fprintf(
  79:printConfig.c **** 				stream,
  80:printConfig.c **** 				"        endpointDescriptor {\n            bLength = 0x%02X\n            bDescriptorType = 0x%0
  81:printConfig.c **** 				endpointDesc->bLength,
  82:printConfig.c **** 				endpointDesc->bDescriptorType,
  83:printConfig.c **** 				endpointDesc->bEndpointAddress,
  84:printConfig.c **** 				endpointDesc->bmAttributes,
  85:printConfig.c **** 				littleEndian16(endpointDesc->wMaxPacketSize),
  86:printConfig.c **** 				endpointDesc->bInterval,
  87:printConfig.c **** 				endpointDesc->bRefresh,
  88:printConfig.c **** 				endpointDesc->bSynchAddress
 256              		.loc 2 88 0
 257 02cf 488B85B8 		movq	-1096(%rbp), %rax
 257      FBFFFF
 258 02d6 0FB64008 		movzbl	8(%rax), %eax
  78:printConfig.c **** 			fprintf(
 259              		.loc 2 78 0
 260 02da 440FB6E8 		movzbl	%al, %r13d
  87:printConfig.c **** 				endpointDesc->bSynchAddress
 261              		.loc 2 87 0
 262 02de 488B85B8 		movq	-1096(%rbp), %rax
 262      FBFFFF
 263 02e5 0FB64007 		movzbl	7(%rax), %eax
  78:printConfig.c **** 			fprintf(
 264              		.loc 2 78 0
 265 02e9 440FB6E0 		movzbl	%al, %r12d
  86:printConfig.c **** 				endpointDesc->bRefresh,
 266              		.loc 2 86 0
 267 02ed 488B85B8 		movq	-1096(%rbp), %rax
 267      FBFFFF
 268 02f4 0FB64006 		movzbl	6(%rax), %eax
  78:printConfig.c **** 			fprintf(
 269              		.loc 2 78 0
 270 02f8 0FB6D8   		movzbl	%al, %ebx
  85:printConfig.c **** 				endpointDesc->bInterval,
 271              		.loc 2 85 0
 272 02fb 488B85B8 		movq	-1096(%rbp), %rax
 272      FBFFFF
 273 0302 0FB74004 		movzwl	4(%rax), %eax
 274 0306 0FB7C0   		movzwl	%ax, %eax
 275 0309 89C7     		movl	%eax, %edi
 276 030b E8F0FCFF 		call	littleEndian16
 276      FF
  78:printConfig.c **** 				stream,
 277              		.loc 2 78 0
 278 0310 0FB7F0   		movzwl	%ax, %esi
  84:printConfig.c **** 				littleEndian16(endpointDesc->wMaxPacketSize),
 279              		.loc 2 84 0
 280 0313 488B85B8 		movq	-1096(%rbp), %rax
 280      FBFFFF
 281 031a 0FB64003 		movzbl	3(%rax), %eax
  78:printConfig.c **** 				stream,
 282              		.loc 2 78 0
 283 031e 440FB6C0 		movzbl	%al, %r8d
  83:printConfig.c **** 				endpointDesc->bmAttributes,
 284              		.loc 2 83 0
 285 0322 488B85B8 		movq	-1096(%rbp), %rax
 285      FBFFFF
 286 0329 0FB64002 		movzbl	2(%rax), %eax
  78:printConfig.c **** 				stream,
 287              		.loc 2 78 0
 288 032d 0FB6F8   		movzbl	%al, %edi
  82:printConfig.c **** 				endpointDesc->bEndpointAddress,
 289              		.loc 2 82 0
 290 0330 488B85B8 		movq	-1096(%rbp), %rax
 290      FBFFFF
 291 0337 0FB64001 		movzbl	1(%rax), %eax
  78:printConfig.c **** 				stream,
 292              		.loc 2 78 0
 293 033b 0FB6C8   		movzbl	%al, %ecx
  81:printConfig.c **** 				endpointDesc->bDescriptorType,
 294              		.loc 2 81 0
 295 033e 488B85B8 		movq	-1096(%rbp), %rax
 295      FBFFFF
 296 0345 0FB600   		movzbl	(%rax), %eax
  78:printConfig.c **** 				stream,
 297              		.loc 2 78 0
 298 0348 0FB6D0   		movzbl	%al, %edx
 299 034b 488B8580 		movq	-1152(%rbp), %rax
 299      FBFFFF
 300 0352 44896C24 		movl	%r13d, 24(%rsp)
 300      18
 301 0357 44896424 		movl	%r12d, 16(%rsp)
 301      10
 302 035c 895C2408 		movl	%ebx, 8(%rsp)
 303 0360 893424   		movl	%esi, (%rsp)
 304 0363 4589C1   		movl	%r8d, %r9d
 305 0366 4189F8   		movl	%edi, %r8d
 306 0369 488D3500 		leaq	.LC3(%rip), %rsi
 306      000000
 307 0370 4889C7   		movq	%rax, %rdi
 308 0373 B8000000 		movl	$0, %eax
 308      00
 309 0378 E8000000 		call	fprintf@PLT
 309      00
  89:printConfig.c **** 			);
  90:printConfig.c **** 			ptr += endpointDesc->bLength;
 310              		.loc 2 90 0
 311 037d 488B85B8 		movq	-1096(%rbp), %rax
 311      FBFFFF
 312 0384 0FB600   		movzbl	(%rax), %eax
 313 0387 0FB6C0   		movzbl	%al, %eax
 314 038a 480185A0 		addq	%rax, -1120(%rbp)
 314      FBFFFF
 315              	.L7:
  76:printConfig.c **** 			endpointDesc = (struct libusb_endpoint_descriptor *)ptr;
 316              		.loc 2 76 0 discriminator 1
 317 0391 0FB68596 		movzbl	-1130(%rbp), %eax
 317      FBFFFF
 318 0398 8D50FF   		leal	-1(%rax), %edx
 319 039b 889596FB 		movb	%dl, -1130(%rbp)
 319      FFFF
 320 03a1 84C0     		testb	%al, %al
 321 03a3 0F8518FF 		jne	.L8
 321      FFFF
  91:printConfig.c **** 		}
  92:printConfig.c **** 		fprintf(stream, "    }\n");
 322              		.loc 2 92 0
 323 03a9 488B8580 		movq	-1152(%rbp), %rax
 323      FBFFFF
 324 03b0 4889C1   		movq	%rax, %rcx
 325 03b3 BA060000 		movl	$6, %edx
 325      00
 326 03b8 BE010000 		movl	$1, %esi
 326      00
 327 03bd 488D3D00 		leaq	.LC4(%rip), %rdi
 327      000000
 328 03c4 E8000000 		call	fwrite@PLT
 328      00
 329              	.L6:
  59:printConfig.c **** 		interfaceDesc = (struct libusb_interface_descriptor *)ptr;
 330              		.loc 2 59 0 discriminator 1
 331 03c9 0FB68597 		movzbl	-1129(%rbp), %eax
 331      FBFFFF
 332 03d0 8D50FF   		leal	-1(%rax), %edx
 333 03d3 889597FB 		movb	%dl, -1129(%rbp)
 333      FFFF
 334 03d9 84C0     		testb	%al, %al
 335 03db 0F85F0FD 		jne	.L9
 335      FFFF
  93:printConfig.c **** 	}
  94:printConfig.c **** 	fprintf(stream, "}\n");
 336              		.loc 2 94 0
 337 03e1 488B8580 		movq	-1152(%rbp), %rax
 337      FBFFFF
 338 03e8 4889C1   		movq	%rax, %rcx
 339 03eb BA020000 		movl	$2, %edx
 339      00
 340 03f0 BE010000 		movl	$1, %esi
 340      00
 341 03f5 488D3D00 		leaq	.LC5(%rip), %rdi
 341      000000
 342 03fc E8000000 		call	fwrite@PLT
 342      00
 343              	.L5:
  95:printConfig.c **** cleanup:
  96:printConfig.c **** 	return retVal;
 344              		.loc 2 96 0
 345 0401 8B8598FB 		movl	-1128(%rbp), %eax
 345      FFFF
  97:printConfig.c **** }
 346              		.loc 2 97 0
 347 0407 488B5DC8 		movq	-56(%rbp), %rbx
 348 040b 6448331C 		xorq	%fs:40, %rbx
 348      25280000 
 348      00
 349 0414 7405     		je	.L11
 350 0416 E8000000 		call	__stack_chk_fail@PLT
 350      00
 351              	.L11:
 352 041b 4881C488 		addq	$1160, %rsp
 352      040000
 353 0422 5B       		popq	%rbx
 354 0423 415C     		popq	%r12
 355 0425 415D     		popq	%r13
 356 0427 415E     		popq	%r14
 357 0429 415F     		popq	%r15
 358 042b 5D       		popq	%rbp
 359              		.cfi_def_cfa 7, 8
 360 042c C3       		ret
 361              		.cfi_endproc
 362              	.LFE18:
 364              	.Letext0:
 365              		.file 3 "/usr/lib/gcc/x86_64-linux-gnu/4.8/include/stddef.h"
 366              		.file 4 "/usr/include/x86_64-linux-gnu/bits/types.h"
 367              		.file 5 "/usr/include/stdio.h"
 368              		.file 6 "/usr/include/libio.h"
 369              		.file 7 "libusbwrap.h"
 370              		.file 8 "unbounded_queue.h"
 371              		.file 9 "/usr/include/stdint.h"
 372              		.file 10 "/usr/include/libusb-1.0/libusb.h"
 373              		.file 11 "private.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 printConfig.c
     /tmp/ccKqNZOO.s:5      .text:0000000000000000 littleEndian16
     /tmp/ccKqNZOO.s:48     .text:0000000000000010 usbPrintConfiguration

UNDEFINED SYMBOLS
_GLOBAL_OFFSET_TABLE_
libusb_control_transfer
libusb_error_name
errRender
fprintf
fwrite
__stack_chk_fail
